'use strict';

var tslib = require('tslib');
var jsxRuntime = require('@emotion/react/jsx-runtime');
var react = require('@emotion/react');
var index$3 = require('../../@atoms/AtomText/index.js');
require('../../@atoms/AtomWrapper/style.js');
require('../../@atoms/AtomButton/styled.js');
require('../../@atoms/AtomLoader/style.js');
require('../../@atoms/AtomCarruosell/index.js');
require('../../@atoms/AtomCartShop/index.js');
var index$1 = require('../../@atoms/AtomImage/index.js');
var index$2 = require('../../@atoms/AtomIcon/index.js');
require('../../@atoms/AtomContainer/style.js');
require('react');
var index = require('../../@atoms/AtomLink/index.js');
require('../../@atoms/AtomDropdownSidebar/admin/style.js');
require('../../@atoms/AtomDropdownSidebar/default/style.js');
require('../../@atoms/AtomDropdownSidebar/links/style.js');
require('next/router');
require('lodash');
require('../../@atoms/AtomInput/style.js');
require('uuid');
require('react-redux');
require('../../@atoms/AtomSeparator/style.js');
require('../../@utils/uploadImage.js');
require('graphql-request');
require('../../src/config/index.js');
require('framer-motion');
require('../../@atoms/AtomImageEditor/pintura/pintura.js');
require('../../@atoms/AtomImageEditor/react-pintura/PinturaEditor.js');
require('../../@atoms/AtomImageEditor/react-pintura/PinturaEditorModal.js');
require('../../@atoms/AtomImageEditor/react-pintura/PinturaEditorOverlay.js');
require('../../@atoms/AtomImageEditor/styled.js');
require('../../@atoms/AtomInput/inputWithPagination.js');
require('../../@atoms/AtomMaps/style.js');
require('../../@atoms/AtomNotification/styles.js');
require('../../@atoms/AtomProgressBar/component/style/index.js');
require('next/head');
require('../../@atoms/AtomTable/style.js');
require('../../@atoms/AtomTableQuery/css/button.js');
require('../../@atoms/AtomTableQuery/css/inputs.js');
require('../../@atoms/AtomTableQuery/styled.js');
require('../../@atoms/AtomTableQuery/apollo/query/Products.js');
require('../../@atoms/AtomTextEditor/index.js');
require('../../@atoms/AtomTextEditorHermer/index.js');
require('../../@molecules/MoleculePlayer/style.js');
require('../../@hooks/usePermissions/index.js');
require('../../@hooks/useUploadFile/index.js');
require('../Alert/Context.js');
require('../Button/downloadFile.js');
require('../Chat/style.js');
require('./style.js');
require('../../@types/schemas.js');

var HeaderLogo = function (props) {
    var text = props.text, linkProps = props.linkProps, textProps = props.textProps, iconProps = props.iconProps, imageProps = props.imageProps, src = props.src, icon = props.icon;
    return (jsxRuntime.jsxs(index, tslib.__assign({ customCSS: react.css(templateObject_1 || (templateObject_1 = tslib.__makeTemplateObject(["\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: max-content;\n        height: 100%;\n        svg {\n          width: 150px;\n          height: 50px;\n        }\n        ", ";\n      "], ["\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: max-content;\n        height: 100%;\n        svg {\n          width: 150px;\n          height: 50px;\n        }\n        ", ";\n      "])), linkProps === null || linkProps === void 0 ? void 0 : linkProps.customCSS) }, linkProps, { children: [src && (jsxRuntime.jsx(index$1, tslib.__assign({ src: src, alt: "imageHeader", height: "70%" }, imageProps))), icon && (jsxRuntime.jsx(index$2, tslib.__assign({ height: "70%", color: "#ffffff" }, iconProps, { icon: src }))), jsxRuntime.jsx(index$3, tslib.__assign({ customCSS: react.css(templateObject_2 || (templateObject_2 = tslib.__makeTemplateObject(["\n          width: 0px;\n          height: 0px;\n          opacity: 0;\n          ", ";\n        "], ["\n          width: 0px;\n          height: 0px;\n          opacity: 0;\n          ", ";\n        "])), textProps === null || textProps === void 0 ? void 0 : textProps.customCSS) }, textProps, { children: text }))] })));
};
var templateObject_1, templateObject_2;

module.exports = HeaderLogo;
//# sourceMappingURL=Logo.js.map
