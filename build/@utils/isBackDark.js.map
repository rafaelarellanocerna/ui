{"version":3,"file":"isBackDark.js","sources":["../../@utils/isBackDark.tsx"],"sourcesContent":["type Input = {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n};\r\n\r\nconst TrainedNet = (input: Input) => {\r\n  const convert = new Float32Array([input.r, input.g, input.b]);\r\n  return {\r\n    white:\r\n      1 /\r\n      (1 +\r\n        1 /\r\n          Math.exp(\r\n            -10.37766170501709 +\r\n              (12.204835891723633 * 1) /\r\n                (1 +\r\n                  1 /\r\n                    Math.exp(\r\n                      6.169667720794678 -\r\n                        4.042087078094482 * (convert[0] || 0) -\r\n                        19.438833236694336 * (convert[1] || 0) +\r\n                        14.434931755065918 * (convert[2] || 0)\r\n                    )) +\r\n              (11.918014526367188 * 1) /\r\n                (1 +\r\n                  1 /\r\n                    Math.exp(\r\n                      2.6512327194213867 -\r\n                        3.513329029083252 * (convert[0] || 0) -\r\n                        17.795860290527344 * (convert[1] || 0) +\r\n                        17.435640335083008 * (convert[2] || 0)\r\n                    )) +\r\n              (9.877058982849121 * 1) /\r\n                (1 +\r\n                  1 /\r\n                    Math.exp(\r\n                      5.760010242462158 -\r\n                        3.2945780754089355 * (convert[0] || 0) -\r\n                        8.6066312789917 * (convert[1] || 0) -\r\n                        7.926300525665283 * (convert[2] || 0)\r\n                    ))\r\n          )),\r\n    black:\r\n      1 /\r\n      (1 +\r\n        1 /\r\n          Math.exp(\r\n            10.386853218078613 -\r\n              (12.263668060302734 * 1) /\r\n                (1 +\r\n                  1 /\r\n                    Math.exp(\r\n                      6.169667720794678 -\r\n                        4.042087078094482 * (convert[0] || 0) -\r\n                        19.438833236694336 * (convert[1] || 0) +\r\n                        14.434931755065918 * (convert[2] || 0)\r\n                    )) -\r\n              (11.879143714904785 * 1) /\r\n                (1 +\r\n                  1 /\r\n                    Math.exp(\r\n                      2.6512327194213867 -\r\n                        3.513329029083252 * (convert[0] || 0) -\r\n                        17.795860290527344 * (convert[1] || 0) +\r\n                        17.435640335083008 * (convert[2] || 0)\r\n                    )) -\r\n              (9.865546226501465 * 1) /\r\n                (1 +\r\n                  1 /\r\n                    Math.exp(\r\n                      5.760010242462158 -\r\n                        3.2945780754089355 * (convert[0] || 0) -\r\n                        8.6066312789917 * (convert[1] || 0) -\r\n                        7.926300525665283 * (convert[2] || 0)\r\n                    ))\r\n          )),\r\n  };\r\n};\r\n\r\nconst hexToRgb = (hex: string) => {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex) ?? [];\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n  };\r\n};\r\n\r\nconst isBackDark = (hex: string) => {\r\n  const color = TrainedNet(hexToRgb(hex));\r\n  if (color.black > color.white) {\r\n    return '#373737';\r\n  }\r\n  return '#fff';\r\n};\r\n\r\nexport default isBackDark;\r\n"],"names":[],"mappings":"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"}