{"version":3,"file":"uploadPrivateFile.js","sources":["../../@utils/uploadPrivateFile.ts"],"sourcesContent":["import { request } from 'graphql-request';\r\nimport CONFIG from 'src/config';\r\n\r\nconst removeWhiteSpaces = (name: string) =>\r\n  name.replace(/\\s+/g, '').replace('(', '').replace(')', '');\r\ninterface propsPrivate {\r\n  memberId: string;\r\n  projectId: string;\r\n  folderId?: string;\r\n  fileId?: string;\r\n  token?: string;\r\n  fileInput: File;\r\n  isProfile?: boolean;\r\n}\r\n\r\nconst getUrlPrivate = async (privateData: propsPrivate) => {\r\n  const mutation = `\r\nmutation uploadFilePrivate($input: UploadFilePrivateInput!) {\r\n  uploadFilePrivate(input: $input) {\r\n    url\r\n    message\r\n    token\r\n    fileId\r\n    partialUrl\r\n  }\r\n}`;\r\n\r\n  const { memberId, projectId, folderId, fileInput, isProfile } = privateData;\r\n\r\n  const sanitizedName = await removeWhiteSpaces(fileInput.name);\r\n  const input = folderId\r\n    ? {\r\n        memberId,\r\n        projectId,\r\n        folderId,\r\n        isProfile,\r\n        name: sanitizedName,\r\n        fileName: sanitizedName,\r\n        description: JSON.stringify({\r\n          size: fileInput.size,\r\n          type: `${fileInput?.type}`,\r\n        }),\r\n      }\r\n    : {\r\n        memberId,\r\n        projectId,\r\n        isProfile,\r\n        name: sanitizedName,\r\n        fileName: sanitizedName,\r\n        description: JSON.stringify({\r\n          size: fileInput.size,\r\n          type: `${fileInput?.type}`,\r\n        }),\r\n      };\r\n\r\n  const defaultEndpoint = `https://gateway.staging.ixuapis.com/graphql/`;\r\n\r\n  // const endpoints = {\r\n  //   production: `https://gateway.ixulabs.com/graphql/`,\r\n  //   staging: `https://gateway.preprod.ixuapis.com/graphql/`,\r\n  //   develop: `https://gateway.staging.ixuapis.com/graphql/`,\r\n  // };\r\n\r\n  const values2 = await request(\r\n    CONFIG.GRAPHQL_URL ?? defaultEndpoint,\r\n    mutation,\r\n    {\r\n      input,\r\n    }\r\n  );\r\n\r\n  const data = await {\r\n    url: values2?.uploadFilePrivate?.url,\r\n    partialUrl: values2?.uploadFilePrivate?.partialUrl,\r\n    fileName: sanitizedName,\r\n    fileId: values2?.uploadFilePrivate?.fileId,\r\n    token: values2?.uploadFilePrivate?.token,\r\n  };\r\n  return data;\r\n};\r\n\r\nexport const uploadFile = (url: string, file: File) =>\r\n  fetch(url, {\r\n    method: 'PUT',\r\n    body: file,\r\n    headers: {\r\n      'Content-Type': 'application/octet-stream',\r\n    },\r\n    mode: 'cors',\r\n  }).catch((e) => console.error(e));\r\n\r\nconst uploadPrivateFile = (data: propsPrivate) => {\r\n  return data\r\n    ? getUrlPrivate(data).then(async (response) => {\r\n        await uploadFile(response?.partialUrl, data?.fileInput);\r\n        return response;\r\n      })\r\n    : data;\r\n};\r\n\r\nexport default uploadPrivateFile;\r\n"],"names":["__awaiter","request","CONFIG"],"mappings":"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"}