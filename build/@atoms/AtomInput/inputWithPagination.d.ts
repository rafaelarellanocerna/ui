import { ApolloError, DocumentNode, QueryHookOptions } from '@apollo/client';
import { SerializedStyles } from '@emotion/react';
import { FormikValues } from 'formik';
declare type AtomInputSelectTypes = {
    label?: string;
    labelWidth?: string;
    labelHeight?: string;
    labelTextAlign?: string;
    labelMargin?: string;
    labelColor?: string;
    labelPadding?: string;
    labelFontSize?: string;
    labelFontWeight?: string | number;
    labelFontFamily?: string;
    spanMargin?: string;
    customCSS?: SerializedStyles;
    placeholderColor?: string;
    placeholder?: string;
    defaultText?: string;
};
export declare type AtomInputSelectColumnTypes<T extends object> = {
    key?: string;
    sortable?: boolean;
    searchable?: boolean;
    view: (data?: T) => JSX.Element;
    css?: (data?: T) => SerializedStyles;
};
declare type AtomInputSelectPagination<T extends object, P extends object> = AtomInputSelectTypes & {
    columns: AtomInputSelectColumnTypes<T>[];
    QUERY: DocumentNode;
    data: (data: P) => T[];
    onError?: (error: ApolloError) => void;
    onCompleted?: (data: P) => void;
    options?: QueryHookOptions;
    onChange?: (value: string, data: T[]) => T[];
    onPress: (data?: T) => void;
    id?: string;
    formik?: FormikValues;
    positionBox: 'top' | 'bottom';
    maxHeightBox: string;
    error?: string;
    errorColor?: string;
    errorFontSize?: string;
    errorFontWeight?: string;
    errorFontFamily?: string;
    errorTextAlign?: string;
    errorMargin?: string;
    errorPadding?: string;
    errorHeight?: string;
};
declare const InputSelectWtihPagination: <T extends object, P extends object>(props: AtomInputSelectPagination<T, P>) => import("@emotion/react/jsx-runtime").JSX.Element;
export default InputSelectWtihPagination;
