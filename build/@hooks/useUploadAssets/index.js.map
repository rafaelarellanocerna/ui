{"version":3,"file":"index.js","sources":["../../../@hooks/useUploadAssets/index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n  ApolloClient,\r\n  ApolloError,\r\n  gql,\r\n  InMemoryCache,\r\n  useLazyQuery,\r\n} from '@apollo/client';\r\nimport { IUploadFilePrivatePayload } from '@ixulabs/ui';\r\n\r\nconst QUERY_FILE = gql`\r\n  query UploadFileUrl($orgCode: String!, $path: String!, $fileName: String!) {\r\n    uploadFileUrl(orgCode: $orgCode, path: $path, fileName: $fileName) {\r\n      url\r\n      fileName\r\n    }\r\n  }\r\n`;\r\n\r\nconst uploadFile = (url: string, file: File) =>\r\n  fetch(url, {\r\n    method: 'PUT',\r\n    body: file,\r\n    headers: {\r\n      'Content-Type': 'application/octet-stream',\r\n    },\r\n    mode: 'cors',\r\n  }).catch((e) => console.error(e));\r\n\r\nexport type useUploadFileVariables = {\r\n  fileInput: File;\r\n  projectId: string;\r\n  memberId: string;\r\n  isProfile: boolean;\r\n  descriptionType?: string;\r\n};\r\n\r\ntype OPTIONSHOOK = {\r\n  onCompleted?: (data: IUplaodFileProps) => void;\r\n  onError?: (error: ApolloError) => void;\r\n};\r\nexport type IuseUploadFileResult = IUploadFilePrivatePayload & {\r\n  name: string;\r\n  fileName: string;\r\n  description: {\r\n    size: string;\r\n    type: string;\r\n  };\r\n};\r\n\r\ntype IUplaodFileProps = {\r\n  uploadFileUrl?: {\r\n    fileName?: string; // WITHOUT TOKEN\r\n    url: string; // WITH TOKEN\r\n  };\r\n};\r\n\r\nconst endpoint = 'https://file-service.staging.ixuapis.com/graphql/';\r\n\r\nconst uploadAttachment = (url: string, file: File) =>\r\n  fetch(url, {\r\n    method: 'PUT',\r\n    body: file ?? new Blob(),\r\n    headers: {\r\n      'Content-Type': 'application/octet-stream',\r\n    },\r\n    mode: 'cors',\r\n  }).catch((e) => console.error(e));\r\n\r\nconst client = new ApolloClient({\r\n  uri: endpoint,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nconst removeWhiteSpaces = (name: string) =>\r\n  name?.replace(/\\s+/g, '')?.replace('(', '')?.replace(')', '');\r\n\r\ntype uploadAssetsProps = {\r\n  file: File;\r\n  name: string;\r\n  orgcode: string;\r\n  options: OPTIONSHOOK;\r\n};\r\n\r\nexport const useUploadAssets = () => {\r\n  const [EXECUTE_UPLOAD_FILE, { loading, error: ErrorGlobal }] = useLazyQuery(\r\n    QUERY_FILE,\r\n    {\r\n      client,\r\n    }\r\n  );\r\n  return {\r\n    uploadAsset: (props: uploadAssetsProps) => {\r\n      const { file, options, name, orgcode } = props;\r\n      return EXECUTE_UPLOAD_FILE({\r\n        variables: {\r\n          orgCode: removeWhiteSpaces(orgcode ?? ''),\r\n          path: removeWhiteSpaces(name ?? ''),\r\n          fileName: removeWhiteSpaces(name ?? ''),\r\n        },\r\n        onCompleted: async (data: IUplaodFileProps) => {\r\n          const { url, fileName } = data?.uploadFileUrl;\r\n          await uploadAttachment(url, file ?? ({} as File));\r\n          options?.onCompleted(data);\r\n          return {\r\n            url,\r\n            fileName,\r\n          };\r\n        },\r\n        onError: (error) => {\r\n          options?.onError(error);\r\n        },\r\n      });\r\n    },\r\n    loading,\r\n    error: ErrorGlobal,\r\n  };\r\n};\r\n"],"names":["gql","__makeTemplateObject","ApolloClient","InMemoryCache","__read","useLazyQuery","__awaiter"],"mappings":"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"}