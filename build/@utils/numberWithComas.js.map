{"version":3,"file":"numberWithComas.js","sources":["../../@utils/numberWithComas.ts"],"sourcesContent":["type IOptions = {\r\n  error?: string;\r\n  prefix?: string;\r\n  suffix?: string;\r\n};\r\nconst numberWithCommas = (x: number, opt = {} as IOptions) => {\r\n  const { error, prefix, suffix } = opt;\r\n  if (!x) return error ?? null;\r\n\r\n  const convertNumber = Number(x);\r\n  if (!convertNumber) return error ?? null;\r\n\r\n  return `${prefix ?? ''}${convertNumber\r\n    ?.toFixed(2)\r\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, `,`)}${suffix ?? ''}`;\r\n};\r\n\r\nexport default numberWithCommas;\r\n"],"names":[],"mappings":";;AAKA,IAAM,gBAAgB,GAAG,UAAC,CAAS,EAAE,GAAoB,EAAA;IAApB,IAAA,GAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAAM,EAAc,CAAA,EAAA;AAC/C,IAAA,IAAA,KAAK,GAAqB,GAAG,CAAA,KAAxB,EAAE,MAAM,GAAa,GAAG,CAAA,MAAhB,EAAE,MAAM,GAAK,GAAG,OAAR,CAAS;AACtC,IAAA,IAAI,CAAC,CAAC;AAAE,QAAA,OAAO,KAAK,KAAL,IAAA,IAAA,KAAK,cAAL,KAAK,GAAI,IAAI,CAAC;AAE7B,IAAA,IAAM,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAChC,IAAA,IAAI,CAAC,aAAa;AAAE,QAAA,OAAO,KAAK,KAAL,IAAA,IAAA,KAAK,cAAL,KAAK,GAAI,IAAI,CAAC;AAEzC,IAAA,OAAO,EAAG,CAAA,MAAA,CAAA,MAAM,KAAN,IAAA,IAAA,MAAM,cAAN,MAAM,GAAI,EAAE,CAAA,CAAA,MAAA,CAAG,aAAa,KAAb,IAAA,IAAA,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAClC,OAAO,CAAC,CAAC,CAAA,CACV,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAA,CAAA,MAAA,CAAG,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,MAAM,GAAI,EAAE,CAAE,CAAC;AAC5D;;;;"}