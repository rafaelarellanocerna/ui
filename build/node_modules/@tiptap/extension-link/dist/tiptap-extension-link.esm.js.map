{"version":3,"file":"tiptap-extension-link.esm.js","sources":["../../../../../node_modules/@tiptap/extension-link/dist/tiptap-extension-link.esm.js"],"sourcesContent":["import { test, find } from 'linkifyjs';\nimport { combineTransactionSteps, getChangedRanges, getMarksBetween, findChildrenInRange, getAttributes, Mark, mergeAttributes, markPasteRule } from '@tiptap/core';\nimport { Plugin, PluginKey } from 'prosemirror-state';\n\nfunction autolink(options) {\r\n    return new Plugin({\r\n        key: new PluginKey('autolink'),\r\n        appendTransaction: (transactions, oldState, newState) => {\r\n            const docChanges = transactions.some(transaction => transaction.docChanged)\r\n                && !oldState.doc.eq(newState.doc);\r\n            const preventAutolink = transactions.some(transaction => transaction.getMeta('preventAutolink'));\r\n            if (!docChanges || preventAutolink) {\r\n                return;\r\n            }\r\n            const { tr } = newState;\r\n            const transform = combineTransactionSteps(oldState.doc, transactions);\r\n            const { mapping } = transform;\r\n            const changes = getChangedRanges(transform);\r\n            changes.forEach(({ oldRange, newRange }) => {\r\n                // at first we check if we have to remove links\r\n                getMarksBetween(oldRange.from, oldRange.to, oldState.doc)\r\n                    .filter(item => item.mark.type === options.type)\r\n                    .forEach(oldMark => {\r\n                    const newFrom = mapping.map(oldMark.from);\r\n                    const newTo = mapping.map(oldMark.to);\r\n                    const newMarks = getMarksBetween(newFrom, newTo, newState.doc)\r\n                        .filter(item => item.mark.type === options.type);\r\n                    if (!newMarks.length) {\r\n                        return;\r\n                    }\r\n                    const newMark = newMarks[0];\r\n                    const oldLinkText = oldState.doc.textBetween(oldMark.from, oldMark.to, undefined, ' ');\r\n                    const newLinkText = newState.doc.textBetween(newMark.from, newMark.to, undefined, ' ');\r\n                    const wasLink = test(oldLinkText);\r\n                    const isLink = test(newLinkText);\r\n                    // remove only the link, if it was a link before too\r\n                    // because we don’t want to remove links that were set manually\r\n                    if (wasLink && !isLink) {\r\n                        tr.removeMark(newMark.from, newMark.to, options.type);\r\n                    }\r\n                });\r\n                // now let’s see if we can add new links\r\n                findChildrenInRange(newState.doc, newRange, node => node.isTextblock)\r\n                    .forEach(textBlock => {\r\n                    // we need to define a placeholder for leaf nodes\r\n                    // so that the link position can be calculated correctly\r\n                    const text = newState.doc.textBetween(textBlock.pos, textBlock.pos + textBlock.node.nodeSize, undefined, ' ');\r\n                    find(text)\r\n                        .filter(link => link.isLink)\r\n                        .filter(link => {\r\n                        if (options.validate) {\r\n                            return options.validate(link.value);\r\n                        }\r\n                        return true;\r\n                    })\r\n                        // calculate link position\r\n                        .map(link => ({\r\n                        ...link,\r\n                        from: textBlock.pos + link.start + 1,\r\n                        to: textBlock.pos + link.end + 1,\r\n                    }))\r\n                        // check if link is within the changed range\r\n                        .filter(link => {\r\n                        const fromIsInRange = newRange.from >= link.from && newRange.from <= link.to;\r\n                        const toIsInRange = newRange.to >= link.from && newRange.to <= link.to;\r\n                        return fromIsInRange || toIsInRange;\r\n                    })\r\n                        // add link mark\r\n                        .forEach(link => {\r\n                        tr.addMark(link.from, link.to, options.type.create({\r\n                            href: link.href,\r\n                        }));\r\n                    });\r\n                });\r\n            });\r\n            if (!tr.steps.length) {\r\n                return;\r\n            }\r\n            return tr;\r\n        },\r\n    });\r\n}\n\nfunction clickHandler(options) {\r\n    return new Plugin({\r\n        key: new PluginKey('handleClickLink'),\r\n        props: {\r\n            handleClick: (view, pos, event) => {\r\n                var _a;\r\n                const attrs = getAttributes(view.state, options.type.name);\r\n                const link = (_a = event.target) === null || _a === void 0 ? void 0 : _a.closest('a');\r\n                if (link && attrs.href) {\r\n                    window.open(attrs.href, attrs.target);\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n        },\r\n    });\r\n}\n\nfunction pasteHandler(options) {\r\n    return new Plugin({\r\n        key: new PluginKey('handlePasteLink'),\r\n        props: {\r\n            handlePaste: (view, event, slice) => {\r\n                const { state } = view;\r\n                const { selection } = state;\r\n                const { empty } = selection;\r\n                if (empty) {\r\n                    return false;\r\n                }\r\n                let textContent = '';\r\n                slice.content.forEach(node => {\r\n                    textContent += node.textContent;\r\n                });\r\n                const link = find(textContent).find(item => item.isLink && item.value === textContent);\r\n                if (!textContent || !link) {\r\n                    return false;\r\n                }\r\n                options.editor.commands.setMark(options.type, {\r\n                    href: link.href,\r\n                });\r\n                return true;\r\n            },\r\n        },\r\n    });\r\n}\n\nconst Link = Mark.create({\r\n    name: 'link',\r\n    priority: 1000,\r\n    keepOnSplit: false,\r\n    inclusive() {\r\n        return this.options.autolink;\r\n    },\r\n    addOptions() {\r\n        return {\r\n            openOnClick: true,\r\n            linkOnPaste: true,\r\n            autolink: true,\r\n            HTMLAttributes: {\r\n                target: '_blank',\r\n                rel: 'noopener noreferrer nofollow',\r\n                class: null,\r\n            },\r\n            validate: undefined,\r\n        };\r\n    },\r\n    addAttributes() {\r\n        return {\r\n            href: {\r\n                default: null,\r\n            },\r\n            target: {\r\n                default: this.options.HTMLAttributes.target,\r\n            },\r\n            class: {\r\n                default: this.options.HTMLAttributes.class,\r\n            },\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            { tag: 'a[href]:not([href *= \"javascript:\" i])' },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return [\r\n            'a',\r\n            mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\r\n            0,\r\n        ];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setLink: attributes => ({ chain }) => {\r\n                return chain()\r\n                    .setMark(this.name, attributes)\r\n                    .setMeta('preventAutolink', true)\r\n                    .run();\r\n            },\r\n            toggleLink: attributes => ({ chain }) => {\r\n                return chain()\r\n                    .toggleMark(this.name, attributes, { extendEmptyMarkRange: true })\r\n                    .setMeta('preventAutolink', true)\r\n                    .run();\r\n            },\r\n            unsetLink: () => ({ chain }) => {\r\n                return chain()\r\n                    .unsetMark(this.name, { extendEmptyMarkRange: true })\r\n                    .setMeta('preventAutolink', true)\r\n                    .run();\r\n            },\r\n        };\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: text => find(text)\r\n                    .filter(link => {\r\n                    if (this.options.validate) {\r\n                        return this.options.validate(link.value);\r\n                    }\r\n                    return true;\r\n                })\r\n                    .filter(link => link.isLink)\r\n                    .map(link => ({\r\n                    text: link.value,\r\n                    index: link.start,\r\n                    data: link,\r\n                })),\r\n                type: this.type,\r\n                getAttributes: match => {\r\n                    var _a;\r\n                    return ({\r\n                        href: (_a = match.data) === null || _a === void 0 ? void 0 : _a.href,\r\n                    });\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n    addProseMirrorPlugins() {\r\n        const plugins = [];\r\n        if (this.options.autolink) {\r\n            plugins.push(autolink({\r\n                type: this.type,\r\n                validate: this.options.validate,\r\n            }));\r\n        }\r\n        if (this.options.openOnClick) {\r\n            plugins.push(clickHandler({\r\n                type: this.type,\r\n            }));\r\n        }\r\n        if (this.options.linkOnPaste) {\r\n            plugins.push(pasteHandler({\r\n                editor: this.editor,\r\n                type: this.type,\r\n            }));\r\n        }\r\n        return plugins;\r\n    },\r\n});\n\nexport { Link, Link as default };\n//# sourceMappingURL=tiptap-extension-link.esm.js.map\n"],"names":["Plugin","PluginKey","combineTransactionSteps","getChangedRanges","getMarksBetween","test","findChildrenInRange","find","getAttributes","Mark","mergeAttributes","markPasteRule"],"mappings":"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"}