'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
require('@emotion/react/jsx-runtime');
require('@emotion/react');
require('../../@atoms/AtomText/style.js');
require('../../@atoms/AtomWrapper/style.js');
require('../../@atoms/AtomButton/styled.js');
require('../../@atoms/AtomLoader/style.js');
require('../../@atoms/AtomCarruosell/index.js');
require('../../@atoms/AtomCartShop/index.js');
require('next/image');
require('../../@atoms/AtomImage/style.js');
require('react');
require('../../@atoms/AtomIcon/styled.js');
require('../../@atoms/AtomContainer/style.js');
require('../../@atoms/AtomLink/index.js');
require('../../@atoms/AtomDropdownSidebar/admin/style.js');
require('../../@atoms/AtomDropdownSidebar/default/style.js');
require('../../@atoms/AtomDropdownSidebar/links/style.js');
require('next/router');
require('lodash');
require('../../@atoms/AtomInput/style.js');
require('uuid');
require('react-redux');
require('../../@atoms/AtomSeparator/style.js');
require('../../@utils/uploadImage.js');
require('graphql-request');
require('../config/index.js');
require('framer-motion');
require('../../@atoms/AtomImageEditor/pintura/pintura.js');
require('../../@atoms/AtomImageEditor/react-pintura/PinturaEditor.js');
require('../../@atoms/AtomImageEditor/react-pintura/PinturaEditorModal.js');
require('../../@atoms/AtomImageEditor/react-pintura/PinturaEditorOverlay.js');
require('../../@atoms/AtomImageEditor/styled.js');
require('../../@atoms/AtomInput/inputWithPagination.js');
require('../../@atoms/AtomMaps/style.js');
require('../../@atoms/AtomNotification/styles.js');
require('../../@atoms/AtomProgressBar/component/style/index.js');
require('next/head');
require('../../@atoms/AtomTable/style.js');
require('../../@atoms/AtomTableQuery/css/button.js');
require('../../@atoms/AtomTableQuery/css/inputs.js');
require('../../@atoms/AtomTableQuery/styled.js');
require('../../@atoms/AtomTableQuery/apollo/query/Products.js');
require('../../@atoms/AtomTextEditor/index.js');
require('../../@atoms/AtomTextEditorHermer/index.js');
require('../../@molecules/MoleculePlayer/style.js');
require('../../@hooks/usePermissions/index.js');
require('../../@hooks/useUploadFile/index.js');
require('../../@components/Alert/Context.js');
require('../../@components/Button/downloadFile.js');
require('../../@components/Chat/style.js');
require('../../@components/Header/style.js');
require('../../@types/schemas.js');
var index = require('../../node_modules/graphql-tag/lib/index.js');

var LISTUSERS = index.gql(templateObject_1 || (templateObject_1 = tslib.__makeTemplateObject(["\n  query listUsers(\n    $filter: MemberFilterInput\n    $order: [MemberSortInput!]\n    $skip: Int\n    $take: Int\n  ) {\n    listUsers(filter: $filter, order: $order, skip: $skip, take: $take) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      totalCount\n      items {\n        id\n        username\n        memberCompanies {\n          id\n          companyId\n          company {\n            id\n            name\n          }\n        }\n        memberRoles {\n          id\n          memberId\n          roleId\n          role {\n            id\n            name\n            codeName\n          }\n        }\n        memberProjects {\n          id\n          projectId\n        }\n        profile {\n          id\n          firstName\n          lastName\n        }\n        email\n        createdAt\n        updatedAt\n      }\n    }\n  }\n"], ["\n  query listUsers(\n    $filter: MemberFilterInput\n    $order: [MemberSortInput!]\n    $skip: Int\n    $take: Int\n  ) {\n    listUsers(filter: $filter, order: $order, skip: $skip, take: $take) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      totalCount\n      items {\n        id\n        username\n        memberCompanies {\n          id\n          companyId\n          company {\n            id\n            name\n          }\n        }\n        memberRoles {\n          id\n          memberId\n          roleId\n          role {\n            id\n            name\n            codeName\n          }\n        }\n        memberProjects {\n          id\n          projectId\n        }\n        profile {\n          id\n          firstName\n          lastName\n        }\n        email\n        createdAt\n        updatedAt\n      }\n    }\n  }\n"])));
var templateObject_1;

exports.LISTUSERS = LISTUSERS;
//# sourceMappingURL=test.js.map
