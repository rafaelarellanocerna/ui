'use strict';

var tslib = require('tslib');
var jsxRuntime = require('@emotion/react/jsx-runtime');
var react = require('@emotion/react');
var React = require('react');
var index$1 = require('../AtomWrapper/index.js');
var index$2 = require('../AtomImage/index.js');
var index$3 = require('../AtomText/index.js');
var index = require('../AtomButton/index.js');
var index$4 = require('../AtomIcon/index.js');
var index$5 = require('../AtomLink/index.js');

var AtomUserDefault = function (props) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
    var _q = tslib.__read(React.useState(false), 2), showUserMenu = _q[0], setShowUserMenu = _q[1];
    var src = props.src, componentProps = props.componentProps, name = props.name, options = props.options, wrapperProps = props.wrapperProps, buttonProps = props.buttonProps;
    var ref = React.useRef(null);
    return (jsxRuntime.jsx(index, tslib.__assign({ onClick: function () { return setShowUserMenu(!showUserMenu); }, backgroundColor: "#fff", color: "#1d1d1d" }, buttonProps, { customCSS: react.css(templateObject_1 || (templateObject_1 = tslib.__makeTemplateObject(["\n        @media only screen and (max-width: 1200px) {\n          display: none;\n        }\n        ", ";\n      "], ["\n        @media only screen and (max-width: 1200px) {\n          display: none;\n        }\n        ", ";\n      "])), buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.customCSS) }, { children: jsxRuntime.jsxs(index$1, tslib.__assign({ flexDirection: "row", maxWidth: "max-content", height: "max-content", alignItems: "center", justifyContent: "center", onHoverEnd: function () { return setShowUserMenu(false); }, onHoverStart: function () { return setShowUserMenu(true); } }, wrapperProps, { children: [jsxRuntime.jsx(index$2, tslib.__assign({ alt: "userPhoto", customCSS: react.css(templateObject_2 || (templateObject_2 = tslib.__makeTemplateObject(["\n            overflow: hidden;\n            background-color: #fff;\n            border-radius: 50%;\n            border: 2px solid #b3b0b0;\n            ", ";\n          "], ["\n            overflow: hidden;\n            background-color: #fff;\n            border-radius: 50%;\n            border: 2px solid #b3b0b0;\n            ", ";\n          "])), (_a = componentProps === null || componentProps === void 0 ? void 0 : componentProps.imageProps) === null || _a === void 0 ? void 0 : _a.customCSS), height: "35px", width: "35px", src: "".concat(src ||
                        'https://storage.googleapis.com/cdn-bucket-ixulabs-platform/MDCAO-0001/images/userDefault.avif') }, componentProps === null || componentProps === void 0 ? void 0 : componentProps.imageProps)), jsxRuntime.jsx(index$1, tslib.__assign({ width: "max-content", padding: "0px 0px", position: "relative", height: "max-content" }, { children: jsxRuntime.jsxs(index$1, tslib.__assign({ backgroundColor: "transparent", padding: "0px 0px", customCSS: react.css(templateObject_3 || (templateObject_3 = tslib.__makeTemplateObject(["\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              flex-direction: row;\n              ", ";\n            "], ["\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              flex-direction: row;\n              ", ";\n            "])), (_c = (_b = componentProps === null || componentProps === void 0 ? void 0 : componentProps.buttonProps) === null || _b === void 0 ? void 0 : _b.wrapperProps) === null || _c === void 0 ? void 0 : _c.customCSS) }, (_d = componentProps === null || componentProps === void 0 ? void 0 : componentProps.buttonProps) === null || _d === void 0 ? void 0 : _d.wrapperProps, { children: [jsxRuntime.jsx(index$3, tslib.__assign({ color: "#1d1d1d", fontWeight: 600, cursor: "pointer", customCSS: react.css(templateObject_4 || (templateObject_4 = tslib.__makeTemplateObject(["\n                padding: 0px 20px;\n                overflow: hidden;\n                max-height: 100%;\n                ", ";\n              "], ["\n                padding: 0px 20px;\n                overflow: hidden;\n                max-height: 100%;\n                ", ";\n              "])), (_f = (_e = componentProps === null || componentProps === void 0 ? void 0 : componentProps.buttonProps) === null || _e === void 0 ? void 0 : _e.textProps) === null || _f === void 0 ? void 0 : _f.customCSS) }, (_g = componentProps === null || componentProps === void 0 ? void 0 : componentProps.buttonProps) === null || _g === void 0 ? void 0 : _g.textProps, { children: name || "" })), jsxRuntime.jsx(index$4, tslib.__assign({ height: "14px", icon: "https://storage.googleapis.com/cdn-bucket-ixulabs-commons/frontend-library/icons/arrow-down-3101.svg", color: "#1F1F1F" }, (_h = componentProps === null || componentProps === void 0 ? void 0 : componentProps.buttonProps) === null || _h === void 0 ? void 0 : _h.iconProps)), showUserMenu && (jsxRuntime.jsxs(index$1, tslib.__assign({ refObject: ref, position: "absolute", shadow: true, alignItems: "center", backgroundColor: "white", borderRadius: "5px", width: "80%", padding: "6px", customCSS: react.css(templateObject_5 || (templateObject_5 = tslib.__makeTemplateObject(["\n                  bottom: -5px;\n                  transform: translate(5%, 100%);\n                  ", ";\n                "], ["\n                  bottom: -5px;\n                  transform: translate(5%, 100%);\n                  ", ";\n                "])), (_k = (_j = componentProps === null || componentProps === void 0 ? void 0 : componentProps.menuProps) === null || _j === void 0 ? void 0 : _j.wrapperProps) === null || _k === void 0 ? void 0 : _k.customCSS) }, (_l = componentProps === null || componentProps === void 0 ? void 0 : componentProps.menuProps) === null || _l === void 0 ? void 0 : _l.wrapperProps, { children: [options === null || options === void 0 ? void 0 : options.map(function (option) {
                                        var _a, _b, _c;
                                        return (jsxRuntime.jsx(index$5, tslib.__assign({ width: "100%", padding: "8px 10px", color: "#1d1d1d", fontSize: "10px", align: "center", customCSS: react.css(templateObject_6 || (templateObject_6 = tslib.__makeTemplateObject(["\n                      :hover {\n                        background-color: #dadada;\n                      }\n                      transition: background-color 0.3s ease;\n                      ", ";\n                    "], ["\n                      :hover {\n                        background-color: #dadada;\n                      }\n                      transition: background-color 0.3s ease;\n                      ", ";\n                    "])), (_b = (_a = componentProps === null || componentProps === void 0 ? void 0 : componentProps.menuProps) === null || _a === void 0 ? void 0 : _a.textProps) === null || _b === void 0 ? void 0 : _b.customCSS) }, option, (_c = componentProps === null || componentProps === void 0 ? void 0 : componentProps.menuProps) === null || _c === void 0 ? void 0 : _c.textProps, { children: option.label }), option.id));
                                    }), jsxRuntime.jsx(index, tslib.__assign({ width: "100%", padding: "8px 12px", color: "#1d1d1d", borderRadius: "0px", backgroundColor: "transparent", fontSize: "12px", customCSS: react.css(templateObject_7 || (templateObject_7 = tslib.__makeTemplateObject(["\n                    :hover {\n                      background-color: #dadada;\n                    }\n                    transition: background-color 0.3s ease;\n                    ", ";\n                  "], ["\n                    :hover {\n                      background-color: #dadada;\n                    }\n                    transition: background-color 0.3s ease;\n                    ", ";\n                  "])), (_o = (_m = componentProps === null || componentProps === void 0 ? void 0 : componentProps.menuProps) === null || _m === void 0 ? void 0 : _m.buttonProps) === null || _o === void 0 ? void 0 : _o.customCSS) }, (_p = componentProps === null || componentProps === void 0 ? void 0 : componentProps.menuProps) === null || _p === void 0 ? void 0 : _p.buttonProps, { children: "Cerrar sesi\u00F3n" }))] })))] })) }))] })) })));
};
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;

module.exports = AtomUserDefault;
//# sourceMappingURL=index.js.map
