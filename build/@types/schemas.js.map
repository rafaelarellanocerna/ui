{"version":3,"file":"schemas.js","sources":["../../@types/schemas.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { GraphQLResolveInfo, GraphQLScalarType } from 'graphql';\n/**\n * This file is auto-generated by graphql-schema-typescript\n * Please note that any changes in this file may be overwritten\n */\n \n\n/*******************************\n *                             *\n *          TYPE DEFS          *\n *                             *\n *******************************/\nexport interface IQuery {\n  listGroups?: IGroupCollectionSegment;\n  groupById: IGroup;\n  currencies: Array<ICurrency>;\n  currencyById?: ICurrency;\n  listNiches?: INicheCollectionSegment;\n  listNicheServices?: INicheServiceCollectionSegment;\n  tutorByName: IMember;\n  pageManagerById: IPageManager;\n  listPageManager: Array<IPageManager>;\n  listViewManager: Array<IViewManager>;\n  viewManagerBy: Array<IViewManager>;\n  viewManagerById: IViewManager;\n  viewBlockColumnById: IViewBlockColumn;\n  me: IMember;\n  username: IMemberStream;\n  allStreams: Array<IMemberStream | null>;\n  meById: IMember;\n  meByIdPublic: IMember;\n  referer: IMyUrl;\n  projectByUrl: IProject;\n  countries: Array<ICountry>;\n  countriesList?: ICountryCollectionSegment;\n  companies: Array<ICompany>;\n  roles: Array<IRole>;\n  industries: Array<IIndustry>;\n  rolesByProject: Array<IProjectRole>;\n  members: Array<IMember>;\n  memberById?: IMember;\n  deleteMyMembers: Array<IMemberProject>;\n  membersByProject?: IMemberProjectCollectionSegment;\n  countryByCode: ICountry;\n  listUsers?: IMemberCollectionSegment;\n  listIsMemberInSpace?: IMemberInSpaceCollectionSegment;\n  listIsMemberInBoard?: IMemberInBoardCollectionSegment;\n  listUsersLazyLoad?: IListUsersLazyLoadConnection;\n  listUsersPublic: Array<IMember>;\n  projectsInfinite?: IProjectsInfiniteConnection;\n  projects: Array<IProject>;\n  projectById: IProject;\n  projectByIdPublic: IProject;\n  conversationMemberBy?: IMemberChat;\n  memberNameBy: IMemberFullName;\n  userById?: IMember;\n  customMemberById?: ICustomMemberDto;\n  plans: Array<IPlan>;\n  planById?: IPlan;\n  projectSocialNetworksByProjectId: Array<IProjectSocialNetwork>;\n  recommendedProjects: Array<IRecommendedProject>;\n  publicProjects?: IProjectCollectionSegment;\n  listMemberRelations?: IMemberRelationCollectionSegment;\n  memberRelationById?: IMemberRelation;\n  projectTemplateById?: IProjectTemplate;\n  projectTemplatesByProjectId: Array<IProjectTemplate>;\n  projectTemplates: Array<IProjectTemplate>;\n  countryById?: ICountry;\n  columnTabs: Array<IColumnTab>;\n  columnTabsById?: IColumnTab;\n  rankingSeller?: IRankingDTOCollectionSegment;\n  ranking?: IRankingDTOCollectionSegment;\n  sellByNominatorAndProspectId?: ISell;\n  nominatorSellById?: ISell;\n  nominatorSellByMemberRelationId?: ISell;\n  listNominatorSells?: ISellCollectionSegment;\n  nominatorStat: IMemberStats;\n  sellStats: ISellStats;\n  sellById?: ISell;\n  memberIndustries: Array<IMemberIndustry>;\n  memberIndustryById?: IMemberIndustry;\n  stadisticsLogin?: IMemberCompanyDtoCollectionSegment;\n  allStadisticsLogin?: Array<IMemberCompanyDto>;\n  stadisticsLProjectsByCompany: Array<IIndustry>;\n  listMembersByBusinessId: Array<IMember>;\n  projectRoleById?: IProjectRole;\n  fAQs: Array<IFAQ>;\n  topicDiseases: Array<ITopicDisease>;\n  listInsuranceForms?: IInsuranceFormCollectionSegment;\n  insuranceFormById: IInsuranceForm;\n  topicDiseaseById: ITopicDisease;\n  resultByMemberId: Array<IQuestionDTO>;\n  results: Array<IQuestionDTO>;\n  answers: Array<IQuestionDTO>;\n  articles?: IArticlesConnection;\n  listArticles?: IArticleCollectionSegment;\n  fullArticles: Array<IArticle>;\n  listAddresses: Array<IAddress>;\n  taxonomyById?: ITaxonomy;\n  taxonomyBySlug: ITaxonomy;\n  taxonomyBySlugProject: ITaxonomy;\n  listProducts?: IProductCollectionSegment;\n  fullProducts: Array<IProduct>;\n  taxonomiesByProject?: ITaxonomyCollectionSegment;\n  fullTaxonomies: Array<ITaxonomy>;\n  surveysByArticleId: Array<ISurvey>;\n  shopById?: IShop;\n  articleById: IArticle;\n  seoBySlug: ISeoDTO;\n  articleBySlug: IArticle;\n  articleBySlugProject: IArticle;\n  productById: IProduct;\n  courseById?: ICourse;\n  coursesByProjectId?: ICoursesByProjectIdConnection;\n  courseTaxonomiesByProjectId: Array<ICourseTaxonomy>;\n  coursesByTaxonomyId: Array<ICourseTaxonomy>;\n  storeStocks: Array<IStoreStock>;\n  storeStocksByStoreId: Array<IStoreStock>;\n  storeTransfersByStoreId?: IStoreTransfersByStoreIdConnection;\n  coursesByTaxonomyAndModality?: ICoursesByTaxonomyAndModalityConnection;\n  productBySlug: IProduct;\n  productsBySlug: Array<IProduct>;\n  productBySlugProject: IProduct;\n  branchOfficesByIds: Array<IBranchOffice>;\n  productByIdResolver?: IProduct;\n  addressById?: IAddress;\n  branchOffices?: IBranchOfficesConnection;\n  storeById?: IStore;\n  managers?: IManagersConnection;\n  purchases?: IPurchaseCollectionSegment;\n  productPurchases: Array<IProductPurchase>;\n  stores?: IStoresConnection;\n  productPurchasesByPurchaseId: Array<IProductPurchase>;\n  managerByBranchOfficeId?: IManager;\n  productProviders: Array<IProductProvider>;\n  purchaseById?: IPurchase;\n  branchOfficeById?: IBranchOffice;\n  storeTransferById?: IStoreTransfer;\n  storeStockByStoreIdAndProductId?: IStoreStock;\n  storeTransfers?: IStoreTransfersConnection;\n  drugs?: IDrugCollectionSegment;\n  carriers: Array<ICarrier>;\n  groups: IGroupResponse;\n  pharmacyRadiusPricing?: Array<IPharmacyRadiusResponse>;\n  pharmaciesByZipCode: IPharmacyResponse;\n  searchMembers?: ISearchMemberResponse;\n  productsByNameAndZipCode: Array<IPricingDrug>;\n  transactions?: Array<ITransaction>;\n  pricings: Array<IPricing>;\n  menus?: Array<IMenu>;\n  bbotRestaurants?: Array<IRestaurant>;\n  listByMemberId: Array<IAddress>;\n  legalTerms?: ILegalTermCollectionSegment;\n  legalTermById?: ILegalTerm;\n  increaseLegalTermCounter: boolean;\n  stockAlerts?: IStockAlertCollectionSegment;\n  stockAlertById?: IStockAlert;\n  stockAlertByProductId?: IStockAlert;\n  purchaseQuoteById?: IPurchaseQuote;\n  purchaseQuotes?: IPurchaseQuoteCollectionSegment;\n  taxes: Array<ITax>;\n  productSells?: IProductSellCollectionSegment;\n  productSellById?: IProductSell;\n  listRoutes?: IRouteCollectionSegment;\n  routes: Array<IRoute>;\n  routeById?: IRoute;\n  services: Array<IMicroservice>;\n  fixUpdateNameService: IMessageFix;\n  servicesByProject: Array<IServiceHelper>;\n  microServiceByCodeName?: IMicroservice;\n  endOfDay: IDateTime;\n  startOfDay: IDateTime;\n  listSchedules?: Array<IScheduleManagerDto>;\n  scheduleManagerByEventType?: IScheduleManagerDto;\n  availableEvents: Array<IEvent>;\n  myEvents: Array<IEvent>;\n  events: Array<IEvent>;\n  filteredEvents?: IEventCollectionSegment;\n  currentDate: IDateTime;\n  eventTypes: Array<IEventType>;\n  subEventTypes: Array<ISubEventType>;\n  eventById: IEvent;\n  localTime: IDateTime;\n  nextEvent: Array<IEvent>;\n  nextEventMembers: Array<IEvent>;\n  membersEvents: Array<IEvent>;\n  associatedEvents: Array<IEvent>;\n  listHiring: Array<IHiring>;\n  listHiringType: Array<IHiringType>;\n  listShift: Array<IShift>;\n  listDays: Array<IDay>;\n  listResourceQuotes?: IResourceQuoteCollectionSegment;\n  resourceQuoteById?: IResourceQuote;\n  listResourceQuoteDetails?: IResourceQuoteDetailCollectionSegment;\n  listProposal?: IProposalCollectionSegment;\n  proposalById?: IProposal;\n  listCollaborators?: ICollaboratorCollectionSegment;\n  listCollaboratorHours?: ICollaboratorHoursCollectionSegment;\n  housReportedProject: IHoursReportedDTO;\n  listEnumHiringType: Array<string>;\n  hiringByMemberId?: Array<IHiring | null>;\n  shiftByMemberId?: Array<IShift | null>;\n  resourceQuotesByMemberId?: Array<IResourceQuote | null>;\n  collaboratorsByMemberId?: Array<ICollaborator | null>;\n  hiringServicesByServiceAreaId?: Array<IHiringService | null>;\n  configs: Array<IConfiguration>;\n  configurationTemplateById: IConfigurationTemplate;\n  listComponents: Array<IComponent>;\n  listWebsitePages: Array<IWebsitePage>;\n  webSitePageById?: IWebsitePage;\n  websitePageComponentById?: IWebsitePageComponent;\n  listProjectPlanSubscriptions?: IProjectPlanSubscriptionCollectionSegment;\n  projectPlanSubscriptionByMemberId?: IProjectPlanSubscription;\n  projectPlanSubscriptionsByMemberId: Array<IProjectPlanSubscription>;\n  listBusinesses: Array<IBusiness>;\n  businesses?: IBusinessCollectionSegment;\n  businessTypes?: IBusinessTypeCollectionSegment;\n  businessRules?: IBusinessRuleCollectionSegment;\n  businessRuleById?: IBusinessRule;\n  businessTypeById?: IBusinessType;\n  businessById?: IBusiness;\n  listProjectPlans?: Array<IProjectPlan>;\n  projectPlans?: IProjectPlanCollectionSegment;\n  projectPlanById?: IProjectPlan;\n  websitePageBySlug?: IWebsitePage;\n  listTemplates: Array<ITemplate>;\n  templateById?: ITemplate;\n  errorPages: Array<IErrorPage>;\n  errorPageById?: IErrorPage;\n  errorPageValidations: Array<IErrorPageValidation>;\n  errorPageValidationById?: IErrorPageValidation;\n  couponById?: ICoupon;\n  coupons: Array<ICoupon>;\n  couponTemplates: Array<ICouponTemplate>;\n  listDocumentCategory?: IDocumentCategoryCollectionSegment;\n  listDocumentCategoryDetail: Array<IDocumentCategoryDetail>;\n  listDocument?: IDocumentCollectionSegment;\n  listDocumentTemplate?: IDocumentTemplateCollectionSegment;\n  listTemplatePage?: ITemplatePageCollectionSegment;\n  listDocumentTag: Array<IDocumentTag>;\n  listDocumentScan: Array<IDocumentScan>;\n  listDocumentRead?: IDocumentReadCollectionSegment;\n  verifyUserRoom: IVideoRoom;\n  verifyVideoRoom: IVideoRoom;\n  roomTokenLiveKit2: IRoomTokenLiveKit2;\n  roomTokenLiveKit3: IRoomTokenLiveKit2;\n  startRecordRoom2?: string;\n  videoCalls: Array<IVideoCall>;\n  listVideoRooms: Array<IVideoRoom>;\n  listRoomRecords: Array<IVideoRoomRecord>;\n  roomRecord?: string;\n  videoCallsByMember: Array<IVideoCall>;\n  videoCallById: IVideo;\n  videoCallBySessionId: IVideo;\n  contactEmails: Array<IContactEmail>;\n  listServiceArea?: IServiceCollectionSegment;\n  listArea?: IAreaCollectionSegment;\n  listServiceQuiz?: IServiceQuizCollectionSegment;\n  listQuiz?: IQuizCollectionSegment;\n  listQuizSection?: IQuizSectionCollectionSegment;\n  listQuizQuestion?: IQuizQuestionCollectionSegment;\n  listQuizQuestionAnswer?: IQuizQuestionAnswerCollectionSegment;\n  listQuizAnswer?: IQuizAnswerCollectionSegment;\n  listQuizMember?: IQuizMemberCollectionSegment;\n  listQuizMemberGrouped?: IQuizMemberGroupedCollectionSegment;\n  listQuizQuestionMember?: IQuizQuestionMemberCollectionSegment;\n  listQuizMemberAnswer?: IQuizMemberAnswerCollectionSegment;\n  listQuizMemberDescription?: IQuizMemberDescriptionCollectionSegment;\n  serviceAreaById?: IServiceArea;\n  areaById?: IArea;\n  serviceAreaMemberByMemberId?: Array<IServiceMember | null>;\n  catalogAarco: ICatalog;\n  quotationByIdPeticionAarco: IQuotationResponse;\n  coverageAarco: ICoverage;\n  payment_transactions?: ITransactionCollectionSegment;\n  methodPayments?: IMethodPaymentCollectionSegment;\n  plan?: IPlanCollectionSegment;\n  listInvoices?: IInvoiceCollectionSegment;\n  invoiceById: IInvoice;\n  listInvoiceAddress: Array<IInvoice>;\n  listInvoiceDetailProduct: Array<IInvoiceDetail>;\n  invoicesByMemberId: Array<IInvoice>;\n  customerSuscriptions: Array<ICustomerSuscription>;\n  productStripeByProductId?: IProductStripe;\n  planByProductId?: IPlan;\n  listAccountKey?: IAccountKeyCollectionSegment;\n  accountKeysByMemberId?: Array<IAccountKey | null>;\n  paymentMethodByMemberId?: IPaymentMethod;\n  memberWithStripePaymentMethod: boolean;\n  methodPaymentById?: IMethodPayment;\n  subscriptionStatus: boolean;\n  paymentMethodsStripe: Array<ICardMethodDTO>;\n  vehiclesCarcatalogHdiCodeYearsCarId: Array<IVehiclesCarCatalogHdiCodeYear>;\n  vehiclesCarcatalogMapfreeCodeYearsCarId: Array<IVehiclesCarCatalogMapfreCodeYear>;\n  vehiclesCarcatalogQualitasCodeYearsCarId: Array<IVehiclesCarCatalogQualitasCodeYear>;\n  vehiclesCarcatalogZurichCodeYearsCarId: Array<IVehiclesCarCatalogZurichCodeYear>;\n  quoteCoverages: Array<IQuotationCoverage>;\n  quoteCoverageById?: IQuotationCoverage;\n  listStaffQuote: Array<IStaffQuote>;\n  multiquoter_listProposal: Array<IProposal>;\n  listCollaborator: Array<ICollaborator>;\n  coverageByProject: Array<IInsurerCoverageProject>;\n  packages: Array<ICotizacionPackage>;\n  coverages: Array<IInsurerCoverage>;\n  runServiceQuoteFetch?: IRunServicePayload;\n  stadistics: Array<IStadisticsResult>;\n  stadisticsQualitas: Array<IStadisticsResult>;\n  listRQuoterProfilesByProjectId?: IListRQuoterProfilesByProjectIdConnection;\n  listRQuoterProfilesInsurerByProjectId?: IListRQuoterProfilesInsurerByProjectIdConnection;\n  homologated?: IHomologator;\n  listInsurerServiceCredentials: Array<IInsurerServiceCredential>;\n  listInsurerService: Array<IInsurerService>;\n  listInsurerService2: Array<IInsurerService>;\n  listRelations: Array<IVehiclesCarCodeRelation>;\n  quotes?: IQuoteCollectionSegment;\n  listQuotesAlt?: IQuoteCollectionSegment;\n  listQuotes: Array<IQuote>;\n  quotesByMember: IQuoteCount;\n  listRegistrations: Array<IRegistration>;\n  quoteById: IQuoter;\n  listQuoteServices: Array<IGenericsService>;\n  listGenders: Array<IGenderDTO>;\n  listCars: Array<IVehiclesCarCatalogAba>;\n  listCarType: Array<ICarTypeDTO>;\n  listCarBrand: Array<IListBrandDTO>;\n  listCarSuBbrand: Array<IListSubBrandDTO>;\n  listModel: Array<IListYearDTO>;\n  car: Array<IListVersionDTO>;\n  relationCars: Array<IHomologationService>;\n  colony: IColoniaDTO;\n  listCoverages: Array<ICoverageDTO>;\n  catalogById: ICatalog;\n  catalogs?: ICatalogCollectionSegment;\n  catalogByYears: Array<ICatalogByYear>;\n  insurers?: IInsurerCollectionSegment;\n  offices?: IOfficeCollectionSegment;\n  quatorProfiles?: IQuoterProfileCollectionSegment;\n  quoterProfileById: IQuoterProfile;\n  vehiclesCarCatalogAbas: Array<IVehiclesCarCatalogAba>;\n  vehiclesCarCatalogAbasByBrand: Array<IVehiclesCarCatalogAba>;\n  vehiclesCarCatalogAbasBySubBrand: Array<IVehiclesCarCatalogAba>;\n  vehiclesCarCatalogAfirme: Array<IVehiclesCarCatalogAfirme>;\n  vehiclesCarCatalogAfirmebyBrand: Array<IVehiclesCarCatalogAfirme>;\n  vehiclesCarCatalogAfirmebySubrand: Array<IVehiclesCarCatalogAfirme>;\n  vehiclesCarCatalogAig: Array<IVehiclesCarCatalogAig>;\n  vehiclesCarCatalogAigByBrand: Array<IVehiclesCarCatalogAig>;\n  vehiclesCarCatalogAigBySubBrand: Array<IVehiclesCarCatalogAig>;\n  vehiclesCarCatalogAnas: Array<IVehiclesCarCatalogAna>;\n  vehiclesCarCatalogAnasByBrand: Array<IVehiclesCarCatalogAna>;\n  vehiclesCarCatalogAnasbySubbrand: Array<IVehiclesCarCatalogAna>;\n  vehiclesAtlas: Array<IVehiclesCarCatalogAtla>;\n  vehiclesAtlasByBrand: Array<IVehiclesCarCatalogAtla>;\n  vehiclesAtlasBySubbrand: Array<IVehiclesCarCatalogAtla>;\n  vehiclesAxa: Array<IVehiclesCarCatalogAxa>;\n  vehiclesAxaByBrand: Array<IVehiclesCarCatalogAxa>;\n  vehiclesAxaBySubbrand: Array<IVehiclesCarCatalogAxa>;\n  vehiclesBanorte: Array<IVehiclesCarCatalogBanorte>;\n  vehiclesBanorteByBrand: Array<IVehiclesCarCatalogBanorte>;\n  vehiclesBanorteBySubbrand: Array<IVehiclesCarCatalogBanorte>;\n  vehiclesGrip: Array<IVehiclesCarCatalogGnp>;\n  vehiclesGripByBrand: Array<IVehiclesCarCatalogGnp>;\n  vehiclesGripBySubbrand: Array<IVehiclesCarCatalogGnp>;\n  vehiclesHdi: Array<IVehiclesCarCatalogHdi>;\n  vehiclesHdiByBrand: Array<IVehiclesCarCatalogHdi>;\n  vehiclesHdiBySubbrand: Array<IVehiclesCarCatalogHdi>;\n  vehiclesMapfree: Array<IVehiclesCarCatalogMapfre>;\n  vehiclesMapfreeByBrand: Array<IVehiclesCarCatalogMapfre>;\n  vehiclesMapfreeBySubbrand: Array<IVehiclesCarCatalogMapfre>;\n  vehiclesP: Array<IVehiclesCarCatalogP>;\n  vehiclesPByBrand: Array<IVehiclesCarCatalogP>;\n  vehiclesPBySubbrand: Array<IVehiclesCarCatalogP>;\n  vehiclesPotosi: Array<IVehiclesCarCatalogPotosi>;\n  vehiclesPotosiByBrand: Array<IVehiclesCarCatalogPotosi>;\n  vehiclesPotosiBySubbrand: Array<IVehiclesCarCatalogPotosi>;\n  vehiclesQualitas: Array<IVehiclesCarCatalogQualita>;\n  vehiclesQualitasByBrand: Array<IVehiclesCarCatalogQualita>;\n  vehiclesQualitasBySubbrand: Array<IVehiclesCarCatalogQualita>;\n  vehiclesZurich: Array<IVehiclesCarCatalogZurich>;\n  vehiclesZurichByBrand: Array<IVehiclesCarCatalogZurich>;\n  vehiclesZurichBySubbrand: Array<IVehiclesCarCatalogZurich>;\n  vehiclesCarcatalogAbaCodeYearsCarId: Array<IVehiclesCarCatalogAbaCodeYear>;\n  vehiclesCarcatalogAfirmeCodeYearsCarId: Array<IVehiclesCarCatalogAfirmeCodeYear>;\n  vehiclesCarcatalogAxaCodeYearsCarId: Array<IVehiclesCarCatalogAxaCodeYear>;\n  vehiclesCarcatalogAtlasCodeYearsCarId: Array<IVehiclesCarCatalogAtlasCodeYear>;\n  vehiclesCarcatalogBanorteCodeYearsCarId: Array<IVehiclesCarCatalogBanorteCodeYear>;\n  vehiclesCarcatalogGnpCodeYearsCarId: Array<IVehiclesCarCatalogGnpCodeYear>;\n  apiServices: Array<IApiService>;\n  apiServiceBySecretAndProjectId?: IApiService;\n  listDynamicPage: Array<IDynamicPage>;\n  listDynamicBlock?: IDynamicBlockCollectionSegment;\n  listDynamicSection?: IDynamicSectionCollectionSegment;\n  listDynamicTab?: IDynamicTabCollectionSegment;\n  listDynamicSectionBlock?: IDynamicSectionBlockCollectionSegment;\n  listDynamicCustomMeta?: IDynamicCustomMetaCollectionSegment;\n  listDynamicCustomValue?: IDynamicCustomValueCollectionSegment;\n  listCharges?: IChargeCollectionSegment;\n  listClinicHistory: Array<IClinicHistory>;\n  listConsult?: IEventDetailCollectionSegment;\n  listFisicExam: Array<IFisicExam>;\n  listMedicalBackgrounds: Array<IMedicalBackground>;\n  listMedicBackgroundDetails: Array<IMedicalBackgroundDetail>;\n  listClinicHistory_MedicalBackgroundDetails: Array<IClinicHistoryMedicalBackgroundDetail>;\n  listMedicines: Array<IMedicine>;\n  listMedicalServices: Array<IMedicalService>;\n  listVaccines: Array<IVaccine>;\n  listVitalSigns: Array<IVitalSign>;\n  listMedicalConfigs: Array<IMedicalConfig>;\n  listRegistSesions: Array<IRegistSesion>;\n  listTherapy?: ITherapyCollectionSegment;\n  listRecipeConfig: Array<IRecipeConfig>;\n  listMedicRecipe: Array<IMedicRecipe>;\n  listConsultNotes: Array<IConsultNote>;\n  listPacientNote: Array<IPacientNote>;\n  listDiagnostic: Array<IDiagnostic>;\n  listPacientMedicalBackground: Array<IPacientMedicalBackground>;\n  listBillingRequests: Array<IBillingRequest>;\n  listFormats: Array<IFormat>;\n  listPatientResponses: Array<IPatientVitalSignsResponse>;\n  medicalBackgroundsByFormatId: Array<IMedicalBackground>;\n  consultInfo: IConsultDto;\n  listChagesForPacient?: IEventDetailCollectionSegment;\n  listPacientMedicalBackgroundById: Array<IPacientMedicalBackground>;\n  listEventDetailsByMemberId: Array<IEventDetail>;\n  listFisicExamsByMemberId: Array<IFisicExam>;\n  listMedicalBackgroundByMemberId: Array<IMedicalBackground>;\n  listMedicRecipesByMemberId: Array<IMedicRecipe>;\n  listPatientNotesByMemberId: Array<IPacientNote>;\n  listVitalSignsByMemberId: Array<IPatientVitalSignsResponse>;\n  listVaccinesByMemberId: Array<IVaccine>;\n  listDiagnosticByEventId: Array<IDiagnostic>;\n  listEnumInsideType: Array<string>;\n  listSpace?: ISpaceCollectionSegment;\n  listBoardStatus?: IBoardStatusCollectionSegment;\n  listBoard?: IBoardCollectionSegment;\n  listBoardList?: IBoardListCollectionSegment;\n  listCardReply?: ICardReplyCollectionSegment;\n  listCard?: ICardCollectionSegment;\n  listNestedFiles?: INestedFileCollectionSegment;\n  listMemberCard?: IMemberCardCollectionSegment;\n  listMemberBoard?: IMemberBoardCollectionSegment;\n  listMemberSpace?: IMemberSpaceCollectionSegment;\n  listMemberSpaceOnValue?: IListMemberSpaceOnValueConnection;\n  listMemberSpaceOnCard?: IListMemberSpaceOnCardConnection;\n  listMemberBoardOnValue?: IListMemberBoardOnValueConnection;\n  listMemberBoardOnCard?: IListMemberBoardOnCardConnection;\n  listBoardColumnTypes?: IBoardColumnTypeCollectionSegment;\n  listMemberSpaceAccess: Array<IMemberBoardDTO>;\n  listCardColumnValue?: ICardColumnValueCollectionSegment;\n  listBoardMemberReference?: IBoardMemberReferenceCollectionSegment;\n  memberBoardByMember?: Array<IMemberBoard>;\n  memberSpaceByMember?: Array<IMemberSpace>;\n  isMembersInspace: boolean;\n  isMembersInBoard: boolean;\n  attributeById?: IAttribute;\n  attributeValueById?: IAttributeValue;\n  buildingSiteAddressById?: IBuildingSiteAddress;\n  customerById?: ICustomer;\n  madreQuotationById?: IMadreQuotation;\n  materialById?: IMaterial;\n  materialCategoryById?: IMaterialCategory;\n  materialCombinationById?: IMaterialCombination;\n  materialCombinationAttributeById?: IMaterialCombinationAttribute;\n  materialModuleById?: IMaterialModule;\n  materialQuotationById?: IMaterialQuotation;\n  materialStockById?: IMaterialStock;\n  materialStockMeasureById?: IMaterialStockMeasure;\n  materialVariableModuleById?: IMaterialVariableModule;\n  materialVariableQuotationById?: IMaterialVariableQuotation;\n  measureById?: IMeasure;\n  measureUnityById?: IMeasureUnity;\n  measureUnityTwoById?: IMeasureUnityTwo;\n  measureValueById?: IMeasureValue;\n  moduleById?: IModule;\n  moduleCategoryById?: IModuleCategory;\n  quotationById?: IQuotation;\n  quotationModuleById?: IQuotationModule;\n  userCustomerByMemberId?: IUserCustomer;\n  variableById?: IVariable;\n  attributes: Array<IAttribute>;\n  attributeValues: Array<IAttributeValue>;\n  buildingSiteAddresses: Array<IBuildingSiteAddress>;\n  customers: Array<ICustomer>;\n  madreQuotations: Array<IMadreQuotation>;\n  materials: Array<IMaterial>;\n  materialCategories?: IMaterialCategoriesConnection;\n  materialCombinations: Array<IMaterialCombination>;\n  materialCombinationAttributes: Array<IMaterialCombinationAttribute>;\n  materialModules: Array<IMaterialModule>;\n  materialQuotations: Array<IMaterialQuotation>;\n  materialStocks: Array<IMaterialStock>;\n  materialStockMeasures: Array<IMaterialStockMeasure>;\n  materialVariableModules: Array<IMaterialVariableModule>;\n  materialVariableQuotations: Array<IMaterialVariableQuotation>;\n  measures: Array<IMeasure>;\n  measureUnities: Array<IMeasureUnity>;\n  measureUnityTwos: Array<IMeasureUnityTwo>;\n  measureValues: Array<IMeasureValue>;\n  modules: Array<IModule>;\n  moduleCategories: Array<IModuleCategory>;\n  quotations: Array<IQuotation>;\n  quotationModules: Array<IQuotationModule>;\n  variables: Array<IVariable>;\n  brandHermer: IBrandsHermer;\n  modelsHermer: IModelsHermer;\n  yearHermer: IYearsHermer;\n  modelLobato: Array<IModelLobatoHermer>;\n  modelsMercadoLibre: IModelMercadoLibreResultHermer;\n  listConsultHermer: IResultConsultHermer;\n  listConsultAllHermer: IResultConsultAllHermer;\n  listConsultLastAnalysisHermer: IResultConsultLastAnalysisHermer;\n  getConsultHermer: IConsultHermer;\n  downloadFile: IDownloadFile;\n  listFolders?: IListFoldersConnection;\n  foldersList?: IFoldersListConnection;\n  folderAllowedMembers: Array<ISharedFolder>;\n  fileAllowedMembers: Array<ISharedFile>;\n  sharedFilesFromFolder?: ISharedFilesFromFolderDto;\n  listFiles?: IFileCollectionSegment;\n  listFilesByMemberId: Array<IFile>;\n  listFoldersByMemberId: Array<IFolder>;\n  outstandingFoldersByMemberId?: IFolderCollectionSegment;\n  sharedFilesByMemberId: Array<ISharedFile>;\n  sharedFilesAmongstMembers: Array<IFile>;\n  sharedFoldersByMemberId: Array<ISharedFolder>;\n  folderById?: IFolder;\n  fileById?: IFile;\n  outstandingFilesByMemberId?: IOutstandingFiles;\n  conversationsByToMemberId: Array<IConversationReply>;\n  conversationsByMemberId: Array<IMemberConversation>;\n  listWallets?: IEWalletCollectionSegment;\n  walletById?: IEWallet;\n  listMemberWallets?: IMemberWalletCollectionSegment;\n  listWalletTransaction?: IWalletTransactionCollectionSegment;\n  walletTransactionById?: IWalletTransaction;\n  listWalletTransactionStatus?: IWalletTransactionStatusCollectionSegment;\n  listWalletTransactionMember?: IWalletTransactionMemberRelationCollectionSegment;\n  listWalletTransactionMemberDetail?: IWalletTransactionMemberDetailCollectionSegment;\n  investmentVsEarning: IDecimal;\n  walletTransactionDetail: Array<IWalletTransactionSummary>;\n  listMemberWalletsByMember: Array<IMemberWallet>;\n  certificateMovements: Array<ICertificateMovement>;\n  countryRequests: Array<ICountryRequest>;\n  certificates?: ICertificateCollectionSegment;\n  certificatesNotPaginated: Array<ICertificate>;\n  fees: Array<IFee>;\n  beneficiaries?: IBeneficiaryCollectionSegment;\n  insurerCompanies?: IInsurerCompanyCollectionSegment;\n  merchandises?: IMerchandiseCollectionSegment;\n  merchandiseCategories: Array<IMerchandiseCategory>;\n  merchandiseDetails: Array<IMerchandiseDetail>;\n  contacts: Array<IContact>;\n  contractors: Array<IContractor>;\n  trafficDetails: Array<ITrafficDetail>;\n  money: Array<IMoney>;\n  policies: Array<IPolicy>;\n  contractorBranchOffices: Array<IContractorOffice>;\n  contractorContacts: Array<IContractorContact>;\n  contractorPolicies: Array<IContractorPolicy>;\n  contactById?: IContact;\n  contractorById?: IContractor;\n  contractorContactById?: IContractorContact;\n  contractorPolicyById?: IContractorPolicy;\n  insurerCompanyById?: IInsurerCompany;\n  moneyById?: IMoney;\n  certificateById?: ICertificate;\n  contractorOfficeById?: IContractorOffice;\n  policyModules?: IPolicyModuleCollectionSegment;\n  policyModuleById?: IPolicyModule;\n  insurerModules?: IInsurerModuleCollectionSegment;\n  insurerModuleById?: IInsurerModule;\n  beneficiaryById?: IBeneficiary;\n  merchandiseById?: IMerchandise;\n  insurerFeeById?: IInsurerFee;\n  insurerFees?: IInsurerFeeCollectionSegment;\n  listSchool?: ISchoolCollectionSegment;\n  schoolById: ISchool;\n  listClassroom?: IClassroomCollectionSegment;\n  classroomById: IClassroom;\n  listLevel?: ILevelCollectionSegment;\n  levelById: ILevel;\n  levelByName: ILevel;\n  gradeByName: IGrade;\n  classroomByName: IClassroom;\n  listGrade?: IGradeCollectionSegment;\n  gradeById: IGrade;\n  listStudent?: IStudentCollectionSegment;\n  studentById: IStudent;\n  listStudentByLastAttendance?: IStudentCollectionSegment;\n  listAttendanceStudent?: IAttendanceCollectionSegment;\n  attendanceStudentById: IAttendance;\n  listStudentTutorMemberId: Array<IStudent>;\n  listClassroomTeacherMemberId: Array<IClassroom>;\n  chatBotConversations?: IMyConversationCollectionSegment;\n  listAgentProviderBonos?: IAgentProviderBonoCollectionSegment;\n  listBeneficiaries?: IBeneficiarieCollectionSegment;\n  listFormAccidentDiseases?: IFormAccidentDiseaseCollectionSegment;\n  listFormAutomobileDamages?: IFormAutomobileDamageCollectionSegment;\n  listFormCarCatalogs?: IFormCarCatalogCollectionSegment;\n  listFormDamages?: IFormDamageCollectionSegment;\n  listFormLifes?: IFormLifeCollectionSegment;\n  listInvolvedReferrers?: IInvolvedReferrerCollectionSegment;\n  listOldPolices?: IOldPoliceCollectionSegment;\n  listPersonalInformations?: IPersonalInformationCollectionSegment;\n  listPolices?: IPoliceCollectionSegment;\n  listPoliceAssigns?: IPoliceAssignCollectionSegment;\n  listPolicePendients?: IPolicePendientCollectionSegment;\n  listPoliceQuotes?: IPoliceQuoteCollectionSegment;\n  listPoliceQuotePrimas?: IPoliceQuotePrimaCollectionSegment;\n  listRelationShips?: IRelationShipCollectionSegment;\n  listSucursals?: ISucursalCollectionSegment;\n  listEndorsements?: IEndorsementCollectionSegment;\n  listEndorsementCerts?: IEndorsementCertCollectionSegment;\n  listSinisters?: ISinisterCollectionSegment;\n  listSinisterAccidents?: ISinisterAccidentCollectionSegment;\n  listSinisterAilings?: ISinisterAilingCollectionSegment;\n  listSinisterCars?: ISinisterCarCollectionSegment;\n  listSinisterCarContacts?: ISinisterCarContactCollectionSegment;\n  listSinisterDamages?: ISinisterDamageCollectionSegment;\n  listSinisterDamageContacts?: ISinisterDamageContactCollectionSegment;\n  listSinisterFacturas?: ISinisterFacturaCollectionSegment;\n  listSinisterHospitals?: ISinisterHospitalCollectionSegment;\n  listSinisterLifes?: ISinisterLifeCollectionSegment;\n  listSinisterLifeContacts?: ISinisterLifeContactCollectionSegment;\n  listPoliceReceipts?: IPoliceReceiptCollectionSegment;\n  listPoliceReceiptAccounts?: IPoliceReceiptAccountCollectionSegment;\n  listPoliceReceiptAccountStates?: IPoliceReceiptAccountStateCollectionSegment;\n  listPoliceReceiptFolios?: IPoliceReceiptFolioCollectionSegment;\n  listPoliceReceiptPayments?: IPoliceReceiptPaymentCollectionSegment;\n  listPoliceFiles?: IPoliceFileCollectionSegment;\n  listInsurerComments?: IInsurerCommentCollectionSegment;\n  listInsurerFileReadings?: IInsurerFileReadingCollectionSegment;\n  listInsurerFileReadingTags?: IInsurerFileReadingTagCollectionSegment;\n  listInsurerInvolveds?: IInsurerInvolvedCollectionSegment;\n  listInsurerLogs?: IInsurerLogCollectionSegment;\n  listInsurerLogEmails?: IInsurerLogEmailCollectionSegment;\n  listInsurerOrgInfos?: IInsurerOrgInfoCollectionSegment;\n  listInsurerTickets?: IInsurerTicketCollectionSegment;\n  listInsurerSchedules?: IInsurerScheduleCollectionSegment;\n  listInsurerScheduleParticipants?: IInsurerScheduleParticipantCollectionSegment;\n  listInsurerNotifications?: IInsurerNotificationCollectionSegment;\n  listInsurerReminders?: IInsurerReminderCollectionSegment;\n  listInsurerReminderProjectAgentProviders?: IInsurerReminderProjectAgentProviderCollectionSegment;\n  listInsurerReminderRecords?: IInsurerReminderRecordCollectionSegment;\n  listInsurerReminderSubBranches?: IInsurerReminderSubBranchCollectionSegment;\n  listInsurerBailTypes?: IInsurerBailTypeCollectionSegment;\n  listInsurerBirthDateTemplates?: IInsurerBirthDateTemplateCollectionSegment;\n  listInsurerDirectories?: IInsurerDirectoryCollectionSegment;\n  listInsurerExpenses?: IInsurerExpenseCollectionSegment;\n  listInsurerIbisForms?: IInsurerIbisFormCollectionSegment;\n  listInsurerIbisProviders?: IInsurerIbisProviderCollectionSegment;\n  listInsurerSenders?: IInsurerSenderCollectionSegment;\n  listInsurerZipCodeSepomexs?: IInsurerZipCodeSepomexCollectionSegment;\n  listComissions?: IComissionCollectionSegment;\n  listCoverageTopecoinsurances?: ICoverageTopecoinsuranceCollectionSegment;\n  listCoverageSuminsureds?: ICoverageSuminsuredCollectionSegment;\n  listCoveragePackages?: ICoveragePackageCollectionSegment;\n  saam_listCoverages?: ICoverageCollectionSegment;\n  listCoverageInPolicies?: ICoverageInPolicyCollectionSegment;\n  listCoverageDeductibles?: ICoverageDeductibleCollectionSegment;\n  listCoverageCoinsurances?: ICoverageCoinsuranceCollectionSegment;\n  listResponsableInvolveds?: IResponsableInvolvedCollectionSegment;\n  listProjectAgentProviderEmailReminders?: IProjectAgentProviderEmailReminderCollectionSegment;\n  listProjectAgentProviders?: IProjectAgentProviderCollectionSegment;\n  listAgentProviderContacts?: IAgentProviderContactCollectionSegment;\n  listAgentProviders?: IAgentProviderCollectionSegment;\n  listAgentKeys?: IAgentKeyCollectionSegment;\n  listReferrers?: IReferrerCollectionSegment;\n  listReferrerBranches?: IReferrerBranchCollectionSegment;\n  listReferrerAccountStates?: IReferrerAccountStateCollectionSegment;\n  listContractors?: IContractorCollectionSegment;\n  listContractorCelulas?: IContractorCelulaCollectionSegment;\n  listContractorGroups?: IContractorGroupCollectionSegment;\n  listContractorGroupingLevels?: IContractorGroupingLevelCollectionSegment;\n  listContractorClassifications?: IContractorClassificationCollectionSegment;\n  listContractorProcessDocuments?: IContractorProcessDocumentCollectionSegment;\n  listProcessDocuments?: IProcessDocumentCollectionSegment;\n  listBranches?: IBranchCollectionSegment;\n  listSubBranches?: ISubBranchCollectionSegment;\n  listProjectAgentProviderBranches?: IProjectAgentProviderBranchCollectionSegment;\n  listDevices?: IDeviceCollectionSegment;\n  deviceById?: IDevice;\n  listNotifications?: INotificationCollectionSegment;\n  notificationsById?: INotification;\n  devicesByMemberId?: Array<IDevice>;\n  listNotificationByMemberId?: Array<INotification>;\n  codes: Array<ICode>;\n  brandsByProjectId: Array<IBrand>;\n  providers: Array<IProvider>;\n  scanCode?: ICode;\n  availableDots: number;\n  exchangeMovements: Array<IDotMovement>;\n  dotMovementsByMemberId: Array<IDotMovement>;\n  lookForAdminCode: boolean;\n  prizeCategories: Array<IPrizeCategory>;\n  prizeCodes: Array<IPrizeCode>;\n  prizeCategoryById?: IPrizeCategory;\n  dotMovementById?: IDotMovement;\n}\n\nexport interface IGroupFilterInput {\n  and?: Array<IGroupFilterInput>;\n  or?: Array<IGroupFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  project?: IProjectFilterInput;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  members?: IListFilterInputTypeOfMemberFilterInput;\n  groupTaxonomies?: IListFilterInputTypeOfGroupTaxonomyFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IComparableGuidOperationFilterInput {\n  eq?: IUUID;\n  neq?: IUUID;\n  in?: Array<IUUID>;\n  nin?: Array<IUUID>;\n  gt?: IUUID;\n  ngt?: IUUID;\n  gte?: IUUID;\n  ngte?: IUUID;\n  lt?: IUUID;\n  nlt?: IUUID;\n  lte?: IUUID;\n  nlte?: IUUID;\n}\n\nexport type IUUID = any;\n\nexport interface IProjectFilterInput {\n  and?: Array<IProjectFilterInput>;\n  or?: Array<IProjectFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  logo?: IStringOperationFilterInput;\n  tagLine?: IStringOperationFilterInput;\n  isAPublicPlatform?: IBooleanOperationFilterInput;\n  isReady?: IBooleanOperationFilterInput;\n  url?: IStringOperationFilterInput;\n  onProduction?: IBooleanOperationFilterInput;\n  industryId?: IComparableNullableOfGuidOperationFilterInput;\n  industry?: IIndustryFilterInput;\n  companyId?: IComparableGuidOperationFilterInput;\n  company?: ICompanyFilterInput;\n  projectRoles?: IListFilterInputTypeOfProjectRoleFilterInput;\n  memberProjects?: IListFilterInputTypeOfMemberProjectFilterInput;\n  projectSocialNetworks?: IListFilterInputTypeOfProjectSocialNetworkFilterInput;\n  groups?: IListFilterInputTypeOfGroupFilterInput;\n  nicheId?: IComparableNullableOfGuidOperationFilterInput;\n  niche?: INicheFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IStringOperationFilterInput {\n  and?: Array<IStringOperationFilterInput>;\n  or?: Array<IStringOperationFilterInput>;\n  eq?: string;\n  neq?: string;\n  contains?: string;\n  ncontains?: string;\n  in?: Array<string | null>;\n  nin?: Array<string | null>;\n  startsWith?: string;\n  nstartsWith?: string;\n  endsWith?: string;\n  nendsWith?: string;\n}\n\nexport interface IBooleanOperationFilterInput {\n  eq?: boolean;\n  neq?: boolean;\n}\n\nexport interface IComparableNullableOfGuidOperationFilterInput {\n  eq?: IUUID;\n  neq?: IUUID;\n  in?: Array<IUUID | null>;\n  nin?: Array<IUUID | null>;\n  gt?: IUUID;\n  ngt?: IUUID;\n  gte?: IUUID;\n  ngte?: IUUID;\n  lt?: IUUID;\n  nlt?: IUUID;\n  lte?: IUUID;\n  nlte?: IUUID;\n}\n\nexport interface IIndustryFilterInput {\n  and?: Array<IIndustryFilterInput>;\n  or?: Array<IIndustryFilterInput>;\n  name?: IStringOperationFilterInput;\n  slug?: IStringOperationFilterInput;\n  projects?: IListFilterInputTypeOfProjectFilterInput;\n  companies?: IListFilterInputTypeOfCompanyFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfProjectFilterInput {\n  all?: IProjectFilterInput;\n  none?: IProjectFilterInput;\n  some?: IProjectFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfCompanyFilterInput {\n  all?: ICompanyFilterInput;\n  none?: ICompanyFilterInput;\n  some?: ICompanyFilterInput;\n  any?: boolean;\n}\n\nexport interface ICompanyFilterInput {\n  and?: Array<ICompanyFilterInput>;\n  or?: Array<ICompanyFilterInput>;\n  name?: IStringOperationFilterInput;\n  numberEmployees?: IComparableInt32OperationFilterInput;\n  countryId?: IComparableGuidOperationFilterInput;\n  country?: ICountryFilterInput;\n  photo?: IStringOperationFilterInput;\n  tagLine?: IStringOperationFilterInput;\n  industryId?: IComparableNullableOfGuidOperationFilterInput;\n  industry?: IIndustryFilterInput;\n  memberCompanies?: IListFilterInputTypeOfMemberCompanyFilterInput;\n  projects?: IListFilterInputTypeOfProjectFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IComparableInt32OperationFilterInput {\n  eq?: number;\n  neq?: number;\n  in?: Array<number>;\n  nin?: Array<number>;\n  gt?: number;\n  ngt?: number;\n  gte?: number;\n  ngte?: number;\n  lt?: number;\n  nlt?: number;\n  lte?: number;\n  nlte?: number;\n}\n\nexport interface ICountryFilterInput {\n  and?: Array<ICountryFilterInput>;\n  or?: Array<ICountryFilterInput>;\n  name?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  phoneCode?: IStringOperationFilterInput;\n  currencyId?: IComparableGuidOperationFilterInput;\n  currency?: ICurrencyFilterInput;\n  profile?: IListFilterInputTypeOfProfileFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICurrencyFilterInput {\n  and?: Array<ICurrencyFilterInput>;\n  or?: Array<ICurrencyFilterInput>;\n  name?: IStringOperationFilterInput;\n  symbol?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  exchangeRate?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IComparableDateTimeOperationFilterInput {\n  eq?: IDateTime;\n  neq?: IDateTime;\n  in?: Array<IDateTime>;\n  nin?: Array<IDateTime>;\n  gt?: IDateTime;\n  ngt?: IDateTime;\n  gte?: IDateTime;\n  ngte?: IDateTime;\n  lt?: IDateTime;\n  nlt?: IDateTime;\n  lte?: IDateTime;\n  nlte?: IDateTime;\n}\n\n/**\n * The `DateTime` scalar represents an ISO-8601 compliant date time type.\n */\nexport type IDateTime = any;\n\nexport interface IListFilterInputTypeOfProfileFilterInput {\n  all?: IProfileFilterInput;\n  none?: IProfileFilterInput;\n  some?: IProfileFilterInput;\n  any?: boolean;\n}\n\nexport interface IProfileFilterInput {\n  and?: Array<IProfileFilterInput>;\n  or?: Array<IProfileFilterInput>;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  postalCode?: IStringOperationFilterInput;\n  address?: IStringOperationFilterInput;\n  town?: IStringOperationFilterInput;\n  city?: IStringOperationFilterInput;\n  colony?: IStringOperationFilterInput;\n  street?: IStringOperationFilterInput;\n  houseNumber?: IStringOperationFilterInput;\n  periodInvoice?: INullableOfPeriodInvoiceOperationFilterInput;\n  billingForm?: INullableOfBillingFormOperationFilterInput;\n  paymentTerm?: INullableOfPaymentTermOperationFilterInput;\n  dialCode?: IStringOperationFilterInput;\n  fullName?: IStringOperationFilterInput;\n  photo?: IStringOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  countryId?: IComparableGuidOperationFilterInput;\n  country?: ICountryFilterInput;\n  phone?: IStringOperationFilterInput;\n  cURP?: IStringOperationFilterInput;\n  rFC?: IStringOperationFilterInput;\n  nSS?: IStringOperationFilterInput;\n  infonavitCredit?: IStringOperationFilterInput;\n  nationality?: IStringOperationFilterInput;\n  age?: IComparableInt32OperationFilterInput;\n  gender?: INullableOfGenderOperationFilterInput;\n  dateOfBirth?: IComparableNullableOfDateTimeOperationFilterInput;\n  maritalStatus?: INullableOfMaritalStatusOperationFilterInput;\n  biography?: IStringOperationFilterInput;\n  siteLogo?: IStringOperationFilterInput;\n  siteUrl?: IStringOperationFilterInput;\n  quatorProfileId?: IComparableNullableOfGuidOperationFilterInput;\n  state?: IStringOperationFilterInput;\n  institution?: IStringOperationFilterInput;\n  hospital?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfPeriodInvoiceOperationFilterInput {\n  eq?: IPeriodInvoice;\n  neq?: IPeriodInvoice;\n  in?: Array<IPeriodInvoice | null>;\n  nin?: Array<IPeriodInvoice | null>;\n}\n\nexport const enum IPeriodInvoice {\n  DAILY = 'DAILY',\n  WEEKLY = 'WEEKLY',\n  TWO_WEEKS = 'TWO_WEEKS',\n  MONTHLY = 'MONTHLY'\n}\n\nexport interface INullableOfBillingFormOperationFilterInput {\n  eq?: IBillingForm;\n  neq?: IBillingForm;\n  in?: Array<IBillingForm | null>;\n  nin?: Array<IBillingForm | null>;\n}\n\nexport const enum IBillingForm {\n  CERTIFICATE = 'CERTIFICATE',\n  GLOBAL = 'GLOBAL'\n}\n\nexport interface INullableOfPaymentTermOperationFilterInput {\n  eq?: IPaymentTerm;\n  neq?: IPaymentTerm;\n  in?: Array<IPaymentTerm | null>;\n  nin?: Array<IPaymentTerm | null>;\n}\n\nexport const enum IPaymentTerm {\n  CASH_PAYMENT = 'CASH_PAYMENT',\n  PREPAID = 'PREPAID',\n  PAYMENT_POSTPONED = 'PAYMENT_POSTPONED',\n  CREDIT = 'CREDIT'\n}\n\nexport interface IMemberFilterInput {\n  and?: Array<IMemberFilterInput>;\n  or?: Array<IMemberFilterInput>;\n  username?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  recoverToken?: IStringOperationFilterInput;\n  recoverRegister?: IComparableDateTimeOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  firstTime?: IBooleanOperationFilterInput;\n  loginCount?: IComparableInt32OperationFilterInput;\n  rFC?: IStringOperationFilterInput;\n  businessName?: IStringOperationFilterInput;\n  useBilling?: IBooleanOperationFilterInput;\n  socialReason?: IStringOperationFilterInput;\n  adminCode?: IStringOperationFilterInput;\n  canifarmaQRCodeOne?: IStringOperationFilterInput;\n  canifarmaQRCodeTwo?: IStringOperationFilterInput;\n  consecutive?: IComparableNullableOfInt32OperationFilterInput;\n  businessId?: IComparableNullableOfGuidOperationFilterInput;\n  memberCompanies?: IListFilterInputTypeOfMemberCompanyFilterInput;\n  memberRoles?: IListFilterInputTypeOfMemberRoleFilterInput;\n  memberProjects?: IListFilterInputTypeOfMemberProjectFilterInput;\n  profile?: IProfileFilterInput;\n  memberStream?: IMemberStreamFilterInput;\n  lastLogin?: IComparableNullableOfDateTimeOperationFilterInput;\n  groups?: IListFilterInputTypeOfGroupFilterInput;\n  taxonomies?: IListFilterInputTypeOfMemberTaxonomyFilterInput;\n  healthInsurance?: IHealthInsuranceFilterInput;\n  companyData?: IEnterpriseDataFilterInput;\n  billingData?: IBillingDataFilterInput;\n  sells?: IComparableNullableOfInt32OperationFilterInput;\n  sellsList?: IListFilterInputTypeOfSellFilterInput;\n  sellsProspectList?: IListFilterInputTypeOfSellFilterInput;\n  sellersSellList?: IListFilterInputTypeOfSellFilterInput;\n  memberRelations?: IListFilterInputTypeOfMemberRelationFilterInput;\n  memberBusinesses?: IListFilterInputTypeOfMemberBusinessFilterInput;\n  slugs?: IListStringOperationFilterInput;\n  memberIndustryId?: IComparableNullableOfGuidOperationFilterInput;\n  memberIndustry?: IMemberIndustryFilterInput;\n  branchOfficeIds?: IListComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IComparableNullableOfInt32OperationFilterInput {\n  eq?: number;\n  neq?: number;\n  in?: Array<number | null>;\n  nin?: Array<number | null>;\n  gt?: number;\n  ngt?: number;\n  gte?: number;\n  ngte?: number;\n  lt?: number;\n  nlt?: number;\n  lte?: number;\n  nlte?: number;\n}\n\nexport interface IListFilterInputTypeOfMemberCompanyFilterInput {\n  all?: IMemberCompanyFilterInput;\n  none?: IMemberCompanyFilterInput;\n  some?: IMemberCompanyFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberCompanyFilterInput {\n  and?: Array<IMemberCompanyFilterInput>;\n  or?: Array<IMemberCompanyFilterInput>;\n  companyId?: IComparableGuidOperationFilterInput;\n  company?: ICompanyFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  isDefault?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfMemberRoleFilterInput {\n  all?: IMemberRoleFilterInput;\n  none?: IMemberRoleFilterInput;\n  some?: IMemberRoleFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberRoleFilterInput {\n  and?: Array<IMemberRoleFilterInput>;\n  or?: Array<IMemberRoleFilterInput>;\n  companyId?: IComparableGuidOperationFilterInput;\n  company?: ICompanyFilterInput;\n  roleId?: IComparableGuidOperationFilterInput;\n  role?: IRoleFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IRoleFilterInput {\n  and?: Array<IRoleFilterInput>;\n  or?: Array<IRoleFilterInput>;\n  name?: IStringOperationFilterInput;\n  codeName?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  memberRoles?: IListFilterInputTypeOfMemberRoleFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfMemberProjectFilterInput {\n  all?: IMemberProjectFilterInput;\n  none?: IMemberProjectFilterInput;\n  some?: IMemberProjectFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberProjectFilterInput {\n  and?: Array<IMemberProjectFilterInput>;\n  or?: Array<IMemberProjectFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  project?: IProjectFilterInput;\n  memberProjectRoleProject?: IMemberProjectRoleProjectFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMemberProjectRoleProjectFilterInput {\n  and?: Array<IMemberProjectRoleProjectFilterInput>;\n  or?: Array<IMemberProjectRoleProjectFilterInput>;\n  memberProjectId?: IComparableGuidOperationFilterInput;\n  memberProject?: IMemberProjectFilterInput;\n  projectRoleId?: IComparableGuidOperationFilterInput;\n  projectRole?: IProjectRoleFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProjectRoleFilterInput {\n  and?: Array<IProjectRoleFilterInput>;\n  or?: Array<IProjectRoleFilterInput>;\n  name?: IStringOperationFilterInput;\n  codeName?: IStringOperationFilterInput;\n  label?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  permission?: IPermissionFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  project?: IProjectFilterInput;\n  viewManagers?: IListFilterInputTypeOfViewManagerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPermissionFilterInput {\n  and?: Array<IPermissionFilterInput>;\n  or?: Array<IPermissionFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  project?: IProjectFilterInput;\n  projectRoleId?: IComparableGuidOperationFilterInput;\n  projectRole?: IProjectRoleFilterInput;\n  rules?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfViewManagerFilterInput {\n  all?: IViewManagerFilterInput;\n  none?: IViewManagerFilterInput;\n  some?: IViewManagerFilterInput;\n  any?: boolean;\n}\n\nexport interface IViewManagerFilterInput {\n  and?: Array<IViewManagerFilterInput>;\n  or?: Array<IViewManagerFilterInput>;\n  pageManagerId?: IComparableGuidOperationFilterInput;\n  pageManager?: IPageManagerFilterInput;\n  name?: IStringOperationFilterInput;\n  default?: IBooleanOperationFilterInput;\n  config?: IStringOperationFilterInput;\n  projectRoleId?: IComparableNullableOfGuidOperationFilterInput;\n  projectRole?: IProjectRoleFilterInput;\n  viewColumns?: IListFilterInputTypeOfViewColumnFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPageManagerFilterInput {\n  and?: Array<IPageManagerFilterInput>;\n  or?: Array<IPageManagerFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  project?: IProjectFilterInput;\n  pageName?: IStringOperationFilterInput;\n  config?: IStringOperationFilterInput;\n  viewManagers?: IListFilterInputTypeOfViewManagerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfViewColumnFilterInput {\n  all?: IViewColumnFilterInput;\n  none?: IViewColumnFilterInput;\n  some?: IViewColumnFilterInput;\n  any?: boolean;\n}\n\nexport interface IViewColumnFilterInput {\n  and?: Array<IViewColumnFilterInput>;\n  or?: Array<IViewColumnFilterInput>;\n  viewManagerId?: IComparableGuidOperationFilterInput;\n  viewManager?: IViewManagerFilterInput;\n  isDefault?: IBooleanOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  config?: IStringOperationFilterInput;\n  viewBlockColumns?: IListFilterInputTypeOfViewBlockColumnFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfViewBlockColumnFilterInput {\n  all?: IViewBlockColumnFilterInput;\n  none?: IViewBlockColumnFilterInput;\n  some?: IViewBlockColumnFilterInput;\n  any?: boolean;\n}\n\nexport interface IViewBlockColumnFilterInput {\n  and?: Array<IViewBlockColumnFilterInput>;\n  or?: Array<IViewBlockColumnFilterInput>;\n  keyName?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  config?: IStringOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  viewColumnId?: IComparableGuidOperationFilterInput;\n  viewColumn?: IViewColumnFilterInput;\n  columnTabId?: IComparableNullableOfGuidOperationFilterInput;\n  columnTab?: IColumnTabFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IColumnTabFilterInput {\n  and?: Array<IColumnTabFilterInput>;\n  or?: Array<IColumnTabFilterInput>;\n  isDefault?: IBooleanOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  config?: IStringOperationFilterInput;\n  columnId?: IComparableGuidOperationFilterInput;\n  viewColumn?: IViewColumnFilterInput;\n  blockColumns?: IListFilterInputTypeOfViewBlockColumnFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMemberStreamFilterInput {\n  and?: Array<IMemberStreamFilterInput>;\n  or?: Array<IMemberStreamFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  userName?: IStringOperationFilterInput;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  image?: IStringOperationFilterInput;\n  isOnline?: IBooleanOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IComparableNullableOfDateTimeOperationFilterInput {\n  eq?: IDateTime;\n  neq?: IDateTime;\n  in?: Array<IDateTime | null>;\n  nin?: Array<IDateTime | null>;\n  gt?: IDateTime;\n  ngt?: IDateTime;\n  gte?: IDateTime;\n  ngte?: IDateTime;\n  lt?: IDateTime;\n  nlt?: IDateTime;\n  lte?: IDateTime;\n  nlte?: IDateTime;\n}\n\nexport interface IListFilterInputTypeOfGroupFilterInput {\n  all?: IGroupFilterInput;\n  none?: IGroupFilterInput;\n  some?: IGroupFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfMemberTaxonomyFilterInput {\n  all?: IMemberTaxonomyFilterInput;\n  none?: IMemberTaxonomyFilterInput;\n  some?: IMemberTaxonomyFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberTaxonomyFilterInput {\n  and?: Array<IMemberTaxonomyFilterInput>;\n  or?: Array<IMemberTaxonomyFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  taxonomyId?: IComparableGuidOperationFilterInput;\n}\n\nexport interface IHealthInsuranceFilterInput {\n  and?: Array<IHealthInsuranceFilterInput>;\n  or?: Array<IHealthInsuranceFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  nSS?: IStringOperationFilterInput;\n  insuranceMajorMedicalExpenses?: IStringOperationFilterInput;\n  typeInsurance?: ITypeInsuranceOperationFilterInput;\n  insuranceCarrier?: IStringOperationFilterInput;\n  policyNumber?: IStringOperationFilterInput;\n  dischargeDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  expirationDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ITypeInsuranceOperationFilterInput {\n  eq?: ITypeInsurance;\n  neq?: ITypeInsurance;\n  in?: Array<ITypeInsurance>;\n  nin?: Array<ITypeInsurance>;\n}\n\nexport const enum ITypeInsurance {\n  MEDICAL_EXPENSES = 'MEDICAL_EXPENSES',\n  LIFE = 'LIFE',\n  HOME = 'HOME',\n  CARS = 'CARS',\n  OLDER = 'OLDER',\n  YOUNGER = 'YOUNGER',\n  DENTAL = 'DENTAL'\n}\n\nexport interface IEnterpriseDataFilterInput {\n  and?: Array<IEnterpriseDataFilterInput>;\n  or?: Array<IEnterpriseDataFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  companyName?: IStringOperationFilterInput;\n  companyCategory?: IStringOperationFilterInput;\n  sucursal?: IStringOperationFilterInput;\n  phones?: IStringOperationFilterInput;\n  webSite?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBillingDataFilterInput {\n  and?: Array<IBillingDataFilterInput>;\n  or?: Array<IBillingDataFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  person?: IPersonOperationFilterInput;\n  businessName?: IStringOperationFilterInput;\n  rFC?: IStringOperationFilterInput;\n  useCDFI?: INullableOfUseCDFIOperationFilterInput;\n  paymentMethod?: INullableOfPaymentMethodOperationFilterInput;\n  paymentTerm?: INullableOfPaymentTermOperationFilterInput;\n  taxSituation?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPersonOperationFilterInput {\n  eq?: IPerson;\n  neq?: IPerson;\n  in?: Array<IPerson>;\n  nin?: Array<IPerson>;\n}\n\nexport const enum IPerson {\n  NATURAL = 'NATURAL',\n  LEGAL = 'LEGAL'\n}\n\nexport interface INullableOfUseCDFIOperationFilterInput {\n  eq?: IUseCDFI;\n  neq?: IUseCDFI;\n  in?: Array<IUseCDFI | null>;\n  nin?: Array<IUseCDFI | null>;\n}\n\nexport const enum IUseCDFI {\n  PROOF_OF_INCOME = 'PROOF_OF_INCOME',\n  DISBURSEMENT_VOUCHER = 'DISBURSEMENT_VOUCHER',\n  PROOF_OF_TRANSFER = 'PROOF_OF_TRANSFER',\n  PAYROLL_RECEIPT = 'PAYROLL_RECEIPT',\n  PROOF_OF_RECEIPT_OF_PAYMENTS = 'PROOF_OF_RECEIPT_OF_PAYMENTS',\n  PROOF_OF_WITHHOLDINGS_AND_PAYMENT_INFORMATION = 'PROOF_OF_WITHHOLDINGS_AND_PAYMENT_INFORMATION'\n}\n\nexport interface INullableOfPaymentMethodOperationFilterInput {\n  eq?: Iauth_PaymentMethod;\n  neq?: Iauth_PaymentMethod;\n  in?: Array<Iauth_PaymentMethod | null>;\n  nin?: Array<Iauth_PaymentMethod | null>;\n}\n\nexport const enum Iauth_PaymentMethod {\n  CASH = 'CASH',\n  NOMINAL_CHECK = 'NOMINAL_CHECK',\n  TRANSFER = 'TRANSFER',\n  ELECTRONIC_FUNDS = 'ELECTRONIC_FUNDS',\n  TO_DEFINE = 'TO_DEFINE'\n}\n\nexport interface IListFilterInputTypeOfSellFilterInput {\n  all?: ISellFilterInput;\n  none?: ISellFilterInput;\n  some?: ISellFilterInput;\n  any?: boolean;\n}\n\nexport interface ISellFilterInput {\n  and?: Array<ISellFilterInput>;\n  or?: Array<ISellFilterInput>;\n  nominatorId?: IComparableNullableOfGuidOperationFilterInput;\n  nominator?: IMemberFilterInput;\n  prospectId?: IComparableNullableOfGuidOperationFilterInput;\n  prospect?: IMemberFilterInput;\n  sellerId?: IComparableNullableOfGuidOperationFilterInput;\n  seller?: IMemberFilterInput;\n  memberRelationId?: IComparableNullableOfGuidOperationFilterInput;\n  memberRelation?: IMemberRelationFilterInput;\n  concept?: IStringOperationFilterInput;\n  amount?: IComparableDecimalOperationFilterInput;\n  status?: ISellStatusOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  walletTransactionId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMemberRelationFilterInput {\n  and?: Array<IMemberRelationFilterInput>;\n  or?: Array<IMemberRelationFilterInput>;\n  status?: INullableOfEnumMemberRelationStatusOperationFilterInput;\n  parentNodeId?: IComparableGuidOperationFilterInput;\n  parentNode?: IMemberFilterInput;\n  childNodeId?: IComparableGuidOperationFilterInput;\n  childNode?: IMemberFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  parentRelationId?: IComparableNullableOfGuidOperationFilterInput;\n  parentRelation?: IMemberRelationFilterInput;\n  memberRelations?: IListFilterInputTypeOfMemberRelationFilterInput;\n  sells?: IListFilterInputTypeOfSellFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumMemberRelationStatusOperationFilterInput {\n  eq?: IEnumMemberRelationStatus;\n  neq?: IEnumMemberRelationStatus;\n  in?: Array<IEnumMemberRelationStatus | null>;\n  nin?: Array<IEnumMemberRelationStatus | null>;\n}\n\nexport const enum IEnumMemberRelationStatus {\n  ACTIVE = 'ACTIVE',\n  POTENTIAL = 'POTENTIAL',\n  INTERESTED = 'INTERESTED',\n  CLOSED = 'CLOSED'\n}\n\nexport interface IListFilterInputTypeOfMemberRelationFilterInput {\n  all?: IMemberRelationFilterInput;\n  none?: IMemberRelationFilterInput;\n  some?: IMemberRelationFilterInput;\n  any?: boolean;\n}\n\nexport interface IComparableDecimalOperationFilterInput {\n  eq?: IDecimal;\n  neq?: IDecimal;\n  in?: Array<IDecimal>;\n  nin?: Array<IDecimal>;\n  gt?: IDecimal;\n  ngt?: IDecimal;\n  gte?: IDecimal;\n  ngte?: IDecimal;\n  lt?: IDecimal;\n  nlt?: IDecimal;\n  lte?: IDecimal;\n  nlte?: IDecimal;\n}\n\n/**\n * The built-in `Decimal` scalar type.\n */\nexport type IDecimal = any;\n\nexport interface ISellStatusOperationFilterInput {\n  eq?: ISellStatus;\n  neq?: ISellStatus;\n  in?: Array<ISellStatus>;\n  nin?: Array<ISellStatus>;\n}\n\nexport const enum ISellStatus {\n  IN_PROCESS = 'IN_PROCESS',\n  DONE = 'DONE',\n  CANCELLED = 'CANCELLED'\n}\n\nexport interface IListFilterInputTypeOfMemberBusinessFilterInput {\n  all?: IMemberBusinessFilterInput;\n  none?: IMemberBusinessFilterInput;\n  some?: IMemberBusinessFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberBusinessFilterInput {\n  and?: Array<IMemberBusinessFilterInput>;\n  or?: Array<IMemberBusinessFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n  businessId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListStringOperationFilterInput {\n  all?: IStringOperationFilterInput;\n  none?: IStringOperationFilterInput;\n  some?: IStringOperationFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberIndustryFilterInput {\n  and?: Array<IMemberIndustryFilterInput>;\n  or?: Array<IMemberIndustryFilterInput>;\n  name?: IStringOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  members?: IListFilterInputTypeOfMemberFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfMemberFilterInput {\n  all?: IMemberFilterInput;\n  none?: IMemberFilterInput;\n  some?: IMemberFilterInput;\n  any?: boolean;\n}\n\nexport interface IListComparableGuidOperationFilterInput {\n  all?: IComparableGuidOperationFilterInput;\n  none?: IComparableGuidOperationFilterInput;\n  some?: IComparableGuidOperationFilterInput;\n  any?: boolean;\n}\n\nexport interface INullableOfGenderOperationFilterInput {\n  eq?: IGender;\n  neq?: IGender;\n  in?: Array<IGender | null>;\n  nin?: Array<IGender | null>;\n}\n\nexport const enum IGender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n  UNKNOWN = 'UNKNOWN'\n}\n\nexport interface INullableOfMaritalStatusOperationFilterInput {\n  eq?: IMaritalStatus;\n  neq?: IMaritalStatus;\n  in?: Array<IMaritalStatus | null>;\n  nin?: Array<IMaritalStatus | null>;\n}\n\nexport const enum IMaritalStatus {\n  DIVORCED = 'DIVORCED',\n  MARRIED = 'MARRIED',\n  SINGLE = 'SINGLE',\n  SEPARATED = 'SEPARATED',\n  WIDOWED = 'WIDOWED',\n  UNKNOWN = 'UNKNOWN'\n}\n\nexport interface IListFilterInputTypeOfProjectRoleFilterInput {\n  all?: IProjectRoleFilterInput;\n  none?: IProjectRoleFilterInput;\n  some?: IProjectRoleFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfProjectSocialNetworkFilterInput {\n  all?: IProjectSocialNetworkFilterInput;\n  none?: IProjectSocialNetworkFilterInput;\n  some?: IProjectSocialNetworkFilterInput;\n  any?: boolean;\n}\n\nexport interface IProjectSocialNetworkFilterInput {\n  and?: Array<IProjectSocialNetworkFilterInput>;\n  or?: Array<IProjectSocialNetworkFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  project?: IProjectFilterInput;\n  socialNetworkType?: ISocialNetworkTypeOperationFilterInput;\n  value?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ISocialNetworkTypeOperationFilterInput {\n  eq?: ISocialNetworkType;\n  neq?: ISocialNetworkType;\n  in?: Array<ISocialNetworkType>;\n  nin?: Array<ISocialNetworkType>;\n}\n\nexport const enum ISocialNetworkType {\n  FACEBOOK = 'FACEBOOK',\n  TWITTER = 'TWITTER',\n  INSTAGRAM = 'INSTAGRAM'\n}\n\nexport interface INicheFilterInput {\n  and?: Array<INicheFilterInput>;\n  or?: Array<INicheFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  nicheServices?: IListFilterInputTypeOfNicheServiceFilterInput;\n  projects?: IListFilterInputTypeOfProjectFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfNicheServiceFilterInput {\n  all?: INicheServiceFilterInput;\n  none?: INicheServiceFilterInput;\n  some?: INicheServiceFilterInput;\n  any?: boolean;\n}\n\nexport interface INicheServiceFilterInput {\n  and?: Array<INicheServiceFilterInput>;\n  or?: Array<INicheServiceFilterInput>;\n  nicheId?: IComparableGuidOperationFilterInput;\n  niche?: INicheFilterInput;\n  codeName?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfGroupTaxonomyFilterInput {\n  all?: IGroupTaxonomyFilterInput;\n  none?: IGroupTaxonomyFilterInput;\n  some?: IGroupTaxonomyFilterInput;\n  any?: boolean;\n}\n\nexport interface IGroupTaxonomyFilterInput {\n  and?: Array<IGroupTaxonomyFilterInput>;\n  or?: Array<IGroupTaxonomyFilterInput>;\n  taxonomyId?: IComparableGuidOperationFilterInput;\n  groupId?: IComparableGuidOperationFilterInput;\n  group?: IGroupFilterInput;\n}\n\nexport interface IGroupSortInput {\n  projectId?: ISortEnumType;\n  project?: IProjectSortInput;\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport const enum ISortEnumType {\n  ASC = 'ASC',\n  DESC = 'DESC'\n}\n\nexport interface IProjectSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  logo?: ISortEnumType;\n  tagLine?: ISortEnumType;\n  isAPublicPlatform?: ISortEnumType;\n  isReady?: ISortEnumType;\n  url?: ISortEnumType;\n  onProduction?: ISortEnumType;\n  industryId?: ISortEnumType;\n  industry?: IIndustrySortInput;\n  companyId?: ISortEnumType;\n  company?: ICompanySortInput;\n  nicheId?: ISortEnumType;\n  niche?: INicheSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IIndustrySortInput {\n  name?: ISortEnumType;\n  slug?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICompanySortInput {\n  name?: ISortEnumType;\n  numberEmployees?: ISortEnumType;\n  countryId?: ISortEnumType;\n  country?: ICountrySortInput;\n  photo?: ISortEnumType;\n  tagLine?: ISortEnumType;\n  industryId?: ISortEnumType;\n  industry?: IIndustrySortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICountrySortInput {\n  name?: ISortEnumType;\n  code?: ISortEnumType;\n  phoneCode?: ISortEnumType;\n  currencyId?: ISortEnumType;\n  currency?: ICurrencySortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICurrencySortInput {\n  name?: ISortEnumType;\n  symbol?: ISortEnumType;\n  code?: ISortEnumType;\n  exchangeRate?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface INicheSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IGroupCollectionSegment {\n  items?: Array<IGroup>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IGroup {\n  projectId: IUUID;\n  project: IProject;\n  name: string;\n  description: string;\n  members?: Array<IMember>;\n  groupTaxonomies?: Array<IGroupTaxonomy>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProject {\n  name: string;\n  description: string;\n  logo: string;\n  tagLine: string;\n  isAPublicPlatform: boolean;\n  isReady: boolean;\n  url: string;\n  onProduction: boolean;\n  industryId?: IUUID;\n  industry?: IIndustry;\n  companyId: IUUID;\n  company: ICompany;\n  projectRoles: Array<IProjectRole>;\n  memberProjects: Array<IMemberProject>;\n  projectSocialNetworks: Array<IProjectSocialNetwork>;\n  groups: Array<IGroup>;\n  nicheId?: IUUID;\n  niche?: INiche;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  shop?: IShop;\n  services?: Array<IServiceHelper | null>;\n  site?: Array<IConfiguration | null>;\n}\n\nexport interface IIndustry {\n  name: string;\n  slug: string;\n  projects: Array<IProject>;\n  companies: Array<ICompany>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICompany {\n  name: string;\n  numberEmployees: number;\n  countryId: IUUID;\n  country: ICountry;\n  photo: string;\n  tagLine: string;\n  industryId?: IUUID;\n  industry: IIndustry;\n  memberCompanies: Array<IMemberCompany>;\n  projects: Array<IProject>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICountry {\n  name: string;\n  code: string;\n  phoneCode?: string;\n  currencyId: IUUID;\n  currency: ICurrency;\n  profile: Array<IProfile>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICurrency {\n  name: string;\n  symbol: string;\n  code: string;\n  exchangeRate: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProfile {\n  firstName: string;\n  lastName: string;\n  postalCode?: string;\n  address?: string;\n  town?: string;\n  city?: string;\n  colony?: string;\n  street?: string;\n  houseNumber?: string;\n  periodInvoice?: IPeriodInvoice;\n  billingForm?: IBillingForm;\n  paymentTerm?: IPaymentTerm;\n  dialCode?: string;\n  fullName?: string;\n  photo: string;\n  memberId: IUUID;\n  member: IMember;\n  countryId: IUUID;\n  country: ICountry;\n  phone?: string;\n  cURP?: string;\n  rFC?: string;\n  nSS?: string;\n  infonavitCredit?: string;\n  nationality?: string;\n  age: number;\n  gender?: IGender;\n  dateOfBirth?: IDateTime;\n  maritalStatus?: IMaritalStatus;\n  biography?: string;\n  siteLogo?: string;\n  siteUrl?: string;\n  quatorProfileId?: IUUID;\n  state?: string;\n  institution?: string;\n  hospital?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMember {\n  username?: string;\n  email: string;\n  recoverToken: string;\n  recoverRegister: IDateTime;\n  isActive: boolean;\n  firstTime: boolean;\n  loginCount: number;\n  rFC: string;\n  businessName: string;\n  useBilling: boolean;\n  socialReason: string;\n  adminCode?: string;\n  canifarmaQRCodeOne?: string;\n  canifarmaQRCodeTwo?: string;\n  consecutive?: number;\n  businessId?: IUUID;\n  memberCompanies?: Array<IMemberCompany>;\n  memberRoles?: Array<IMemberRole>;\n  memberProjects?: Array<IMemberProject>;\n  profile?: IProfile;\n  memberStream?: IMemberStream;\n  lastLogin?: IDateTime;\n  groups?: Array<IGroup>;\n  taxonomies?: Array<IMemberTaxonomy>;\n  healthInsurance?: IHealthInsurance;\n  companyData?: IEnterpriseData;\n  billingData?: IBillingData;\n  sells?: number;\n  sellsList?: Array<ISell>;\n  sellsProspectList?: Array<ISell>;\n  sellersSellList?: Array<ISell>;\n  memberRelations?: Array<IMemberRelation>;\n  memberBusinesses?: Array<IMemberBusiness>;\n  slugs?: Array<string>;\n  memberIndustryId?: IUUID;\n  memberIndustry?: IMemberIndustry;\n  branchOfficeIds?: Array<IUUID>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  addresses?: Array<IAddress | null>;\n  hiring?: Array<IHiring | null>;\n  shift?: Array<IShift | null>;\n  resourceQuotes?: Array<IResourceQuote | null>;\n  collaborator?: Array<ICollaborator | null>;\n  business?: IBusiness;\n  projectPlanSuscriptions?: Array<IProjectPlanSubscription | null>;\n  serviceMember?: Array<IServiceMember | null>;\n  accountKeys?: Array<IAccountKey | null>;\n  paymentMethod?: boolean;\n  listEventDetails?: Array<IEventDetail | null>;\n  listFisicExams?: Array<IFisicExam | null>;\n  listMedicalBackgrounds?: Array<IMedicalBackground | null>;\n  listMedicRecipes?: Array<IMedicRecipe | null>;\n  listPatientNotes?: Array<IPacientNote | null>;\n  listVitalSigns?: Array<IVitalSign | null>;\n  listVaccines?: Array<IVaccine | null>;\n  memberBoards?: Array<IMemberBoard | null>;\n  memberSpaces?: Array<IMemberSpace | null>;\n  files?: Array<IFile | null>;\n  folders?: Array<IFolder | null>;\n  sharedFiles?: Array<ISharedFile | null>;\n  sharedFolders?: Array<ISharedFolder | null>;\n  memberWallets?: Array<IMemberWallet | null>;\n  devices?: Array<IDevice | null>;\n  notifications?: Array<INotification | null>;\n}\n\nexport interface IMemberCompany {\n  companyId: IUUID;\n  company: ICompany;\n  memberId: IUUID;\n  member: IMember;\n  isDefault: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberRole {\n  companyId: IUUID;\n  company: ICompany;\n  roleId: IUUID;\n  role: IRole;\n  memberId: IUUID;\n  member: IMember;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IRole {\n  name: string;\n  codeName: string;\n  description: string;\n  memberRoles: Array<IMemberRole>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberProject {\n  memberId: IUUID;\n  member: IMember;\n  projectId: IUUID;\n  project: IProject;\n  memberProjectRoleProject?: IMemberProjectRoleProject;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberProjectRoleProject {\n  memberProjectId: IUUID;\n  memberProject: IMemberProject;\n  projectRoleId: IUUID;\n  projectRole: IProjectRole;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProjectRole {\n  name: string;\n  codeName: string;\n  label?: string;\n  description?: string;\n  isActive: boolean;\n  permission?: IPermission;\n  projectId: IUUID;\n  project: IProject;\n  viewManagers?: Array<IViewManager>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPermission {\n  projectId: IUUID;\n  project: IProject;\n  projectRoleId: IUUID;\n  projectRole: IProjectRole;\n  rules: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IViewManager {\n  pageManagerId: IUUID;\n  pageManager: IPageManager;\n  name: string;\n  default: boolean;\n  config?: string;\n  projectRoleId?: IUUID;\n  projectRole?: IProjectRole;\n  viewColumns?: Array<IViewColumn>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPageManager {\n  projectId: IUUID;\n  project: IProject;\n  pageName: string;\n  config?: string;\n  viewManagers?: Array<IViewManager>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IViewColumn {\n  viewManagerId: IUUID;\n  viewManager?: IViewManager;\n  isDefault: boolean;\n  position: number;\n  config?: string;\n  viewBlockColumns?: Array<IViewBlockColumn>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IViewBlockColumnSortInput {\n  keyName?: ISortEnumType;\n  name?: ISortEnumType;\n  config?: ISortEnumType;\n  position?: ISortEnumType;\n  viewColumnId?: ISortEnumType;\n  viewColumn?: IViewColumnSortInput;\n  columnTabId?: ISortEnumType;\n  columnTab?: IColumnTabSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IViewColumnSortInput {\n  viewManagerId?: ISortEnumType;\n  viewManager?: IViewManagerSortInput;\n  isDefault?: ISortEnumType;\n  position?: ISortEnumType;\n  config?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IViewManagerSortInput {\n  pageManagerId?: ISortEnumType;\n  pageManager?: IPageManagerSortInput;\n  name?: ISortEnumType;\n  default?: ISortEnumType;\n  config?: ISortEnumType;\n  projectRoleId?: ISortEnumType;\n  projectRole?: IProjectRoleSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPageManagerSortInput {\n  projectId?: ISortEnumType;\n  project?: IProjectSortInput;\n  pageName?: ISortEnumType;\n  config?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProjectRoleSortInput {\n  name?: ISortEnumType;\n  codeName?: ISortEnumType;\n  label?: ISortEnumType;\n  description?: ISortEnumType;\n  isActive?: ISortEnumType;\n  permission?: IPermissionSortInput;\n  projectId?: ISortEnumType;\n  project?: IProjectSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPermissionSortInput {\n  projectId?: ISortEnumType;\n  project?: IProjectSortInput;\n  projectRoleId?: ISortEnumType;\n  projectRole?: IProjectRoleSortInput;\n  rules?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IColumnTabSortInput {\n  isDefault?: ISortEnumType;\n  name?: ISortEnumType;\n  position?: ISortEnumType;\n  config?: ISortEnumType;\n  columnId?: ISortEnumType;\n  viewColumn?: IViewColumnSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IViewBlockColumn {\n  keyName: string;\n  name?: string;\n  config?: string;\n  position: number;\n  viewColumnId: IUUID;\n  viewColumn?: IViewColumn;\n  columnTabId?: IUUID;\n  columnTab?: IColumnTab;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IColumnTab {\n  isDefault: boolean;\n  name: string;\n  position: number;\n  config: string;\n  columnId: IUUID;\n  viewColumn?: IViewColumn;\n  blockColumns?: Array<IViewBlockColumn>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberStream {\n  memberId: IUUID;\n  member: IMember;\n  userName?: string;\n  firstName?: string;\n  lastName?: string;\n  image?: string;\n  isOnline: boolean;\n  description?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberTaxonomy {\n  memberId: IUUID;\n  member: IMember;\n  taxonomyId: IUUID;\n}\n\nexport interface IHealthInsurance {\n  memberId: IUUID;\n  member: IMember;\n  nSS: string;\n  insuranceMajorMedicalExpenses?: string;\n  typeInsurance: ITypeInsurance;\n  insuranceCarrier?: string;\n  policyNumber?: string;\n  dischargeDate?: IDateTime;\n  expirationDate?: IDateTime;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IEnterpriseData {\n  memberId: IUUID;\n  member: IMember;\n  companyName: string;\n  companyCategory?: string;\n  sucursal?: string;\n  phones?: string;\n  webSite?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBillingData {\n  memberId: IUUID;\n  member: IMember;\n  person: IPerson;\n  businessName: string;\n  rFC?: string;\n  useCDFI?: IUseCDFI;\n  paymentMethod?: Iauth_PaymentMethod;\n  paymentTerm?: IPaymentTerm;\n  taxSituation?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISell {\n  nominatorId?: IUUID;\n  nominator?: IMember;\n  prospectId?: IUUID;\n  prospect?: IMember;\n  sellerId?: IUUID;\n  seller?: IMember;\n  memberRelationId?: IUUID;\n  memberRelation?: IMemberRelation;\n  concept?: string;\n  amount: IDecimal;\n  status: ISellStatus;\n  description?: string;\n  walletTransactionId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  walletTransaction?: IWalletTransaction;\n}\n\nexport interface IMemberRelation {\n  status?: IEnumMemberRelationStatus;\n  parentNodeId: IUUID;\n  parentNode?: IMember;\n  childNodeId: IUUID;\n  childNode?: IMember;\n  isActive: boolean;\n  parentRelationId?: IUUID;\n  parentRelation?: IMemberRelation;\n  memberRelations?: Array<IMemberRelation>;\n  sells?: Array<ISell>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IWalletTransaction {\n  walletTransactionStatus: Array<IWalletTransactionStatus>;\n  receptor?: IEWallet;\n  eWallet?: IEWallet;\n  service?: IEnumTransactionService;\n  paymentServiceId?: string;\n  paymentServiceToken?: string;\n  amount: IDecimal;\n  detainedAmount: IDecimal;\n  concept: string;\n  description: string;\n  projectWalletKeyId?: IUUID;\n  memberId?: IUUID;\n  eWalletId?: IUUID;\n  receptorId?: IUUID;\n  type: IEnumTransactionType;\n  walletTransactionMember?: IWalletTransactionMemberRelation;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IWalletTransactionStatus {\n  walletTransaction?: IWalletTransaction;\n  status?: IEnumTransactionStatus;\n  description?: string;\n  walletTransactionId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IEnumTransactionStatus {\n  PENDING = 'PENDING',\n  IN_POCESS = 'IN_POCESS',\n  PAID = 'PAID',\n  CANCELED = 'CANCELED'\n}\n\nexport interface IEWallet {\n  balance: IDecimal;\n  detained: IDecimal;\n  eWalletTransactions: Array<IWalletTransaction>;\n  eWalletRetrieves: Array<IWalletTransaction>;\n  memberWallets: Array<IMemberWallet>;\n  projectId: IUUID;\n  principal: boolean;\n  detainedManual: IDecimal;\n  automaticPayment: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberWallet {\n  eWallet?: IEWallet;\n  memberId?: IUUID;\n  eWalletId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport const enum IEnumTransactionService {\n  STRIPE = 'STRIPE',\n  PAYPAL = 'PAYPAL'\n}\n\nexport const enum IEnumTransactionType {\n  RETIREMENT = 'RETIREMENT',\n  DEPOSIT = 'DEPOSIT',\n  PAYMENT = 'PAYMENT'\n}\n\nexport interface IWalletTransactionMemberRelation {\n  walletTransaction?: IWalletTransaction;\n  walletTransactionMemberDetails: Array<IWalletTransactionMemberDetail>;\n  memberRelationId: IUUID;\n  walletTransactionId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IWalletTransactionMemberDetail {\n  walletTransactionMember?: IWalletTransactionMemberRelation;\n  amount: IDecimal;\n  description: string;\n  walletTransactionMemberId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberBusiness {\n  memberId: IUUID;\n  member?: IMember;\n  businessId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberIndustry {\n  name: string;\n  projectId: IUUID;\n  members?: Array<IMember>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IAddress {\n  projectId: IUUID;\n  memberId: IUUID;\n  rFC?: string;\n  businessName?: string;\n  addressType?: string;\n  firstName?: string;\n  lastName?: string;\n  countryName?: string;\n  state?: string;\n  city?: string;\n  subUrb?: string;\n  zipCode?: string;\n  addressLine1: string;\n  addressLine2?: string;\n  phone?: string;\n  number?: string;\n  municipality?: string;\n  addressDetails?: string;\n  isPrincipal: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  invoice?: Array<IInvoice | null>;\n}\n\nexport interface IInvoice {\n  invoiceNumber: string;\n  invoiceStatus: IInvoiceStatus;\n  projectId: IUUID;\n  memberId: IUUID;\n  invoiceDate: IDateTime;\n  observations: string;\n  subTotal: IDecimal;\n  shippingSale: IDecimal;\n  discount: IDecimal;\n  total: IDecimal;\n  addressId: IUUID;\n  details?: Array<IInvoiceDetail>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n  address?: IAddress;\n}\n\nexport const enum IInvoiceStatus {\n  PENDING = 'PENDING',\n  PAID = 'PAID',\n  CANCELLED = 'CANCELLED'\n}\n\nexport interface IInvoiceDetail {\n  invoiceId: IUUID;\n  invoice: IInvoice;\n  productId: IUUID;\n  quantity: number;\n  salePrice: IDecimal;\n  totalPrice: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  product?: IProduct;\n}\n\nexport interface IProduct {\n  projectId: IUUID;\n  memberId: IUUID;\n  title: string;\n  photo: string;\n  slug: string;\n  sku: string;\n  price: IDecimal;\n  offerPrice: IDecimal;\n  stock: number;\n  active: boolean;\n  shippingType: string;\n  shippingPrice: IDecimal;\n  description: string;\n  publishDate: IDateTime;\n  views: number;\n  status: IProductStatus;\n  seoProduct: string;\n  subCategories?: Array<ITaxonomy>;\n  categories?: Array<ITaxonomy>;\n  details?: Array<IProductDetail>;\n  images: Array<IImage>;\n  shopType: IShopType;\n  code?: string;\n  purchasePrice?: number;\n  sellPrice?: number;\n  storeId?: IUUID;\n  store?: IStore;\n  measure?: string;\n  utility?: number;\n  measureType?: string;\n  origin?: string;\n  productType?: IProductType;\n  planId?: IUUID;\n  barcode?: string;\n  brand?: string;\n  family?: string;\n  line?: string;\n  subFamily?: string;\n  key?: string;\n  onStore?: boolean;\n  onCatalog?: boolean;\n  sellMeasure?: string;\n  costType?: string;\n  purchaseMeasure?: string;\n  costingType: ICostingType;\n  productModality?: IProductModality;\n  stockAlertId?: IUUID;\n  stockAlert?: IStockAlert;\n  providers?: Array<IProductProv>;\n  prices?: Array<IProductPrice>;\n  discounts?: Array<IDecimal>;\n  partNumber?: string;\n  fee?: IDecimal;\n  dataSheet?: string;\n  ecommerceTitle?: string;\n  ecommerceDescription?: string;\n  ecommerceInstructions?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  invoiceDetail?: Array<IInvoiceDetail | null>;\n}\n\nexport const enum IProductStatus {\n  DRAFT = 'DRAFT',\n  PUBLISHED = 'PUBLISHED',\n  INACTIVE = 'INACTIVE',\n  PROGRAMMED = 'PROGRAMMED'\n}\n\nexport interface ITaxonomy {\n  projectId: IUUID;\n  name: string;\n  slug: string;\n  description?: string;\n  termGroup: string;\n  photo?: string;\n  tagLine?: string;\n  tagLine2?: string;\n  parentId?: IUUID;\n  parent?: ITaxonomy;\n  subCategories: Array<ITaxonomy>;\n  isPublic: boolean;\n  articles?: Array<IArticle>;\n  groupArticles?: Array<IArticle>;\n  products?: Array<IProduct>;\n  seoTaxonomy?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IArticle {\n  projectId: IUUID;\n  memberId: IUUID;\n  title: string;\n  photo: string;\n  slug: string;\n  resume: string;\n  content: string;\n  active: boolean;\n  views: number;\n  status: IArticleStatus;\n  releaseDate: IDateTime;\n  seoTitle: string;\n  seoDescription: string;\n  seoKeywords: string;\n  structuredMarking: string;\n  imageAlt: string;\n  seoArticle?: string;\n  typeContent?: ITypeContent;\n  embedContent?: string;\n  groupId?: IUUID;\n  group?: ITaxonomy;\n  language?: IArticleLanguage;\n  parentId?: IUUID;\n  parent?: IArticle;\n  variants?: Array<IArticle>;\n  subCategories?: Array<ITaxonomy>;\n  categories?: Array<ITaxonomy>;\n  tags?: Array<ITaxonomy>;\n  surveys: Array<ISurvey>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  author?: string;\n}\n\nexport const enum IArticleStatus {\n  DRAFT = 'DRAFT',\n  PUBLISHED = 'PUBLISHED',\n  PROGRAMMED = 'PROGRAMMED'\n}\n\nexport const enum ITypeContent {\n  ARTICLE = 'ARTICLE',\n  PODCAST = 'PODCAST',\n  VIDEO = 'VIDEO',\n  BENEFITS = 'BENEFITS',\n  PROMOTIONS = 'PROMOTIONS',\n  COMUNICATIONS = 'COMUNICATIONS'\n}\n\nexport const enum IArticleLanguage {\n  ES = 'ES',\n  EN = 'EN',\n  PT = 'PT',\n  ZH = 'ZH',\n  DE = 'DE',\n  FR = 'FR',\n  RU = 'RU'\n}\n\nexport interface ISurvey {\n  title: string;\n  description: string;\n  isActive: boolean;\n  thankYouMessage: string;\n  articles: Array<IArticle>;\n  questions: Array<IQuestion>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuestion {\n  surveyId: IUUID;\n  survey: ISurvey;\n  title: string;\n  type: IQuestionType;\n  image: string;\n  isRequired: boolean;\n  position: number;\n  allowsFileUpload: boolean;\n  options: Array<IOption>;\n  answers?: Array<IAnswer>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IQuestionType {\n  SINGLE = 'SINGLE',\n  OPEN = 'OPEN',\n  MULTIPLE = 'MULTIPLE'\n}\n\nexport interface IOption {\n  questionId: IUUID;\n  question: IQuestion;\n  title: string;\n  position: number;\n  count: number;\n  answers?: Array<IAnswer>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IAnswer {\n  memberId: IUUID;\n  questionId: IUUID;\n  question: IQuestion;\n  optionId?: IUUID;\n  option?: IOption;\n  uploadFile?: string;\n  responseText: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: string;\n}\n\nexport interface IProductDetail {\n  productId: IUUID;\n  product: IProduct;\n  key: string;\n  value: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IImage {\n  projectId: IUUID;\n  original: string;\n  title: string;\n  products: Array<IProduct>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IShopType {\n  IXULABS = 'IXULABS',\n  MERCADOLIBRE = 'MERCADOLIBRE',\n  BODEGA = 'BODEGA'\n}\n\nexport interface IStore {\n  projectId?: IUUID;\n  name: string;\n  branchOfficeId: IUUID;\n  branchOffice?: IBranchOffice;\n  code: string;\n  storeType?: IStoreType;\n  sellerId?: IUUID;\n  stocks?: Array<IStoreStock>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  seller?: IMember;\n}\n\nexport interface IBranchOffice {\n  projectId?: IUUID;\n  isActive: boolean;\n  name: string;\n  countryId: IUUID;\n  state?: string;\n  municipality?: string;\n  email: string;\n  phone: string;\n  postalCode: string;\n  street: string;\n  number: string;\n  managerId?: IUUID;\n  manager?: IManager;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  country?: ICountry;\n}\n\nexport interface IManager {\n  projectId?: IUUID;\n  memberId: IUUID;\n  branchOfficeId: IUUID;\n  branchOffice?: IBranchOffice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IStoreType {\n  MOVIL = 'MOVIL',\n  FIJO = 'FIJO'\n}\n\nexport interface IStoreStock {\n  projectId: IUUID;\n  productId: IUUID;\n  storeId: IUUID;\n  store?: IStore;\n  product?: IProduct;\n  stock: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IProductType {\n  CASH = 'CASH',\n  SUBSCRIPTION = 'SUBSCRIPTION'\n}\n\nexport const enum ICostingType {\n  AVERAGE = 'AVERAGE',\n  STANDARD = 'STANDARD',\n  EUPS = 'EUPS',\n  PEPS = 'PEPS',\n  EQUAL = 'EQUAL',\n  PACKAGE = 'PACKAGE'\n}\n\nexport const enum IProductModality {\n  PURCHASE = 'PURCHASE',\n  SELL = 'SELL',\n  PRODUCTION = 'PRODUCTION',\n  CONSUMPTION = 'CONSUMPTION',\n  FIXED_ACTIVE = 'FIXED_ACTIVE',\n  BILLS = 'BILLS'\n}\n\nexport interface IStockAlert {\n  projectId: IUUID;\n  productId: IUUID;\n  product?: IProduct;\n  lowestQuantity: number;\n  middleQuantity: number;\n  highestQuantity: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProductProv {\n  productId: IUUID;\n  providerId: IUUID;\n  product?: IProduct;\n  provider?: IProductProvider;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProductProvider {\n  projectId?: IUUID;\n  name: string;\n  rfc: string;\n  socialReason: string;\n  address: string;\n  purchase?: Array<IPurchase>;\n  creditDays?: number;\n  afectaDiot: boolean;\n  city?: string;\n  credit?: IDecimal;\n  balance?: IDecimal;\n  providerType?: IProviderType;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPurchase {\n  projectId?: IUUID;\n  invoice: string;\n  invoiceDate: IDateTime;\n  expirationDate: IDateTime;\n  branchOfficeId: IUUID;\n  storeId: IUUID;\n  providerId: IUUID;\n  total?: number;\n  currencyId: IUUID;\n  hasBuyer: boolean;\n  globalDiscount?: IDecimal;\n  buyerId?: IUUID;\n  isActive: boolean;\n  discount?: number;\n  subTotal?: number;\n  provider?: IProductProvider;\n  store?: IStore;\n  branchOffice?: IBranchOffice;\n  productPurchases?: Array<IProductPurchase>;\n  files?: Array<IPurchaseFile>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProductPurchase {\n  projectId?: IUUID;\n  productId: IUUID;\n  purchaseId: IUUID;\n  quantity: number;\n  price: number;\n  discount?: number;\n  taxes?: number;\n  product?: IProduct;\n  purchase?: IPurchase;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPurchaseFile {\n  fileid: IUUID;\n  purchaseId: IUUID;\n  purchase?: IPurchase;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IProviderType {\n  NATIONAL = 'NATIONAL',\n  FOREIGN = 'FOREIGN'\n}\n\nexport interface IProductPrice {\n  price: IDecimal;\n  productId: IUUID;\n  product?: IProduct;\n  utility: IDecimal;\n  setPrice: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IHiring {\n  hiringType: IHiringType;\n  collaborators: Array<ICollaborator>;\n  hiringServices: Array<IHiringService>;\n  projectRoleId?: IUUID;\n  memberId: IUUID;\n  dateStart?: IDateTime;\n  dateEnd?: IDateTime;\n  job?: string;\n  description?: string;\n  amount?: IDecimal;\n  amountWritted?: string;\n  amountPerHour?: IDecimal;\n  vacationDays: number;\n  professionalLicense?: string;\n  cURP?: string;\n  iNE?: string;\n  infonavit?: string;\n  nationality?: string;\n  birthNationality?: string;\n  civilState?: IEnumCivilState;\n  benefits?: IEnumBenefits;\n  enumHiringType?: IEnumHiringType;\n  hiringTypeId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IHiringType {\n  projectId: IUUID;\n  name: string;\n  hirings?: Array<IHiring>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICollaborator {\n  resourceQuoteDetail?: IResourceQuoteDetail;\n  hiring?: IHiring;\n  reportedHours?: number;\n  hours?: number;\n  costByHour?: IDecimal;\n  role?: string;\n  projectRoleId?: IUUID;\n  timeEstimated?: string;\n  amount?: IDecimal;\n  memberId: IUUID;\n  resourceQuoteDetailId?: IUUID;\n  hiringId?: IUUID;\n  collaboratorHours: Array<ICollaboratorHours>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IResourceQuoteDetail {\n  resourceQuote?: IResourceQuote;\n  resourceQuoteDetailBoardRow: Array<IResourceQuoteDetailBoardRow>;\n  collaborators: Array<ICollaborator>;\n  totalCost: IDecimal;\n  totalHours: number;\n  totalEarnings: IDecimal;\n  totalReportedHours: number;\n  title: string;\n  serviceId: IUUID;\n  resourceQuoteId?: IUUID;\n  description?: string;\n  nomenclature: string;\n  consecutive: number;\n  earningPercentage: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  service?: IServiceArea;\n}\n\nexport interface IResourceQuote {\n  proposals: Array<IProposal>;\n  resourceQuoteDetails: Array<IResourceQuoteDetail>;\n  totalCostServices: IDecimal;\n  totalHoursServices: number;\n  totalEarnings: IDecimal;\n  totalReportedHours: number;\n  calculatedClosingDate?: IDateTime;\n  memberId?: IUUID;\n  projectId: IUUID;\n  title: string;\n  areaId?: IUUID;\n  approvedDate?: IDateTime;\n  status: IEnumResourceQuoteStatus;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n  area?: IArea;\n}\n\nexport interface IProposal {\n  resourceQuote?: IResourceQuote;\n  title: string;\n  state?: string;\n  city?: string;\n  pDF?: string;\n  introduction?: string;\n  summary?: string;\n  methodology?: string;\n  timeEstimate?: string;\n  finishDate?: IDateTime;\n  discount?: IDecimal;\n  discountType?: IEnumDiscount;\n  tax?: IDecimal;\n  taxType?: IEnumDiscount;\n  status: IEnumResourceQuoteStatus;\n  total: IDecimal;\n  resourceQuoteId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IEnumDiscount {\n  FIXED = 'FIXED',\n  DISCOUNT = 'DISCOUNT'\n}\n\nexport const enum IEnumResourceQuoteStatus {\n  DRAFT = 'DRAFT',\n  RELEASED = 'RELEASED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED'\n}\n\nexport interface IArea {\n  services: Array<IServiceArea>;\n  name: string;\n  description?: string;\n  code: string;\n  active: boolean;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IServiceArea {\n  serviceQuizes: Array<IServiceQuiz>;\n  serviceMembers: Array<IServiceMember>;\n  area?: IArea;\n  name: string;\n  description?: string;\n  code?: string;\n  active: boolean;\n  areaId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  hiringService?: Array<IHiringService | null>;\n}\n\nexport interface IServiceQuiz {\n  quiz: IServiceArea;\n  service: IQuiz;\n  serviceId: IUUID;\n  quizId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuiz {\n  serviceQuizes: Array<IServiceQuiz>;\n  quizSections: Array<IQuizSection>;\n  quizMembers: Array<IQuizMember>;\n  timesAnswered?: number;\n  name: string;\n  description?: string;\n  note?: string;\n  projectId: IUUID;\n  answerableOnlyOnce: boolean;\n  maxTimesAnswerable?: number;\n  mailInterviewed?: boolean;\n  mailCreator?: boolean;\n  saveSend?: boolean;\n  tagPosition?: IEnumTagPosition;\n  quizStatus?: IEnumOnlineQuizStatus;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizSection {\n  quizQuestions: Array<IQuizQuestion>;\n  quiz: IQuiz;\n  name: string;\n  description?: string;\n  order?: number;\n  quizId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizQuestion {\n  quizSection?: IQuizSection;\n  quizQuestionAnswers: Array<IQuizQuestionAnswer>;\n  quizQuestionMembers: Array<IQuizQuestionMember>;\n  quizQuestionNesteds: Array<IQuizQuestionNested>;\n  question: string;\n  questionType: IQuiz_QuestionType;\n  description?: string;\n  helpText?: string;\n  placeHolder?: string;\n  required?: boolean;\n  requireConfimation?: boolean;\n  maxCharacters?: number;\n  memberId: IUUID;\n  tagPosition: IEnumTagPosition;\n  order?: number;\n  active: boolean;\n  quizSectionId: IUUID;\n  quizQuestionPrefabId?: IUUID;\n  quizQuestionPrefab?: IQuizQuestionPrefab;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizQuestionAnswer {\n  quizAnswer: IQuizAnswer;\n  quizQuestion: IQuizQuestion;\n  quizQuestionId: IUUID;\n  quizAnswerId: IUUID;\n  order?: number;\n  value?: string;\n  calc?: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizAnswer {\n  quizQuestionAnswers: Array<IQuizQuestionAnswer>;\n  description: string;\n  active: boolean;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizQuestionMember {\n  quizMember: IQuizMember;\n  quizMemberDescriptions: Array<IQuizMemberDescription>;\n  quizMemberAnswers: Array<IQuizMemberAnswer>;\n  quizQuestion: IQuizQuestion;\n  quizMemberId: IUUID;\n  quizQuestionId: IUUID;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizMember {\n  quiz: IQuiz;\n  quizQuestionMembers: Array<IQuizQuestionMember>;\n  quizId: IUUID;\n  email?: string;\n  projectId?: IUUID;\n  memberId?: IUUID;\n  quizStatus?: IEnumQuizStatus;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IEnumQuizStatus {\n  STARTED = 'STARTED',\n  SAVED = 'SAVED',\n  FINISHED = 'FINISHED'\n}\n\nexport interface IQuizMemberDescription {\n  quizQuestionMember: IQuizQuestionMember;\n  quizQuestionMemberId: IUUID;\n  description: string;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizMemberAnswer {\n  quizQuestionMember: IQuizQuestionMember;\n  quizAnswer: IQuizAnswer;\n  quizQuestionMemberId: IUUID;\n  quizAnswerId: IUUID;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizQuestionNested {\n  quizQuestion?: IQuizQuestion;\n  name: string;\n  description?: string;\n  url?: string;\n  show?: boolean;\n  order?: number;\n  quizQuestionId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IQuiz_QuestionType {\n  MULTIPLE_OPTION = 'MULTIPLE_OPTION',\n  MULTIPLE_SELECTION = 'MULTIPLE_SELECTION',\n  OPEN = 'OPEN'\n}\n\nexport const enum IEnumTagPosition {\n  TOP = 'TOP',\n  BOTTOM = 'BOTTOM',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  HIDDEN = 'HIDDEN',\n  QUIZ = 'QUIZ'\n}\n\nexport interface IQuizQuestionPrefab {\n  name: string;\n  icon?: string;\n  code: string;\n  quizQuestionPrefabGroupId?: IUUID;\n  quizQuestionPrefabGroup?: IQuizQuestionPrefabGroup;\n  quizQuestions: Array<IQuizQuestion>;\n  quizQuestionPrefabFeatureds: Array<IQuizQuestionPrefabFeatured>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizQuestionPrefabGroup {\n  name: string;\n  quizQuestionPrefabs: Array<IQuizQuestionPrefab>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuizQuestionPrefabFeatured {\n  outstand?: boolean;\n  projectId: IUUID;\n  quizQuestionPrefabId?: IUUID;\n  quizQuestionPrefab?: IQuizQuestionPrefab;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IEnumOnlineQuizStatus {\n  DRAFT = 'DRAFT',\n  PUBLISHED = 'PUBLISHED'\n}\n\nexport interface IServiceMember {\n  service: IServiceArea;\n  memberId: IUUID;\n  serviceId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IHiringService {\n  hiring?: IHiring;\n  serviceId: IUUID;\n  hiringId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  service?: IServiceArea;\n}\n\nexport interface IResourceQuoteDetailBoardRow {\n  resourceQuoteDetail?: IResourceQuoteDetail;\n  boardRowId: IUUID;\n  resourceQuoteDetailId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICollaboratorHours {\n  collaborator?: ICollaborator;\n  totalHours?: number;\n  date?: IDateTime;\n  initialHour?: string;\n  finalHour?: string;\n  collaboratorId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IEnumCivilState {\n  SINGLE = 'SINGLE',\n  MARRIED = 'MARRIED',\n  FREE_UNION = 'FREE_UNION',\n  SEPARATE = 'SEPARATE',\n  DIVORCED = 'DIVORCED',\n  WIDOWER = 'WIDOWER'\n}\n\nexport const enum IEnumBenefits {\n  ANOTHER = 'ANOTHER',\n  LAW_BENEFITS = 'LAW_BENEFITS'\n}\n\nexport const enum IEnumHiringType {\n  DETERMINATED = 'DETERMINATED',\n  UNDETERMINATED = 'UNDETERMINATED',\n  TRIAL = 'TRIAL',\n  TRAINING = 'TRAINING',\n  SEASON = 'SEASON'\n}\n\nexport interface IShift {\n  day: IDay;\n  projectId: IUUID;\n  memberId: IUUID;\n  timeStart: ITimeSpan;\n  timeEnd: ITimeSpan;\n  dayId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDay {\n  shifts: Array<IShift>;\n  name: string;\n  codeDay: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\n/**\n * The `TimeSpan` scalar represents an ISO-8601 compliant duration type.\n */\nexport type ITimeSpan = any;\n\nexport interface IBusiness {\n  projectId: IUUID;\n  name: string;\n  description?: string;\n  slogan?: string;\n  image?: string;\n  businessTypeId?: IUUID;\n  businessType?: IBusinessType;\n  businessRuleProjectPlans?: Array<IBusinessRuleProjectPlan>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBusinessType {\n  projectId: IUUID;\n  image?: string;\n  name: string;\n  description: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  members?: Array<IMember | null>;\n}\n\nexport interface IBusinessRuleProjectPlan {\n  businessRuleId: IUUID;\n  businessId?: IUUID;\n  bussines?: IBusiness;\n  businessRule?: IBusinessRule;\n  projectPlanId: IUUID;\n  projectPlan?: IProjectPlan;\n  commission?: string;\n  commissionSell?: string;\n  commissionProspect?: string;\n  commissionInterested?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBusinessRule {\n  projectId: IUUID;\n  businessId?: IUUID;\n  business?: IBusiness;\n  title?: string;\n  commissionNominator?: string;\n  potentialProspectLimit?: number;\n  allowExtraBonus?: boolean;\n  minimumBalance?: number;\n  idealBalance?: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProjectPlan {\n  projectId: IUUID;\n  title: string;\n  description: string;\n  cost: number;\n  serviceProductId: string;\n  currency: string;\n  changeNominators: string;\n  default: boolean;\n  rateBase: boolean;\n  frequencyPayment: IFrequencyPayment;\n  availableNominators: number;\n  accessExternalNominators: boolean;\n  accessExternalProspects: boolean;\n  vendorRakingDisplay: boolean;\n  accessConnectionProspectsWhatsapp: boolean;\n  serviceSupport: boolean;\n  fee: number;\n  projectPlanSubscriptions?: Array<IProjectPlanSubscription>;\n  businessRuleProjectPlans?: Array<IBusinessRuleProjectPlan>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IFrequencyPayment {\n  BIWEEKLY = 'BIWEEKLY',\n  MONTHLY = 'MONTHLY',\n  QUARTERLY = 'QUARTERLY',\n  SEMI_ANNUALLY = 'SEMI_ANNUALLY',\n  ANNUALLY = 'ANNUALLY'\n}\n\nexport interface IProjectPlanSubscription {\n  projectPlanId: IUUID;\n  projectPlan: IProjectPlan;\n  projectId: IUUID;\n  memberId: IUUID;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IAccountKey {\n  detailsSubmitted: boolean;\n  paymentMethods: Array<IPaymentMethod>;\n  projectId: IUUID;\n  memberId: IUUID;\n  accountServiceId: string;\n  customerServiceId: string;\n  servicePayment?: IServicePayment;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPaymentMethod {\n  memberId: IUUID;\n  projectId: IUUID;\n  paymentToken: string;\n  default: boolean;\n  lastNumbers: string;\n  accountKeyId?: IUUID;\n  accountKey?: IAccountKey;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IServicePayment {\n  MEXPAGO = 'MEXPAGO',\n  PAYPAL = 'PAYPAL',\n  STRIPE = 'STRIPE',\n  CONEKTA = 'CONEKTA',\n  FLAP = 'FLAP'\n}\n\nexport interface IEventDetail {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventId: IUUID;\n  subTotal: IDecimal;\n  descuento: IDecimal;\n  tax: IDecimal;\n  total: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IFisicExam {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventId: IUUID;\n  title?: string;\n  content: string;\n  isVisible: boolean;\n  position?: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IMedicalBackground {\n  format?: IFormat;\n  projectId: IUUID;\n  formatId?: IUUID;\n  label?: string;\n  isVisible: boolean;\n  position: number;\n  pacientMedicalBackground?: IPacientMedicalBackground;\n  medicalBackgroundDetails: Array<IMedicalBackgroundDetail>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IFormat {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventTypeId: IUUID;\n  nameFormat?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPacientMedicalBackground {\n  medicalBackgroundDetail?: IMedicalBackgroundDetail;\n  medicalBackgroundDetailId: IUUID;\n  projectId: IUUID;\n  memberId: IUUID;\n  eventId: IUUID;\n  text?: string;\n  isResponse?: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMedicalBackgroundDetail {\n  medicalBackground?: IMedicalBackground;\n  clinicHistoryMedicalBackgroundDetails?: Array<IClinicHistoryMedicalBackgroundDetail>;\n  projectId: IUUID;\n  medicalBackgroundId: IUUID;\n  label: string;\n  backgroundTypeOption?: IBackgroundTypesOptions;\n  isOption?: boolean;\n  isVisible?: boolean;\n  position: number;\n  pacientMedicalBackgrounds?: Array<IPacientMedicalBackground>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IClinicHistoryMedicalBackgroundDetail {\n  medicalBackgroundDetail?: IMedicalBackgroundDetail;\n  medicalBackgroundDetailId: IUUID;\n  backgroundType: IBackgroundTypesOptions;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IBackgroundTypesOptions {\n  INPUTTEXT = 'INPUTTEXT',\n  CHECKBOX = 'CHECKBOX',\n  RADIOINPUT = 'RADIOINPUT',\n  TEXTEDITOR = 'TEXTEDITOR'\n}\n\nexport interface IPacientMedicalBackgroundFilterInput {\n  and?: Array<IPacientMedicalBackgroundFilterInput>;\n  or?: Array<IPacientMedicalBackgroundFilterInput>;\n  medicalBackgroundDetailId?: IComparableGuidOperationFilterInput;\n  medicalBackgroundDetail?: IMedicalBackgroundDetailFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  eventId?: IComparableGuidOperationFilterInput;\n  text?: IStringOperationFilterInput;\n  isResponse?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMedicalBackgroundDetailFilterInput {\n  and?: Array<IMedicalBackgroundDetailFilterInput>;\n  or?: Array<IMedicalBackgroundDetailFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  medicalBackgroundId?: IComparableGuidOperationFilterInput;\n  medicalBackground?: IMedicalBackgroundFilterInput;\n  label?: IStringOperationFilterInput;\n  backgroundTypeOption?: INullableOfBackgroundTypesOptionsOperationFilterInput;\n  isOption?: IBooleanOperationFilterInput;\n  isVisible?: IBooleanOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  clinicHistoryMedicalBackgroundDetails?: IListFilterInputTypeOfClinicHistoryMedicalBackgroundDetailFilterInput;\n  pacientMedicalBackgrounds?: IListFilterInputTypeOfPacientMedicalBackgroundFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMedicalBackgroundFilterInput {\n  and?: Array<IMedicalBackgroundFilterInput>;\n  or?: Array<IMedicalBackgroundFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  formatId?: IComparableNullableOfGuidOperationFilterInput;\n  format?: IFormatFilterInput;\n  label?: IStringOperationFilterInput;\n  isVisible?: IBooleanOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  pacientMedicalBackground?: IPacientMedicalBackgroundFilterInput;\n  medicalBackgroundDetails?: IListFilterInputTypeOfMedicalBackgroundDetailFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IFormatFilterInput {\n  and?: Array<IFormatFilterInput>;\n  or?: Array<IFormatFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  eventTypeId?: IComparableGuidOperationFilterInput;\n  nameFormat?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfMedicalBackgroundDetailFilterInput {\n  all?: IMedicalBackgroundDetailFilterInput;\n  none?: IMedicalBackgroundDetailFilterInput;\n  some?: IMedicalBackgroundDetailFilterInput;\n  any?: boolean;\n}\n\nexport interface INullableOfBackgroundTypesOptionsOperationFilterInput {\n  eq?: IBackgroundTypesOptions;\n  neq?: IBackgroundTypesOptions;\n  in?: Array<IBackgroundTypesOptions | null>;\n  nin?: Array<IBackgroundTypesOptions | null>;\n}\n\nexport interface IListFilterInputTypeOfClinicHistoryMedicalBackgroundDetailFilterInput {\n  all?: IClinicHistoryMedicalBackgroundDetailFilterInput;\n  none?: IClinicHistoryMedicalBackgroundDetailFilterInput;\n  some?: IClinicHistoryMedicalBackgroundDetailFilterInput;\n  any?: boolean;\n}\n\nexport interface IClinicHistoryMedicalBackgroundDetailFilterInput {\n  and?: Array<IClinicHistoryMedicalBackgroundDetailFilterInput>;\n  or?: Array<IClinicHistoryMedicalBackgroundDetailFilterInput>;\n  medicalBackgroundDetailId?: IComparableGuidOperationFilterInput;\n  medicalBackgroundDetail?: IMedicalBackgroundDetailFilterInput;\n  backgroundType?: IBackgroundTypesOptionsOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBackgroundTypesOptionsOperationFilterInput {\n  eq?: IBackgroundTypesOptions;\n  neq?: IBackgroundTypesOptions;\n  in?: Array<IBackgroundTypesOptions>;\n  nin?: Array<IBackgroundTypesOptions>;\n}\n\nexport interface IListFilterInputTypeOfPacientMedicalBackgroundFilterInput {\n  all?: IPacientMedicalBackgroundFilterInput;\n  none?: IPacientMedicalBackgroundFilterInput;\n  some?: IPacientMedicalBackgroundFilterInput;\n  any?: boolean;\n}\n\nexport interface IMedicRecipe {\n  projectId: IUUID;\n  memberId: IUUID;\n  profesionalCell: string;\n  speciality: string;\n  institute: string;\n  electronicSing: string;\n  isCorrect: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IPacientNote {\n  memberId: IUUID;\n  projectId: IUUID;\n  eventId: IUUID;\n  note: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IVitalSign {\n  projectId: IUUID;\n  labelNameVt?: string;\n  isVisible?: boolean;\n  position?: number;\n  patientVitalSignsResponse?: IPatientVitalSignsResponse;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IPatientVitalSignsResponse {\n  vitalSignId: IUUID;\n  vitalSign?: IVitalSign;\n  eventId: IUUID;\n  memberId: IUUID;\n  value?: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IVaccine {\n  projectId: IUUID;\n  memberId: IUUID;\n  nameVac: string;\n  dateAplicationVac: IDateTime;\n  nextVac?: IDateTime;\n  notesVac?: string;\n  position?: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IMemberBoard {\n  board?: IBoard;\n  memberId: IUUID;\n  boardId: IUUID;\n  outstading: boolean;\n  order: number;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IBoard {\n  boardLists: Array<IBoardList>;\n  space?: ISpace;\n  memberBoards?: Array<IMemberBoard | null>;\n  boardStatus: Array<IBoardStatus>;\n  name: string;\n  description?: string;\n  memberId: IUUID;\n  order: number;\n  color?: string;\n  active: boolean;\n  serviceId?: IUUID;\n  spaceId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  service?: IServiceArea;\n}\n\nexport interface IBoardList {\n  boards: IBoard;\n  cards: Array<ICard>;\n  boardGroupColumn: Array<IBoardGroupColumn>;\n  boardRows: Array<IBoardRow>;\n  name: string;\n  description?: string;\n  order: number;\n  color?: string;\n  active: boolean;\n  boardId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICard {\n  boardList: IBoardList;\n  cardReplies: Array<ICardReply>;\n  nestedFiles: Array<INestedFile>;\n  memberCards: Array<IMemberCard>;\n  cardColumnValues: Array<ICardColumnValue>;\n  cardChecklists: Array<ICardChecklist>;\n  boardStatus?: IBoardStatus;\n  name: string;\n  description?: string;\n  active: boolean;\n  progress: IProgress;\n  priority: IPriority;\n  startDate?: IDateTime;\n  endDate?: IDateTime;\n  projectId: IUUID;\n  boardStatusId?: IUUID;\n  boardListId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICardReply {\n  card: ICard;\n  cardId: IUUID;\n  memberId: IUUID;\n  description: string;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface INestedFile {\n  card: ICard;\n  name: string;\n  show: boolean;\n  url: string;\n  cardId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberCard {\n  card: ICard;\n  cardId: IUUID;\n  memberId: IUUID;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface ICardColumnValue {\n  card: ICard;\n  boardColumnValue: IBoardColumnValue;\n  cardId: IUUID;\n  boardColumnValueId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBoardColumnValue {\n  boardGroupColumn?: IBoardGroupColumn;\n  boardRow?: IBoardRow;\n  boardMemberReferece: Array<IBoardMemberReference>;\n  cardColumnValues: Array<ICardColumnValue>;\n  value?: string;\n  boardGroupColumnId?: IUUID;\n  boardRowId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBoardGroupColumn {\n  boardList: IBoardList;\n  boardColumnValues: Array<IBoardColumnValue>;\n  boardColumnType: IBoardColumnType;\n  name?: string;\n  order: number;\n  boardListId: IUUID;\n  boardColumnTypeId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBoardColumnType {\n  boardGroupColumns: Array<IBoardGroupColumn>;\n  name: string;\n  description?: string;\n  dataType: string;\n  insideType: IEnumInsideType;\n  active: boolean;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IEnumInsideType {\n  PROGRESS = 'PROGRESS',\n  DEADLINE = 'DEADLINE',\n  TEXT = 'TEXT',\n  MEMBER = 'MEMBER',\n  TASK = 'TASK',\n  STATUS = 'STATUS',\n  FILE = 'FILE',\n  DATE = 'DATE'\n}\n\nexport interface IBoardRow {\n  boardList: IBoardList;\n  boardColumnValues: Array<IBoardColumnValue>;\n  title: string;\n  description?: string;\n  order: number;\n  active: boolean;\n  boardListId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBoardMemberReference {\n  boardColumnValue?: IBoardColumnValue;\n  memberId?: IUUID;\n  description?: string;\n  active: boolean;\n  boardColumnValueId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface ICardChecklist {\n  card?: ICard;\n  cardCheckComponents: Array<ICardCheckComponent>;\n  name?: string;\n  cardId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICardCheckComponent {\n  cardChecklist?: ICardChecklist;\n  description?: string;\n  selected: boolean;\n  order: number;\n  cardChecklistId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBoardStatus {\n  board?: IBoard;\n  name: string;\n  description?: string;\n  color?: string;\n  code?: string;\n  active: boolean;\n  projectId: IUUID;\n  boardId?: IUUID;\n  cards?: Array<ICard>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IProgress {\n  NONE = 'NONE',\n  NOT_INITIALIZED = 'NOT_INITIALIZED',\n  IN_PROGRESS = 'IN_PROGRESS',\n  STAGNANT = 'STAGNANT',\n  FINALIZED = 'FINALIZED'\n}\n\nexport const enum IPriority {\n  NONE = 'NONE',\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH'\n}\n\nexport interface ISpace {\n  boards: Array<IBoard>;\n  memberSpaces: Array<IMemberSpace>;\n  name: string;\n  description?: string;\n  image?: string;\n  projectId: IUUID;\n  areaId?: IUUID;\n  visibility?: IEnumVisibility;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  area?: IArea;\n}\n\nexport interface IMemberSpace {\n  space?: ISpace;\n  memberId: IUUID;\n  spaceId: IUUID;\n  order?: number;\n  outstading: boolean;\n  access: IEnumSpaceAccess;\n  active: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport const enum IEnumSpaceAccess {\n  READER = 'READER',\n  EDITOR = 'EDITOR'\n}\n\nexport const enum IEnumVisibility {\n  NONE = 'NONE',\n  PUBLIC = 'PUBLIC',\n  PRIVATE = 'PRIVATE'\n}\n\nexport interface IFile {\n  folderId: IUUID;\n  folder?: IFolder;\n  memberId: IUUID;\n  isProfile?: boolean;\n  token?: string;\n  name?: string;\n  url?: string;\n  description?: string;\n  isActive?: boolean;\n  isOutstanding?: boolean;\n  partialUrl?: string;\n  sharedFiles?: Array<ISharedFile>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IFolder {\n  isActive?: boolean;\n  projectId: IUUID;\n  memberId: IUUID;\n  label: string;\n  background: string;\n  parentId?: IUUID;\n  path?: string;\n  folderType?: string;\n  isPersonal?: boolean;\n  isOutstanding?: boolean;\n  parent?: IFolder;\n  subFolders?: Array<IFolder>;\n  files?: Array<IFile>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface ISharedFile {\n  fileId: IUUID;\n  file?: IFile;\n  memberId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface ISharedFolder {\n  folderId: IUUID;\n  folder?: IFolder;\n  memberId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IDevice {\n  deviceNotifications: Array<IDeviceNotification>;\n  memberId: IUUID;\n  projectId: IUUID;\n  token: string;\n  unique: boolean;\n  avalible: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IDeviceNotification {\n  device?: IDevice;\n  notification?: INotification;\n  deviceId?: IUUID;\n  notificationId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface INotification {\n  deviceNotifications: Array<IDeviceNotification>;\n  title: string;\n  description: string;\n  data: string;\n  enabled: boolean;\n  view: boolean;\n  date: IDateTime;\n  memberId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface IProjectSocialNetwork {\n  projectId: IUUID;\n  project?: IProject;\n  socialNetworkType: ISocialNetworkType;\n  value: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface INiche {\n  name?: string;\n  description?: string;\n  nicheServices: Array<INicheService>;\n  projects: Array<IProject>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface INicheService {\n  nicheId: IUUID;\n  niche?: INiche;\n  codeName: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  microservice?: IMicroservice;\n}\n\nexport interface IMicroservice {\n  name: string;\n  codeName: string;\n  image: string;\n  description: string;\n  priority: number;\n  isPublic: boolean;\n  projectMicroservices: Array<IProjectMicroservice>;\n  functions: Array<IFunction>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProjectMicroservice {\n  microserviceId: IUUID;\n  microservice?: IMicroservice;\n  isActive: boolean;\n  label?: string;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IFunction {\n  name: string;\n  codeName: string;\n  functionType: IFunctionType;\n  microserviceId: IUUID;\n  microservice: IMicroservice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IFunctionType {\n  WRITE = 'WRITE',\n  READER = 'READER',\n  CUSTOM = 'CUSTOM',\n  DISABLE = 'DISABLE'\n}\n\nexport interface IShop {\n  projectId: IUUID;\n  shopType: IShopType;\n  profileUrl: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IServiceHelper {\n  id: IUUID;\n  name: string;\n  label?: string;\n  isActive: boolean;\n  codeName: string;\n  image?: string;\n  description?: string;\n  priority: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  projectMicroservices: Array<IProjectMicroservice>;\n  functions: Array<IFunction>;\n}\n\nexport interface IConfiguration {\n  projectId: IUUID;\n  key: string;\n  value: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IGroupTaxonomy {\n  taxonomyId: IUUID;\n  groupId: IUUID;\n  group: IGroup;\n  taxonomy?: ITaxonomy;\n}\n\n/**\n * Information about the offset pagination.\n */\nexport interface ICollectionSegmentInfo {\n  \n  /**\n   * Indicates whether more items exist following the set defined by the clients arguments.\n   */\n  hasNextPage: boolean;\n  \n  /**\n   * Indicates whether more items exist prior the set defined by the clients arguments.\n   */\n  hasPreviousPage: boolean;\n}\n\nexport interface INicheCollectionSegment {\n  items?: Array<INiche>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface INicheServiceSortInput {\n  nicheId?: ISortEnumType;\n  niche?: INicheSortInput;\n  codeName?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface INicheServiceCollectionSegment {\n  items?: Array<INicheService>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMyUrl {\n  url: string;\n}\n\nexport interface ICountryCollectionSegment {\n  items?: Array<ICountry>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberProjectSortInput {\n  memberId?: ISortEnumType;\n  member?: IMemberSortInput;\n  projectId?: ISortEnumType;\n  project?: IProjectSortInput;\n  memberProjectRoleProject?: IMemberProjectRoleProjectSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberSortInput {\n  username?: ISortEnumType;\n  email?: ISortEnumType;\n  recoverToken?: ISortEnumType;\n  recoverRegister?: ISortEnumType;\n  isActive?: ISortEnumType;\n  firstTime?: ISortEnumType;\n  loginCount?: ISortEnumType;\n  rFC?: ISortEnumType;\n  businessName?: ISortEnumType;\n  useBilling?: ISortEnumType;\n  socialReason?: ISortEnumType;\n  adminCode?: ISortEnumType;\n  canifarmaQRCodeOne?: ISortEnumType;\n  canifarmaQRCodeTwo?: ISortEnumType;\n  consecutive?: ISortEnumType;\n  businessId?: ISortEnumType;\n  profile?: IProfileSortInput;\n  memberStream?: IMemberStreamSortInput;\n  lastLogin?: ISortEnumType;\n  healthInsurance?: IHealthInsuranceSortInput;\n  companyData?: IEnterpriseDataSortInput;\n  billingData?: IBillingDataSortInput;\n  sells?: ISortEnumType;\n  memberIndustryId?: ISortEnumType;\n  memberIndustry?: IMemberIndustrySortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProfileSortInput {\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  postalCode?: ISortEnumType;\n  address?: ISortEnumType;\n  town?: ISortEnumType;\n  city?: ISortEnumType;\n  colony?: ISortEnumType;\n  street?: ISortEnumType;\n  houseNumber?: ISortEnumType;\n  periodInvoice?: ISortEnumType;\n  billingForm?: ISortEnumType;\n  paymentTerm?: ISortEnumType;\n  dialCode?: ISortEnumType;\n  fullName?: ISortEnumType;\n  photo?: ISortEnumType;\n  memberId?: ISortEnumType;\n  member?: IMemberSortInput;\n  countryId?: ISortEnumType;\n  country?: ICountrySortInput;\n  phone?: ISortEnumType;\n  cURP?: ISortEnumType;\n  rFC?: ISortEnumType;\n  nSS?: ISortEnumType;\n  infonavitCredit?: ISortEnumType;\n  nationality?: ISortEnumType;\n  age?: ISortEnumType;\n  gender?: ISortEnumType;\n  dateOfBirth?: ISortEnumType;\n  maritalStatus?: ISortEnumType;\n  biography?: ISortEnumType;\n  siteLogo?: ISortEnumType;\n  siteUrl?: ISortEnumType;\n  quatorProfileId?: ISortEnumType;\n  state?: ISortEnumType;\n  institution?: ISortEnumType;\n  hospital?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberStreamSortInput {\n  memberId?: ISortEnumType;\n  member?: IMemberSortInput;\n  userName?: ISortEnumType;\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  image?: ISortEnumType;\n  isOnline?: ISortEnumType;\n  description?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IHealthInsuranceSortInput {\n  memberId?: ISortEnumType;\n  member?: IMemberSortInput;\n  nSS?: ISortEnumType;\n  insuranceMajorMedicalExpenses?: ISortEnumType;\n  typeInsurance?: ISortEnumType;\n  insuranceCarrier?: ISortEnumType;\n  policyNumber?: ISortEnumType;\n  dischargeDate?: ISortEnumType;\n  expirationDate?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IEnterpriseDataSortInput {\n  memberId?: ISortEnumType;\n  member?: IMemberSortInput;\n  companyName?: ISortEnumType;\n  companyCategory?: ISortEnumType;\n  sucursal?: ISortEnumType;\n  phones?: ISortEnumType;\n  webSite?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBillingDataSortInput {\n  memberId?: ISortEnumType;\n  member?: IMemberSortInput;\n  person?: ISortEnumType;\n  businessName?: ISortEnumType;\n  rFC?: ISortEnumType;\n  useCDFI?: ISortEnumType;\n  paymentMethod?: ISortEnumType;\n  paymentTerm?: ISortEnumType;\n  taxSituation?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberIndustrySortInput {\n  name?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberProjectRoleProjectSortInput {\n  memberProjectId?: ISortEnumType;\n  memberProject?: IMemberProjectSortInput;\n  projectRoleId?: ISortEnumType;\n  projectRole?: IProjectRoleSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberProjectCollectionSegment {\n  items?: Array<IMemberProject>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberCollectionSegment {\n  items?: Array<IMember>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberInSpaceFilterInput {\n  and?: Array<IMemberInSpaceFilterInput>;\n  or?: Array<IMemberInSpaceFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  spaceId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n}\n\nexport interface IMemberInSpaceSortInput {\n  memberId?: ISortEnumType;\n  spaceId?: ISortEnumType;\n  member?: IMemberSortInput;\n}\n\nexport interface IMemberInSpaceCollectionSegment {\n  items?: Array<IMemberInSpace>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberInSpace {\n  memberId: IUUID;\n  spaceId: IUUID;\n  member: IMember;\n  memberInSpace: boolean;\n}\n\nexport interface IMemberInBoardFilterInput {\n  and?: Array<IMemberInBoardFilterInput>;\n  or?: Array<IMemberInBoardFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  boardId?: IComparableGuidOperationFilterInput;\n  member?: IMemberFilterInput;\n}\n\nexport interface IMemberInBoardSortInput {\n  memberId?: ISortEnumType;\n  boardId?: ISortEnumType;\n  member?: IMemberSortInput;\n}\n\nexport interface IMemberInBoardCollectionSegment {\n  items?: Array<IMemberInBoard>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberInBoard {\n  memberId: IUUID;\n  boardId: IUUID;\n  member: IMember;\n  memberInBoard: boolean;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IListUsersLazyLoadConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IListUsersLazyLoadEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IMember>;\n  totalCount: number;\n}\n\n/**\n * Information about pagination in a connection.\n */\nexport interface IPageInfo {\n  \n  /**\n   * Indicates whether more edges exist following the set defined by the clients arguments.\n   */\n  hasNextPage: boolean;\n  \n  /**\n   * Indicates whether more edges exist prior the set defined by the clients arguments.\n   */\n  hasPreviousPage: boolean;\n  \n  /**\n   * When paginating backwards, the cursor to continue.\n   */\n  startCursor?: string;\n  \n  /**\n   * When paginating forwards, the cursor to continue.\n   */\n  endCursor?: string;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IListUsersLazyLoadEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IMember;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IProjectsInfiniteConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IProjectsInfiniteEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IProject>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IProjectsInfiniteEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IProject;\n}\n\nexport interface IMemberChat {\n  email?: string;\n  name?: string;\n  lastName?: string;\n  photo?: string;\n}\n\nexport interface IMemberFullName {\n  fullName?: string;\n}\n\nexport interface ICustomMemberDto {\n  roleName?: string;\n  roleCode?: string;\n  photo?: string;\n  email?: string;\n  fullName?: string;\n  id: IUUID;\n  birthday?: IDateTime;\n}\n\nexport interface IPlan {\n  name: string;\n  price: number;\n  planFunctionalities?: Array<IPlanFunctionality>;\n  planLimitations?: Array<IPlanLimitation>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPlanFunctionality {\n  planId: IUUID;\n  plan?: IPlan;\n  name: string;\n  price: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPlanLimitation {\n  functionalityId: IUUID;\n  planFunctionality?: IPlanFunctionality;\n  quantity: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IRecommendedProject {\n  position: number;\n  projectId: IUUID;\n  project?: IProject;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProjectCollectionSegment {\n  items?: Array<IProject>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberRelationSortInput {\n  status?: ISortEnumType;\n  parentNodeId?: ISortEnumType;\n  parentNode?: IMemberSortInput;\n  childNodeId?: ISortEnumType;\n  childNode?: IMemberSortInput;\n  isActive?: ISortEnumType;\n  parentRelationId?: ISortEnumType;\n  parentRelation?: IMemberRelationSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberRelationCollectionSegment {\n  items?: Array<IMemberRelation>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IProjectTemplate {\n  projectId: IUUID;\n  templateId: IUUID;\n  serviceEmail: IServiceEmail;\n  templateService: ITemplateService;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IServiceEmail {\n  SENDGRID = 'SENDGRID'\n}\n\nexport const enum ITemplateService {\n  REGISTER = 'REGISTER'\n}\n\nexport interface IRankingDTOFilterInput {\n  and?: Array<IRankingDTOFilterInput>;\n  or?: Array<IRankingDTOFilterInput>;\n  member?: IMemberFilterInput;\n  amount?: IComparableDecimalOperationFilterInput;\n  sellsClose?: IComparableInt32OperationFilterInput;\n  sellsInProgress?: IComparableInt32OperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  totalSells?: IComparableInt32OperationFilterInput;\n  interestedProspects?: IComparableInt32OperationFilterInput;\n  potentialProspects?: IComparableInt32OperationFilterInput;\n}\n\nexport interface IRankingDTOCollectionSegment {\n  items?: Array<IRankingDTO>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IRankingDTO {\n  member: IMember;\n  amount: IDecimal;\n  sellsClose: number;\n  sellsInProgress: number;\n  position: number;\n  totalSells: number;\n  interestedProspects: number;\n  potentialProspects: number;\n}\n\nexport interface ISellSortInput {\n  nominatorId?: ISortEnumType;\n  nominator?: IMemberSortInput;\n  prospectId?: ISortEnumType;\n  prospect?: IMemberSortInput;\n  sellerId?: ISortEnumType;\n  seller?: IMemberSortInput;\n  memberRelationId?: ISortEnumType;\n  memberRelation?: IMemberRelationSortInput;\n  concept?: ISortEnumType;\n  amount?: ISortEnumType;\n  status?: ISortEnumType;\n  description?: ISortEnumType;\n  walletTransactionId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISellCollectionSegment {\n  items?: Array<ISell>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberStats {\n  member?: IMember;\n  potentials: number;\n  interesteds: number;\n  sells: IDecimal;\n  totalSells: number;\n}\n\nexport interface ISellStats {\n  sells: IDecimal;\n  ranking: number;\n  memberRelation: number;\n  interestedProspects: number;\n  investment: number;\n}\n\nexport interface IMemberCompanyDtoFilterInput {\n  and?: Array<IMemberCompanyDtoFilterInput>;\n  or?: Array<IMemberCompanyDtoFilterInput>;\n  member?: IMemberFilterInput;\n  profile?: IProfileFilterInput;\n  memberCompany?: IMemberCompanyFilterInput;\n}\n\nexport interface IMemberCompanyDtoSortInput {\n  member?: IMemberSortInput;\n  profile?: IProfileSortInput;\n  memberCompany?: IMemberCompanySortInput;\n}\n\nexport interface IMemberCompanySortInput {\n  companyId?: ISortEnumType;\n  company?: ICompanySortInput;\n  memberId?: ISortEnumType;\n  member?: IMemberSortInput;\n  isDefault?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberCompanyDtoCollectionSegment {\n  items?: Array<IMemberCompanyDto>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberCompanyDto {\n  member: IMember;\n  profile: IProfile;\n  memberCompany: IMemberCompany;\n}\n\nexport interface IFAQ {\n  projectId: IUUID;\n  question: string;\n  answer: string;\n  image: string;\n  position: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ITopicDisease {\n  projectId: IUUID;\n  month: number;\n  title?: string;\n  backgroundImage: string;\n  diseases: Array<IDisease>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDisease {\n  projectId: IUUID;\n  topicDiseaseId: IUUID;\n  topicDisease?: ITopicDisease;\n  title?: string;\n  iconImage: string;\n  image: string;\n  position: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsuranceFormFilterInput {\n  and?: Array<IInsuranceFormFilterInput>;\n  or?: Array<IInsuranceFormFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  typeForm?: ITypeFormOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  zipCode?: IStringOperationFilterInput;\n  birthDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  typeInsurance?: IStringOperationFilterInput;\n  message?: IStringOperationFilterInput;\n  hospitalLevel?: IStringOperationFilterInput;\n  gender?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ITypeFormOperationFilterInput {\n  eq?: ITypeForm;\n  neq?: ITypeForm;\n  in?: Array<ITypeForm>;\n  nin?: Array<ITypeForm>;\n}\n\nexport const enum ITypeForm {\n  LIFE = 'LIFE',\n  WITHDRAWAL = 'WITHDRAWAL',\n  EDUCATIONAL = 'EDUCATIONAL',\n  INVESTMENT = 'INVESTMENT',\n  MEDICAL_EXPENSES = 'MEDICAL_EXPENSES'\n}\n\nexport interface IInsuranceFormSortInput {\n  projectId?: ISortEnumType;\n  typeForm?: ISortEnumType;\n  name?: ISortEnumType;\n  email?: ISortEnumType;\n  phone?: ISortEnumType;\n  zipCode?: ISortEnumType;\n  birthDate?: ISortEnumType;\n  typeInsurance?: ISortEnumType;\n  message?: ISortEnumType;\n  hospitalLevel?: ISortEnumType;\n  gender?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsuranceFormCollectionSegment {\n  items?: Array<IInsuranceForm>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsuranceForm {\n  projectId: IUUID;\n  typeForm: ITypeForm;\n  name?: string;\n  email?: string;\n  phone?: string;\n  zipCode?: string;\n  birthDate?: IDateTime;\n  typeInsurance?: string;\n  message?: string;\n  hospitalLevel?: string;\n  gender?: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuestionDTO {\n  title: string;\n  type: IQuestionType;\n  image: string;\n  options?: Array<IOption>;\n  answers?: Array<IAnswer>;\n}\n\nexport interface IArticleFilterInput {\n  and?: Array<IArticleFilterInput>;\n  or?: Array<IArticleFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  photo?: IStringOperationFilterInput;\n  slug?: IStringOperationFilterInput;\n  resume?: IStringOperationFilterInput;\n  content?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  views?: IComparableInt32OperationFilterInput;\n  status?: IArticleStatusOperationFilterInput;\n  releaseDate?: IComparableDateTimeOperationFilterInput;\n  seoTitle?: IStringOperationFilterInput;\n  seoDescription?: IStringOperationFilterInput;\n  seoKeywords?: IStringOperationFilterInput;\n  structuredMarking?: IStringOperationFilterInput;\n  imageAlt?: IStringOperationFilterInput;\n  seoArticle?: IStringOperationFilterInput;\n  typeContent?: INullableOfTypeContentOperationFilterInput;\n  embedContent?: IStringOperationFilterInput;\n  groupId?: IComparableNullableOfGuidOperationFilterInput;\n  group?: ITaxonomyFilterInput;\n  language?: INullableOfArticleLanguageOperationFilterInput;\n  parentId?: IComparableNullableOfGuidOperationFilterInput;\n  parent?: IArticleFilterInput;\n  variants?: IListFilterInputTypeOfArticleFilterInput;\n  subCategories?: IListFilterInputTypeOfTaxonomyFilterInput;\n  categories?: IListFilterInputTypeOfTaxonomyFilterInput;\n  tags?: IListFilterInputTypeOfTaxonomyFilterInput;\n  surveys?: IListFilterInputTypeOfSurveyFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IArticleStatusOperationFilterInput {\n  eq?: IArticleStatus;\n  neq?: IArticleStatus;\n  in?: Array<IArticleStatus>;\n  nin?: Array<IArticleStatus>;\n}\n\nexport interface INullableOfTypeContentOperationFilterInput {\n  eq?: ITypeContent;\n  neq?: ITypeContent;\n  in?: Array<ITypeContent | null>;\n  nin?: Array<ITypeContent | null>;\n}\n\nexport interface ITaxonomyFilterInput {\n  and?: Array<ITaxonomyFilterInput>;\n  or?: Array<ITaxonomyFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  slug?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  termGroup?: IStringOperationFilterInput;\n  photo?: IStringOperationFilterInput;\n  tagLine?: IStringOperationFilterInput;\n  tagLine2?: IStringOperationFilterInput;\n  parentId?: IComparableNullableOfGuidOperationFilterInput;\n  parent?: ITaxonomyFilterInput;\n  subCategories?: IListFilterInputTypeOfTaxonomyFilterInput;\n  isPublic?: IBooleanOperationFilterInput;\n  articles?: IListFilterInputTypeOfArticleFilterInput;\n  groupArticles?: IListFilterInputTypeOfArticleFilterInput;\n  products?: IListFilterInputTypeOfProductFilterInput;\n  seoTaxonomy?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfTaxonomyFilterInput {\n  all?: ITaxonomyFilterInput;\n  none?: ITaxonomyFilterInput;\n  some?: ITaxonomyFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfArticleFilterInput {\n  all?: IArticleFilterInput;\n  none?: IArticleFilterInput;\n  some?: IArticleFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfProductFilterInput {\n  all?: IProductFilterInput;\n  none?: IProductFilterInput;\n  some?: IProductFilterInput;\n  any?: boolean;\n}\n\nexport interface IProductFilterInput {\n  and?: Array<IProductFilterInput>;\n  or?: Array<IProductFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  photo?: IStringOperationFilterInput;\n  slug?: IStringOperationFilterInput;\n  sku?: IStringOperationFilterInput;\n  price?: IComparableDecimalOperationFilterInput;\n  offerPrice?: IComparableDecimalOperationFilterInput;\n  stock?: IComparableInt32OperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  shippingType?: IStringOperationFilterInput;\n  shippingPrice?: IComparableDecimalOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  publishDate?: IComparableDateTimeOperationFilterInput;\n  views?: IComparableInt32OperationFilterInput;\n  status?: IProductStatusOperationFilterInput;\n  seoProduct?: IStringOperationFilterInput;\n  subCategories?: IListFilterInputTypeOfTaxonomyFilterInput;\n  categories?: IListFilterInputTypeOfTaxonomyFilterInput;\n  details?: IListFilterInputTypeOfProductDetailFilterInput;\n  images?: IListFilterInputTypeOfImageFilterInput;\n  shopType?: IShopTypeOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  purchasePrice?: IComparableNullableOfDoubleOperationFilterInput;\n  sellPrice?: IComparableNullableOfDoubleOperationFilterInput;\n  storeId?: IComparableNullableOfGuidOperationFilterInput;\n  store?: IStoreFilterInput;\n  measure?: IStringOperationFilterInput;\n  utility?: IComparableNullableOfDoubleOperationFilterInput;\n  measureType?: IStringOperationFilterInput;\n  origin?: IStringOperationFilterInput;\n  productType?: INullableOfProductTypeOperationFilterInput;\n  planId?: IComparableNullableOfGuidOperationFilterInput;\n  barcode?: IStringOperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  family?: IStringOperationFilterInput;\n  line?: IStringOperationFilterInput;\n  subFamily?: IStringOperationFilterInput;\n  key?: IStringOperationFilterInput;\n  onStore?: IBooleanOperationFilterInput;\n  onCatalog?: IBooleanOperationFilterInput;\n  sellMeasure?: IStringOperationFilterInput;\n  costType?: IStringOperationFilterInput;\n  purchaseMeasure?: IStringOperationFilterInput;\n  costingType?: ICostingTypeOperationFilterInput;\n  productModality?: INullableOfProductModalityOperationFilterInput;\n  stockAlertId?: IComparableNullableOfGuidOperationFilterInput;\n  stockAlert?: IStockAlertFilterInput;\n  providers?: IListFilterInputTypeOfProductProvFilterInput;\n  prices?: IListFilterInputTypeOfProductPriceFilterInput;\n  discounts?: IListComparableDecimalOperationFilterInput;\n  partNumber?: IStringOperationFilterInput;\n  fee?: IComparableNullableOfDecimalOperationFilterInput;\n  dataSheet?: IStringOperationFilterInput;\n  ecommerceTitle?: IStringOperationFilterInput;\n  ecommerceDescription?: IStringOperationFilterInput;\n  ecommerceInstructions?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProductStatusOperationFilterInput {\n  eq?: IProductStatus;\n  neq?: IProductStatus;\n  in?: Array<IProductStatus>;\n  nin?: Array<IProductStatus>;\n}\n\nexport interface IListFilterInputTypeOfProductDetailFilterInput {\n  all?: IProductDetailFilterInput;\n  none?: IProductDetailFilterInput;\n  some?: IProductDetailFilterInput;\n  any?: boolean;\n}\n\nexport interface IProductDetailFilterInput {\n  and?: Array<IProductDetailFilterInput>;\n  or?: Array<IProductDetailFilterInput>;\n  productId?: IComparableGuidOperationFilterInput;\n  product?: IProductFilterInput;\n  key?: IStringOperationFilterInput;\n  value?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfImageFilterInput {\n  all?: IImageFilterInput;\n  none?: IImageFilterInput;\n  some?: IImageFilterInput;\n  any?: boolean;\n}\n\nexport interface IImageFilterInput {\n  and?: Array<IImageFilterInput>;\n  or?: Array<IImageFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  original?: IStringOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  products?: IListFilterInputTypeOfProductFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IShopTypeOperationFilterInput {\n  eq?: IShopType;\n  neq?: IShopType;\n  in?: Array<IShopType>;\n  nin?: Array<IShopType>;\n}\n\nexport interface IComparableNullableOfDoubleOperationFilterInput {\n  eq?: number;\n  neq?: number;\n  in?: Array<number | null>;\n  nin?: Array<number | null>;\n  gt?: number;\n  ngt?: number;\n  gte?: number;\n  ngte?: number;\n  lt?: number;\n  nlt?: number;\n  lte?: number;\n  nlte?: number;\n}\n\nexport interface IStoreFilterInput {\n  and?: Array<IStoreFilterInput>;\n  or?: Array<IStoreFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  branchOfficeId?: IComparableGuidOperationFilterInput;\n  branchOffice?: IBranchOfficeFilterInput;\n  code?: IStringOperationFilterInput;\n  storeType?: INullableOfStoreTypeOperationFilterInput;\n  sellerId?: IComparableNullableOfGuidOperationFilterInput;\n  stocks?: IListFilterInputTypeOfStoreStockFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBranchOfficeFilterInput {\n  and?: Array<IBranchOfficeFilterInput>;\n  or?: Array<IBranchOfficeFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  countryId?: IComparableGuidOperationFilterInput;\n  state?: IStringOperationFilterInput;\n  municipality?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  postalCode?: IStringOperationFilterInput;\n  street?: IStringOperationFilterInput;\n  number?: IStringOperationFilterInput;\n  managerId?: IComparableNullableOfGuidOperationFilterInput;\n  manager?: IManagerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IManagerFilterInput {\n  and?: Array<IManagerFilterInput>;\n  or?: Array<IManagerFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  branchOfficeId?: IComparableGuidOperationFilterInput;\n  branchOffice?: IBranchOfficeFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfStoreTypeOperationFilterInput {\n  eq?: IStoreType;\n  neq?: IStoreType;\n  in?: Array<IStoreType | null>;\n  nin?: Array<IStoreType | null>;\n}\n\nexport interface IListFilterInputTypeOfStoreStockFilterInput {\n  all?: IStoreStockFilterInput;\n  none?: IStoreStockFilterInput;\n  some?: IStoreStockFilterInput;\n  any?: boolean;\n}\n\nexport interface IStoreStockFilterInput {\n  and?: Array<IStoreStockFilterInput>;\n  or?: Array<IStoreStockFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  productId?: IComparableGuidOperationFilterInput;\n  storeId?: IComparableGuidOperationFilterInput;\n  store?: IStoreFilterInput;\n  product?: IProductFilterInput;\n  stock?: IComparableDoubleOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IComparableDoubleOperationFilterInput {\n  eq?: number;\n  neq?: number;\n  in?: Array<number>;\n  nin?: Array<number>;\n  gt?: number;\n  ngt?: number;\n  gte?: number;\n  ngte?: number;\n  lt?: number;\n  nlt?: number;\n  lte?: number;\n  nlte?: number;\n}\n\nexport interface INullableOfProductTypeOperationFilterInput {\n  eq?: IProductType;\n  neq?: IProductType;\n  in?: Array<IProductType | null>;\n  nin?: Array<IProductType | null>;\n}\n\nexport interface ICostingTypeOperationFilterInput {\n  eq?: ICostingType;\n  neq?: ICostingType;\n  in?: Array<ICostingType>;\n  nin?: Array<ICostingType>;\n}\n\nexport interface INullableOfProductModalityOperationFilterInput {\n  eq?: IProductModality;\n  neq?: IProductModality;\n  in?: Array<IProductModality | null>;\n  nin?: Array<IProductModality | null>;\n}\n\nexport interface IStockAlertFilterInput {\n  and?: Array<IStockAlertFilterInput>;\n  or?: Array<IStockAlertFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  productId?: IComparableGuidOperationFilterInput;\n  product?: IProductFilterInput;\n  lowestQuantity?: IComparableDoubleOperationFilterInput;\n  middleQuantity?: IComparableDoubleOperationFilterInput;\n  highestQuantity?: IComparableDoubleOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfProductProvFilterInput {\n  all?: IProductProvFilterInput;\n  none?: IProductProvFilterInput;\n  some?: IProductProvFilterInput;\n  any?: boolean;\n}\n\nexport interface IProductProvFilterInput {\n  and?: Array<IProductProvFilterInput>;\n  or?: Array<IProductProvFilterInput>;\n  productId?: IComparableGuidOperationFilterInput;\n  providerId?: IComparableGuidOperationFilterInput;\n  product?: IProductFilterInput;\n  provider?: IProductProviderFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProductProviderFilterInput {\n  and?: Array<IProductProviderFilterInput>;\n  or?: Array<IProductProviderFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  rfc?: IStringOperationFilterInput;\n  socialReason?: IStringOperationFilterInput;\n  address?: IStringOperationFilterInput;\n  purchase?: IListFilterInputTypeOfPurchaseFilterInput;\n  creditDays?: IComparableNullableOfInt32OperationFilterInput;\n  afectaDiot?: IBooleanOperationFilterInput;\n  city?: IStringOperationFilterInput;\n  credit?: IComparableNullableOfDecimalOperationFilterInput;\n  balance?: IComparableNullableOfDecimalOperationFilterInput;\n  providerType?: INullableOfProviderTypeOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPurchaseFilterInput {\n  all?: IPurchaseFilterInput;\n  none?: IPurchaseFilterInput;\n  some?: IPurchaseFilterInput;\n  any?: boolean;\n}\n\nexport interface IPurchaseFilterInput {\n  and?: Array<IPurchaseFilterInput>;\n  or?: Array<IPurchaseFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  invoice?: IStringOperationFilterInput;\n  invoiceDate?: IComparableDateTimeOperationFilterInput;\n  expirationDate?: IComparableDateTimeOperationFilterInput;\n  branchOfficeId?: IComparableGuidOperationFilterInput;\n  storeId?: IComparableGuidOperationFilterInput;\n  providerId?: IComparableGuidOperationFilterInput;\n  total?: IComparableNullableOfDoubleOperationFilterInput;\n  currencyId?: IComparableGuidOperationFilterInput;\n  hasBuyer?: IBooleanOperationFilterInput;\n  globalDiscount?: IComparableNullableOfDecimalOperationFilterInput;\n  buyerId?: IComparableNullableOfGuidOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  discount?: IComparableNullableOfDoubleOperationFilterInput;\n  subTotal?: IComparableNullableOfDoubleOperationFilterInput;\n  provider?: IProductProviderFilterInput;\n  store?: IStoreFilterInput;\n  branchOffice?: IBranchOfficeFilterInput;\n  productPurchases?: IListFilterInputTypeOfProductPurchaseFilterInput;\n  files?: IListFilterInputTypeOfPurchaseFileFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IComparableNullableOfDecimalOperationFilterInput {\n  eq?: IDecimal;\n  neq?: IDecimal;\n  in?: Array<IDecimal | null>;\n  nin?: Array<IDecimal | null>;\n  gt?: IDecimal;\n  ngt?: IDecimal;\n  gte?: IDecimal;\n  ngte?: IDecimal;\n  lt?: IDecimal;\n  nlt?: IDecimal;\n  lte?: IDecimal;\n  nlte?: IDecimal;\n}\n\nexport interface IListFilterInputTypeOfProductPurchaseFilterInput {\n  all?: IProductPurchaseFilterInput;\n  none?: IProductPurchaseFilterInput;\n  some?: IProductPurchaseFilterInput;\n  any?: boolean;\n}\n\nexport interface IProductPurchaseFilterInput {\n  and?: Array<IProductPurchaseFilterInput>;\n  or?: Array<IProductPurchaseFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  productId?: IComparableGuidOperationFilterInput;\n  purchaseId?: IComparableGuidOperationFilterInput;\n  quantity?: IComparableDoubleOperationFilterInput;\n  price?: IComparableDoubleOperationFilterInput;\n  discount?: IComparableNullableOfDoubleOperationFilterInput;\n  taxes?: IComparableNullableOfDoubleOperationFilterInput;\n  product?: IProductFilterInput;\n  purchase?: IPurchaseFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPurchaseFileFilterInput {\n  all?: IPurchaseFileFilterInput;\n  none?: IPurchaseFileFilterInput;\n  some?: IPurchaseFileFilterInput;\n  any?: boolean;\n}\n\nexport interface IPurchaseFileFilterInput {\n  and?: Array<IPurchaseFileFilterInput>;\n  or?: Array<IPurchaseFileFilterInput>;\n  fileid?: IComparableGuidOperationFilterInput;\n  purchaseId?: IComparableGuidOperationFilterInput;\n  purchase?: IPurchaseFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfProviderTypeOperationFilterInput {\n  eq?: IProviderType;\n  neq?: IProviderType;\n  in?: Array<IProviderType | null>;\n  nin?: Array<IProviderType | null>;\n}\n\nexport interface IListFilterInputTypeOfProductPriceFilterInput {\n  all?: IProductPriceFilterInput;\n  none?: IProductPriceFilterInput;\n  some?: IProductPriceFilterInput;\n  any?: boolean;\n}\n\nexport interface IProductPriceFilterInput {\n  and?: Array<IProductPriceFilterInput>;\n  or?: Array<IProductPriceFilterInput>;\n  price?: IComparableDecimalOperationFilterInput;\n  productId?: IComparableGuidOperationFilterInput;\n  product?: IProductFilterInput;\n  utility?: IComparableDecimalOperationFilterInput;\n  setPrice?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListComparableDecimalOperationFilterInput {\n  all?: IComparableDecimalOperationFilterInput;\n  none?: IComparableDecimalOperationFilterInput;\n  some?: IComparableDecimalOperationFilterInput;\n  any?: boolean;\n}\n\nexport interface INullableOfArticleLanguageOperationFilterInput {\n  eq?: IArticleLanguage;\n  neq?: IArticleLanguage;\n  in?: Array<IArticleLanguage | null>;\n  nin?: Array<IArticleLanguage | null>;\n}\n\nexport interface IListFilterInputTypeOfSurveyFilterInput {\n  all?: ISurveyFilterInput;\n  none?: ISurveyFilterInput;\n  some?: ISurveyFilterInput;\n  any?: boolean;\n}\n\nexport interface ISurveyFilterInput {\n  and?: Array<ISurveyFilterInput>;\n  or?: Array<ISurveyFilterInput>;\n  title?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  thankYouMessage?: IStringOperationFilterInput;\n  articles?: IListFilterInputTypeOfArticleFilterInput;\n  questions?: IListFilterInputTypeOfQuestionFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuestionFilterInput {\n  all?: IQuestionFilterInput;\n  none?: IQuestionFilterInput;\n  some?: IQuestionFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuestionFilterInput {\n  and?: Array<IQuestionFilterInput>;\n  or?: Array<IQuestionFilterInput>;\n  surveyId?: IComparableGuidOperationFilterInput;\n  survey?: ISurveyFilterInput;\n  title?: IStringOperationFilterInput;\n  type?: IQuestionTypeOperationFilterInput;\n  image?: IStringOperationFilterInput;\n  isRequired?: IBooleanOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  allowsFileUpload?: IBooleanOperationFilterInput;\n  options?: IListFilterInputTypeOfOptionFilterInput;\n  answers?: IListFilterInputTypeOfAnswerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IQuestionTypeOperationFilterInput {\n  eq?: IQuiz_QuestionType;\n  neq?: IQuiz_QuestionType;\n  in?: Array<IQuiz_QuestionType>;\n  nin?: Array<IQuiz_QuestionType>;\n}\n\nexport interface IListFilterInputTypeOfOptionFilterInput {\n  all?: IOptionFilterInput;\n  none?: IOptionFilterInput;\n  some?: IOptionFilterInput;\n  any?: boolean;\n}\n\nexport interface IOptionFilterInput {\n  and?: Array<IOptionFilterInput>;\n  or?: Array<IOptionFilterInput>;\n  questionId?: IComparableGuidOperationFilterInput;\n  question?: IQuestionFilterInput;\n  title?: IStringOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  count?: IComparableInt32OperationFilterInput;\n  answers?: IListFilterInputTypeOfAnswerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfAnswerFilterInput {\n  all?: IAnswerFilterInput;\n  none?: IAnswerFilterInput;\n  some?: IAnswerFilterInput;\n  any?: boolean;\n}\n\nexport interface IAnswerFilterInput {\n  and?: Array<IAnswerFilterInput>;\n  or?: Array<IAnswerFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  questionId?: IComparableGuidOperationFilterInput;\n  question?: IQuestionFilterInput;\n  optionId?: IComparableNullableOfGuidOperationFilterInput;\n  option?: IOptionFilterInput;\n  uploadFile?: IStringOperationFilterInput;\n  responseText?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IArticleSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  title?: ISortEnumType;\n  photo?: ISortEnumType;\n  slug?: ISortEnumType;\n  resume?: ISortEnumType;\n  content?: ISortEnumType;\n  active?: ISortEnumType;\n  views?: ISortEnumType;\n  status?: ISortEnumType;\n  releaseDate?: ISortEnumType;\n  seoTitle?: ISortEnumType;\n  seoDescription?: ISortEnumType;\n  seoKeywords?: ISortEnumType;\n  structuredMarking?: ISortEnumType;\n  imageAlt?: ISortEnumType;\n  seoArticle?: ISortEnumType;\n  typeContent?: ISortEnumType;\n  embedContent?: ISortEnumType;\n  groupId?: ISortEnumType;\n  group?: ITaxonomySortInput;\n  language?: ISortEnumType;\n  parentId?: ISortEnumType;\n  parent?: IArticleSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ITaxonomySortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  slug?: ISortEnumType;\n  description?: ISortEnumType;\n  termGroup?: ISortEnumType;\n  photo?: ISortEnumType;\n  tagLine?: ISortEnumType;\n  tagLine2?: ISortEnumType;\n  parentId?: ISortEnumType;\n  parent?: ITaxonomySortInput;\n  isPublic?: ISortEnumType;\n  seoTaxonomy?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IArticlesConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IArticlesEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IArticle>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IArticlesEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IArticle;\n}\n\nexport interface IArticleCollectionSegment {\n  items?: Array<IArticle>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IProductSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  title?: ISortEnumType;\n  photo?: ISortEnumType;\n  slug?: ISortEnumType;\n  sku?: ISortEnumType;\n  price?: ISortEnumType;\n  offerPrice?: ISortEnumType;\n  stock?: ISortEnumType;\n  active?: ISortEnumType;\n  shippingType?: ISortEnumType;\n  shippingPrice?: ISortEnumType;\n  description?: ISortEnumType;\n  publishDate?: ISortEnumType;\n  views?: ISortEnumType;\n  status?: ISortEnumType;\n  seoProduct?: ISortEnumType;\n  shopType?: ISortEnumType;\n  code?: ISortEnumType;\n  purchasePrice?: ISortEnumType;\n  sellPrice?: ISortEnumType;\n  storeId?: ISortEnumType;\n  store?: IStoreSortInput;\n  measure?: ISortEnumType;\n  utility?: ISortEnumType;\n  measureType?: ISortEnumType;\n  origin?: ISortEnumType;\n  productType?: ISortEnumType;\n  planId?: ISortEnumType;\n  barcode?: ISortEnumType;\n  brand?: ISortEnumType;\n  family?: ISortEnumType;\n  line?: ISortEnumType;\n  subFamily?: ISortEnumType;\n  key?: ISortEnumType;\n  onStore?: ISortEnumType;\n  onCatalog?: ISortEnumType;\n  sellMeasure?: ISortEnumType;\n  costType?: ISortEnumType;\n  purchaseMeasure?: ISortEnumType;\n  costingType?: ISortEnumType;\n  productModality?: ISortEnumType;\n  stockAlertId?: ISortEnumType;\n  stockAlert?: IStockAlertSortInput;\n  partNumber?: ISortEnumType;\n  fee?: ISortEnumType;\n  dataSheet?: ISortEnumType;\n  ecommerceTitle?: ISortEnumType;\n  ecommerceDescription?: ISortEnumType;\n  ecommerceInstructions?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IStoreSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  branchOfficeId?: ISortEnumType;\n  branchOffice?: IBranchOfficeSortInput;\n  code?: ISortEnumType;\n  storeType?: ISortEnumType;\n  sellerId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBranchOfficeSortInput {\n  projectId?: ISortEnumType;\n  isActive?: ISortEnumType;\n  name?: ISortEnumType;\n  countryId?: ISortEnumType;\n  state?: ISortEnumType;\n  municipality?: ISortEnumType;\n  email?: ISortEnumType;\n  phone?: ISortEnumType;\n  postalCode?: ISortEnumType;\n  street?: ISortEnumType;\n  number?: ISortEnumType;\n  managerId?: ISortEnumType;\n  manager?: IManagerSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IManagerSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  branchOfficeId?: ISortEnumType;\n  branchOffice?: IBranchOfficeSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IStockAlertSortInput {\n  projectId?: ISortEnumType;\n  productId?: ISortEnumType;\n  product?: IProductSortInput;\n  lowestQuantity?: ISortEnumType;\n  middleQuantity?: ISortEnumType;\n  highestQuantity?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProductCollectionSegment {\n  items?: Array<IProduct>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ITaxonomyCollectionSegment {\n  items?: Array<ITaxonomy>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISeoDTO {\n  seo?: string;\n}\n\nexport interface ICourse {\n  school: string;\n  courseLevel: ICourseLevel;\n  projectId: IUUID;\n  title: string;\n  courseModality: ICourseModality;\n  slug: string;\n  description: string;\n  endDate: IDateTime;\n  startDate: IDateTime;\n  addressId: IUUID;\n  courseType: ICourseType;\n  duration: number;\n  beginType: IBeginType;\n  price: number;\n  schedules?: Array<ICourseSchedule>;\n  discount: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum ICourseLevel {\n  BEGGINER = 'BEGGINER',\n  ADVANCED = 'ADVANCED'\n}\n\nexport const enum ICourseModality {\n  PRESENCIAL = 'PRESENCIAL',\n  VIRTUAL = 'VIRTUAL'\n}\n\nexport const enum ICourseType {\n  SIMPLE = 'SIMPLE',\n  CERTIFICATE = 'CERTIFICATE'\n}\n\nexport const enum IBeginType {\n  UNIQUE = 'UNIQUE',\n  MULTIPLE = 'MULTIPLE'\n}\n\nexport interface ICourseSchedule {\n  day: string;\n  time?: ITimeSpan;\n  dayPosition: number;\n  courseId: IUUID;\n  course?: ICourse;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface ICoursesByProjectIdConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<ICoursesByProjectIdEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<ICourse>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface ICoursesByProjectIdEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: ICourse;\n}\n\nexport interface ICourseTaxonomy {\n  projectId?: IUUID;\n  courseId: IUUID;\n  course: ICourse;\n  taxonomyId: IUUID;\n  taxonomy: ITaxonomy;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IStoreTransfersByStoreIdConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IStoreTransfersByStoreIdEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IStoreTransfer>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IStoreTransfersByStoreIdEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IStoreTransfer;\n}\n\nexport interface IStoreTransfer {\n  projectId?: IUUID;\n  storeOriginId: IUUID;\n  storeDestinyId: IUUID;\n  currencyId: IUUID;\n  productsTransferred?: Array<IProductTransferred>;\n  storeOrigin?: IStore;\n  storeDestiny?: IStore;\n  folio?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProductTransferred {\n  productId?: IUUID;\n  product?: IProduct;\n  quantity: number;\n  storeTransferId: IUUID;\n  storeTransfer?: IStoreTransfer;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface ICoursesByTaxonomyAndModalityConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<ICoursesByTaxonomyAndModalityEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<ICourseTaxonomy>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface ICoursesByTaxonomyAndModalityEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: ICourseTaxonomy;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IBranchOfficesConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IBranchOfficesEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IBranchOffice>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IBranchOfficesEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IBranchOffice;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IManagersConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IManagersEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IManager>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IManagersEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IManager;\n}\n\nexport interface IPurchaseSortInput {\n  projectId?: ISortEnumType;\n  invoice?: ISortEnumType;\n  invoiceDate?: ISortEnumType;\n  expirationDate?: ISortEnumType;\n  branchOfficeId?: ISortEnumType;\n  storeId?: ISortEnumType;\n  providerId?: ISortEnumType;\n  total?: ISortEnumType;\n  currencyId?: ISortEnumType;\n  hasBuyer?: ISortEnumType;\n  globalDiscount?: ISortEnumType;\n  buyerId?: ISortEnumType;\n  isActive?: ISortEnumType;\n  discount?: ISortEnumType;\n  subTotal?: ISortEnumType;\n  provider?: IProductProviderSortInput;\n  store?: IStoreSortInput;\n  branchOffice?: IBranchOfficeSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProductProviderSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  rfc?: ISortEnumType;\n  socialReason?: ISortEnumType;\n  address?: ISortEnumType;\n  creditDays?: ISortEnumType;\n  afectaDiot?: ISortEnumType;\n  city?: ISortEnumType;\n  credit?: ISortEnumType;\n  balance?: ISortEnumType;\n  providerType?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPurchaseCollectionSegment {\n  items?: Array<IPurchase>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IStoresConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IStoresEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IStore>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IStoresEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IStore;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IStoreTransfersConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IStoreTransfersEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IStoreTransfer>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IStoreTransfersEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IStoreTransfer;\n}\n\nexport interface IDrugFilterInput {\n  and?: Array<IDrugFilterInput>;\n  or?: Array<IDrugFilterInput>;\n  ndcUpcHri?: IStringOperationFilterInput;\n  prodDescAbbrev?: IStringOperationFilterInput;\n  prodName?: IStringOperationFilterInput;\n}\n\nexport interface IDrugCollectionSegment {\n  items?: Array<IDrug>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IDrug {\n  ndcUpcHri: string;\n  prodDescAbbrev: string;\n  prodName: string;\n}\n\nexport interface ICarrier {\n  carrierCode: string;\n  carrierName: string;\n}\n\nexport interface IGroupResponse {\n  groupItemList: IGroupItem;\n}\n\nexport interface IGroupItem {\n  groupItems: Array<IEmployer>;\n}\n\nexport interface IEmployer {\n  carrierCode: string;\n  employerName: string;\n  groupNum: string;\n  orgCode: string;\n}\n\nexport interface IPharmacyRadiusResponseFilterInput {\n  and?: Array<IPharmacyRadiusResponseFilterInput>;\n  or?: Array<IPharmacyRadiusResponseFilterInput>;\n  pharmacy?: IPharmacyFilterInput;\n  pricing?: IPricingFilterInput;\n}\n\nexport interface IPharmacyFilterInput {\n  and?: Array<IPharmacyFilterInput>;\n  or?: Array<IPharmacyFilterInput>;\n  npi?: IStringOperationFilterInput;\n  nabp?: IStringOperationFilterInput;\n  affiliationCode?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  address1?: IStringOperationFilterInput;\n  address2?: IStringOperationFilterInput;\n  city?: IStringOperationFilterInput;\n  state?: IStringOperationFilterInput;\n  zip?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  longitude?: IStringOperationFilterInput;\n  latitude?: IStringOperationFilterInput;\n}\n\nexport interface IPricingFilterInput {\n  and?: Array<IPricingFilterInput>;\n  or?: Array<IPricingFilterInput>;\n  requestId?: IStringOperationFilterInput;\n  status?: IComparableInt32OperationFilterInput;\n  gpi?: IStringOperationFilterInput;\n  unitCost?: IComparableNullableOfDoubleOperationFilterInput;\n  dAWDifference?: IComparableNullableOfDoubleOperationFilterInput;\n  patientPay?: IComparableNullableOfDoubleOperationFilterInput;\n  totalPay?: IComparableNullableOfDoubleOperationFilterInput;\n  planPay?: IComparableNullableOfDoubleOperationFilterInput;\n  processingFee?: IComparableNullableOfDoubleOperationFilterInput;\n  dispensingFee?: IComparableNullableOfDoubleOperationFilterInput;\n  incentiveFee?: IComparableNullableOfDoubleOperationFilterInput;\n  copay?: IComparableNullableOfDoubleOperationFilterInput;\n  clientBilled?: IComparableNullableOfDoubleOperationFilterInput;\n  marginApplied?: IComparableNullableOfDoubleOperationFilterInput;\n  fQMessage?: IStringOperationFilterInput;\n  f4Message?: IStringOperationFilterInput;\n  benefitCap?: IComparableNullableOfDoubleOperationFilterInput;\n  deductible?: IComparableNullableOfDoubleOperationFilterInput;\n  mOOP?: IComparableNullableOfDoubleOperationFilterInput;\n  patientTax?: IComparableNullableOfDoubleOperationFilterInput;\n  sellTax?: IComparableNullableOfDoubleOperationFilterInput;\n  buyTax?: IComparableNullableOfDoubleOperationFilterInput;\n  pharmacyFee?: IComparableNullableOfDoubleOperationFilterInput;\n  vaccineAdminFee?: IComparableNullableOfDoubleOperationFilterInput;\n  sellDispensingFee?: IComparableNullableOfDoubleOperationFilterInput;\n  buyDispensingFee?: IComparableNullableOfDoubleOperationFilterInput;\n  sellIngredientCost?: IComparableNullableOfDoubleOperationFilterInput;\n  buyIngredientCost?: IComparableNullableOfDoubleOperationFilterInput;\n  rejectCodes?: IStringOperationFilterInput;\n  billCostCalculatorRuleName?: IStringOperationFilterInput;\n  costCalculatorRuleName?: IStringOperationFilterInput;\n  copayRuleName?: IStringOperationFilterInput;\n}\n\nexport interface IPharmacyRadiusResponse {\n  pharmacy?: IPharmacy;\n  pricing?: IPricing;\n}\n\nexport interface IPharmacy {\n  npi: string;\n  nabp: string;\n  affiliationCode: string;\n  name: string;\n  address1: string;\n  address2: string;\n  city: string;\n  state: string;\n  zip: string;\n  phone: string;\n  longitude: string;\n  latitude: string;\n}\n\nexport interface IPricing {\n  requestId: string;\n  status: number;\n  gpi: string;\n  unitCost?: number;\n  dAWDifference?: number;\n  patientPay?: number;\n  totalPay?: number;\n  planPay?: number;\n  processingFee?: number;\n  dispensingFee?: number;\n  incentiveFee?: number;\n  copay?: number;\n  clientBilled?: number;\n  marginApplied?: number;\n  fQMessage?: string;\n  f4Message?: string;\n  benefitCap?: number;\n  deductible?: number;\n  mOOP?: number;\n  patientTax?: number;\n  sellTax?: number;\n  buyTax?: number;\n  pharmacyFee?: number;\n  vaccineAdminFee?: number;\n  sellDispensingFee?: number;\n  buyDispensingFee?: number;\n  sellIngredientCost?: number;\n  buyIngredientCost?: number;\n  rejectCodes?: string;\n  billCostCalculatorRuleName?: string;\n  costCalculatorRuleName?: string;\n  copayRuleName?: string;\n}\n\nexport interface IPharmacyResponse {\n  message: string;\n  pharmacies: Array<IPharmacy>;\n}\n\nexport interface ISearchMemberResponse {\n  cardHolder: ICardHolder;\n}\n\nexport interface ICardHolder {\n  cHID: string;\n  members: Array<IMemberInfo>;\n}\n\nexport interface IMemberInfo {\n  id: number;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  dOB: IDateTime;\n  personCode: string;\n  sSN: string;\n  genderCode: string;\n  address1: string;\n  address2: string;\n  city: string;\n  state: string;\n  zipCode: string;\n  homePhone: string;\n  workPhone: string;\n  mobilePhone: string;\n  email: string;\n  alternateID: string;\n  previousID: string;\n  relationshipCode: string;\n  locationCode: string;\n  pCPNPI: string;\n  pCPPhone: string;\n  pCPFax: string;\n  group: Iblog_Group;\n  benefitSpending: IBenefitSpending;\n}\n\nexport interface Iblog_Group {\n  id: number;\n  groupName?: string;\n  groupNumber?: string;\n  benefitYearStartDay?: number;\n  benefitYearStartMonth?: number;\n  startDateTime?: IDateTime;\n  endDateTime?: IDateTime;\n  priorYearQ4CarryOverDeductible?: boolean;\n  priorYearQ4CarryOverMOOP?: boolean;\n  carrierCode?: string;\n  coverageType?: string;\n}\n\nexport interface IBenefitSpending {\n  individualDeductibleSpend: number;\n  familyDeductibleSpend: number;\n  individualMOOPSpend: number;\n  familyMOOPSpend: number;\n  individualBenefitCapSpend: number;\n  familyBenefitCapSpend: number;\n  individualSpecialCapSpend: number;\n  familySpecialCapSpend: number;\n  plus1DeductibleSpend: number;\n  plus1BenefitCapSpend: number;\n  plus1MOOPSpend: number;\n  hasIndividualDeductibleBeenMet: boolean;\n  hasFamilyDeductibleBeenMet: boolean;\n  hasIndividualOOPMaxBeenMet: boolean;\n  hasFamilyOOPMaxBeenMet: boolean;\n  hasIndividualBenefitCapBeenMet: boolean;\n  hasFamilyBenefitCapBeenMet: boolean;\n  hasIndividualSpecialCapBeenMet: boolean;\n  hasFamilySpecialCapBeenMet: boolean;\n  plus1MOOPBenefitCapSpend: number;\n}\n\nexport interface IPricingDrug {\n  drug?: IDrug;\n  pharmacyRadiusPricing?: IPharmacyRadiusPricing;\n}\n\nexport interface IPharmacyRadiusPricing {\n  message: string;\n  response?: Array<IPharmacyRadiusResponse>;\n}\n\nexport interface ITransaction {\n  clientCode: string;\n  planCode: string;\n  memberId: string;\n  externalGroupId: string;\n  firstName: string;\n  lastName: string;\n  dateOfBirth: IDateTime;\n  gender: string;\n  labelName: string;\n  nDC: string;\n  quantity: number;\n  daysSupply: number;\n  pharmacyName: string;\n  prescriberName: string;\n  memberKey: string;\n  personCode: string;\n  nABP: string;\n}\n\nexport interface IMenu {\n  id: number;\n  name_for_guest: string;\n  combine_into_id?: string;\n  last_modified: string;\n  display_position: number;\n  menu_headings?: Array<IMenuHeading>;\n  menu_items?: Array<IMenuItem>;\n}\n\nexport interface IMenuHeading {\n  id: string;\n  heading_name: string;\n  display_position: number;\n}\n\nexport interface IMenuItem {\n  id: string;\n  display_position: IDecimal;\n  image_url: string;\n  image_on_front_page: boolean;\n  name_for_guest: string;\n  description: string;\n  tax_cents: IDecimal;\n  price_string: string;\n  pretax_cents: number;\n  tags: Array<string>;\n  special_instructions_config?: string;\n  most_loved: boolean;\n  menu_heading_id: string;\n  in_stock: boolean;\n  image_on_item_page: boolean;\n  modifiers_ids: Array<string>;\n}\n\nexport interface IRestaurant {\n  id: string;\n  name_for_guest: string;\n  name_for_admin: string;\n  phone_for_guests: string;\n}\n\nexport interface ILegalTermFilterInput {\n  and?: Array<ILegalTermFilterInput>;\n  or?: Array<ILegalTermFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  counter?: IComparableInt32OperationFilterInput;\n  keyName?: IStringOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ILegalTermSortInput {\n  projectId?: ISortEnumType;\n  counter?: ISortEnumType;\n  keyName?: ISortEnumType;\n  title?: ISortEnumType;\n  description?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ILegalTermCollectionSegment {\n  items?: Array<ILegalTerm>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ILegalTerm {\n  projectId: IUUID;\n  counter: number;\n  keyName: string;\n  title: string;\n  description: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IStockAlertCollectionSegment {\n  items?: Array<IStockAlert>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPurchaseQuote {\n  invoiceDate: IDateTime;\n  expirationDate: IDateTime;\n  reference: string;\n  branchOfficeId: IUUID;\n  branchOffice?: IBranchOffice;\n  storeId: IUUID;\n  store?: IStore;\n  sellerId: IUUID;\n  customerId: IUUID;\n  comment: string;\n  products?: Array<IPurchaseQuoteProduct>;\n  discount?: IDecimal;\n  subTotal?: IDecimal;\n  taxes?: IDecimal;\n  detained?: IDecimal;\n  total?: IDecimal;\n  purchaseQuoteStatus: IPurchaseQuoteStatus;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPurchaseQuoteProduct {\n  purchaseQuoteId: IUUID;\n  productId: IUUID;\n  purchaseQuote?: IPurchaseQuote;\n  product?: IProduct;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IPurchaseQuoteStatus {\n  PENDING = 'PENDING',\n  ACCEPTED = 'ACCEPTED',\n  DENIED = 'DENIED'\n}\n\nexport interface IPurchaseQuoteFilterInput {\n  and?: Array<IPurchaseQuoteFilterInput>;\n  or?: Array<IPurchaseQuoteFilterInput>;\n  invoiceDate?: IComparableDateTimeOperationFilterInput;\n  expirationDate?: IComparableDateTimeOperationFilterInput;\n  reference?: IStringOperationFilterInput;\n  branchOfficeId?: IComparableGuidOperationFilterInput;\n  branchOffice?: IBranchOfficeFilterInput;\n  storeId?: IComparableGuidOperationFilterInput;\n  store?: IStoreFilterInput;\n  sellerId?: IComparableGuidOperationFilterInput;\n  customerId?: IComparableGuidOperationFilterInput;\n  comment?: IStringOperationFilterInput;\n  products?: IListFilterInputTypeOfPurchaseQuoteProductFilterInput;\n  discount?: IComparableNullableOfDecimalOperationFilterInput;\n  subTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  taxes?: IComparableNullableOfDecimalOperationFilterInput;\n  detained?: IComparableNullableOfDecimalOperationFilterInput;\n  total?: IComparableNullableOfDecimalOperationFilterInput;\n  purchaseQuoteStatus?: IPurchaseQuoteStatusOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPurchaseQuoteProductFilterInput {\n  all?: IPurchaseQuoteProductFilterInput;\n  none?: IPurchaseQuoteProductFilterInput;\n  some?: IPurchaseQuoteProductFilterInput;\n  any?: boolean;\n}\n\nexport interface IPurchaseQuoteProductFilterInput {\n  and?: Array<IPurchaseQuoteProductFilterInput>;\n  or?: Array<IPurchaseQuoteProductFilterInput>;\n  purchaseQuoteId?: IComparableGuidOperationFilterInput;\n  productId?: IComparableGuidOperationFilterInput;\n  purchaseQuote?: IPurchaseQuoteFilterInput;\n  product?: IProductFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPurchaseQuoteStatusOperationFilterInput {\n  eq?: IPurchaseQuoteStatus;\n  neq?: IPurchaseQuoteStatus;\n  in?: Array<IPurchaseQuoteStatus>;\n  nin?: Array<IPurchaseQuoteStatus>;\n}\n\nexport interface IPurchaseQuoteCollectionSegment {\n  items?: Array<IPurchaseQuote>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ITaxFilterInput {\n  and?: Array<ITaxFilterInput>;\n  or?: Array<ITaxFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  rate?: IComparableDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ITax {\n  projectId: IUUID;\n  name: string;\n  rate: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProductSellFilterInput {\n  and?: Array<IProductSellFilterInput>;\n  or?: Array<IProductSellFilterInput>;\n  folio?: IStringOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  invoiceDate?: IComparableDateTimeOperationFilterInput;\n  expirationDate?: IComparableDateTimeOperationFilterInput;\n  currencyId?: IComparableGuidOperationFilterInput;\n  branchOfficeId?: IComparableGuidOperationFilterInput;\n  branchOffice?: IBranchOfficeFilterInput;\n  storeId?: IComparableGuidOperationFilterInput;\n  store?: IStoreFilterInput;\n  sellerId?: IComparableGuidOperationFilterInput;\n  routeId?: IComparableGuidOperationFilterInput;\n  customerId?: IComparableGuidOperationFilterInput;\n  socialReason?: IStringOperationFilterInput;\n  rfc?: IStringOperationFilterInput;\n  automaticInvoicing?: IBooleanOperationFilterInput;\n  address?: IStringOperationFilterInput;\n  iva?: IComparableDecimalOperationFilterInput;\n  total?: IComparableDecimalOperationFilterInput;\n  subTotal?: IComparableDecimalOperationFilterInput;\n  taxes?: IComparableDecimalOperationFilterInput;\n  discount?: IComparableDecimalOperationFilterInput;\n  products?: IListFilterInputTypeOfProductSellItemFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfProductSellItemFilterInput {\n  all?: IProductSellItemFilterInput;\n  none?: IProductSellItemFilterInput;\n  some?: IProductSellItemFilterInput;\n  any?: boolean;\n}\n\nexport interface IProductSellItemFilterInput {\n  and?: Array<IProductSellItemFilterInput>;\n  or?: Array<IProductSellItemFilterInput>;\n  productSellId?: IComparableGuidOperationFilterInput;\n  productSell?: IProductSellFilterInput;\n  quantity?: IComparableDoubleOperationFilterInput;\n  productId?: IComparableGuidOperationFilterInput;\n  product?: IProductFilterInput;\n  priceId?: IComparableGuidOperationFilterInput;\n  discount?: IComparableDecimalOperationFilterInput;\n  finalPrice?: IComparableDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProductSellCollectionSegment {\n  items?: Array<IProductSell>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IProductSell {\n  folio?: string;\n  projectId: IUUID;\n  invoiceDate: IDateTime;\n  expirationDate: IDateTime;\n  currencyId: IUUID;\n  branchOfficeId: IUUID;\n  branchOffice?: IBranchOffice;\n  storeId: IUUID;\n  store?: IStore;\n  sellerId: IUUID;\n  routeId: IUUID;\n  customerId: IUUID;\n  socialReason: string;\n  rfc: string;\n  automaticInvoicing: boolean;\n  address: string;\n  iva: IDecimal;\n  total: IDecimal;\n  subTotal: IDecimal;\n  taxes: IDecimal;\n  discount: IDecimal;\n  products?: Array<IProductSellItem>;\n  isActive?: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProductSellItem {\n  productSellId: IUUID;\n  productSell?: IProductSell;\n  quantity: number;\n  productId: IUUID;\n  product?: IProduct;\n  priceId: IUUID;\n  discount: IDecimal;\n  finalPrice: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IRouteFilterInput {\n  and?: Array<IRouteFilterInput>;\n  or?: Array<IRouteFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  key?: IStringOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  branchOfficeId?: IComparableGuidOperationFilterInput;\n  routeType?: IStringOperationFilterInput;\n  travelDays?: IComparableInt32OperationFilterInput;\n  beginningDate?: IComparableDateTimeOperationFilterInput;\n  sellers?: IListFilterInputTypeOfRouteSellerFilterInput;\n  customers?: IListFilterInputTypeOfRouteCustomerFilterInput;\n  itineraries?: IListFilterInputTypeOfRouteItineraryFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfRouteSellerFilterInput {\n  all?: IRouteSellerFilterInput;\n  none?: IRouteSellerFilterInput;\n  some?: IRouteSellerFilterInput;\n  any?: boolean;\n}\n\nexport interface IRouteSellerFilterInput {\n  and?: Array<IRouteSellerFilterInput>;\n  or?: Array<IRouteSellerFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  routeId?: IComparableGuidOperationFilterInput;\n  route?: IRouteFilterInput;\n  key?: IStringOperationFilterInput;\n  branchOfficeId?: IComparableGuidOperationFilterInput;\n  branchOffice?: IBranchOfficeFilterInput;\n  storeId?: IComparableGuidOperationFilterInput;\n  store?: IStoreFilterInput;\n  sellerId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfRouteCustomerFilterInput {\n  all?: IRouteCustomerFilterInput;\n  none?: IRouteCustomerFilterInput;\n  some?: IRouteCustomerFilterInput;\n  any?: boolean;\n}\n\nexport interface IRouteCustomerFilterInput {\n  and?: Array<IRouteCustomerFilterInput>;\n  or?: Array<IRouteCustomerFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  routeId?: IComparableGuidOperationFilterInput;\n  route?: IRouteFilterInput;\n  customerId?: IComparableGuidOperationFilterInput;\n  address?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfRouteItineraryFilterInput {\n  all?: IRouteItineraryFilterInput;\n  none?: IRouteItineraryFilterInput;\n  some?: IRouteItineraryFilterInput;\n  any?: boolean;\n}\n\nexport interface IRouteItineraryFilterInput {\n  and?: Array<IRouteItineraryFilterInput>;\n  or?: Array<IRouteItineraryFilterInput>;\n  routeId?: IComparableGuidOperationFilterInput;\n  route?: IRouteFilterInput;\n  customerId?: IComparableGuidOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  address?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IRouteCollectionSegment {\n  items?: Array<IRoute>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IRoute {\n  projectId: IUUID;\n  key: string;\n  title: string;\n  description: string;\n  branchOfficeId: IUUID;\n  routeType: string;\n  travelDays: number;\n  beginningDate: IDateTime;\n  sellers?: Array<IRouteSeller>;\n  customers?: Array<IRouteCustomer>;\n  itineraries?: Array<IRouteItinerary>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IRouteSeller {\n  projectId: IUUID;\n  routeId: IUUID;\n  route?: IRoute;\n  key: string;\n  branchOfficeId: IUUID;\n  branchOffice?: IBranchOffice;\n  storeId: IUUID;\n  store?: IStore;\n  sellerId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IRouteCustomer {\n  projectId: IUUID;\n  routeId: IUUID;\n  route?: IRoute;\n  customerId: IUUID;\n  address?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IRouteItinerary {\n  routeId: IUUID;\n  route?: IRoute;\n  customerId: IUUID;\n  description?: string;\n  address: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMessageFix {\n  value: string;\n}\n\nexport interface IScheduleManagerDto {\n  scheduleManager: IScheduleManager;\n  schedules: Array<ISchedule>;\n}\n\nexport interface IScheduleManager {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventTypeId: IUUID;\n  eventType?: IEventType;\n  schedules?: Array<ISchedule>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IEventType {\n  projectId: IUUID;\n  name: string;\n  price?: IDecimal;\n  subEventTypes?: Array<ISubEventType>;\n  image?: string;\n  description?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISubEventType {\n  name: string;\n  price: IDecimal;\n  eventTypes?: Array<IEventType>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISchedule {\n  scheduleManagerId: IUUID;\n  scheduleManager?: IScheduleManager;\n  day: string;\n  turn?: Array<ITurn>;\n  weekDay: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ITurn {\n  scheduleId: IUUID;\n  schedule?: ISchedule;\n  timeEnd?: ITimeSpan;\n  timeStart?: ITimeSpan;\n  timeStartString: string;\n  timeEndString: string;\n  isActive?: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IEvent {\n  projectId: IUUID;\n  memberId: IUUID;\n  title?: string;\n  location?: string;\n  color?: string;\n  description: string;\n  file: string;\n  roomId?: string;\n  eventDate: IDateTime;\n  finishDate?: IDateTime;\n  eventMode?: IEventMode;\n  eventSessionId?: IUUID;\n  eventSession?: IEventSession;\n  eventMembers?: Array<IEventMember>;\n  sendDetails: boolean;\n  sendRemember: boolean;\n  totalPrice?: IDecimal;\n  discount?: IDecimal;\n  visibility?: IEventVisibility;\n  eventCharges?: Array<IEventCharge>;\n  eventTypeId?: IUUID;\n  eventType?: IEventType;\n  eventStatus?: IEventStatus;\n  isActive?: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n  listDiagnostic?: Array<IDiagnostic | null>;\n}\n\nexport const enum IEventMode {\n  ONLINE = 'ONLINE',\n  FACE_TO_FACE = 'FACE_TO_FACE'\n}\n\nexport interface IEventSession {\n  projectId: IUUID;\n  title?: string;\n  image?: string;\n  price: IDecimal;\n  description?: string;\n  duration: number;\n  eventMode?: IEventMode;\n  event?: IEvent;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IEventMember {\n  eventId: IUUID;\n  event: IEvent;\n  memberId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: ICustomMemberDto;\n}\n\nexport const enum IEventVisibility {\n  PUBLIC = 'PUBLIC',\n  PRIVATE = 'PRIVATE'\n}\n\nexport interface IEventCharge {\n  eventId: IUUID;\n  event?: IEvent;\n  price?: IDecimal;\n  description?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IEventStatus {\n  CLOSED = 'CLOSED',\n  OPEN = 'OPEN'\n}\n\nexport interface IDiagnostic {\n  medicines?: Array<IMedicine>;\n  eventId: IUUID;\n  projectId: IUUID;\n  memberId: IUUID;\n  content?: string;\n  isVisible: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMedicine {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventId: IUUID;\n  medicineName: string;\n  take: string;\n  frecuency: string;\n  duration: string;\n  isVisible: boolean;\n  position: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IEventFilterInput {\n  and?: Array<IEventFilterInput>;\n  or?: Array<IEventFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  location?: IStringOperationFilterInput;\n  color?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  file?: IStringOperationFilterInput;\n  roomId?: IStringOperationFilterInput;\n  eventDate?: IComparableDateTimeOperationFilterInput;\n  finishDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  eventMode?: INullableOfEventModeOperationFilterInput;\n  eventSessionId?: IComparableNullableOfGuidOperationFilterInput;\n  eventSession?: IEventSessionFilterInput;\n  eventMembers?: IListFilterInputTypeOfEventMemberFilterInput;\n  sendDetails?: IBooleanOperationFilterInput;\n  sendRemember?: IBooleanOperationFilterInput;\n  totalPrice?: IComparableNullableOfDecimalOperationFilterInput;\n  discount?: IComparableNullableOfDecimalOperationFilterInput;\n  visibility?: INullableOfEventVisibilityOperationFilterInput;\n  eventCharges?: IListFilterInputTypeOfEventChargeFilterInput;\n  eventTypeId?: IComparableNullableOfGuidOperationFilterInput;\n  eventType?: IEventTypeFilterInput;\n  eventStatus?: INullableOfEventStatusOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEventModeOperationFilterInput {\n  eq?: IEventMode;\n  neq?: IEventMode;\n  in?: Array<IEventMode | null>;\n  nin?: Array<IEventMode | null>;\n}\n\nexport interface IEventSessionFilterInput {\n  and?: Array<IEventSessionFilterInput>;\n  or?: Array<IEventSessionFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  image?: IStringOperationFilterInput;\n  price?: IComparableDecimalOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  duration?: IComparableInt32OperationFilterInput;\n  eventMode?: INullableOfEventModeOperationFilterInput;\n  event?: IEventFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfEventMemberFilterInput {\n  all?: IEventMemberFilterInput;\n  none?: IEventMemberFilterInput;\n  some?: IEventMemberFilterInput;\n  any?: boolean;\n}\n\nexport interface IEventMemberFilterInput {\n  and?: Array<IEventMemberFilterInput>;\n  or?: Array<IEventMemberFilterInput>;\n  eventId?: IComparableGuidOperationFilterInput;\n  event?: IEventFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEventVisibilityOperationFilterInput {\n  eq?: IEventVisibility;\n  neq?: IEventVisibility;\n  in?: Array<IEventVisibility | null>;\n  nin?: Array<IEventVisibility | null>;\n}\n\nexport interface IListFilterInputTypeOfEventChargeFilterInput {\n  all?: IEventChargeFilterInput;\n  none?: IEventChargeFilterInput;\n  some?: IEventChargeFilterInput;\n  any?: boolean;\n}\n\nexport interface IEventChargeFilterInput {\n  and?: Array<IEventChargeFilterInput>;\n  or?: Array<IEventChargeFilterInput>;\n  eventId?: IComparableGuidOperationFilterInput;\n  event?: IEventFilterInput;\n  price?: IComparableNullableOfDecimalOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEventTypeFilterInput {\n  and?: Array<IEventTypeFilterInput>;\n  or?: Array<IEventTypeFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  price?: IComparableNullableOfDecimalOperationFilterInput;\n  subEventTypes?: IListFilterInputTypeOfSubEventTypeFilterInput;\n  image?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfSubEventTypeFilterInput {\n  all?: ISubEventTypeFilterInput;\n  none?: ISubEventTypeFilterInput;\n  some?: ISubEventTypeFilterInput;\n  any?: boolean;\n}\n\nexport interface ISubEventTypeFilterInput {\n  and?: Array<ISubEventTypeFilterInput>;\n  or?: Array<ISubEventTypeFilterInput>;\n  name?: IStringOperationFilterInput;\n  price?: IComparableDecimalOperationFilterInput;\n  eventTypes?: IListFilterInputTypeOfEventTypeFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfEventTypeFilterInput {\n  all?: IEventTypeFilterInput;\n  none?: IEventTypeFilterInput;\n  some?: IEventTypeFilterInput;\n  any?: boolean;\n}\n\nexport interface INullableOfEventStatusOperationFilterInput {\n  eq?: IEventStatus;\n  neq?: IEventStatus;\n  in?: Array<IEventStatus | null>;\n  nin?: Array<IEventStatus | null>;\n}\n\nexport interface IEventSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  title?: ISortEnumType;\n  location?: ISortEnumType;\n  color?: ISortEnumType;\n  description?: ISortEnumType;\n  file?: ISortEnumType;\n  roomId?: ISortEnumType;\n  eventDate?: ISortEnumType;\n  finishDate?: ISortEnumType;\n  eventMode?: ISortEnumType;\n  eventSessionId?: ISortEnumType;\n  eventSession?: IEventSessionSortInput;\n  sendDetails?: ISortEnumType;\n  sendRemember?: ISortEnumType;\n  totalPrice?: ISortEnumType;\n  discount?: ISortEnumType;\n  visibility?: ISortEnumType;\n  eventTypeId?: ISortEnumType;\n  eventType?: IEventTypeSortInput;\n  eventStatus?: ISortEnumType;\n  isActive?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IEventSessionSortInput {\n  projectId?: ISortEnumType;\n  title?: ISortEnumType;\n  image?: ISortEnumType;\n  price?: ISortEnumType;\n  description?: ISortEnumType;\n  duration?: ISortEnumType;\n  eventMode?: ISortEnumType;\n  event?: IEventSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IEventTypeSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  price?: ISortEnumType;\n  image?: ISortEnumType;\n  description?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IEventCollectionSegment {\n  items?: Array<IEvent>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IHiringFilterInput {\n  and?: Array<IHiringFilterInput>;\n  or?: Array<IHiringFilterInput>;\n  projectRoleId?: IComparableNullableOfGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  dateStart?: IComparableNullableOfDateTimeOperationFilterInput;\n  dateEnd?: IComparableNullableOfDateTimeOperationFilterInput;\n  job?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  amount?: IComparableNullableOfDecimalOperationFilterInput;\n  amountWritted?: IStringOperationFilterInput;\n  amountPerHour?: IComparableNullableOfDecimalOperationFilterInput;\n  vacationDays?: IComparableInt32OperationFilterInput;\n  professionalLicense?: IStringOperationFilterInput;\n  cURP?: IStringOperationFilterInput;\n  iNE?: IStringOperationFilterInput;\n  infonavit?: IStringOperationFilterInput;\n  nationality?: IStringOperationFilterInput;\n  birthNationality?: IStringOperationFilterInput;\n  civilState?: INullableOfEnumCivilStateOperationFilterInput;\n  benefits?: INullableOfEnumBenefitsOperationFilterInput;\n  enumHiringType?: INullableOfEnumHiringTypeOperationFilterInput;\n  hiringTypeId?: IComparableNullableOfGuidOperationFilterInput;\n  hiringType?: IHiringTypeFilterInput;\n  collaborators?: IListFilterInputTypeOfCollaboratorFilterInput;\n  hiringServices?: IListFilterInputTypeOfHiringServiceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumCivilStateOperationFilterInput {\n  eq?: IEnumCivilState;\n  neq?: IEnumCivilState;\n  in?: Array<IEnumCivilState | null>;\n  nin?: Array<IEnumCivilState | null>;\n}\n\nexport interface INullableOfEnumBenefitsOperationFilterInput {\n  eq?: IEnumBenefits;\n  neq?: IEnumBenefits;\n  in?: Array<IEnumBenefits | null>;\n  nin?: Array<IEnumBenefits | null>;\n}\n\nexport interface INullableOfEnumHiringTypeOperationFilterInput {\n  eq?: IEnumHiringType;\n  neq?: IEnumHiringType;\n  in?: Array<IEnumHiringType | null>;\n  nin?: Array<IEnumHiringType | null>;\n}\n\nexport interface IHiringTypeFilterInput {\n  and?: Array<IHiringTypeFilterInput>;\n  or?: Array<IHiringTypeFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  hirings?: IListFilterInputTypeOfHiringFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfHiringFilterInput {\n  all?: IHiringFilterInput;\n  none?: IHiringFilterInput;\n  some?: IHiringFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfCollaboratorFilterInput {\n  all?: ICollaboratorFilterInput;\n  none?: ICollaboratorFilterInput;\n  some?: ICollaboratorFilterInput;\n  any?: boolean;\n}\n\nexport interface ICollaboratorFilterInput {\n  and?: Array<ICollaboratorFilterInput>;\n  or?: Array<ICollaboratorFilterInput>;\n  hours?: IComparableNullableOfInt32OperationFilterInput;\n  costByHour?: IComparableNullableOfDecimalOperationFilterInput;\n  role?: IStringOperationFilterInput;\n  projectRoleId?: IComparableNullableOfGuidOperationFilterInput;\n  timeEstimated?: IStringOperationFilterInput;\n  amount?: IComparableNullableOfDecimalOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  reportedHours?: IComparableNullableOfInt32OperationFilterInput;\n  resourceQuoteDetailId?: IComparableNullableOfGuidOperationFilterInput;\n  hiringId?: IComparableNullableOfGuidOperationFilterInput;\n  resourceQuoteDetail?: IResourceQuoteDetailFilterInput;\n  hiring?: IHiringFilterInput;\n  collaboratorHours?: IListFilterInputTypeOfCollaboratorHoursFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IResourceQuoteDetailFilterInput {\n  and?: Array<IResourceQuoteDetailFilterInput>;\n  or?: Array<IResourceQuoteDetailFilterInput>;\n  title?: IStringOperationFilterInput;\n  serviceId?: IComparableGuidOperationFilterInput;\n  resourceQuoteId?: IComparableNullableOfGuidOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  nomenclature?: IStringOperationFilterInput;\n  consecutive?: IComparableInt32OperationFilterInput;\n  earningPercentage?: IComparableDecimalOperationFilterInput;\n  totalCost?: IComparableDecimalOperationFilterInput;\n  totalHours?: IComparableInt32OperationFilterInput;\n  totalEarnings?: IComparableDecimalOperationFilterInput;\n  totalReportedHours?: IComparableInt32OperationFilterInput;\n  resourceQuote?: IResourceQuoteFilterInput;\n  resourceQuoteDetailBoardRow?: IListFilterInputTypeOfResourceQuoteDetailBoardRowFilterInput;\n  collaborators?: IListFilterInputTypeOfCollaboratorFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IResourceQuoteFilterInput {\n  and?: Array<IResourceQuoteFilterInput>;\n  or?: Array<IResourceQuoteFilterInput>;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  areaId?: IComparableNullableOfGuidOperationFilterInput;\n  approvedDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  status?: IEnumResourceQuoteStatusOperationFilterInput;\n  totalCostServices?: IComparableDecimalOperationFilterInput;\n  totalHoursServices?: IComparableInt32OperationFilterInput;\n  totalEarnings?: IComparableDecimalOperationFilterInput;\n  totalReportedHours?: IComparableInt32OperationFilterInput;\n  calculatedClosingDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  resourceQuoteDetails?: IListFilterInputTypeOfResourceQuoteDetailFilterInput;\n  proposals?: IListFilterInputTypeOfProposalFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEnumResourceQuoteStatusOperationFilterInput {\n  eq?: IEnumResourceQuoteStatus;\n  neq?: IEnumResourceQuoteStatus;\n  in?: Array<IEnumResourceQuoteStatus>;\n  nin?: Array<IEnumResourceQuoteStatus>;\n}\n\nexport interface IListFilterInputTypeOfResourceQuoteDetailFilterInput {\n  all?: IResourceQuoteDetailFilterInput;\n  none?: IResourceQuoteDetailFilterInput;\n  some?: IResourceQuoteDetailFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfProposalFilterInput {\n  all?: IProposalFilterInput;\n  none?: IProposalFilterInput;\n  some?: IProposalFilterInput;\n  any?: boolean;\n}\n\nexport interface IProposalFilterInput {\n  and?: Array<IProposalFilterInput>;\n  or?: Array<IProposalFilterInput>;\n  title?: IStringOperationFilterInput;\n  state?: IStringOperationFilterInput;\n  city?: IStringOperationFilterInput;\n  pDF?: IStringOperationFilterInput;\n  introduction?: IStringOperationFilterInput;\n  summary?: IStringOperationFilterInput;\n  methodology?: IStringOperationFilterInput;\n  timeEstimate?: IStringOperationFilterInput;\n  finishDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  discount?: IComparableNullableOfDecimalOperationFilterInput;\n  discountType?: INullableOfEnumDiscountOperationFilterInput;\n  tax?: IComparableNullableOfDecimalOperationFilterInput;\n  taxType?: INullableOfEnumDiscountOperationFilterInput;\n  status?: IEnumResourceQuoteStatusOperationFilterInput;\n  total?: IComparableDecimalOperationFilterInput;\n  resourceQuoteId?: IComparableGuidOperationFilterInput;\n  resourceQuote?: IResourceQuoteFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumDiscountOperationFilterInput {\n  eq?: IEnumDiscount;\n  neq?: IEnumDiscount;\n  in?: Array<IEnumDiscount | null>;\n  nin?: Array<IEnumDiscount | null>;\n}\n\nexport interface IListFilterInputTypeOfResourceQuoteDetailBoardRowFilterInput {\n  all?: IResourceQuoteDetailBoardRowFilterInput;\n  none?: IResourceQuoteDetailBoardRowFilterInput;\n  some?: IResourceQuoteDetailBoardRowFilterInput;\n  any?: boolean;\n}\n\nexport interface IResourceQuoteDetailBoardRowFilterInput {\n  and?: Array<IResourceQuoteDetailBoardRowFilterInput>;\n  or?: Array<IResourceQuoteDetailBoardRowFilterInput>;\n  boardRowId?: IComparableGuidOperationFilterInput;\n  resourceQuoteDetailId?: IComparableGuidOperationFilterInput;\n  resourceQuoteDetail?: IResourceQuoteDetailFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCollaboratorHoursFilterInput {\n  all?: ICollaboratorHoursFilterInput;\n  none?: ICollaboratorHoursFilterInput;\n  some?: ICollaboratorHoursFilterInput;\n  any?: boolean;\n}\n\nexport interface ICollaboratorHoursFilterInput {\n  and?: Array<ICollaboratorHoursFilterInput>;\n  or?: Array<ICollaboratorHoursFilterInput>;\n  date?: IComparableNullableOfDateTimeOperationFilterInput;\n  initialHour?: IStringOperationFilterInput;\n  finalHour?: IStringOperationFilterInput;\n  totalHours?: IComparableInt32OperationFilterInput;\n  collaboratorId?: IComparableGuidOperationFilterInput;\n  collaborator?: ICollaboratorFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfHiringServiceFilterInput {\n  all?: IHiringServiceFilterInput;\n  none?: IHiringServiceFilterInput;\n  some?: IHiringServiceFilterInput;\n  any?: boolean;\n}\n\nexport interface IHiringServiceFilterInput {\n  and?: Array<IHiringServiceFilterInput>;\n  or?: Array<IHiringServiceFilterInput>;\n  serviceId?: IComparableGuidOperationFilterInput;\n  hiringId?: IComparableGuidOperationFilterInput;\n  hiring?: IHiringFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IHiringSortInput {\n  projectRoleId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  dateStart?: ISortEnumType;\n  dateEnd?: ISortEnumType;\n  job?: ISortEnumType;\n  description?: ISortEnumType;\n  amount?: ISortEnumType;\n  amountWritted?: ISortEnumType;\n  amountPerHour?: ISortEnumType;\n  vacationDays?: ISortEnumType;\n  professionalLicense?: ISortEnumType;\n  cURP?: ISortEnumType;\n  iNE?: ISortEnumType;\n  infonavit?: ISortEnumType;\n  nationality?: ISortEnumType;\n  birthNationality?: ISortEnumType;\n  civilState?: ISortEnumType;\n  benefits?: ISortEnumType;\n  enumHiringType?: ISortEnumType;\n  hiringTypeId?: ISortEnumType;\n  hiringType?: IHiringTypeSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IHiringTypeSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IShiftFilterInput {\n  and?: Array<IShiftFilterInput>;\n  or?: Array<IShiftFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  timeStart?: IComparableTimeSpanOperationFilterInput;\n  timeEnd?: IComparableTimeSpanOperationFilterInput;\n  dayId?: IComparableGuidOperationFilterInput;\n  day?: IDayFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IComparableTimeSpanOperationFilterInput {\n  eq?: ITimeSpan;\n  neq?: ITimeSpan;\n  in?: Array<ITimeSpan>;\n  nin?: Array<ITimeSpan>;\n  gt?: ITimeSpan;\n  ngt?: ITimeSpan;\n  gte?: ITimeSpan;\n  ngte?: ITimeSpan;\n  lt?: ITimeSpan;\n  nlt?: ITimeSpan;\n  lte?: ITimeSpan;\n  nlte?: ITimeSpan;\n}\n\nexport interface IDayFilterInput {\n  and?: Array<IDayFilterInput>;\n  or?: Array<IDayFilterInput>;\n  name?: IStringOperationFilterInput;\n  codeDay?: IStringOperationFilterInput;\n  shifts?: IListFilterInputTypeOfShiftFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfShiftFilterInput {\n  all?: IShiftFilterInput;\n  none?: IShiftFilterInput;\n  some?: IShiftFilterInput;\n  any?: boolean;\n}\n\nexport interface IShiftSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  timeStart?: ISortEnumType;\n  timeEnd?: ISortEnumType;\n  dayId?: ISortEnumType;\n  day?: IDaySortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDaySortInput {\n  name?: ISortEnumType;\n  codeDay?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IResourceQuoteSortInput {\n  memberId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  title?: ISortEnumType;\n  areaId?: ISortEnumType;\n  approvedDate?: ISortEnumType;\n  status?: ISortEnumType;\n  totalCostServices?: ISortEnumType;\n  totalHoursServices?: ISortEnumType;\n  totalEarnings?: ISortEnumType;\n  totalReportedHours?: ISortEnumType;\n  calculatedClosingDate?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IResourceQuoteCollectionSegment {\n  items?: Array<IResourceQuote>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IResourceQuoteDetailSortInput {\n  title?: ISortEnumType;\n  serviceId?: ISortEnumType;\n  resourceQuoteId?: ISortEnumType;\n  description?: ISortEnumType;\n  nomenclature?: ISortEnumType;\n  consecutive?: ISortEnumType;\n  earningPercentage?: ISortEnumType;\n  totalCost?: ISortEnumType;\n  totalHours?: ISortEnumType;\n  totalEarnings?: ISortEnumType;\n  totalReportedHours?: ISortEnumType;\n  resourceQuote?: IResourceQuoteSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IResourceQuoteDetailCollectionSegment {\n  items?: Array<IResourceQuoteDetail>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IProposalSortInput {\n  title?: ISortEnumType;\n  state?: ISortEnumType;\n  city?: ISortEnumType;\n  pDF?: ISortEnumType;\n  introduction?: ISortEnumType;\n  summary?: ISortEnumType;\n  methodology?: ISortEnumType;\n  timeEstimate?: ISortEnumType;\n  finishDate?: ISortEnumType;\n  discount?: ISortEnumType;\n  discountType?: ISortEnumType;\n  tax?: ISortEnumType;\n  taxType?: ISortEnumType;\n  status?: ISortEnumType;\n  total?: ISortEnumType;\n  resourceQuoteId?: ISortEnumType;\n  resourceQuote?: IResourceQuoteSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProposalCollectionSegment {\n  items?: Array<IProposal>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICollaboratorSortInput {\n  hours?: ISortEnumType;\n  costByHour?: ISortEnumType;\n  role?: ISortEnumType;\n  projectRoleId?: ISortEnumType;\n  timeEstimated?: ISortEnumType;\n  amount?: ISortEnumType;\n  memberId?: ISortEnumType;\n  reportedHours?: ISortEnumType;\n  resourceQuoteDetailId?: ISortEnumType;\n  hiringId?: ISortEnumType;\n  resourceQuoteDetail?: IResourceQuoteDetailSortInput;\n  hiring?: IHiringSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICollaboratorCollectionSegment {\n  items?: Array<ICollaborator>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICollaboratorHoursSortInput {\n  date?: ISortEnumType;\n  initialHour?: ISortEnumType;\n  finalHour?: ISortEnumType;\n  totalHours?: ISortEnumType;\n  collaboratorId?: ISortEnumType;\n  collaborator?: ICollaboratorSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICollaboratorHoursCollectionSegment {\n  items?: Array<ICollaboratorHours>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IHoursReportedDTO {\n  totalHours: number;\n  totalReportedHours: number;\n  projectsActive: number;\n}\n\nexport const enum ITemplateType {\n  WHATSAPP = 'WHATSAPP',\n  PUSH_NOTIFICATION = 'PUSH_NOTIFICATION',\n  EMAIL = 'EMAIL',\n  SMS = 'SMS',\n  CAMPAIGN = 'CAMPAIGN',\n  WHATSAPP_MESSAGES = 'WHATSAPP_MESSAGES'\n}\n\nexport interface IConfigurationTemplate {\n  projectId: IUUID;\n  templateType: ITemplateType;\n  config: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IComponent {\n  keyName: string;\n  services: string;\n  description: string;\n  type: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IWebsitePageSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  url?: ISortEnumType;\n  seoWebSitePage?: ISortEnumType;\n  description?: ISortEnumType;\n  isActive?: ISortEnumType;\n  scriptHead?: ISortEnumType;\n  scriptFooter?: ISortEnumType;\n  position?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IWebsitePage {\n  projectId: IUUID;\n  name?: string;\n  url?: string;\n  seoWebSitePage?: string;\n  description?: string;\n  isActive?: boolean;\n  scriptHead?: string;\n  scriptFooter?: string;\n  position: number;\n  websitePageComponents?: Array<IWebsitePageComponent>;\n  websitePageSeos?: Array<IWebsitePageSeo>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IWebsitePageComponent {\n  websitePageId: IUUID;\n  websitePage?: IWebsitePage;\n  keyName?: string;\n  props?: string;\n  position: number;\n  parentId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IWebsitePageSeo {\n  websitePageId: IUUID;\n  websitePage?: IWebsitePage;\n  title?: string;\n  description?: string;\n  keywords?: string;\n  canonicalUrl?: string;\n  robots?: string;\n  googlebot?: string;\n  author?: string;\n  language?: string;\n  twitterCard?: string;\n  twitterSite?: string;\n  twitterCreator?: string;\n  twitterTitle?: string;\n  twitterDescription?: string;\n  twitterUrl?: string;\n  twitterImageAlt?: string;\n  twitterImageTitle?: string;\n  twitterImageWidth?: string;\n  twitterImageHeight?: string;\n  twitterImage?: string;\n  openGraphTitle?: string;\n  openGraphDescription?: string;\n  openGraphUrl?: string;\n  openGraphImageAlt?: string;\n  openGraphImageTitle?: string;\n  openGraphImageWidth?: string;\n  openGraphImageHeight?: string;\n  openGraphImage?: string;\n  openGraphType?: string;\n  openGraphSiteName?: string;\n  openGraphFacebookAppId?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProjectPlanSubscriptionFilterInput {\n  and?: Array<IProjectPlanSubscriptionFilterInput>;\n  or?: Array<IProjectPlanSubscriptionFilterInput>;\n  projectPlanId?: IComparableGuidOperationFilterInput;\n  projectPlan?: IProjectPlanFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProjectPlanFilterInput {\n  and?: Array<IProjectPlanFilterInput>;\n  or?: Array<IProjectPlanFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  cost?: IComparableDoubleOperationFilterInput;\n  serviceProductId?: IStringOperationFilterInput;\n  currency?: IStringOperationFilterInput;\n  changeNominators?: IStringOperationFilterInput;\n  default?: IBooleanOperationFilterInput;\n  rateBase?: IBooleanOperationFilterInput;\n  frequencyPayment?: IFrequencyPaymentOperationFilterInput;\n  availableNominators?: IComparableInt32OperationFilterInput;\n  accessExternalNominators?: IBooleanOperationFilterInput;\n  accessExternalProspects?: IBooleanOperationFilterInput;\n  vendorRakingDisplay?: IBooleanOperationFilterInput;\n  accessConnectionProspectsWhatsapp?: IBooleanOperationFilterInput;\n  serviceSupport?: IBooleanOperationFilterInput;\n  fee?: IComparableInt32OperationFilterInput;\n  projectPlanSubscriptions?: IListFilterInputTypeOfProjectPlanSubscriptionFilterInput;\n  businessRuleProjectPlans?: IListFilterInputTypeOfBusinessRuleProjectPlanFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IFrequencyPaymentOperationFilterInput {\n  eq?: IFrequencyPayment;\n  neq?: IFrequencyPayment;\n  in?: Array<IFrequencyPayment>;\n  nin?: Array<IFrequencyPayment>;\n}\n\nexport interface IListFilterInputTypeOfProjectPlanSubscriptionFilterInput {\n  all?: IProjectPlanSubscriptionFilterInput;\n  none?: IProjectPlanSubscriptionFilterInput;\n  some?: IProjectPlanSubscriptionFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfBusinessRuleProjectPlanFilterInput {\n  all?: IBusinessRuleProjectPlanFilterInput;\n  none?: IBusinessRuleProjectPlanFilterInput;\n  some?: IBusinessRuleProjectPlanFilterInput;\n  any?: boolean;\n}\n\nexport interface IBusinessRuleProjectPlanFilterInput {\n  and?: Array<IBusinessRuleProjectPlanFilterInput>;\n  or?: Array<IBusinessRuleProjectPlanFilterInput>;\n  businessRuleId?: IComparableGuidOperationFilterInput;\n  businessId?: IComparableNullableOfGuidOperationFilterInput;\n  bussines?: IBusinessFilterInput;\n  businessRule?: IBusinessRuleFilterInput;\n  projectPlanId?: IComparableGuidOperationFilterInput;\n  projectPlan?: IProjectPlanFilterInput;\n  commission?: IStringOperationFilterInput;\n  commissionSell?: IStringOperationFilterInput;\n  commissionProspect?: IStringOperationFilterInput;\n  commissionInterested?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBusinessFilterInput {\n  and?: Array<IBusinessFilterInput>;\n  or?: Array<IBusinessFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  slogan?: IStringOperationFilterInput;\n  image?: IStringOperationFilterInput;\n  businessTypeId?: IComparableNullableOfGuidOperationFilterInput;\n  businessType?: IBusinessTypeFilterInput;\n  businessRuleProjectPlans?: IListFilterInputTypeOfBusinessRuleProjectPlanFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBusinessTypeFilterInput {\n  and?: Array<IBusinessTypeFilterInput>;\n  or?: Array<IBusinessTypeFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  image?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBusinessRuleFilterInput {\n  and?: Array<IBusinessRuleFilterInput>;\n  or?: Array<IBusinessRuleFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  businessId?: IComparableNullableOfGuidOperationFilterInput;\n  business?: IBusinessFilterInput;\n  title?: IStringOperationFilterInput;\n  commissionNominator?: IStringOperationFilterInput;\n  potentialProspectLimit?: IComparableNullableOfInt32OperationFilterInput;\n  allowExtraBonus?: IBooleanOperationFilterInput;\n  minimumBalance?: IComparableNullableOfDoubleOperationFilterInput;\n  idealBalance?: IComparableNullableOfDoubleOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProjectPlanSubscriptionCollectionSegment {\n  items?: Array<IProjectPlanSubscription>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IBusinessCollectionSegment {\n  items?: Array<IBusiness>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IBusinessTypeCollectionSegment {\n  items?: Array<IBusinessType>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IBusinessRuleCollectionSegment {\n  items?: Array<IBusinessRule>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IProjectPlanCollectionSegment {\n  items?: Array<IProjectPlan>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ITemplateFilterInput {\n  and?: Array<ITemplateFilterInput>;\n  or?: Array<ITemplateFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  message?: IStringOperationFilterInput;\n  serviceName?: IStringOperationFilterInput;\n  projectRoleId?: IComparableNullableOfGuidOperationFilterInput;\n  templateType?: ITemplateTypeOperationFilterInput;\n  releaseDate?: IComparableDateTimeOperationFilterInput;\n  couponId?: IComparableNullableOfGuidOperationFilterInput;\n  coupon?: ICouponFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ITemplateTypeOperationFilterInput {\n  eq?: ITemplateType;\n  neq?: ITemplateType;\n  in?: Array<ITemplateType>;\n  nin?: Array<ITemplateType>;\n}\n\nexport interface ICouponFilterInput {\n  and?: Array<ICouponFilterInput>;\n  or?: Array<ICouponFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  beginingDate?: IComparableDateTimeOperationFilterInput;\n  endDate?: IComparableDateTimeOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  roleType?: INullableOfRoleTypeOperationFilterInput;\n  couponRuleType?: ICouponRuleTypeOperationFilterInput;\n  itemToApplyTo?: IComparableNullableOfGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  percentage?: IComparableDoubleOperationFilterInput;\n  ruleAppliesOn?: IRuleAppliesOnOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfRoleTypeOperationFilterInput {\n  eq?: IRoleType;\n  neq?: IRoleType;\n  in?: Array<IRoleType | null>;\n  nin?: Array<IRoleType | null>;\n}\n\nexport const enum IRoleType {\n  NOMINATOR = 'NOMINATOR',\n  SELLER = 'SELLER',\n  PROSPECT = 'PROSPECT'\n}\n\nexport interface ICouponRuleTypeOperationFilterInput {\n  eq?: ICouponRuleType;\n  neq?: ICouponRuleType;\n  in?: Array<ICouponRuleType>;\n  nin?: Array<ICouponRuleType>;\n}\n\nexport const enum ICouponRuleType {\n  FIXED_AMOUNT = 'FIXED_AMOUNT',\n  DISCOUNT = 'DISCOUNT'\n}\n\nexport interface IRuleAppliesOnOperationFilterInput {\n  eq?: IRuleAppliesOn;\n  neq?: IRuleAppliesOn;\n  in?: Array<IRuleAppliesOn>;\n  nin?: Array<IRuleAppliesOn>;\n}\n\nexport const enum IRuleAppliesOn {\n  MEMBERSHIP = 'MEMBERSHIP',\n  PRODUCT = 'PRODUCT',\n  CATEGORIES = 'CATEGORIES'\n}\n\nexport interface ITemplate {\n  projectId: IUUID;\n  title: string;\n  message?: string;\n  serviceName?: string;\n  projectRoleId?: IUUID;\n  templateType: ITemplateType;\n  releaseDate: IDateTime;\n  couponId?: IUUID;\n  coupon?: ICoupon;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  projectRole?: IProjectRole;\n}\n\nexport interface ICoupon {\n  projectId: IUUID;\n  beginingDate: IDateTime;\n  endDate: IDateTime;\n  code?: string;\n  roleType?: IRoleType;\n  couponRuleType: ICouponRuleType;\n  itemToApplyTo?: IUUID;\n  title?: string;\n  percentage: number;\n  ruleAppliesOn: IRuleAppliesOn;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IErrorPageFilterInput {\n  and?: Array<IErrorPageFilterInput>;\n  or?: Array<IErrorPageFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  page?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  errorPageValidations?: IListFilterInputTypeOfErrorPageValidationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfErrorPageValidationFilterInput {\n  all?: IErrorPageValidationFilterInput;\n  none?: IErrorPageValidationFilterInput;\n  some?: IErrorPageValidationFilterInput;\n  any?: boolean;\n}\n\nexport interface IErrorPageValidationFilterInput {\n  and?: Array<IErrorPageValidationFilterInput>;\n  or?: Array<IErrorPageValidationFilterInput>;\n  errorPageId?: IComparableGuidOperationFilterInput;\n  errorPage?: IErrorPageFilterInput;\n  keyName?: IStringOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  textMessage?: IStringOperationFilterInput;\n  textAccept?: IStringOperationFilterInput;\n  textCancel?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IErrorPage {\n  projectId: IUUID;\n  page: string;\n  description?: string;\n  errorPageValidations?: Array<IErrorPageValidation>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IErrorPageValidation {\n  errorPageId: IUUID;\n  errorPage: IErrorPage;\n  keyName: string;\n  title?: string;\n  textMessage?: string;\n  textAccept?: string;\n  textCancel?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICouponTemplateFilterInput {\n  and?: Array<ICouponTemplateFilterInput>;\n  or?: Array<ICouponTemplateFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  templateId?: IComparableGuidOperationFilterInput;\n  couponId?: IComparableGuidOperationFilterInput;\n  template?: ITemplateFilterInput;\n  coupon?: ICouponFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICouponTemplate {\n  projectId: IUUID;\n  templateId: IUUID;\n  couponId: IUUID;\n  template?: ITemplate;\n  coupon?: ICoupon;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDocumentCategoryFilterInput {\n  and?: Array<IDocumentCategoryFilterInput>;\n  or?: Array<IDocumentCategoryFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  documentCategoryDetails?: IListFilterInputTypeOfDocumentCategoryDetailFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDocumentCategoryDetailFilterInput {\n  all?: IDocumentCategoryDetailFilterInput;\n  none?: IDocumentCategoryDetailFilterInput;\n  some?: IDocumentCategoryDetailFilterInput;\n  any?: boolean;\n}\n\nexport interface IDocumentCategoryDetailFilterInput {\n  and?: Array<IDocumentCategoryDetailFilterInput>;\n  or?: Array<IDocumentCategoryDetailFilterInput>;\n  documentId?: IComparableGuidOperationFilterInput;\n  documentCategoryId?: IComparableGuidOperationFilterInput;\n  document?: IDocumentFilterInput;\n  documentCategory?: IDocumentCategoryFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IDocumentFilterInput {\n  and?: Array<IDocumentFilterInput>;\n  or?: Array<IDocumentFilterInput>;\n  name?: IStringOperationFilterInput;\n  url?: IStringOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  documentTemplates?: IListFilterInputTypeOfDocumentTemplateFilterInput;\n  documentCategoryDetails?: IListFilterInputTypeOfDocumentCategoryDetailFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDocumentTemplateFilterInput {\n  all?: IDocumentTemplateFilterInput;\n  none?: IDocumentTemplateFilterInput;\n  some?: IDocumentTemplateFilterInput;\n  any?: boolean;\n}\n\nexport interface IDocumentTemplateFilterInput {\n  and?: Array<IDocumentTemplateFilterInput>;\n  or?: Array<IDocumentTemplateFilterInput>;\n  name?: IStringOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  documentId?: IComparableNullableOfGuidOperationFilterInput;\n  document?: IDocumentFilterInput;\n  templatePages?: IListFilterInputTypeOfTemplatePageFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfTemplatePageFilterInput {\n  all?: ITemplatePageFilterInput;\n  none?: ITemplatePageFilterInput;\n  some?: ITemplatePageFilterInput;\n  any?: boolean;\n}\n\nexport interface ITemplatePageFilterInput {\n  and?: Array<ITemplatePageFilterInput>;\n  or?: Array<ITemplatePageFilterInput>;\n  page?: IComparableNullableOfInt32OperationFilterInput;\n  url?: IStringOperationFilterInput;\n  templateId?: IComparableNullableOfGuidOperationFilterInput;\n  documentTemplate?: IDocumentTemplateFilterInput;\n  documentTags?: IListFilterInputTypeOfDocumentTagFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDocumentTagFilterInput {\n  all?: IDocumentTagFilterInput;\n  none?: IDocumentTagFilterInput;\n  some?: IDocumentTagFilterInput;\n  any?: boolean;\n}\n\nexport interface IDocumentTagFilterInput {\n  and?: Array<IDocumentTagFilterInput>;\n  or?: Array<IDocumentTagFilterInput>;\n  name?: IStringOperationFilterInput;\n  height?: IComparableNullableOfDecimalOperationFilterInput;\n  width?: IComparableNullableOfDecimalOperationFilterInput;\n  verticalAxis?: IComparableNullableOfDecimalOperationFilterInput;\n  horizontalAxis?: IComparableNullableOfDecimalOperationFilterInput;\n  templatePageId?: IComparableNullableOfGuidOperationFilterInput;\n  templatePage?: ITemplatePageFilterInput;\n  documentScans?: IListFilterInputTypeOfDocumentScanFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDocumentScanFilterInput {\n  all?: IDocumentScanFilterInput;\n  none?: IDocumentScanFilterInput;\n  some?: IDocumentScanFilterInput;\n  any?: boolean;\n}\n\nexport interface IDocumentScanFilterInput {\n  and?: Array<IDocumentScanFilterInput>;\n  or?: Array<IDocumentScanFilterInput>;\n  value?: IStringOperationFilterInput;\n  documentTagId?: IComparableNullableOfGuidOperationFilterInput;\n  documentReadId?: IComparableNullableOfGuidOperationFilterInput;\n  documentTag?: IDocumentTagFilterInput;\n  documentRead?: IDocumentReadFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IDocumentReadFilterInput {\n  and?: Array<IDocumentReadFilterInput>;\n  or?: Array<IDocumentReadFilterInput>;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  url?: IStringOperationFilterInput;\n  documentScans?: IListFilterInputTypeOfDocumentScanFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IDocumentCategorySortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  memberId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDocumentCategoryCollectionSegment {\n  items?: Array<IDocumentCategory>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IDocumentCategory {\n  documentCategoryDetails: Array<IDocumentCategoryDetail>;\n  name?: string;\n  description?: string;\n  memberId: IUUID;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDocumentCategoryDetail {\n  documentCategory?: IDocumentCategory;\n  document?: IDocument;\n  documentId: IUUID;\n  documentCategoryId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDocument {\n  documentTemplates: Array<IDocumentTemplate>;\n  documentCategoryDetails: Array<IDocumentCategoryDetail>;\n  name?: string;\n  url?: string;\n  memberId: IUUID;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDocumentTemplate {\n  document?: IDocument;\n  templatePages: Array<ITemplatePage>;\n  name?: string;\n  memberId: IUUID;\n  documentId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ITemplatePage {\n  documentTemplate?: IDocumentTemplate;\n  documentTags: Array<IDocumentTag>;\n  page?: number;\n  url?: string;\n  templateId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDocumentTag {\n  templatePage?: ITemplatePage;\n  documentScans: Array<IDocumentScan>;\n  name?: string;\n  height?: IDecimal;\n  width?: IDecimal;\n  verticalAxis?: IDecimal;\n  horizontalAxis?: IDecimal;\n  templatePageId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDocumentScan {\n  documentTag?: IDocumentTag;\n  documentRead?: IDocumentRead;\n  value?: string;\n  documentTagId?: IUUID;\n  documentReadId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDocumentRead {\n  documentScans?: Array<IDocumentScan>;\n  memberId?: IUUID;\n  projectId?: IUUID;\n  url?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDocumentCategoryDetailSortInput {\n  documentId?: ISortEnumType;\n  documentCategoryId?: ISortEnumType;\n  document?: IDocumentSortInput;\n  documentCategory?: IDocumentCategorySortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDocumentSortInput {\n  name?: ISortEnumType;\n  url?: ISortEnumType;\n  memberId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDocumentCollectionSegment {\n  items?: Array<IDocument>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IDocumentTemplateSortInput {\n  name?: ISortEnumType;\n  memberId?: ISortEnumType;\n  documentId?: ISortEnumType;\n  document?: IDocumentSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDocumentTemplateCollectionSegment {\n  items?: Array<IDocumentTemplate>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ITemplatePageSortInput {\n  page?: ISortEnumType;\n  url?: ISortEnumType;\n  templateId?: ISortEnumType;\n  documentTemplate?: IDocumentTemplateSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ITemplatePageCollectionSegment {\n  items?: Array<ITemplatePage>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IDocumentTagSortInput {\n  name?: ISortEnumType;\n  height?: ISortEnumType;\n  width?: ISortEnumType;\n  verticalAxis?: ISortEnumType;\n  horizontalAxis?: ISortEnumType;\n  templatePageId?: ISortEnumType;\n  templatePage?: ITemplatePageSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDocumentScanSortInput {\n  value?: ISortEnumType;\n  documentTagId?: ISortEnumType;\n  documentReadId?: ISortEnumType;\n  documentTag?: IDocumentTagSortInput;\n  documentRead?: IDocumentReadSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDocumentReadSortInput {\n  memberId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  url?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDocumentReadCollectionSegment {\n  items?: Array<IDocumentRead>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IVideoRoom {\n  projectId: IUUID;\n  sessionId?: string;\n  sessionName?: string;\n  url?: string;\n  creatorName?: string;\n  creatorEmail?: string;\n  dateScheduled?: IDateTime;\n  title?: string;\n  memberId?: IUUID;\n  typeVideo?: ITypeVideo;\n  videoRoomMembers?: Array<IVideoRoomMember>;\n  videoRoomRecords?: Array<IVideoRoomRecord>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum ITypeVideo {\n  STREAM = 'STREAM',\n  MEET = 'MEET'\n}\n\nexport interface IVideoRoomMember {\n  videoRoomId: IUUID;\n  videoRoom?: IVideoRoom;\n  fullName?: string;\n  email?: string;\n  photo?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IVideoRoomRecord {\n  roomName: string;\n  memberId?: IUUID;\n  status?: IEnumRecordStatus;\n  name?: string;\n  path: string;\n  livekitRecordingId: string;\n  videoRoomId: IUUID;\n  videoRoom?: IVideoRoom;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IEnumRecordStatus {\n  IN_PROGRESS = 'IN_PROGRESS',\n  FINISHED = 'FINISHED'\n}\n\nexport interface IRoomTokenLiveKit2 {\n  createtAt: IDateTime;\n  roomName?: string;\n  token?: string;\n  participantIdentity?: string;\n}\n\nexport interface IVideoCall {\n  projectId: IUUID;\n  memberId: IUUID;\n  sessionId: string;\n  sessionName: string;\n  url?: string;\n  members: Array<IVideoCallMember>;\n  services: Array<IVideoCallService>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IVideoCallMember {\n  videoCallId: IUUID;\n  videoCall: IVideoCall;\n  memberId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IVideoCallService {\n  videoCallId: IUUID;\n  videoCall: IVideoCall;\n  serviceCode: string;\n  viewAdmin: boolean;\n  viewUser: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IVideo {\n  sessionId: string;\n  token: string;\n  videoCall: IVideoCall;\n}\n\nexport interface IContactEmail {\n  fullName: string;\n  email: string;\n  sendGridKey: string;\n  fromEmail: string;\n  fromName: string;\n  sendGridTemplateId?: string;\n  description: string;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IServiceFilterInput {\n  and?: Array<IServiceFilterInput>;\n  or?: Array<IServiceFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  areaId?: IComparableGuidOperationFilterInput;\n  area?: IAreaFilterInput;\n  serviceQuizes?: IListFilterInputTypeOfServiceQuizFilterInput;\n  serviceMembers?: IListFilterInputTypeOfServiceMemberFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IAreaFilterInput {\n  and?: Array<IAreaFilterInput>;\n  or?: Array<IAreaFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  services?: IListFilterInputTypeOfServiceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfServiceFilterInput {\n  all?: IServiceFilterInput;\n  none?: IServiceFilterInput;\n  some?: IServiceFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfServiceQuizFilterInput {\n  all?: IServiceQuizFilterInput;\n  none?: IServiceQuizFilterInput;\n  some?: IServiceQuizFilterInput;\n  any?: boolean;\n}\n\nexport interface IServiceQuizFilterInput {\n  and?: Array<IServiceQuizFilterInput>;\n  or?: Array<IServiceQuizFilterInput>;\n  serviceId?: IComparableGuidOperationFilterInput;\n  quizId?: IComparableGuidOperationFilterInput;\n  service?: IServiceFilterInput;\n  quiz?: IQuizFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IQuizFilterInput {\n  and?: Array<IQuizFilterInput>;\n  or?: Array<IQuizFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  note?: IStringOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  answerableOnlyOnce?: IBooleanOperationFilterInput;\n  maxTimesAnswerable?: IComparableNullableOfInt32OperationFilterInput;\n  mailInterviewed?: IBooleanOperationFilterInput;\n  mailCreator?: IBooleanOperationFilterInput;\n  saveSend?: IBooleanOperationFilterInput;\n  tagPosition?: INullableOfEnumTagPositionOperationFilterInput;\n  quizStatus?: INullableOfEnumOnlineQuizStatusOperationFilterInput;\n  quizMembers?: IListFilterInputTypeOfQuizMemberFilterInput;\n  serviceQuizes?: IListFilterInputTypeOfServiceQuizFilterInput;\n  quizSections?: IListFilterInputTypeOfQuizSectionFilterInput;\n  timesAnswered?: IComparableNullableOfInt32OperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumTagPositionOperationFilterInput {\n  eq?: IEnumTagPosition;\n  neq?: IEnumTagPosition;\n  in?: Array<IEnumTagPosition | null>;\n  nin?: Array<IEnumTagPosition | null>;\n}\n\nexport interface INullableOfEnumOnlineQuizStatusOperationFilterInput {\n  eq?: IEnumOnlineQuizStatus;\n  neq?: IEnumOnlineQuizStatus;\n  in?: Array<IEnumOnlineQuizStatus | null>;\n  nin?: Array<IEnumOnlineQuizStatus | null>;\n}\n\nexport interface IListFilterInputTypeOfQuizMemberFilterInput {\n  all?: IQuizMemberFilterInput;\n  none?: IQuizMemberFilterInput;\n  some?: IQuizMemberFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuizMemberFilterInput {\n  and?: Array<IQuizMemberFilterInput>;\n  or?: Array<IQuizMemberFilterInput>;\n  quizId?: IComparableGuidOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  quizStatus?: INullableOfEnumQuizStatusOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  quiz?: IQuizFilterInput;\n  quizQuestionMembers?: IListFilterInputTypeOfQuizQuestionMemberFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumQuizStatusOperationFilterInput {\n  eq?: IEnumQuizStatus;\n  neq?: IEnumQuizStatus;\n  in?: Array<IEnumQuizStatus | null>;\n  nin?: Array<IEnumQuizStatus | null>;\n}\n\nexport interface IListFilterInputTypeOfQuizQuestionMemberFilterInput {\n  all?: IQuizQuestionMemberFilterInput;\n  none?: IQuizQuestionMemberFilterInput;\n  some?: IQuizQuestionMemberFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuizQuestionMemberFilterInput {\n  and?: Array<IQuizQuestionMemberFilterInput>;\n  or?: Array<IQuizQuestionMemberFilterInput>;\n  quizMemberId?: IComparableGuidOperationFilterInput;\n  quizQuestionId?: IComparableGuidOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  quizQuestion?: IQuizQuestionFilterInput;\n  quizMember?: IQuizMemberFilterInput;\n  quizMemberAnswers?: IListFilterInputTypeOfQuizMemberAnswerFilterInput;\n  quizMemberDescriptions?: IListFilterInputTypeOfQuizMemberDescriptionFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IQuizQuestionFilterInput {\n  and?: Array<IQuizQuestionFilterInput>;\n  or?: Array<IQuizQuestionFilterInput>;\n  question?: IStringOperationFilterInput;\n  questionType?: IQuestionTypeOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  helpText?: IStringOperationFilterInput;\n  placeHolder?: IStringOperationFilterInput;\n  required?: IBooleanOperationFilterInput;\n  requireConfimation?: IBooleanOperationFilterInput;\n  maxCharacters?: IComparableNullableOfInt32OperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  tagPosition?: IEnumTagPositionOperationFilterInput;\n  order?: IComparableNullableOfInt32OperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  quizSectionId?: IComparableGuidOperationFilterInput;\n  quizSection?: IQuizSectionFilterInput;\n  quizQuestionPrefabId?: IComparableNullableOfGuidOperationFilterInput;\n  quizQuestionPrefab?: IQuizQuestionPrefabFilterInput;\n  quizQuestionNesteds?: IListFilterInputTypeOfQuizQuestionNestedFilterInput;\n  quizQuestionAnswers?: IListFilterInputTypeOfQuizQuestionAnswerFilterInput;\n  quizQuestionMembers?: IListFilterInputTypeOfQuizQuestionMemberFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEnumTagPositionOperationFilterInput {\n  eq?: IEnumTagPosition;\n  neq?: IEnumTagPosition;\n  in?: Array<IEnumTagPosition>;\n  nin?: Array<IEnumTagPosition>;\n}\n\nexport interface IQuizSectionFilterInput {\n  and?: Array<IQuizSectionFilterInput>;\n  or?: Array<IQuizSectionFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  order?: IComparableNullableOfInt32OperationFilterInput;\n  quizId?: IComparableGuidOperationFilterInput;\n  quiz?: IQuizFilterInput;\n  quizQuestions?: IListFilterInputTypeOfQuizQuestionFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuizQuestionFilterInput {\n  all?: IQuizQuestionFilterInput;\n  none?: IQuizQuestionFilterInput;\n  some?: IQuizQuestionFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuizQuestionPrefabFilterInput {\n  and?: Array<IQuizQuestionPrefabFilterInput>;\n  or?: Array<IQuizQuestionPrefabFilterInput>;\n  name?: IStringOperationFilterInput;\n  icon?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  quizQuestionPrefabGroupId?: IComparableNullableOfGuidOperationFilterInput;\n  quizQuestionPrefabGroup?: IQuizQuestionPrefabGroupFilterInput;\n  quizQuestions?: IListFilterInputTypeOfQuizQuestionFilterInput;\n  quizQuestionPrefabFeatureds?: IListFilterInputTypeOfQuizQuestionPrefabFeaturedFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IQuizQuestionPrefabGroupFilterInput {\n  and?: Array<IQuizQuestionPrefabGroupFilterInput>;\n  or?: Array<IQuizQuestionPrefabGroupFilterInput>;\n  name?: IStringOperationFilterInput;\n  quizQuestionPrefabs?: IListFilterInputTypeOfQuizQuestionPrefabFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuizQuestionPrefabFilterInput {\n  all?: IQuizQuestionPrefabFilterInput;\n  none?: IQuizQuestionPrefabFilterInput;\n  some?: IQuizQuestionPrefabFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfQuizQuestionPrefabFeaturedFilterInput {\n  all?: IQuizQuestionPrefabFeaturedFilterInput;\n  none?: IQuizQuestionPrefabFeaturedFilterInput;\n  some?: IQuizQuestionPrefabFeaturedFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuizQuestionPrefabFeaturedFilterInput {\n  and?: Array<IQuizQuestionPrefabFeaturedFilterInput>;\n  or?: Array<IQuizQuestionPrefabFeaturedFilterInput>;\n  outstand?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  quizQuestionPrefabId?: IComparableNullableOfGuidOperationFilterInput;\n  quizQuestionPrefab?: IQuizQuestionPrefabFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuizQuestionNestedFilterInput {\n  all?: IQuizQuestionNestedFilterInput;\n  none?: IQuizQuestionNestedFilterInput;\n  some?: IQuizQuestionNestedFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuizQuestionNestedFilterInput {\n  and?: Array<IQuizQuestionNestedFilterInput>;\n  or?: Array<IQuizQuestionNestedFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  url?: IStringOperationFilterInput;\n  show?: IBooleanOperationFilterInput;\n  order?: IComparableNullableOfInt32OperationFilterInput;\n  quizQuestionId?: IComparableGuidOperationFilterInput;\n  quizQuestion?: IQuizQuestionFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuizQuestionAnswerFilterInput {\n  all?: IQuizQuestionAnswerFilterInput;\n  none?: IQuizQuestionAnswerFilterInput;\n  some?: IQuizQuestionAnswerFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuizQuestionAnswerFilterInput {\n  and?: Array<IQuizQuestionAnswerFilterInput>;\n  or?: Array<IQuizQuestionAnswerFilterInput>;\n  quizQuestionId?: IComparableGuidOperationFilterInput;\n  quizAnswerId?: IComparableGuidOperationFilterInput;\n  order?: IComparableNullableOfInt32OperationFilterInput;\n  value?: IStringOperationFilterInput;\n  calc?: IComparableNullableOfInt32OperationFilterInput;\n  quizQuestion?: IQuizQuestionFilterInput;\n  quizAnswer?: IQuizAnswerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IQuizAnswerFilterInput {\n  and?: Array<IQuizAnswerFilterInput>;\n  or?: Array<IQuizAnswerFilterInput>;\n  description?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  quizQuestionAnswers?: IListFilterInputTypeOfQuizQuestionAnswerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuizMemberAnswerFilterInput {\n  all?: IQuizMemberAnswerFilterInput;\n  none?: IQuizMemberAnswerFilterInput;\n  some?: IQuizMemberAnswerFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuizMemberAnswerFilterInput {\n  and?: Array<IQuizMemberAnswerFilterInput>;\n  or?: Array<IQuizMemberAnswerFilterInput>;\n  quizQuestionMemberId?: IComparableGuidOperationFilterInput;\n  quizAnswerId?: IComparableGuidOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  quizAnswer?: IQuizAnswerFilterInput;\n  quizQuestionMember?: IQuizQuestionMemberFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuizMemberDescriptionFilterInput {\n  all?: IQuizMemberDescriptionFilterInput;\n  none?: IQuizMemberDescriptionFilterInput;\n  some?: IQuizMemberDescriptionFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuizMemberDescriptionFilterInput {\n  and?: Array<IQuizMemberDescriptionFilterInput>;\n  or?: Array<IQuizMemberDescriptionFilterInput>;\n  quizQuestionMemberId?: IComparableGuidOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  quizQuestionMember?: IQuizQuestionMemberFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuizSectionFilterInput {\n  all?: IQuizSectionFilterInput;\n  none?: IQuizSectionFilterInput;\n  some?: IQuizSectionFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfServiceMemberFilterInput {\n  all?: IServiceMemberFilterInput;\n  none?: IServiceMemberFilterInput;\n  some?: IServiceMemberFilterInput;\n  any?: boolean;\n}\n\nexport interface IServiceMemberFilterInput {\n  and?: Array<IServiceMemberFilterInput>;\n  or?: Array<IServiceMemberFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  serviceId?: IComparableGuidOperationFilterInput;\n  service?: IServiceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IServiceSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  code?: ISortEnumType;\n  active?: ISortEnumType;\n  areaId?: ISortEnumType;\n  area?: IAreaSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IAreaSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  code?: ISortEnumType;\n  active?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IServiceCollectionSegment {\n  items?: Array<IServiceArea>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IAreaCollectionSegment {\n  items?: Array<IArea>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IServiceQuizSortInput {\n  serviceId?: ISortEnumType;\n  quizId?: ISortEnumType;\n  service?: IServiceSortInput;\n  quiz?: IQuizSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  note?: ISortEnumType;\n  projectId?: ISortEnumType;\n  answerableOnlyOnce?: ISortEnumType;\n  maxTimesAnswerable?: ISortEnumType;\n  mailInterviewed?: ISortEnumType;\n  mailCreator?: ISortEnumType;\n  saveSend?: ISortEnumType;\n  tagPosition?: ISortEnumType;\n  quizStatus?: ISortEnumType;\n  timesAnswered?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IServiceQuizCollectionSegment {\n  items?: Array<IServiceQuiz>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizCollectionSegment {\n  items?: Array<IQuiz>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizSectionSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  order?: ISortEnumType;\n  quizId?: ISortEnumType;\n  quiz?: IQuizSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizSectionCollectionSegment {\n  items?: Array<IQuizSection>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizQuestionSortInput {\n  question?: ISortEnumType;\n  questionType?: ISortEnumType;\n  description?: ISortEnumType;\n  helpText?: ISortEnumType;\n  placeHolder?: ISortEnumType;\n  required?: ISortEnumType;\n  requireConfimation?: ISortEnumType;\n  maxCharacters?: ISortEnumType;\n  memberId?: ISortEnumType;\n  tagPosition?: ISortEnumType;\n  order?: ISortEnumType;\n  active?: ISortEnumType;\n  quizSectionId?: ISortEnumType;\n  quizSection?: IQuizSectionSortInput;\n  quizQuestionPrefabId?: ISortEnumType;\n  quizQuestionPrefab?: IQuizQuestionPrefabSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizQuestionPrefabSortInput {\n  name?: ISortEnumType;\n  icon?: ISortEnumType;\n  code?: ISortEnumType;\n  quizQuestionPrefabGroupId?: ISortEnumType;\n  quizQuestionPrefabGroup?: IQuizQuestionPrefabGroupSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizQuestionPrefabGroupSortInput {\n  name?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizQuestionCollectionSegment {\n  items?: Array<IQuizQuestion>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizQuestionAnswerSortInput {\n  quizQuestionId?: ISortEnumType;\n  quizAnswerId?: ISortEnumType;\n  order?: ISortEnumType;\n  value?: ISortEnumType;\n  calc?: ISortEnumType;\n  quizQuestion?: IQuizQuestionSortInput;\n  quizAnswer?: IQuizAnswerSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizAnswerSortInput {\n  description?: ISortEnumType;\n  active?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizQuestionAnswerCollectionSegment {\n  items?: Array<IQuizQuestionAnswer>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizAnswerCollectionSegment {\n  items?: Array<IQuizAnswer>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizMemberSortInput {\n  quizId?: ISortEnumType;\n  email?: ISortEnumType;\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  quizStatus?: ISortEnumType;\n  active?: ISortEnumType;\n  quiz?: IQuizSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizMemberCollectionSegment {\n  items?: Array<IQuizMember>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizMemberGroupedFilterInput {\n  and?: Array<IQuizMemberGroupedFilterInput>;\n  or?: Array<IQuizMemberGroupedFilterInput>;\n  quizMembers?: IListFilterInputTypeOfQuizMemberFilterInput;\n  mail?: IStringOperationFilterInput;\n  manyTimes?: IComparableInt32OperationFilterInput;\n}\n\nexport interface IQuizMemberGroupedSortInput {\n  mail?: ISortEnumType;\n  manyTimes?: ISortEnumType;\n}\n\nexport interface IQuizMemberGroupedCollectionSegment {\n  items?: Array<IQuizMemberGrouped>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizMemberGrouped {\n  quizMembers: Array<IQuizMember>;\n  mail: string;\n  manyTimes: number;\n}\n\nexport interface IQuizQuestionMemberSortInput {\n  quizMemberId?: ISortEnumType;\n  quizQuestionId?: ISortEnumType;\n  active?: ISortEnumType;\n  quizQuestion?: IQuizQuestionSortInput;\n  quizMember?: IQuizMemberSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizQuestionMemberCollectionSegment {\n  items?: Array<IQuizQuestionMember>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizMemberAnswerSortInput {\n  quizQuestionMemberId?: ISortEnumType;\n  quizAnswerId?: ISortEnumType;\n  active?: ISortEnumType;\n  quizAnswer?: IQuizAnswerSortInput;\n  quizQuestionMember?: IQuizQuestionMemberSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizMemberAnswerCollectionSegment {\n  items?: Array<IQuizMemberAnswer>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuizMemberDescriptionSortInput {\n  quizQuestionMemberId?: ISortEnumType;\n  description?: ISortEnumType;\n  active?: ISortEnumType;\n  quizQuestionMember?: IQuizQuestionMemberSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuizMemberDescriptionCollectionSegment {\n  items?: Array<IQuizMemberDescription>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport const enum IEnumNameCatalog {\n  BRAND = 'BRAND',\n  SUB_BRAND = 'SUB_BRAND',\n  MODEL = 'MODEL',\n  DESCRIPTION_MODEL = 'DESCRIPTION_MODEL',\n  SEPOMEX = 'SEPOMEX',\n  OCCUPATION = 'OCCUPATION',\n  BANK = 'BANK',\n  INSURER_SUBBRAND = 'INSURER_SUBBRAND',\n  FISCAL_REGIME_INSURER_SUBBRANCH = 'FISCAL_REGIME_INSURER_SUBBRANCH'\n}\n\nexport interface ICatalog {\n  catalogoJsonString?: string;\n  error?: IErrors;\n}\n\nexport interface IErrors {\n  numero?: number;\n  descripcion?: string;\n}\n\nexport interface IQuotationResponse {\n  jsonCotizacion?: Array<string>;\n  estatus?: number;\n  idCotizacion?: number;\n  error?: IErrors;\n}\n\nexport const enum IEnumFormsPayment {\n  CASH_PAYMENT = 'CASH_PAYMENT',\n  BIANNUAL = 'BIANNUAL',\n  QUARTERLY = 'QUARTERLY',\n  MONTHLY = 'MONTHLY'\n}\n\nexport interface ICoverage {\n  cotizacionId?: number;\n  agente?: string;\n  telefono?: string;\n  email?: string;\n  subramo?: string;\n  detallesPorAseguradora?: Array<IDetailsInsurer>;\n}\n\nexport interface IDetailsInsurer {\n  aseguradoraSubRamoId?: number;\n  claveVehiculo?: string;\n  detallesPorProducto?: Array<IDetailsProduct>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDetailsProduct {\n  productoId?: number;\n  productoNombre?: string;\n  condicionesCoberturas?: Array<IConditionsProduct>;\n  especificaciones?: Array<ISpecs>;\n  detallesPorCobertura?: Array<IDetailsCoverage>;\n  detailsInsurerId: IUUID;\n  detallesPorAseguradora?: IDetailsInsurer;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IConditionsProduct {\n  id?: number;\n  nombre?: string;\n  valor?: string;\n  orden?: number;\n  deducibleAplica?: string;\n  deducibleValor?: string;\n  detailsProductId: IUUID;\n  detallesPorCobertura?: IDetailsProduct;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISpecs {\n  id?: number;\n  nombre?: string;\n  valor?: string;\n  orden?: number;\n  detailsProductId: IUUID;\n  detallesPorCobertura?: IDetailsProduct;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDetailsCoverage {\n  coberturaId?: number;\n  coberturaNombre?: string;\n  coberturaOrden?: number;\n  detalles?: Array<IDetails>;\n  detailsProductId: IUUID;\n  detallesPorCobertura?: IDetailsProduct;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDetails {\n  detalleId?: number;\n  detalleNombre?: string;\n  detalleValor?: string;\n  coberturaOrden?: number;\n  detailsCoverageId: IUUID;\n  detallesPorCobertura?: IDetailsCoverage;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ITransactionFilterInput {\n  and?: Array<ITransactionFilterInput>;\n  or?: Array<ITransactionFilterInput>;\n  companyId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  transactionNumber?: IStringOperationFilterInput;\n  transactionRequest?: IStringOperationFilterInput;\n  transactionToken?: IStringOperationFilterInput;\n  transactionType?: ITransactionTypeOperationFilterInput;\n  transactionStatus?: ITransactionStatusOperationFilterInput;\n  amount?: IComparableDecimalOperationFilterInput;\n  trasactionResponse?: IStringOperationFilterInput;\n  invoiceId?: IComparableNullableOfGuidOperationFilterInput;\n  invoice?: IInvoiceFilterInput;\n  methodPaymentId?: IComparableGuidOperationFilterInput;\n  methodPayment?: IMethodPaymentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ITransactionTypeOperationFilterInput {\n  eq?: ITransactionType;\n  neq?: ITransactionType;\n  in?: Array<ITransactionType>;\n  nin?: Array<ITransactionType>;\n}\n\nexport const enum ITransactionType {\n  DIRECT = 'DIRECT',\n  TO_ACCOUNT = 'TO_ACCOUNT',\n  SUBSCRIPTION = 'SUBSCRIPTION'\n}\n\nexport interface ITransactionStatusOperationFilterInput {\n  eq?: ITransactionStatus;\n  neq?: ITransactionStatus;\n  in?: Array<ITransactionStatus>;\n  nin?: Array<ITransactionStatus>;\n}\n\nexport const enum ITransactionStatus {\n  PAID = 'PAID',\n  PENDING = 'PENDING',\n  ERROR = 'ERROR',\n  CANCEL = 'CANCEL'\n}\n\nexport interface IInvoiceFilterInput {\n  and?: Array<IInvoiceFilterInput>;\n  or?: Array<IInvoiceFilterInput>;\n  invoiceNumber?: IStringOperationFilterInput;\n  invoiceStatus?: IInvoiceStatusOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  invoiceDate?: IComparableDateTimeOperationFilterInput;\n  observations?: IStringOperationFilterInput;\n  subTotal?: IComparableDecimalOperationFilterInput;\n  shippingSale?: IComparableDecimalOperationFilterInput;\n  discount?: IComparableDecimalOperationFilterInput;\n  total?: IComparableDecimalOperationFilterInput;\n  addressId?: IComparableGuidOperationFilterInput;\n  details?: IListFilterInputTypeOfInvoiceDetailFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInvoiceStatusOperationFilterInput {\n  eq?: IInvoiceStatus;\n  neq?: IInvoiceStatus;\n  in?: Array<IInvoiceStatus>;\n  nin?: Array<IInvoiceStatus>;\n}\n\nexport interface IListFilterInputTypeOfInvoiceDetailFilterInput {\n  all?: IInvoiceDetailFilterInput;\n  none?: IInvoiceDetailFilterInput;\n  some?: IInvoiceDetailFilterInput;\n  any?: boolean;\n}\n\nexport interface IInvoiceDetailFilterInput {\n  and?: Array<IInvoiceDetailFilterInput>;\n  or?: Array<IInvoiceDetailFilterInput>;\n  invoiceId?: IComparableGuidOperationFilterInput;\n  invoice?: IInvoiceFilterInput;\n  productId?: IComparableGuidOperationFilterInput;\n  quantity?: IComparableInt32OperationFilterInput;\n  salePrice?: IComparableDecimalOperationFilterInput;\n  totalPrice?: IComparableDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMethodPaymentFilterInput {\n  and?: Array<IMethodPaymentFilterInput>;\n  or?: Array<IMethodPaymentFilterInput>;\n  companyId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  alias?: IStringOperationFilterInput;\n  privateKey?: IStringOperationFilterInput;\n  publicKey?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  servicePayment?: INullableOfServicePaymentOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfServicePaymentOperationFilterInput {\n  eq?: IServicePayment;\n  neq?: IServicePayment;\n  in?: Array<IServicePayment | null>;\n  nin?: Array<IServicePayment | null>;\n}\n\nexport interface ITransactionSortInput {\n  companyId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  transactionNumber?: ISortEnumType;\n  transactionRequest?: ISortEnumType;\n  transactionToken?: ISortEnumType;\n  transactionType?: ISortEnumType;\n  transactionStatus?: ISortEnumType;\n  amount?: ISortEnumType;\n  trasactionResponse?: ISortEnumType;\n  invoiceId?: ISortEnumType;\n  invoice?: IInvoiceSortInput;\n  methodPaymentId?: ISortEnumType;\n  methodPayment?: IMethodPaymentSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInvoiceSortInput {\n  invoiceNumber?: ISortEnumType;\n  invoiceStatus?: ISortEnumType;\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  invoiceDate?: ISortEnumType;\n  observations?: ISortEnumType;\n  subTotal?: ISortEnumType;\n  shippingSale?: ISortEnumType;\n  discount?: ISortEnumType;\n  total?: ISortEnumType;\n  addressId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMethodPaymentSortInput {\n  companyId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  alias?: ISortEnumType;\n  privateKey?: ISortEnumType;\n  publicKey?: ISortEnumType;\n  active?: ISortEnumType;\n  servicePayment?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ITransactionCollectionSegment {\n  items?: Array<Ipayment_Transaction>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface Ipayment_Transaction {\n  companyId?: IUUID;\n  projectId?: IUUID;\n  memberId: IUUID;\n  transactionNumber: string;\n  transactionRequest: string;\n  transactionToken: string;\n  transactionType: ITransactionType;\n  transactionStatus: ITransactionStatus;\n  amount: IDecimal;\n  trasactionResponse: string;\n  invoiceId?: IUUID;\n  invoice?: IInvoice;\n  methodPaymentId: IUUID;\n  methodPayment?: IMethodPayment;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMethodPayment {\n  companyId?: IUUID;\n  projectId?: IUUID;\n  memberId: IUUID;\n  alias: string;\n  privateKey: string;\n  publicKey: string;\n  active: boolean;\n  servicePayment?: IServicePayment;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMethodPaymentCollectionSegment {\n  items?: Array<IMethodPayment>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPlanFilterInput {\n  and?: Array<IPlanFilterInput>;\n  or?: Array<IPlanFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  codeStripe?: IStringOperationFilterInput;\n  status?: IBooleanOperationFilterInput;\n  amount?: IComparableDecimalOperationFilterInput;\n  productId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPlanSortInput {\n  projectId?: ISortEnumType;\n  description?: ISortEnumType;\n  code?: ISortEnumType;\n  codeStripe?: ISortEnumType;\n  status?: ISortEnumType;\n  amount?: ISortEnumType;\n  productId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPlanCollectionSegment {\n  items?: Array<Ipayment_Plan>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface Ipayment_Plan {\n  projectId: IUUID;\n  description?: string;\n  code?: string;\n  codeStripe: string;\n  status: boolean;\n  amount: IDecimal;\n  productId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInvoiceCollectionSegment {\n  items?: Array<IInvoice>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICustomerSuscriptionFilterInput {\n  and?: Array<ICustomerSuscriptionFilterInput>;\n  or?: Array<ICustomerSuscriptionFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  planId?: IComparableGuidOperationFilterInput;\n  plan?: IPlanFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICustomerSuscription {\n  memberId: IUUID;\n  planId: IUUID;\n  plan?: Ipayment_Plan;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProductStripe {\n  projectId: IUUID;\n  productId: IUUID;\n  stripeId: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IAccountKeyFilterInput {\n  and?: Array<IAccountKeyFilterInput>;\n  or?: Array<IAccountKeyFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  detailsSubmitted?: IBooleanOperationFilterInput;\n  accountServiceId?: IStringOperationFilterInput;\n  customerServiceId?: IStringOperationFilterInput;\n  servicePayment?: INullableOfServicePaymentOperationFilterInput;\n  paymentMethods?: IListFilterInputTypeOfPaymentMethodFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPaymentMethodFilterInput {\n  all?: IPaymentMethodFilterInput;\n  none?: IPaymentMethodFilterInput;\n  some?: IPaymentMethodFilterInput;\n  any?: boolean;\n}\n\nexport interface IPaymentMethodFilterInput {\n  and?: Array<IPaymentMethodFilterInput>;\n  or?: Array<IPaymentMethodFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  paymentToken?: IStringOperationFilterInput;\n  default?: IBooleanOperationFilterInput;\n  lastNumbers?: IStringOperationFilterInput;\n  accountKeyId?: IComparableNullableOfGuidOperationFilterInput;\n  accountKey?: IAccountKeyFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IAccountKeySortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  detailsSubmitted?: ISortEnumType;\n  accountServiceId?: ISortEnumType;\n  customerServiceId?: ISortEnumType;\n  servicePayment?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IAccountKeyCollectionSegment {\n  items?: Array<IAccountKey>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICardMethodDTO {\n  paymentMethodId: IUUID;\n  createdAt: IDateTime;\n  default: boolean;\n  brand: string;\n  last4: string;\n  expYear: ILong;\n  expMonth: ILong;\n}\n\n/**\n * The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1.\n */\nexport type ILong = any;\n\nexport interface IVehiclesCarCatalogHdiCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogHdiCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogHdiCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cHdi?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogHdiFilterInput;\n}\n\nexport interface IComparableInt64OperationFilterInput {\n  eq?: ILong;\n  neq?: ILong;\n  in?: Array<ILong>;\n  nin?: Array<ILong>;\n  gt?: ILong;\n  ngt?: ILong;\n  gte?: ILong;\n  ngte?: ILong;\n  lt?: ILong;\n  nlt?: ILong;\n  lte?: ILong;\n  nlte?: ILong;\n}\n\nexport interface IVehiclesCarCatalogHdiFilterInput {\n  and?: Array<IVehiclesCarCatalogHdiFilterInput>;\n  or?: Array<IVehiclesCarCatalogHdiFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  vehiclesCarCatalogHdiCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogHdiCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogHdiCodeYearFilterInput {\n  all?: IVehiclesCarCatalogHdiCodeYearFilterInput;\n  none?: IVehiclesCarCatalogHdiCodeYearFilterInput;\n  some?: IVehiclesCarCatalogHdiCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput {\n  all?: IVehiclesCarCodeRelationFilterInput;\n  none?: IVehiclesCarCodeRelationFilterInput;\n  some?: IVehiclesCarCodeRelationFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCodeRelationFilterInput {\n  and?: Array<IVehiclesCarCodeRelationFilterInput>;\n  or?: Array<IVehiclesCarCodeRelationFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  abaCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  afirmeCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  aigCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  anaCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  atlasCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  axaCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  banorteCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  gnpCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  hdiCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  potosiCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  psCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  qualitasCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  zurichCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  mapfreCodeId?: IComparableNullableOfInt32OperationFilterInput;\n  abaCode?: IVehiclesCarCatalogAbaFilterInput;\n  afirmeCode?: IVehiclesCarCatalogAfirmeFilterInput;\n  aigCode?: IVehiclesCarCatalogAigFilterInput;\n  anaCode?: IVehiclesCarCatalogAnaFilterInput;\n  atlasCode?: IVehiclesCarCatalogAtlaFilterInput;\n  axaCode?: IVehiclesCarCatalogAxaFilterInput;\n  banorteCode?: IVehiclesCarCatalogBanorteFilterInput;\n  gnpCode?: IVehiclesCarCatalogGnpFilterInput;\n  hdiCode?: IVehiclesCarCatalogHdiFilterInput;\n  mapfreCode?: IVehiclesCarCatalogMapfreFilterInput;\n  potosiCode?: IVehiclesCarCatalogPotosiFilterInput;\n  psCode?: IVehiclesCarCatalogPFilterInput;\n  qualitasCode?: IVehiclesCarCatalogQualitaFilterInput;\n  zurichCode?: IVehiclesCarCatalogZurichFilterInput;\n}\n\nexport interface IVehiclesCarCatalogAbaFilterInput {\n  and?: Array<IVehiclesCarCatalogAbaFilterInput>;\n  or?: Array<IVehiclesCarCatalogAbaFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  occupants?: IComparableInt64OperationFilterInput;\n  type?: IStringOperationFilterInput;\n  vehiclesCarCatalogAbaCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogAbaCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogAbaCodeYearFilterInput {\n  all?: IVehiclesCarCatalogAbaCodeYearFilterInput;\n  none?: IVehiclesCarCatalogAbaCodeYearFilterInput;\n  some?: IVehiclesCarCatalogAbaCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogAbaCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogAbaCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogAbaCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cveveh?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogAbaFilterInput;\n}\n\nexport interface IVehiclesCarCatalogAfirmeFilterInput {\n  and?: Array<IVehiclesCarCatalogAfirmeFilterInput>;\n  or?: Array<IVehiclesCarCatalogAfirmeFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  vehiclesCarCatalogAfirmeCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogAfirmeCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogAfirmeCodeYearFilterInput {\n  all?: IVehiclesCarCatalogAfirmeCodeYearFilterInput;\n  none?: IVehiclesCarCatalogAfirmeCodeYearFilterInput;\n  some?: IVehiclesCarCatalogAfirmeCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogAfirmeCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogAfirmeCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogAfirmeCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cAfirme?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogAfirmeFilterInput;\n}\n\nexport interface IVehiclesCarCatalogAigFilterInput {\n  and?: Array<IVehiclesCarCatalogAigFilterInput>;\n  or?: Array<IVehiclesCarCatalogAigFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  year?: IComparableInt32OperationFilterInput;\n  description?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  vehiclesCarcoderelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IVehiclesCarCatalogAnaFilterInput {\n  and?: Array<IVehiclesCarCatalogAnaFilterInput>;\n  or?: Array<IVehiclesCarCatalogAnaFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  vehiclesCarCatalogAnaCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogAnaCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogAnaCodeYearFilterInput {\n  all?: IVehiclesCarCatalogAnaCodeYearFilterInput;\n  none?: IVehiclesCarCatalogAnaCodeYearFilterInput;\n  some?: IVehiclesCarCatalogAnaCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogAnaCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogAnaCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogAnaCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cAna?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogAnaFilterInput;\n}\n\nexport interface IVehiclesCarCatalogAtlaFilterInput {\n  and?: Array<IVehiclesCarCatalogAtlaFilterInput>;\n  or?: Array<IVehiclesCarCatalogAtlaFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  vehiclesCarCatalogAtlasCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogAtlasCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogAtlasCodeYearFilterInput {\n  all?: IVehiclesCarCatalogAtlasCodeYearFilterInput;\n  none?: IVehiclesCarCatalogAtlasCodeYearFilterInput;\n  some?: IVehiclesCarCatalogAtlasCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogAtlasCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogAtlasCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogAtlasCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cAtlas?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogAtlaFilterInput;\n}\n\nexport interface IVehiclesCarCatalogAxaFilterInput {\n  and?: Array<IVehiclesCarCatalogAxaFilterInput>;\n  or?: Array<IVehiclesCarCatalogAxaFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  descriptionLinea?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  camis?: IStringOperationFilterInput;\n  categoria?: IStringOperationFilterInput;\n  segmento?: IStringOperationFilterInput;\n  brandId?: IStringOperationFilterInput;\n  versionId?: IComparableInt32OperationFilterInput;\n  versionIdSec?: IComparableInt32OperationFilterInput;\n  categoriaId?: IComparableInt32OperationFilterInput;\n  lineaId?: IComparableInt32OperationFilterInput;\n  vehiclesCarCatalogAxaCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogAxaCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogAxaCodeYearFilterInput {\n  all?: IVehiclesCarCatalogAxaCodeYearFilterInput;\n  none?: IVehiclesCarCatalogAxaCodeYearFilterInput;\n  some?: IVehiclesCarCatalogAxaCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogAxaCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogAxaCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogAxaCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cAxa?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogAxaFilterInput;\n}\n\nexport interface IVehiclesCarCatalogBanorteFilterInput {\n  and?: Array<IVehiclesCarCatalogBanorteFilterInput>;\n  or?: Array<IVehiclesCarCatalogBanorteFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  vehiclesCarCatalogBanorteCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogBanorteCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogBanorteCodeYearFilterInput {\n  all?: IVehiclesCarCatalogBanorteCodeYearFilterInput;\n  none?: IVehiclesCarCatalogBanorteCodeYearFilterInput;\n  some?: IVehiclesCarCatalogBanorteCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogBanorteCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogBanorteCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogBanorteCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cBanorte?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogBanorteFilterInput;\n}\n\nexport interface IVehiclesCarCatalogGnpFilterInput {\n  and?: Array<IVehiclesCarCatalogGnpFilterInput>;\n  or?: Array<IVehiclesCarCatalogGnpFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  vehiclesCarCatalogGnpCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogGnpCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogGnpCodeYearFilterInput {\n  all?: IVehiclesCarCatalogGnpCodeYearFilterInput;\n  none?: IVehiclesCarCatalogGnpCodeYearFilterInput;\n  some?: IVehiclesCarCatalogGnpCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogGnpCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogGnpCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogGnpCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cGnp?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogGnpFilterInput;\n}\n\nexport interface IVehiclesCarCatalogMapfreFilterInput {\n  and?: Array<IVehiclesCarCatalogMapfreFilterInput>;\n  or?: Array<IVehiclesCarCatalogMapfreFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  vehiclesCarCatalogMapfreCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogMapfreCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogMapfreCodeYearFilterInput {\n  all?: IVehiclesCarCatalogMapfreCodeYearFilterInput;\n  none?: IVehiclesCarCatalogMapfreCodeYearFilterInput;\n  some?: IVehiclesCarCatalogMapfreCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogMapfreCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogMapfreCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogMapfreCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cMapfre?: IStringOperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogMapfreFilterInput;\n}\n\nexport interface IVehiclesCarCatalogPotosiFilterInput {\n  and?: Array<IVehiclesCarCatalogPotosiFilterInput>;\n  or?: Array<IVehiclesCarCatalogPotosiFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  cPotosi?: IStringOperationFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IVehiclesCarCatalogPFilterInput {\n  and?: Array<IVehiclesCarCatalogPFilterInput>;\n  or?: Array<IVehiclesCarCatalogPFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  cPs?: IStringOperationFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IVehiclesCarCatalogQualitaFilterInput {\n  and?: Array<IVehiclesCarCatalogQualitaFilterInput>;\n  or?: Array<IVehiclesCarCatalogQualitaFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  brandCode?: IStringOperationFilterInput;\n  vehiclesCarCatalogQualitasCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogQualitasCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogQualitasCodeYearFilterInput {\n  all?: IVehiclesCarCatalogQualitasCodeYearFilterInput;\n  none?: IVehiclesCarCatalogQualitasCodeYearFilterInput;\n  some?: IVehiclesCarCatalogQualitasCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogQualitasCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogQualitasCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogQualitasCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  cQualitas?: IStringOperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  car?: IVehiclesCarCatalogQualitaFilterInput;\n}\n\nexport interface IVehiclesCarCatalogZurichFilterInput {\n  and?: Array<IVehiclesCarCatalogZurichFilterInput>;\n  or?: Array<IVehiclesCarCatalogZurichFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  vehiclesCarCatalogZurichCodeYears?: IListFilterInputTypeOfVehiclesCarCatalogZurichCodeYearFilterInput;\n  vehiclesCarCodeRelations?: IListFilterInputTypeOfVehiclesCarCodeRelationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfVehiclesCarCatalogZurichCodeYearFilterInput {\n  all?: IVehiclesCarCatalogZurichCodeYearFilterInput;\n  none?: IVehiclesCarCatalogZurichCodeYearFilterInput;\n  some?: IVehiclesCarCatalogZurichCodeYearFilterInput;\n  any?: boolean;\n}\n\nexport interface IVehiclesCarCatalogZurichCodeYearFilterInput {\n  and?: Array<IVehiclesCarCatalogZurichCodeYearFilterInput>;\n  or?: Array<IVehiclesCarCatalogZurichCodeYearFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  year?: IComparableInt64OperationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  cZurich?: IStringOperationFilterInput;\n  car?: IVehiclesCarCatalogZurichFilterInput;\n}\n\nexport interface IVehiclesCarCatalogHdiCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  cHdi?: ISortEnumType;\n  carId?: ISortEnumType;\n  car?: IVehiclesCarCatalogHdiSortInput;\n}\n\nexport interface IVehiclesCarCatalogHdiSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogHdiCodeYear {\n  id: number;\n  year: ILong;\n  cHdi: string;\n  carId: number;\n  car: IVehiclesCarCatalogHdi;\n}\n\nexport interface IVehiclesCarCatalogHdi {\n  id: number;\n  brand: string;\n  subbrand: string;\n  description: string;\n  vehiclesCarCatalogHdiCodeYears: Array<IVehiclesCarCatalogHdiCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCodeRelation {\n  id: number;\n  abaCodeId?: number;\n  afirmeCodeId?: number;\n  aigCodeId?: number;\n  anaCodeId?: number;\n  atlasCodeId?: number;\n  axaCodeId?: number;\n  banorteCodeId?: number;\n  gnpCodeId?: number;\n  hdiCodeId?: number;\n  potosiCodeId?: number;\n  psCodeId?: number;\n  qualitasCodeId?: number;\n  zurichCodeId?: number;\n  mapfreCodeId?: number;\n  abaCode?: IVehiclesCarCatalogAba;\n  afirmeCode?: IVehiclesCarCatalogAfirme;\n  aigCode?: IVehiclesCarCatalogAig;\n  anaCode?: IVehiclesCarCatalogAna;\n  atlasCode?: IVehiclesCarCatalogAtla;\n  axaCode?: IVehiclesCarCatalogAxa;\n  banorteCode?: IVehiclesCarCatalogBanorte;\n  gnpCode?: IVehiclesCarCatalogGnp;\n  hdiCode?: IVehiclesCarCatalogHdi;\n  mapfreCode?: IVehiclesCarCatalogMapfre;\n  potosiCode?: IVehiclesCarCatalogPotosi;\n  psCode?: IVehiclesCarCatalogP;\n  qualitasCode?: IVehiclesCarCatalogQualita;\n  zurichCode?: IVehiclesCarCatalogZurich;\n}\n\nexport interface IVehiclesCarCatalogAba {\n  id: number;\n  brand: string;\n  description: string;\n  subbrand: string;\n  occupants: ILong;\n  type: string;\n  vehiclesCarCatalogAbaCodeYears: Array<IVehiclesCarCatalogAbaCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogAbaCodeYear {\n  id: number;\n  year: ILong;\n  cveveh: string;\n  carId: number;\n  car: IVehiclesCarCatalogAba;\n}\n\nexport interface IVehiclesCarCatalogAfirme {\n  id: number;\n  brand?: string;\n  subbrand?: string;\n  description?: string;\n  vehiclesCarCatalogAfirmeCodeYears: Array<IVehiclesCarCatalogAfirmeCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogAfirmeCodeYear {\n  id: number;\n  year: ILong;\n  cAfirme: string;\n  carId: number;\n  car: IVehiclesCarCatalogAfirme;\n}\n\nexport interface IVehiclesCarCatalogAig {\n  id: number;\n  brand: string;\n  year: number;\n  description: string;\n  subbrand: string;\n  vehiclesCarcoderelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogAna {\n  id: number;\n  subbrand: string;\n  description: string;\n  brand: string;\n  vehiclesCarCatalogAnaCodeYears: Array<IVehiclesCarCatalogAnaCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogAnaCodeYear {\n  id: number;\n  year: ILong;\n  cAna: string;\n  carId: number;\n  car: IVehiclesCarCatalogAna;\n}\n\nexport interface IVehiclesCarCatalogAtla {\n  id: number;\n  brand: string;\n  subbrand: string;\n  description: string;\n  vehiclesCarCatalogAtlasCodeYears: Array<IVehiclesCarCatalogAtlasCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogAtlasCodeYear {\n  id: number;\n  year: ILong;\n  cAtlas: string;\n  carId: number;\n  car: IVehiclesCarCatalogAtla;\n}\n\nexport interface IVehiclesCarCatalogAxa {\n  id: number;\n  brand?: string;\n  subbrand?: string;\n  descriptionLinea?: string;\n  description?: string;\n  camis?: string;\n  categoria: string;\n  segmento?: string;\n  brandId: string;\n  versionId: number;\n  versionIdSec: number;\n  categoriaId: number;\n  lineaId: number;\n  vehiclesCarCatalogAxaCodeYears: Array<IVehiclesCarCatalogAxaCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogAxaCodeYear {\n  id: number;\n  year: ILong;\n  cAxa: string;\n  carId: number;\n  car: IVehiclesCarCatalogAxa;\n}\n\nexport interface IVehiclesCarCatalogBanorte {\n  id: number;\n  brand: string;\n  subbrand: string;\n  description: string;\n  vehiclesCarCatalogBanorteCodeYears: Array<IVehiclesCarCatalogBanorteCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogBanorteCodeYear {\n  id: number;\n  year: ILong;\n  cBanorte: string;\n  carId: number;\n  car: IVehiclesCarCatalogBanorte;\n}\n\nexport interface IVehiclesCarCatalogGnp {\n  id: number;\n  brand: string;\n  subbrand: string;\n  description: string;\n  vehiclesCarCatalogGnpCodeYears: Array<IVehiclesCarCatalogGnpCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogGnpCodeYear {\n  id: number;\n  year: ILong;\n  cGnp: string;\n  carId: number;\n  car: IVehiclesCarCatalogGnp;\n}\n\nexport interface IVehiclesCarCatalogMapfre {\n  id: number;\n  brand: string;\n  description: string;\n  subbrand: string;\n  vehiclesCarCatalogMapfreCodeYears: Array<IVehiclesCarCatalogMapfreCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogMapfreCodeYear {\n  id: number;\n  year: ILong;\n  cMapfre: string;\n  brand: string;\n  carId: number;\n  car: IVehiclesCarCatalogMapfre;\n}\n\nexport interface IVehiclesCarCatalogPotosi {\n  id: number;\n  brand: string;\n  subbrand: string;\n  description: string;\n  cPotosi: string;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogP {\n  id: number;\n  brand: string;\n  subbrand: string;\n  description: string;\n  cPs: string;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogQualita {\n  id: number;\n  brand: string;\n  subbrand: string;\n  description: string;\n  brandCode?: string;\n  vehiclesCarCatalogQualitasCodeYears: Array<IVehiclesCarCatalogQualitasCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogQualitasCodeYear {\n  id: number;\n  year: ILong;\n  cQualitas: string;\n  carId: number;\n  car: IVehiclesCarCatalogQualita;\n}\n\nexport interface IVehiclesCarCatalogZurich {\n  id: number;\n  brand: string;\n  subbrand: string;\n  description: string;\n  vehiclesCarCatalogZurichCodeYears: Array<IVehiclesCarCatalogZurichCodeYear>;\n  vehiclesCarCodeRelations: Array<IVehiclesCarCodeRelation>;\n}\n\nexport interface IVehiclesCarCatalogZurichCodeYear {\n  id: number;\n  year: ILong;\n  carId: number;\n  cZurich: string;\n  car: IVehiclesCarCatalogZurich;\n}\n\nexport interface IVehiclesCarCatalogMapfreCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  cMapfre?: ISortEnumType;\n  brand?: ISortEnumType;\n  carId?: ISortEnumType;\n  car?: IVehiclesCarCatalogMapfreSortInput;\n}\n\nexport interface IVehiclesCarCatalogMapfreSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  description?: ISortEnumType;\n  subbrand?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogQualitasCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  cQualitas?: ISortEnumType;\n  carId?: ISortEnumType;\n  car?: IVehiclesCarCatalogQualitaSortInput;\n}\n\nexport interface IVehiclesCarCatalogQualitaSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n  brandCode?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogZurichCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  carId?: ISortEnumType;\n  cZurich?: ISortEnumType;\n  car?: IVehiclesCarCatalogZurichSortInput;\n}\n\nexport interface IVehiclesCarCatalogZurichSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n}\n\nexport interface IQuotationCoverageFilterInput {\n  and?: Array<IQuotationCoverageFilterInput>;\n  or?: Array<IQuotationCoverageFilterInput>;\n  name?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  sumAssured?: IStringOperationFilterInput;\n  sumType?: IStringOperationFilterInput;\n  deductible?: IStringOperationFilterInput;\n  total?: IStringOperationFilterInput;\n  neto?: IStringOperationFilterInput;\n  priority?: IComparableInt32OperationFilterInput;\n  quoteId?: IComparableGuidOperationFilterInput;\n  quote?: IQuoteFilterInput;\n  insurerServiceId?: IComparableGuidOperationFilterInput;\n  insurerService?: IInsurerServiceFilterInput;\n  insurerPackageStatus?: INullableOfInsurerPackageStatusOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IQuoteFilterInput {\n  and?: Array<IQuoteFilterInput>;\n  or?: Array<IQuoteFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  rFC?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  address?: IStringOperationFilterInput;\n  hiredSame?: IBooleanOperationFilterInput;\n  hiredFirstName?: IStringOperationFilterInput;\n  hiredLastName?: IStringOperationFilterInput;\n  hiredPhone?: IStringOperationFilterInput;\n  hiredEmail?: IStringOperationFilterInput;\n  hiredAddress?: IStringOperationFilterInput;\n  frecuency?: IComparableNullableOfInt32OperationFilterInput;\n  packageName?: IStringOperationFilterInput;\n  gender?: INullableOfQuoteGenderOperationFilterInput;\n  zipCode?: IStringOperationFilterInput;\n  dateOfBirth?: IComparableNullableOfDateTimeOperationFilterInput;\n  carCode?: IStringOperationFilterInput;\n  startValidity?: IComparableNullableOfDateTimeOperationFilterInput;\n  endValidity?: IComparableNullableOfDateTimeOperationFilterInput;\n  year?: IComparableNullableOfInt32OperationFilterInput;\n  discount?: IComparableNullableOfInt32OperationFilterInput;\n  coverage?: IStringOperationFilterInput;\n  primalTotal?: IStringOperationFilterInput;\n  deductible?: IStringOperationFilterInput;\n  typeFrecuency?: IStringOperationFilterInput;\n  firstPay?: IStringOperationFilterInput;\n  secondPay?: IStringOperationFilterInput;\n  status?: INullableOfQuoteStatusOperationFilterInput;\n  plaque?: IStringOperationFilterInput;\n  compensationValue?: IStringOperationFilterInput;\n  serialNumber?: IStringOperationFilterInput;\n  car?: ICarQuotationFilterInput;\n  carId?: IComparableInt32OperationFilterInput;\n  colony?: IStringOperationFilterInput;\n  town?: IStringOperationFilterInput;\n  state?: IStringOperationFilterInput;\n  stateId?: IStringOperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  subBrand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  \n  /**\n   * Contiene el numero de la cotizacion y se utiliza para almacecenarlo en todas las cotizadoras para la emision\n   */\n  folio?: IStringOperationFilterInput;\n  totalAmount?: IComparableNullableOfDoubleOperationFilterInput;\n  netAmount?: IComparableNullableOfDoubleOperationFilterInput;\n  iva?: IComparableNullableOfDoubleOperationFilterInput;\n  surcharge?: IComparableNullableOfDoubleOperationFilterInput;\n  derecho?: IComparableNullableOfInt32OperationFilterInput;\n  police?: IStringOperationFilterInput;\n  service?: IInsurerServiceFilterInput;\n  insurerServiceId?: IComparableNullableOfGuidOperationFilterInput;\n  coverages?: IListFilterInputTypeOfQuotationCoverageFilterInput;\n  quoteServices?: IListFilterInputTypeOfQuoteServiceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfQuoteGenderOperationFilterInput {\n  eq?: IQuoteGender;\n  neq?: IQuoteGender;\n  in?: Array<IQuoteGender | null>;\n  nin?: Array<IQuoteGender | null>;\n}\n\nexport const enum IQuoteGender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n  UNKNOWN = 'UNKNOWN'\n}\n\nexport interface INullableOfQuoteStatusOperationFilterInput {\n  eq?: IQuoteStatus;\n  neq?: IQuoteStatus;\n  in?: Array<IQuoteStatus | null>;\n  nin?: Array<IQuoteStatus | null>;\n}\n\nexport const enum IQuoteStatus {\n  HIRE = 'HIRE',\n  PENDING = 'PENDING',\n  QUOTED = 'QUOTED',\n  ISSUED = 'ISSUED',\n  CANCELED = 'CANCELED',\n  PAID = 'PAID'\n}\n\nexport interface ICarQuotationFilterInput {\n  and?: Array<ICarQuotationFilterInput>;\n  or?: Array<ICarQuotationFilterInput>;\n  id?: IComparableInt32OperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  subbrand?: IStringOperationFilterInput;\n}\n\nexport interface IInsurerServiceFilterInput {\n  and?: Array<IInsurerServiceFilterInput>;\n  or?: Array<IInsurerServiceFilterInput>;\n  name?: IStringOperationFilterInput;\n  codeName?: IStringOperationFilterInput;\n  script?: IStringOperationFilterInput;\n  template?: IStringOperationFilterInput;\n  autos?: IBooleanOperationFilterInput;\n  type?: IStringOperationFilterInput;\n  module?: IStringOperationFilterInput;\n  priority?: IComparableInt32OperationFilterInput;\n  color?: IStringOperationFilterInput;\n  logo?: IStringOperationFilterInput;\n  insurerServiceCredentials?: IListFilterInputTypeOfInsurerServiceCredentialFilterInput;\n  insurerServiceEnvironments?: IListFilterInputTypeOfInsurerServiceEnvironmentFilterInput;\n  insurers?: IListFilterInputTypeOfInsurerFilterInput;\n  quoteServices?: IListFilterInputTypeOfQuoteServiceFilterInput;\n  quotationCoverages?: IListFilterInputTypeOfQuotationCoverageFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfInsurerServiceCredentialFilterInput {\n  all?: IInsurerServiceCredentialFilterInput;\n  none?: IInsurerServiceCredentialFilterInput;\n  some?: IInsurerServiceCredentialFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerServiceCredentialFilterInput {\n  and?: Array<IInsurerServiceCredentialFilterInput>;\n  or?: Array<IInsurerServiceCredentialFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  insurerServiceId?: IComparableGuidOperationFilterInput;\n  insurerService?: IInsurerServiceFilterInput;\n  conduit?: IStringOperationFilterInput;\n  username?: IStringOperationFilterInput;\n  password?: IStringOperationFilterInput;\n  rate?: IStringOperationFilterInput;\n  agent?: IStringOperationFilterInput;\n  group?: IStringOperationFilterInput;\n  deal?: IStringOperationFilterInput;\n  office?: IStringOperationFilterInput;\n  cprogram?: IStringOperationFilterInput;\n  default?: IBooleanOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  extra?: IStringOperationFilterInput;\n  discount?: IComparableNullableOfInt32OperationFilterInput;\n  owner?: IStringOperationFilterInput;\n  token?: IStringOperationFilterInput;\n  environment?: INullableOfServiceEnvironmentOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfServiceEnvironmentOperationFilterInput {\n  eq?: IServiceEnvironment;\n  neq?: IServiceEnvironment;\n  in?: Array<IServiceEnvironment | null>;\n  nin?: Array<IServiceEnvironment | null>;\n}\n\nexport const enum IServiceEnvironment {\n  PRODUCTION = 'PRODUCTION',\n  DEVELOPMENT = 'DEVELOPMENT',\n  TESTING = 'TESTING'\n}\n\nexport interface IListFilterInputTypeOfInsurerServiceEnvironmentFilterInput {\n  all?: IInsurerServiceEnvironmentFilterInput;\n  none?: IInsurerServiceEnvironmentFilterInput;\n  some?: IInsurerServiceEnvironmentFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerServiceEnvironmentFilterInput {\n  and?: Array<IInsurerServiceEnvironmentFilterInput>;\n  or?: Array<IInsurerServiceEnvironmentFilterInput>;\n  insurerServiceId?: IComparableGuidOperationFilterInput;\n  insurerService?: IInsurerServiceFilterInput;\n  environment?: INullableOfServiceEnvironmentOperationFilterInput;\n  reference?: IStringOperationFilterInput;\n  endPoint?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfInsurerFilterInput {\n  all?: IInsurerFilterInput;\n  none?: IInsurerFilterInput;\n  some?: IInsurerFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerFilterInput {\n  and?: Array<IInsurerFilterInput>;\n  or?: Array<IInsurerFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  insurerServiceId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerService?: IInsurerServiceFilterInput;\n  name?: IStringOperationFilterInput;\n  percentageMax?: IComparableNullableOfDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuoteServiceFilterInput {\n  all?: IQuoteServiceFilterInput;\n  none?: IQuoteServiceFilterInput;\n  some?: IQuoteServiceFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuoteServiceFilterInput {\n  and?: Array<IQuoteServiceFilterInput>;\n  or?: Array<IQuoteServiceFilterInput>;\n  quoteId?: IComparableGuidOperationFilterInput;\n  quote?: IQuoteFilterInput;\n  serviceId?: IComparableGuidOperationFilterInput;\n  insurerService?: IInsurerServiceFilterInput;\n  discount?: IStringOperationFilterInput;\n  deductible?: IStringOperationFilterInput;\n  firstPay?: IStringOperationFilterInput;\n  secondPay?: IStringOperationFilterInput;\n  status?: INullableOfQuoteStatusOperationFilterInput;\n  \n  /**\n   * Contiene el numero de la cotizacion y se utiliza para almacecenarlo en todas las cotizadoras para la emision\n   */\n  folio?: IStringOperationFilterInput;\n  totalAmount?: IStringOperationFilterInput;\n  netAmount?: IStringOperationFilterInput;\n  derecho?: IStringOperationFilterInput;\n  police?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuotationCoverageFilterInput {\n  all?: IQuotationCoverageFilterInput;\n  none?: IQuotationCoverageFilterInput;\n  some?: IQuotationCoverageFilterInput;\n  any?: boolean;\n}\n\nexport interface INullableOfInsurerPackageStatusOperationFilterInput {\n  eq?: IInsurerPackageStatus;\n  neq?: IInsurerPackageStatus;\n  in?: Array<IInsurerPackageStatus | null>;\n  nin?: Array<IInsurerPackageStatus | null>;\n}\n\nexport const enum IInsurerPackageStatus {\n  AMPLIA = 'AMPLIA',\n  LIMITADA = 'LIMITADA',\n  RC = 'RC'\n}\n\nexport interface IQuotationCoverageSortInput {\n  name?: ISortEnumType;\n  code?: ISortEnumType;\n  sumAssured?: ISortEnumType;\n  sumType?: ISortEnumType;\n  deductible?: ISortEnumType;\n  total?: ISortEnumType;\n  neto?: ISortEnumType;\n  priority?: ISortEnumType;\n  quoteId?: ISortEnumType;\n  quote?: IQuoteSortInput;\n  insurerServiceId?: ISortEnumType;\n  insurerService?: IInsurerServiceSortInput;\n  insurerPackageStatus?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuoteSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  rFC?: ISortEnumType;\n  phone?: ISortEnumType;\n  email?: ISortEnumType;\n  address?: ISortEnumType;\n  hiredSame?: ISortEnumType;\n  hiredFirstName?: ISortEnumType;\n  hiredLastName?: ISortEnumType;\n  hiredPhone?: ISortEnumType;\n  hiredEmail?: ISortEnumType;\n  hiredAddress?: ISortEnumType;\n  frecuency?: ISortEnumType;\n  packageName?: ISortEnumType;\n  gender?: ISortEnumType;\n  zipCode?: ISortEnumType;\n  dateOfBirth?: ISortEnumType;\n  carCode?: ISortEnumType;\n  startValidity?: ISortEnumType;\n  endValidity?: ISortEnumType;\n  year?: ISortEnumType;\n  discount?: ISortEnumType;\n  coverage?: ISortEnumType;\n  primalTotal?: ISortEnumType;\n  deductible?: ISortEnumType;\n  typeFrecuency?: ISortEnumType;\n  firstPay?: ISortEnumType;\n  secondPay?: ISortEnumType;\n  status?: ISortEnumType;\n  plaque?: ISortEnumType;\n  compensationValue?: ISortEnumType;\n  serialNumber?: ISortEnumType;\n  car?: ICarQuotationSortInput;\n  carId?: ISortEnumType;\n  colony?: ISortEnumType;\n  town?: ISortEnumType;\n  state?: ISortEnumType;\n  stateId?: ISortEnumType;\n  brand?: ISortEnumType;\n  subBrand?: ISortEnumType;\n  description?: ISortEnumType;\n  \n  /**\n   * Contiene el numero de la cotizacion y se utiliza para almacecenarlo en todas las cotizadoras para la emision\n   */\n  folio?: ISortEnumType;\n  totalAmount?: ISortEnumType;\n  netAmount?: ISortEnumType;\n  iva?: ISortEnumType;\n  surcharge?: ISortEnumType;\n  derecho?: ISortEnumType;\n  police?: ISortEnumType;\n  service?: IInsurerServiceSortInput;\n  insurerServiceId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICarQuotationSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  description?: ISortEnumType;\n  subbrand?: ISortEnumType;\n}\n\nexport interface IInsurerServiceSortInput {\n  name?: ISortEnumType;\n  codeName?: ISortEnumType;\n  script?: ISortEnumType;\n  template?: ISortEnumType;\n  autos?: ISortEnumType;\n  type?: ISortEnumType;\n  module?: ISortEnumType;\n  priority?: ISortEnumType;\n  color?: ISortEnumType;\n  logo?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IQuotationCoverage {\n  name?: string;\n  code?: string;\n  sumAssured?: string;\n  sumType?: string;\n  deductible?: string;\n  total?: string;\n  neto?: string;\n  priority: number;\n  quoteId: IUUID;\n  quote?: IQuote;\n  insurerServiceId: IUUID;\n  insurerService?: IInsurerService;\n  insurerPackageStatus?: IInsurerPackageStatus;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuote {\n  car: ICarQuotation;\n  projectId: IUUID;\n  memberId: IUUID;\n  firstName?: string;\n  lastName?: string;\n  rFC?: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  hiredSame?: boolean;\n  hiredFirstName?: string;\n  hiredLastName?: string;\n  hiredPhone?: string;\n  hiredEmail?: string;\n  hiredAddress?: string;\n  frecuency?: number;\n  packageName?: string;\n  gender?: IQuoteGender;\n  zipCode?: string;\n  dateOfBirth?: IDateTime;\n  carCode?: string;\n  startValidity?: IDateTime;\n  endValidity?: IDateTime;\n  year?: number;\n  discount?: number;\n  coverage?: string;\n  primalTotal?: string;\n  deductible?: string;\n  typeFrecuency?: string;\n  firstPay?: string;\n  secondPay?: string;\n  status?: IQuoteStatus;\n  plaque?: string;\n  compensationValue?: string;\n  serialNumber?: string;\n  carId: number;\n  colony?: string;\n  town?: string;\n  state?: string;\n  stateId?: string;\n  brand?: string;\n  subBrand?: string;\n  description?: string;\n  \n  /**\n   * Contiene el numero de la cotizacion y se utiliza para almacecenarlo en todas las cotizadoras para la emision\n   */\n  folio?: string;\n  totalAmount?: number;\n  netAmount?: number;\n  iva?: number;\n  surcharge?: number;\n  derecho?: number;\n  police?: string;\n  service?: IInsurerService;\n  insurerServiceId?: IUUID;\n  coverages: Array<IQuotationCoverage>;\n  quoteServices: Array<IQuoteService>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMember;\n}\n\nexport interface ICarQuotation {\n  id: number;\n  brand?: string;\n  description?: string;\n  subbrand?: string;\n}\n\nexport interface IInsurerService {\n  name: string;\n  codeName?: string;\n  script?: string;\n  template?: string;\n  autos: boolean;\n  type?: string;\n  module?: string;\n  priority: number;\n  color?: string;\n  logo?: string;\n  insurerServiceCredentials?: Array<IInsurerServiceCredential>;\n  insurerServiceEnvironments?: Array<IInsurerServiceEnvironment>;\n  insurers?: Array<IInsurer>;\n  quoteServices?: Array<IQuoteService>;\n  quotationCoverages?: Array<IQuotationCoverage>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerServiceCredential {\n  projectId: IUUID;\n  insurerServiceId: IUUID;\n  insurerService?: IInsurerService;\n  conduit?: string;\n  username?: string;\n  password?: string;\n  rate?: string;\n  agent?: string;\n  group?: string;\n  deal?: string;\n  office?: string;\n  cprogram?: string;\n  default: boolean;\n  active: boolean;\n  extra?: string;\n  discount?: number;\n  owner?: string;\n  token?: string;\n  environment?: IServiceEnvironment;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerServiceEnvironment {\n  insurerServiceId: IUUID;\n  insurerService?: IInsurerService;\n  environment?: IServiceEnvironment;\n  reference?: string;\n  endPoint?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurer {\n  projectId: IUUID;\n  insurerServiceId?: IUUID;\n  insurerService?: IInsurerService;\n  name: string;\n  percentageMax?: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuoteService {\n  quoteId: IUUID;\n  quote?: IQuote;\n  serviceId: IUUID;\n  insurerService?: IInsurerService;\n  discount?: string;\n  deductible?: string;\n  firstPay?: string;\n  secondPay?: string;\n  status?: IQuoteStatus;\n  \n  /**\n   * Contiene el numero de la cotizacion y se utiliza para almacecenarlo en todas las cotizadoras para la emision\n   */\n  folio?: string;\n  totalAmount?: string;\n  netAmount?: string;\n  derecho?: string;\n  police?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IStaffQuoteFilterInput {\n  and?: Array<IStaffQuoteFilterInput>;\n  or?: Array<IStaffQuoteFilterInput>;\n  solicitorId?: IComparableGuidOperationFilterInput;\n  serviceId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  status?: INullableOfEnumQuoteStatusOperationFilterInput;\n  collaborators?: Imultiquoter_ListFilterInputTypeOfCollaboratorFilterInput;\n  proposals?: Imultiquoter_ListFilterInputTypeOfProposalFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumQuoteStatusOperationFilterInput {\n  eq?: IEnumQuoteStatus;\n  neq?: IEnumQuoteStatus;\n  in?: Array<IEnumQuoteStatus | null>;\n  nin?: Array<IEnumQuoteStatus | null>;\n}\n\nexport const enum IEnumQuoteStatus {\n  CANCELED = 'CANCELED',\n  APPROVED = 'APPROVED',\n  APPROVED_BY_CUSTOMER = 'APPROVED_BY_CUSTOMER'\n}\n\nexport interface Imultiquoter_ListFilterInputTypeOfCollaboratorFilterInput {\n  all?: Imultiquoter_CollaboratorFilterInput;\n  none?: Imultiquoter_CollaboratorFilterInput;\n  some?: Imultiquoter_CollaboratorFilterInput;\n  any?: boolean;\n}\n\nexport interface Imultiquoter_CollaboratorFilterInput {\n  and?: Array<Imultiquoter_CollaboratorFilterInput>;\n  or?: Array<Imultiquoter_CollaboratorFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  projectRoleId?: IComparableGuidOperationFilterInput;\n  staffQuoteId?: IComparableGuidOperationFilterInput;\n  estimatedTime?: IComparableNullableOfTimeSpanOperationFilterInput;\n  amount?: IComparableNullableOfDecimalOperationFilterInput;\n  staffQuote?: IStaffQuoteFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IComparableNullableOfTimeSpanOperationFilterInput {\n  eq?: ITimeSpan;\n  neq?: ITimeSpan;\n  in?: Array<ITimeSpan | null>;\n  nin?: Array<ITimeSpan | null>;\n  gt?: ITimeSpan;\n  ngt?: ITimeSpan;\n  gte?: ITimeSpan;\n  ngte?: ITimeSpan;\n  lt?: ITimeSpan;\n  nlt?: ITimeSpan;\n  lte?: ITimeSpan;\n  nlte?: ITimeSpan;\n}\n\nexport interface Imultiquoter_ListFilterInputTypeOfProposalFilterInput {\n  all?: Imultiquoter_ProposalFilterInput;\n  none?: Imultiquoter_ProposalFilterInput;\n  some?: Imultiquoter_ProposalFilterInput;\n  any?: boolean;\n}\n\nexport interface Imultiquoter_ProposalFilterInput {\n  and?: Array<Imultiquoter_ProposalFilterInput>;\n  or?: Array<Imultiquoter_ProposalFilterInput>;\n  staffQuoteId?: IComparableGuidOperationFilterInput;\n  methodology?: IStringOperationFilterInput;\n  status?: INullableOfEnumQuoteStatusOperationFilterInput;\n  staffQuote?: IStaffQuoteFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IStaffQuoteSortInput {\n  solicitorId?: ISortEnumType;\n  serviceId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  status?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IStaffQuote {\n  proposals: Array<Imultiquoter_Proposal>;\n  collaborators: Array<Imultiquoter_Collaborator>;\n  solicitorId: IUUID;\n  serviceId: IUUID;\n  projectId: IUUID;\n  status?: IEnumQuoteStatus;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface Imultiquoter_Proposal {\n  staffQuote: IStaffQuote;\n  staffQuoteId: IUUID;\n  methodology?: string;\n  status?: IEnumQuoteStatus;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface Imultiquoter_Collaborator {\n  staffQuote: IStaffQuote;\n  memberId: IUUID;\n  projectRoleId: IUUID;\n  staffQuoteId: IUUID;\n  estimatedTime?: ITimeSpan;\n  amount?: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerCoverageProject {\n  projectId: IUUID;\n  insurerServiceId: IUUID;\n  insurerService?: IInsurerService;\n  insurerCoverageId: IUUID;\n  insurerCoverage?: IInsurerCoverage;\n  insurerPackages?: Array<IInsurerPackageStatus>;\n  sumAssured?: string;\n  sumType?: string;\n  deductible?: string;\n  prima?: string;\n  deductibleOptions?: Array<string>;\n  sumAssuredOptions?: Array<string>;\n  isActive: boolean;\n  visible: boolean;\n  priority: number;\n  ampliaAvailable: boolean;\n  limitadaAvailable: boolean;\n  rCAvailable: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerCoverage {\n  code?: string;\n  name: string;\n  description?: string;\n  insurerServiceId: IUUID;\n  insurerService?: IInsurerService;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICotizacionPackage {\n  id: number;\n  sumassured?: string;\n  deductible?: string;\n  isbase: boolean;\n  isactive: boolean;\n  peroccupant: boolean;\n  coverageId?: number;\n  packageId?: number;\n  serviceId: number;\n  deductibleoptions?: Array<string>;\n  sumassuredoptions?: Array<string>;\n  priority: number;\n  coverage?: ICoveragesCoverage;\n  package?: ICoveragesPackagesList;\n  service: IGenericsService;\n}\n\nexport interface ICoveragesCoverage {\n  id: number;\n  code?: string;\n  name: string;\n  description?: string;\n  insuranceId?: number;\n  abbreviation?: string;\n  insurance?: IGenericsService;\n  cotizacionPackages: Array<ICotizacionPackage>;\n}\n\nexport interface IGenericsService {\n  registerUser: IServiceProcessPayload;\n  runEmision: IServiceProcessPayload;\n  printPolice: IServiceProcessPayload;\n  id: number;\n  name: string;\n  script: string;\n  template?: string;\n  autos: boolean;\n  type: string;\n  module?: string;\n  priority: number;\n  color?: string;\n  logo?: string;\n  cotizacionCredentials: Array<ICotizacionCredential>;\n  cotizacionPackages: Array<ICotizacionPackage>;\n  cotizacionQuotes: Array<ICotizacionQuote>;\n  coveragesCoverages: Array<ICoveragesCoverage>;\n}\n\nexport interface IServiceProcessPayload {\n  name: string;\n  error: string;\n  success: boolean;\n  result: string;\n}\n\nexport interface ICotizacionCredential {\n  id: number;\n  conduit?: string;\n  username?: string;\n  password?: string;\n  rate?: string;\n  agent?: string;\n  group?: string;\n  deal?: string;\n  office?: string;\n  cprogram?: string;\n  default: boolean;\n  active: boolean;\n  extra?: string;\n  serviceId?: number;\n  discount?: number;\n  owner?: string;\n  production: boolean;\n  service?: IGenericsService;\n}\n\nexport interface ICotizacionQuote {\n  issued: boolean;\n  id: number;\n  createdAt?: IDateTime;\n  updatedAt?: IDateTime;\n  paymentfrequency: string;\n  startvigency?: IDate;\n  endvigency?: IDate;\n  cardescription?: string;\n  totalamount?: IDecimal;\n  surcharge?: IDecimal;\n  folioquote?: string;\n  police?: string;\n  derecho?: IDecimal;\n  pdf?: string;\n  receiptpdf?: string;\n  package?: string;\n  iva?: IDecimal;\n  netAmount?: IDecimal;\n  selected: boolean;\n  carCompanyCode?: string;\n  carFormId?: number;\n  serviceId?: number;\n  status: number;\n  extra?: string;\n  carForm?: ICotizacionCarForm;\n  service?: IGenericsService;\n  cotizacionQuoteCoverages: Array<ICotizacionQuoteCoverage>;\n  cotizacionQuotePayForms: Array<ICotizacionQuotePayForm>;\n}\n\n/**\n * The `Date` scalar represents an ISO-8601 compliant date type.\n */\nexport type IDate = any;\n\nexport interface ICotizacionCarForm {\n  id: number;\n  createdAt?: IDateTime;\n  updatedAt?: IDateTime;\n  cardescription: string;\n  carId: string;\n  year?: number;\n  code?: string;\n  serialNumber: string;\n  engineNumber: string;\n  paymentMethod: string;\n  plates: string;\n  owner?: number;\n  clientId?: number;\n  origin: string;\n  client?: IClientsClient;\n  cotizacionQuotes: Array<ICotizacionQuote>;\n}\n\nexport interface IClientsClient {\n  id: number;\n  createdAt?: IDateTime;\n  updatedAt?: IDateTime;\n  firstname: string;\n  lastname: string;\n  age?: number;\n  email?: string;\n  phone: string;\n  taxpayerid: string;\n  secondlastname: string;\n  birthdate?: IDate;\n  civilStatus: string;\n  gender: string;\n  clientsAddresses: Array<IClientsAddress>;\n  cotizacionCarForms: Array<ICotizacionCarForm>;\n}\n\nexport interface IClientsAddress {\n  id: number;\n  city: string;\n  state: string;\n  zipcode: string;\n  clientId?: number;\n  suburb: string;\n  internalnumber?: string;\n  number: string;\n  street: string;\n  country: string;\n  client?: IClientsClient;\n}\n\nexport interface ICotizacionQuoteCoverage {\n  id: number;\n  createdAt?: IDateTime;\n  updatedAt?: IDateTime;\n  name?: string;\n  cobId?: string;\n  sumassured?: string;\n  deductible?: string;\n  total?: string;\n  neto?: string;\n  quoteId?: number;\n  priority: number;\n  quote?: ICotizacionQuote;\n}\n\nexport interface ICotizacionQuotePayForm {\n  id: number;\n  netamount?: IDecimal;\n  firstinstalment?: IDecimal;\n  model: string;\n  iva?: string;\n  subsecuentinstalments?: IDecimal;\n  rpf?: IDecimal;\n  totalamount?: IDecimal;\n  startvigency?: string;\n  endvigency?: string;\n  quoteId?: number;\n  quantity: number;\n  quote?: ICotizacionQuote;\n}\n\nexport interface ICoveragesPackagesList {\n  id: number;\n  name: string;\n  description?: string;\n  ramo: number;\n  active: boolean;\n  cotizacionPackages: Array<ICotizacionPackage>;\n}\n\nexport interface IQuoterRequestInput {\n  quoteId: IUUID;\n  serviceId: IUUID;\n  discount?: string;\n  coverageRequests?: Array<ICoverageRequestInput>;\n  packageName: string;\n  frecuency: number;\n  makeCoverages?: boolean;\n}\n\nexport interface ICoverageRequestInput {\n  code: string;\n  sumAssured?: string;\n  sumType?: string;\n  prima?: string;\n  deductible?: string;\n}\n\nexport interface IRunServicePayload {\n  quoterResponse: IQuoterResponse;\n}\n\nexport interface IQuoterResponse {\n  primaTotal?: string;\n  coverages?: Array<ICoverageService>;\n  quoteId: IUUID;\n  package?: string;\n  product?: string;\n  quoteFolio?: string;\n  beginDate?: string;\n  endDate?: string;\n  carCompanyCode?: string;\n  parentId?: string;\n  responseQuoter?: IResponseApiInsurer;\n}\n\nexport interface ICoverageService {\n  coverageName?: string;\n  cobId?: string;\n  coverageSum?: string;\n  coverageDeductible?: string;\n  total?: string;\n}\n\nexport interface IResponseApiInsurer {\n  id?: number;\n  parent_car_form?: string;\n  prima_total?: string;\n  quote_selected: boolean;\n  emitido: boolean;\n  url?: string;\n  paquete?: string;\n  frecuencia_pago?: string;\n  dER?: string;\n  cVE?: string;\n  iVA?: string;\n  rEC?: string;\n  car_descr?: string;\n  folio_quote?: string;\n  fecha_inicio?: string;\n  fecha_fin?: string;\n  car_company_code?: string;\n  parent_id?: number;\n  service?: IService;\n  quote_coverages?: Array<IQuoteCoverage>;\n  quote_pay_frecuency?: Array<IQuotePayFrecuency>;\n  discount_services?: Array<IDiscountService>;\n}\n\nexport interface IService {\n  url: string;\n  name: string;\n  id: number;\n}\n\nexport interface IQuoteCoverage {\n  coverage_name?: string;\n  cob_id?: string;\n  sum_coverage?: string;\n  deductible_coverage?: string;\n  total?: string;\n}\n\nexport interface IQuotePayFrecuency {\n  id?: number;\n  first_pay?: string;\n  tipe?: string;\n  second_pay?: string;\n  total_amount?: string;\n  fecha_inicio?: string;\n  fecha_fin?: string;\n}\n\nexport interface IDiscountService {\n  percentage?: IDecimal;\n}\n\nexport interface IStadisticsResult {\n  name: string;\n  hg: string;\n  percentaje: string;\n  color?: string;\n}\n\nexport interface IQuoterProfileFilterInput {\n  and?: Array<IQuoterProfileFilterInput>;\n  or?: Array<IQuoterProfileFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  officeId?: IComparableGuidOperationFilterInput;\n  office?: IOfficeFilterInput;\n  quoterProfileInsurers?: IListFilterInputTypeOfQuoterProfileInsurerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IOfficeFilterInput {\n  and?: Array<IOfficeFilterInput>;\n  or?: Array<IOfficeFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfQuoterProfileInsurerFilterInput {\n  all?: IQuoterProfileInsurerFilterInput;\n  none?: IQuoterProfileInsurerFilterInput;\n  some?: IQuoterProfileInsurerFilterInput;\n  any?: boolean;\n}\n\nexport interface IQuoterProfileInsurerFilterInput {\n  and?: Array<IQuoterProfileInsurerFilterInput>;\n  or?: Array<IQuoterProfileInsurerFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  quoterProfileId?: IComparableGuidOperationFilterInput;\n  quoterProfile?: IQuoterProfileFilterInput;\n  insurerId?: IComparableGuidOperationFilterInput;\n  insurer?: IInsurerFilterInput;\n  percentageBase?: IComparableDecimalOperationFilterInput;\n  percentageMax?: IComparableDecimalOperationFilterInput;\n  portalAgentQuote?: IBooleanOperationFilterInput;\n  portalAgentEmits?: IBooleanOperationFilterInput;\n  portalPublicQuote?: IBooleanOperationFilterInput;\n  portalPublicEmits?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IQuoterProfileSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  officeId?: ISortEnumType;\n  office?: IOfficeSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IOfficeSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IListRQuoterProfilesByProjectIdConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IListRQuoterProfilesByProjectIdEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IQuoterProfile>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IListRQuoterProfilesByProjectIdEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IQuoterProfile;\n}\n\nexport interface IQuoterProfile {\n  projectId: IUUID;\n  name: string;\n  officeId: IUUID;\n  office?: IOffice;\n  quoterProfileInsurers?: Array<IQuoterProfileInsurer>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IOffice {\n  projectId: IUUID;\n  name?: string;\n  description?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuoterProfileInsurer {\n  projectId: IUUID;\n  quoterProfileId: IUUID;\n  quoterProfile?: IQuoterProfile;\n  insurerId: IUUID;\n  insurer?: IInsurer;\n  percentageBase: IDecimal;\n  percentageMax: IDecimal;\n  portalAgentQuote: boolean;\n  portalAgentEmits: boolean;\n  portalPublicQuote: boolean;\n  portalPublicEmits: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuoterProfileInsurerSortInput {\n  projectId?: ISortEnumType;\n  quoterProfileId?: ISortEnumType;\n  quoterProfile?: IQuoterProfileSortInput;\n  insurerId?: ISortEnumType;\n  insurer?: IInsurerSortInput;\n  percentageBase?: ISortEnumType;\n  percentageMax?: ISortEnumType;\n  portalAgentQuote?: ISortEnumType;\n  portalAgentEmits?: ISortEnumType;\n  portalPublicQuote?: ISortEnumType;\n  portalPublicEmits?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerSortInput {\n  projectId?: ISortEnumType;\n  insurerServiceId?: ISortEnumType;\n  insurerService?: IInsurerServiceSortInput;\n  name?: ISortEnumType;\n  percentageMax?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IListRQuoterProfilesInsurerByProjectIdConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IListRQuoterProfilesInsurerByProjectIdEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IQuoterProfileInsurer>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IListRQuoterProfilesInsurerByProjectIdEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IQuoterProfileInsurer;\n}\n\nexport interface IHomologator {\n  abaCodeId?: string;\n  afirmeCodeId?: string;\n  aigCodeId?: string;\n  anaCodeId?: string;\n  atlasCodeId?: string;\n  axaCodeId?: string;\n  banorteCodeId?: string;\n  gnpCodeId?: string;\n  hdiCodeId?: string;\n  potosiCodeId?: string;\n  psCodeId?: string;\n  qualitasCodeId?: string;\n  zurichCodeId?: string;\n  mapfreCodeId?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuoteCollectionSegment {\n  items?: Array<IQuote>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuoteCount {\n  count: number;\n}\n\nexport interface IRegistrationFilterInput {\n  and?: Array<IRegistrationFilterInput>;\n  or?: Array<IRegistrationFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  state?: IStringOperationFilterInput;\n  city?: IStringOperationFilterInput;\n  tradename?: IStringOperationFilterInput;\n  company?: IStringOperationFilterInput;\n  interests?: IListBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListBooleanOperationFilterInput {\n  all?: IBooleanOperationFilterInput;\n  none?: IBooleanOperationFilterInput;\n  some?: IBooleanOperationFilterInput;\n  any?: boolean;\n}\n\nexport interface IRegistrationSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  email?: ISortEnumType;\n  state?: ISortEnumType;\n  city?: ISortEnumType;\n  tradename?: ISortEnumType;\n  company?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IRegistration {\n  projectId: IUUID;\n  name: string;\n  email: string;\n  state?: string;\n  city?: string;\n  tradename?: string;\n  company?: string;\n  interests?: Array<boolean>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuoter {\n  quote?: IQuote;\n  services?: Array<IInsurerService>;\n}\n\nexport interface IGenderDTO {\n  name: string;\n}\n\nexport interface ICarTypeDTO {\n  name: string;\n}\n\nexport interface IListBrandDTO {\n  name: string;\n  insurer: string;\n}\n\nexport interface IListSubBrandDTO {\n  name: string;\n  insurer: string;\n}\n\nexport interface IListYearDTO {\n  year: ILong;\n  insurer: string;\n}\n\nexport interface IListVersionDTO {\n  carId: string;\n  version: string;\n  cveveh: string;\n  insurer: string;\n}\n\nexport interface IHomologationService {\n  homologated: boolean;\n  name: string;\n  codeName: string;\n  homologateDescription?: string;\n  color: string;\n  logo: string;\n}\n\nexport interface IColoniaDTO {\n  colonias?: Array<string>;\n  estado?: IEstadoDTO;\n  municipio?: string;\n  munid?: string;\n}\n\nexport interface IEstadoDTO {\n  name?: string;\n  value?: number;\n}\n\nexport interface ICoverageDTO {\n  servicename: string;\n  type: string;\n  obligatory: Array<ICotizacionPackage>;\n  optional: Array<ICotizacionPackage>;\n}\n\nexport interface ICatalogFilterInput {\n  and?: Array<ICatalogFilterInput>;\n  or?: Array<ICatalogFilterInput>;\n  brand?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  subBrand?: IStringOperationFilterInput;\n  catalogType?: IStringOperationFilterInput;\n  oldId?: IComparableInt32OperationFilterInput;\n  years?: IListFilterInputTypeOfCatalogByYearFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCatalogByYearFilterInput {\n  all?: ICatalogByYearFilterInput;\n  none?: ICatalogByYearFilterInput;\n  some?: ICatalogByYearFilterInput;\n  any?: boolean;\n}\n\nexport interface ICatalogByYearFilterInput {\n  and?: Array<ICatalogByYearFilterInput>;\n  or?: Array<ICatalogByYearFilterInput>;\n  year?: IComparableInt32OperationFilterInput;\n  cveveh?: IStringOperationFilterInput;\n  catalogId?: IComparableGuidOperationFilterInput;\n  catalog?: ICatalogFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICatalogSortInput {\n  brand?: ISortEnumType;\n  description?: ISortEnumType;\n  subBrand?: ISortEnumType;\n  catalogType?: ISortEnumType;\n  oldId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICatalogCollectionSegment {\n  items?: Array<Imultiquoter_Catalog>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface Imultiquoter_Catalog {\n  brand: string;\n  description: string;\n  subBrand: string;\n  catalogType: string;\n  oldId: number;\n  years: Array<ICatalogByYear>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICatalogByYear {\n  year: number;\n  cveveh: string;\n  catalogId: IUUID;\n  catalog?: Imultiquoter_Catalog;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerCollectionSegment {\n  items?: Array<IInsurer>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IOfficeCollectionSegment {\n  items?: Array<IOffice>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IQuoterProfileCollectionSegment {\n  items?: Array<IQuoterProfile>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IVehiclesCarCatalogAbaSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  description?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  occupants?: ISortEnumType;\n  type?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogAfirmeSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogAigSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  year?: ISortEnumType;\n  description?: ISortEnumType;\n  subbrand?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogAnaSortInput {\n  id?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n  brand?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogAtlaSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogAxaSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  descriptionLinea?: ISortEnumType;\n  description?: ISortEnumType;\n  camis?: ISortEnumType;\n  categoria?: ISortEnumType;\n  segmento?: ISortEnumType;\n  brandId?: ISortEnumType;\n  versionId?: ISortEnumType;\n  versionIdSec?: ISortEnumType;\n  categoriaId?: ISortEnumType;\n  lineaId?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogBanorteSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogGnpSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogPSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n  cPs?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogPotosiSortInput {\n  id?: ISortEnumType;\n  brand?: ISortEnumType;\n  subbrand?: ISortEnumType;\n  description?: ISortEnumType;\n  cPotosi?: ISortEnumType;\n}\n\nexport interface IVehiclesCarCatalogAbaCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  cveveh?: ISortEnumType;\n  carId?: ISortEnumType;\n  car?: IVehiclesCarCatalogAbaSortInput;\n}\n\nexport interface IVehiclesCarCatalogAfirmeCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  cAfirme?: ISortEnumType;\n  carId?: ISortEnumType;\n  car?: IVehiclesCarCatalogAfirmeSortInput;\n}\n\nexport interface IVehiclesCarCatalogAxaCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  cAxa?: ISortEnumType;\n  carId?: ISortEnumType;\n  car?: IVehiclesCarCatalogAxaSortInput;\n}\n\nexport interface IVehiclesCarCatalogAtlasCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  cAtlas?: ISortEnumType;\n  carId?: ISortEnumType;\n  car?: IVehiclesCarCatalogAtlaSortInput;\n}\n\nexport interface IVehiclesCarCatalogBanorteCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  cBanorte?: ISortEnumType;\n  carId?: ISortEnumType;\n  car?: IVehiclesCarCatalogBanorteSortInput;\n}\n\nexport interface IVehiclesCarCatalogGnpCodeYearSortInput {\n  id?: ISortEnumType;\n  year?: ISortEnumType;\n  cGnp?: ISortEnumType;\n  carId?: ISortEnumType;\n  car?: IVehiclesCarCatalogGnpSortInput;\n}\n\nexport interface IApiService {\n  projectId: IUUID;\n  label: string;\n  serviceCode: string;\n  secretKey: string;\n  expiration: IDateTime;\n  url?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDynamicPageFilterInput {\n  and?: Array<IDynamicPageFilterInput>;\n  or?: Array<IDynamicPageFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  label?: IStringOperationFilterInput;\n  dynamicSections?: IListFilterInputTypeOfDynamicSectionFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDynamicSectionFilterInput {\n  all?: IDynamicSectionFilterInput;\n  none?: IDynamicSectionFilterInput;\n  some?: IDynamicSectionFilterInput;\n  any?: boolean;\n}\n\nexport interface IDynamicSectionFilterInput {\n  and?: Array<IDynamicSectionFilterInput>;\n  or?: Array<IDynamicSectionFilterInput>;\n  position?: IComparableInt32OperationFilterInput;\n  isPrimary?: IBooleanOperationFilterInput;\n  dynamicPageId?: IComparableGuidOperationFilterInput;\n  dynamicPage?: IDynamicPageFilterInput;\n  dynamicTabs?: IListFilterInputTypeOfDynamicTabFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDynamicTabFilterInput {\n  all?: IDynamicTabFilterInput;\n  none?: IDynamicTabFilterInput;\n  some?: IDynamicTabFilterInput;\n  any?: boolean;\n}\n\nexport interface IDynamicTabFilterInput {\n  and?: Array<IDynamicTabFilterInput>;\n  or?: Array<IDynamicTabFilterInput>;\n  name?: IStringOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  dynamicSectionId?: IComparableGuidOperationFilterInput;\n  dynamicSection?: IDynamicSectionFilterInput;\n  dynamicSectionBlocks?: IListFilterInputTypeOfDynamicSectionBlockFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDynamicSectionBlockFilterInput {\n  all?: IDynamicSectionBlockFilterInput;\n  none?: IDynamicSectionBlockFilterInput;\n  some?: IDynamicSectionBlockFilterInput;\n  any?: boolean;\n}\n\nexport interface IDynamicSectionBlockFilterInput {\n  and?: Array<IDynamicSectionBlockFilterInput>;\n  or?: Array<IDynamicSectionBlockFilterInput>;\n  label?: IStringOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  style?: IStringOperationFilterInput;\n  dynamicBlockId?: IComparableGuidOperationFilterInput;\n  dynamicTabId?: IComparableGuidOperationFilterInput;\n  dynamicTab?: IDynamicTabFilterInput;\n  dynamicBlock?: IDynamicBlockFilterInput;\n  dynamicCustomMetas?: IListFilterInputTypeOfDynamicCustomMetaFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IDynamicBlockFilterInput {\n  and?: Array<IDynamicBlockFilterInput>;\n  or?: Array<IDynamicBlockFilterInput>;\n  codeName?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  services?: IStringOperationFilterInput;\n  components?: IStringOperationFilterInput;\n  style?: IStringOperationFilterInput;\n  dynamicSectionBlocks?: IListFilterInputTypeOfDynamicSectionBlockFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDynamicCustomMetaFilterInput {\n  all?: IDynamicCustomMetaFilterInput;\n  none?: IDynamicCustomMetaFilterInput;\n  some?: IDynamicCustomMetaFilterInput;\n  any?: boolean;\n}\n\nexport interface IDynamicCustomMetaFilterInput {\n  and?: Array<IDynamicCustomMetaFilterInput>;\n  or?: Array<IDynamicCustomMetaFilterInput>;\n  metaKey?: IStringOperationFilterInput;\n  metaType?: IMetaTypeOperationFilterInput;\n  label?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  dynamicSectionBlockId?: IComparableGuidOperationFilterInput;\n  dynamicSectionBlocks?: IDynamicSectionBlockFilterInput;\n  dynamicCustomValues?: IListFilterInputTypeOfDynamicCustomValueFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMetaTypeOperationFilterInput {\n  eq?: IMetaType;\n  neq?: IMetaType;\n  in?: Array<IMetaType>;\n  nin?: Array<IMetaType>;\n}\n\nexport const enum IMetaType {\n  INT = 'INT',\n  STRING = 'STRING',\n  FLOAT = 'FLOAT',\n  BOOLEAN = 'BOOLEAN'\n}\n\nexport interface IListFilterInputTypeOfDynamicCustomValueFilterInput {\n  all?: IDynamicCustomValueFilterInput;\n  none?: IDynamicCustomValueFilterInput;\n  some?: IDynamicCustomValueFilterInput;\n  any?: boolean;\n}\n\nexport interface IDynamicCustomValueFilterInput {\n  and?: Array<IDynamicCustomValueFilterInput>;\n  or?: Array<IDynamicCustomValueFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  dynamicCustomMetaId?: IComparableGuidOperationFilterInput;\n  dynamicCustomMetas?: IDynamicCustomMetaFilterInput;\n  value?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IDynamicPageSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  label?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDynamicPage {\n  dynamicSections: Array<IDynamicSection>;\n  projectId: IUUID;\n  name: string;\n  label: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDynamicSection {\n  dynamicPage: IDynamicPage;\n  dynamicTabs: Array<IDynamicTab>;\n  position: number;\n  isPrimary: boolean;\n  dynamicPageId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDynamicTab {\n  dynamicSection: IDynamicSection;\n  dynamicSectionBlocks: Array<IDynamicSectionBlock>;\n  name: string;\n  position: number;\n  dynamicSectionId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDynamicSectionBlock {\n  dynamicTab: IDynamicTab;\n  dynamicBlock: IDynamicBlock;\n  dynamicCustomMetas: Array<IDynamicCustomMeta>;\n  label: string;\n  position: number;\n  style?: string;\n  dynamicBlockId: IUUID;\n  dynamicTabId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDynamicBlock {\n  dynamicSectionBlocks: Array<IDynamicSectionBlock>;\n  codeName: string;\n  description?: string;\n  services?: string;\n  components?: string;\n  style?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDynamicCustomMeta {\n  dynamicSectionBlocks: IDynamicSectionBlock;\n  dynamicCustomValues: Array<IDynamicCustomValue>;\n  metaKey: string;\n  metaType: IMetaType;\n  label: string;\n  description?: string;\n  position: number;\n  dynamicSectionBlockId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDynamicCustomValue {\n  dynamicCustomMetas: IDynamicCustomMeta;\n  memberId: IUUID;\n  dynamicCustomMetaId: IUUID;\n  value: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDynamicBlockSortInput {\n  codeName?: ISortEnumType;\n  description?: ISortEnumType;\n  services?: ISortEnumType;\n  components?: ISortEnumType;\n  style?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDynamicBlockCollectionSegment {\n  items?: Array<IDynamicBlock>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n}\n\nexport interface IDynamicSectionSortInput {\n  position?: ISortEnumType;\n  isPrimary?: ISortEnumType;\n  dynamicPageId?: ISortEnumType;\n  dynamicPage?: IDynamicPageSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDynamicSectionCollectionSegment {\n  items?: Array<IDynamicSection>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n}\n\nexport interface IDynamicTabSortInput {\n  name?: ISortEnumType;\n  position?: ISortEnumType;\n  dynamicSectionId?: ISortEnumType;\n  dynamicSection?: IDynamicSectionSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDynamicTabCollectionSegment {\n  items?: Array<IDynamicTab>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n}\n\nexport interface IDynamicSectionBlockSortInput {\n  label?: ISortEnumType;\n  position?: ISortEnumType;\n  style?: ISortEnumType;\n  dynamicBlockId?: ISortEnumType;\n  dynamicTabId?: ISortEnumType;\n  dynamicTab?: IDynamicTabSortInput;\n  dynamicBlock?: IDynamicBlockSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDynamicSectionBlockCollectionSegment {\n  items?: Array<IDynamicSectionBlock>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n}\n\nexport interface IDynamicCustomMetaSortInput {\n  metaKey?: ISortEnumType;\n  metaType?: ISortEnumType;\n  label?: ISortEnumType;\n  description?: ISortEnumType;\n  position?: ISortEnumType;\n  dynamicSectionBlockId?: ISortEnumType;\n  dynamicSectionBlocks?: IDynamicSectionBlockSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDynamicCustomMetaCollectionSegment {\n  items?: Array<IDynamicCustomMeta>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n}\n\nexport interface IDynamicCustomValueSortInput {\n  memberId?: ISortEnumType;\n  dynamicCustomMetaId?: ISortEnumType;\n  dynamicCustomMetas?: IDynamicCustomMetaSortInput;\n  value?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDynamicCustomValueCollectionSegment {\n  items?: Array<IDynamicCustomValue>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n}\n\nexport interface IChargeFilterInput {\n  and?: Array<IChargeFilterInput>;\n  or?: Array<IChargeFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  eventId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  total?: IComparableDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IChargeSortInput {\n  projectId?: ISortEnumType;\n  eventId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  total?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IChargeCollectionSegment {\n  items?: Array<ICharge>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICharge {\n  projectId: IUUID;\n  eventId: IUUID;\n  memberId: IUUID;\n  total: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IClinicHistoryFilterInput {\n  and?: Array<IClinicHistoryFilterInput>;\n  or?: Array<IClinicHistoryFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  eventId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  notes?: IStringOperationFilterInput;\n  isVisible?: IBooleanOperationFilterInput;\n  position?: IComparableNullableOfInt32OperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IClinicHistorySortInput {\n  projectId?: ISortEnumType;\n  eventId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  notes?: ISortEnumType;\n  isVisible?: ISortEnumType;\n  position?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IClinicHistory {\n  projectId: IUUID;\n  eventId: IUUID;\n  memberId: IUUID;\n  notes: string;\n  isVisible?: boolean;\n  position?: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IEventDetailFilterInput {\n  and?: Array<IEventDetailFilterInput>;\n  or?: Array<IEventDetailFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  eventId?: IComparableGuidOperationFilterInput;\n  subTotal?: IComparableDecimalOperationFilterInput;\n  descuento?: IComparableDecimalOperationFilterInput;\n  tax?: IComparableDecimalOperationFilterInput;\n  total?: IComparableDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEventDetailSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  eventId?: ISortEnumType;\n  subTotal?: ISortEnumType;\n  descuento?: ISortEnumType;\n  tax?: ISortEnumType;\n  total?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IEventDetailCollectionSegment {\n  items?: Array<IEventDetail>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IFisicExamFilterInput {\n  and?: Array<IFisicExamFilterInput>;\n  or?: Array<IFisicExamFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  eventId?: IComparableGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  content?: IStringOperationFilterInput;\n  isVisible?: IBooleanOperationFilterInput;\n  position?: IComparableNullableOfInt32OperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IFisicExamSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  eventId?: ISortEnumType;\n  title?: ISortEnumType;\n  content?: ISortEnumType;\n  isVisible?: ISortEnumType;\n  position?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMedicalBackgroundSortInput {\n  projectId?: ISortEnumType;\n  formatId?: ISortEnumType;\n  format?: IFormatSortInput;\n  label?: ISortEnumType;\n  isVisible?: ISortEnumType;\n  position?: ISortEnumType;\n  pacientMedicalBackground?: IPacientMedicalBackgroundSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IFormatSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  eventTypeId?: ISortEnumType;\n  nameFormat?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPacientMedicalBackgroundSortInput {\n  medicalBackgroundDetailId?: ISortEnumType;\n  medicalBackgroundDetail?: IMedicalBackgroundDetailSortInput;\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  eventId?: ISortEnumType;\n  text?: ISortEnumType;\n  isResponse?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMedicalBackgroundDetailSortInput {\n  projectId?: ISortEnumType;\n  medicalBackgroundId?: ISortEnumType;\n  medicalBackground?: IMedicalBackgroundSortInput;\n  label?: ISortEnumType;\n  backgroundTypeOption?: ISortEnumType;\n  isOption?: ISortEnumType;\n  isVisible?: ISortEnumType;\n  position?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IClinicHistoryMedicalBackgroundDetailSortInput {\n  medicalBackgroundDetailId?: ISortEnumType;\n  medicalBackgroundDetail?: IMedicalBackgroundDetailSortInput;\n  backgroundType?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMedicineFilterInput {\n  and?: Array<IMedicineFilterInput>;\n  or?: Array<IMedicineFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  eventId?: IComparableGuidOperationFilterInput;\n  medicineName?: IStringOperationFilterInput;\n  take?: IStringOperationFilterInput;\n  frecuency?: IStringOperationFilterInput;\n  duration?: IStringOperationFilterInput;\n  isVisible?: IBooleanOperationFilterInput;\n  position?: IComparableInt32OperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMedicineSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  eventId?: ISortEnumType;\n  medicineName?: ISortEnumType;\n  take?: ISortEnumType;\n  frecuency?: ISortEnumType;\n  duration?: ISortEnumType;\n  isVisible?: ISortEnumType;\n  position?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMedicalServiceFilterInput {\n  and?: Array<IMedicalServiceFilterInput>;\n  or?: Array<IMedicalServiceFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  state?: IBooleanOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  mode?: IServiceOptionOperationFilterInput;\n  cost?: IComparableDecimalOperationFilterInput;\n  imgRoute?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IServiceOptionOperationFilterInput {\n  eq?: IServiceOption;\n  neq?: IServiceOption;\n  in?: Array<IServiceOption>;\n  nin?: Array<IServiceOption>;\n}\n\nexport const enum IServiceOption {\n  PRESENCIAL = 'PRESENCIAL',\n  ONLINE = 'ONLINE'\n}\n\nexport interface IMedicalServiceSortInput {\n  projectId?: ISortEnumType;\n  state?: ISortEnumType;\n  name?: ISortEnumType;\n  mode?: ISortEnumType;\n  cost?: ISortEnumType;\n  imgRoute?: ISortEnumType;\n  description?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMedicalService {\n  projectId: IUUID;\n  state: boolean;\n  name: string;\n  mode: IServiceOption;\n  cost: IDecimal;\n  imgRoute: string;\n  description: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IVaccineFilterInput {\n  and?: Array<IVaccineFilterInput>;\n  or?: Array<IVaccineFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  nameVac?: IStringOperationFilterInput;\n  dateAplicationVac?: IComparableDateTimeOperationFilterInput;\n  nextVac?: IComparableNullableOfDateTimeOperationFilterInput;\n  notesVac?: IStringOperationFilterInput;\n  position?: IComparableNullableOfInt32OperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IVaccineSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  nameVac?: ISortEnumType;\n  dateAplicationVac?: ISortEnumType;\n  nextVac?: ISortEnumType;\n  notesVac?: ISortEnumType;\n  position?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IVitalSignFilterInput {\n  and?: Array<IVitalSignFilterInput>;\n  or?: Array<IVitalSignFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  labelNameVt?: IStringOperationFilterInput;\n  isVisible?: IBooleanOperationFilterInput;\n  position?: IComparableNullableOfInt32OperationFilterInput;\n  patientVitalSignsResponse?: IPatientVitalSignsResponseFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPatientVitalSignsResponseFilterInput {\n  and?: Array<IPatientVitalSignsResponseFilterInput>;\n  or?: Array<IPatientVitalSignsResponseFilterInput>;\n  vitalSignId?: IComparableGuidOperationFilterInput;\n  vitalSign?: IVitalSignFilterInput;\n  eventId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  value?: IComparableNullableOfDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IVitalSignSortInput {\n  projectId?: ISortEnumType;\n  labelNameVt?: ISortEnumType;\n  isVisible?: ISortEnumType;\n  position?: ISortEnumType;\n  patientVitalSignsResponse?: IPatientVitalSignsResponseSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPatientVitalSignsResponseSortInput {\n  vitalSignId?: ISortEnumType;\n  vitalSign?: IVitalSignSortInput;\n  eventId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  value?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMedicalConfigFilterInput {\n  and?: Array<IMedicalConfigFilterInput>;\n  or?: Array<IMedicalConfigFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  patologis?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMedicalConfigSortInput {\n  projectId?: ISortEnumType;\n  patologis?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMedicalConfig {\n  projectId: IUUID;\n  patologis: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IRegistSesionFilterInput {\n  and?: Array<IRegistSesionFilterInput>;\n  or?: Array<IRegistSesionFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  therapyId?: IComparableGuidOperationFilterInput;\n  therapy?: ITherapyFilterInput;\n  title?: IStringOperationFilterInput;\n  namePacient?: IStringOperationFilterInput;\n  terapist?: IStringOperationFilterInput;\n  dateSesion?: IComparableDateTimeOperationFilterInput;\n  comments?: IStringOperationFilterInput;\n  electronicsign?: IStringOperationFilterInput;\n  legalType?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ITherapyFilterInput {\n  and?: Array<ITherapyFilterInput>;\n  or?: Array<ITherapyFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  eventId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  numSesion?: IComparableDecimalOperationFilterInput;\n  content?: IStringOperationFilterInput;\n  isVisible?: IBooleanOperationFilterInput;\n  position?: IComparableNullableOfInt32OperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IRegistSesionSortInput {\n  projectId?: ISortEnumType;\n  therapyId?: ISortEnumType;\n  therapy?: ITherapySortInput;\n  title?: ISortEnumType;\n  namePacient?: ISortEnumType;\n  terapist?: ISortEnumType;\n  dateSesion?: ISortEnumType;\n  comments?: ISortEnumType;\n  electronicsign?: ISortEnumType;\n  legalType?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ITherapySortInput {\n  projectId?: ISortEnumType;\n  eventId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  numSesion?: ISortEnumType;\n  content?: ISortEnumType;\n  isVisible?: ISortEnumType;\n  position?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IRegistSesion {\n  projectId: IUUID;\n  therapyId: IUUID;\n  therapy: ITherapy;\n  title: string;\n  namePacient: string;\n  terapist: string;\n  dateSesion: IDateTime;\n  comments: string;\n  electronicsign: string;\n  legalType: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ITherapy {\n  projectId: IUUID;\n  eventId: IUUID;\n  memberId: IUUID;\n  numSesion: IDecimal;\n  content: string;\n  isVisible?: boolean;\n  position?: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ITherapyCollectionSegment {\n  items?: Array<ITherapy>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IRecipeConfigFilterInput {\n  and?: Array<IRecipeConfigFilterInput>;\n  or?: Array<IRecipeConfigFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  medicRecipeId?: IComparableGuidOperationFilterInput;\n  medicRecipe?: IMedicRecipeFilterInput;\n  isActiveAllPacients?: IBooleanOperationFilterInput;\n  isAccessDataPacient?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMedicRecipeFilterInput {\n  and?: Array<IMedicRecipeFilterInput>;\n  or?: Array<IMedicRecipeFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  profesionalCell?: IStringOperationFilterInput;\n  speciality?: IStringOperationFilterInput;\n  institute?: IStringOperationFilterInput;\n  electronicSing?: IStringOperationFilterInput;\n  isCorrect?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IRecipeConfigSortInput {\n  projectId?: ISortEnumType;\n  medicRecipeId?: ISortEnumType;\n  medicRecipe?: IMedicRecipeSortInput;\n  isActiveAllPacients?: ISortEnumType;\n  isAccessDataPacient?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMedicRecipeSortInput {\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  profesionalCell?: ISortEnumType;\n  speciality?: ISortEnumType;\n  institute?: ISortEnumType;\n  electronicSing?: ISortEnumType;\n  isCorrect?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IRecipeConfig {\n  projectId: IUUID;\n  medicRecipeId: IUUID;\n  medicRecipe: IMedicRecipe;\n  isActiveAllPacients: boolean;\n  isAccessDataPacient: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IConsultNoteFilterInput {\n  and?: Array<IConsultNoteFilterInput>;\n  or?: Array<IConsultNoteFilterInput>;\n  eventId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  note?: IStringOperationFilterInput;\n  isVisible?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IConsultNoteSortInput {\n  eventId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  note?: ISortEnumType;\n  isVisible?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IConsultNote {\n  eventId: IUUID;\n  projectId: IUUID;\n  memberId: IUUID;\n  note?: string;\n  isVisible: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPacientNoteFilterInput {\n  and?: Array<IPacientNoteFilterInput>;\n  or?: Array<IPacientNoteFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  eventId?: IComparableGuidOperationFilterInput;\n  note?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPacientNoteSortInput {\n  memberId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  eventId?: ISortEnumType;\n  note?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDiagnosticFilterInput {\n  and?: Array<IDiagnosticFilterInput>;\n  or?: Array<IDiagnosticFilterInput>;\n  eventId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  content?: IStringOperationFilterInput;\n  isVisible?: IBooleanOperationFilterInput;\n  medicines?: IListFilterInputTypeOfMedicineFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfMedicineFilterInput {\n  all?: IMedicineFilterInput;\n  none?: IMedicineFilterInput;\n  some?: IMedicineFilterInput;\n  any?: boolean;\n}\n\nexport interface IDiagnosticSortInput {\n  eventId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  content?: ISortEnumType;\n  isVisible?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBillingRequest {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventId: IUUID;\n  socialReason?: string;\n  rfc?: string;\n  cFDI?: string;\n  socialRegiment?: string;\n  cP?: string;\n  email?: string;\n  status?: boolean;\n  billingUrl?: string;\n  emailContent?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IConsultDto {\n  consultNote?: IConsultNote;\n  fisicExam?: IFisicExam;\n  diagnostic?: IDiagnostic;\n  therapy?: ITherapy;\n  patientVitalSignsResponse?: Array<IPatientVitalSignsResponse>;\n  medicine?: Array<IMedicine>;\n  pacientNote?: IPacientNote;\n}\n\nexport interface ISpaceFilterInput {\n  and?: Array<ISpaceFilterInput>;\n  or?: Array<ISpaceFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  image?: IStringOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  areaId?: IComparableNullableOfGuidOperationFilterInput;\n  visibility?: INullableOfEnumVisibilityOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  boards?: IListFilterInputTypeOfBoardFilterInput;\n  memberSpaces?: IListFilterInputTypeOfMemberSpaceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumVisibilityOperationFilterInput {\n  eq?: IEnumVisibility;\n  neq?: IEnumVisibility;\n  in?: Array<IEnumVisibility | null>;\n  nin?: Array<IEnumVisibility | null>;\n}\n\nexport interface IListFilterInputTypeOfBoardFilterInput {\n  all?: IBoardFilterInput;\n  none?: IBoardFilterInput;\n  some?: IBoardFilterInput;\n  any?: boolean;\n}\n\nexport interface IBoardFilterInput {\n  and?: Array<IBoardFilterInput>;\n  or?: Array<IBoardFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  order?: IComparableInt32OperationFilterInput;\n  color?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  serviceId?: IComparableNullableOfGuidOperationFilterInput;\n  spaceId?: IComparableGuidOperationFilterInput;\n  space?: ISpaceFilterInput;\n  boardStatus?: IListFilterInputTypeOfBoardStatusFilterInput;\n  boardLists?: IListFilterInputTypeOfBoardListFilterInput;\n  memberBoards?: IListFilterInputTypeOfMemberBoardFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfBoardStatusFilterInput {\n  all?: IBoardStatusFilterInput;\n  none?: IBoardStatusFilterInput;\n  some?: IBoardStatusFilterInput;\n  any?: boolean;\n}\n\nexport interface IBoardStatusFilterInput {\n  and?: Array<IBoardStatusFilterInput>;\n  or?: Array<IBoardStatusFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  color?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  boardId?: IComparableNullableOfGuidOperationFilterInput;\n  board?: IBoardFilterInput;\n  cards?: IListFilterInputTypeOfCardFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCardFilterInput {\n  all?: ICardFilterInput;\n  none?: ICardFilterInput;\n  some?: ICardFilterInput;\n  any?: boolean;\n}\n\nexport interface ICardFilterInput {\n  and?: Array<ICardFilterInput>;\n  or?: Array<ICardFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  progress?: IProgressOperationFilterInput;\n  priority?: IPriorityOperationFilterInput;\n  startDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  endDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  boardStatusId?: IComparableNullableOfGuidOperationFilterInput;\n  boardListId?: IComparableNullableOfGuidOperationFilterInput;\n  boardList?: IBoardListFilterInput;\n  boardStatus?: IBoardStatusFilterInput;\n  nestedFiles?: IListFilterInputTypeOfNestedFileFilterInput;\n  memberCards?: IListFilterInputTypeOfMemberCardFilterInput;\n  cardReplies?: IListFilterInputTypeOfCardReplyFilterInput;\n  cardChecklists?: IListFilterInputTypeOfCardChecklistFilterInput;\n  cardColumnValues?: IListFilterInputTypeOfCardColumnValueFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProgressOperationFilterInput {\n  eq?: IProgress;\n  neq?: IProgress;\n  in?: Array<IProgress>;\n  nin?: Array<IProgress>;\n}\n\nexport interface IPriorityOperationFilterInput {\n  eq?: IPriority;\n  neq?: IPriority;\n  in?: Array<IPriority>;\n  nin?: Array<IPriority>;\n}\n\nexport interface IBoardListFilterInput {\n  and?: Array<IBoardListFilterInput>;\n  or?: Array<IBoardListFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  order?: IComparableInt32OperationFilterInput;\n  color?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  boardId?: IComparableGuidOperationFilterInput;\n  boards?: IBoardFilterInput;\n  cards?: IListFilterInputTypeOfCardFilterInput;\n  boardGroupColumn?: IListFilterInputTypeOfBoardGroupColumnFilterInput;\n  boardRows?: IListFilterInputTypeOfBoardRowFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfBoardGroupColumnFilterInput {\n  all?: IBoardGroupColumnFilterInput;\n  none?: IBoardGroupColumnFilterInput;\n  some?: IBoardGroupColumnFilterInput;\n  any?: boolean;\n}\n\nexport interface IBoardGroupColumnFilterInput {\n  and?: Array<IBoardGroupColumnFilterInput>;\n  or?: Array<IBoardGroupColumnFilterInput>;\n  name?: IStringOperationFilterInput;\n  order?: IComparableInt32OperationFilterInput;\n  boardListId?: IComparableGuidOperationFilterInput;\n  boardColumnTypeId?: IComparableNullableOfGuidOperationFilterInput;\n  boardList?: IBoardListFilterInput;\n  boardColumnType?: IBoardColumnTypeFilterInput;\n  boardColumnValues?: IListFilterInputTypeOfBoardColumnValueFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBoardColumnTypeFilterInput {\n  and?: Array<IBoardColumnTypeFilterInput>;\n  or?: Array<IBoardColumnTypeFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  dataType?: IStringOperationFilterInput;\n  insideType?: IEnumInsideTypeOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  boardGroupColumns?: IListFilterInputTypeOfBoardGroupColumnFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEnumInsideTypeOperationFilterInput {\n  eq?: IEnumInsideType;\n  neq?: IEnumInsideType;\n  in?: Array<IEnumInsideType>;\n  nin?: Array<IEnumInsideType>;\n}\n\nexport interface IListFilterInputTypeOfBoardColumnValueFilterInput {\n  all?: IBoardColumnValueFilterInput;\n  none?: IBoardColumnValueFilterInput;\n  some?: IBoardColumnValueFilterInput;\n  any?: boolean;\n}\n\nexport interface IBoardColumnValueFilterInput {\n  and?: Array<IBoardColumnValueFilterInput>;\n  or?: Array<IBoardColumnValueFilterInput>;\n  value?: IStringOperationFilterInput;\n  boardGroupColumnId?: IComparableNullableOfGuidOperationFilterInput;\n  boardRowId?: IComparableNullableOfGuidOperationFilterInput;\n  boardGroupColumn?: IBoardGroupColumnFilterInput;\n  boardRow?: IBoardRowFilterInput;\n  boardMemberReferece?: IListFilterInputTypeOfBoardMemberReferenceFilterInput;\n  cardColumnValues?: IListFilterInputTypeOfCardColumnValueFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBoardRowFilterInput {\n  and?: Array<IBoardRowFilterInput>;\n  or?: Array<IBoardRowFilterInput>;\n  title?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  order?: IComparableInt32OperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  boardListId?: IComparableGuidOperationFilterInput;\n  boardList?: IBoardListFilterInput;\n  boardColumnValues?: IListFilterInputTypeOfBoardColumnValueFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfBoardMemberReferenceFilterInput {\n  all?: IBoardMemberReferenceFilterInput;\n  none?: IBoardMemberReferenceFilterInput;\n  some?: IBoardMemberReferenceFilterInput;\n  any?: boolean;\n}\n\nexport interface IBoardMemberReferenceFilterInput {\n  and?: Array<IBoardMemberReferenceFilterInput>;\n  or?: Array<IBoardMemberReferenceFilterInput>;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  boardColumnValueId?: IComparableNullableOfGuidOperationFilterInput;\n  boardColumnValue?: IBoardColumnValueFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCardColumnValueFilterInput {\n  all?: ICardColumnValueFilterInput;\n  none?: ICardColumnValueFilterInput;\n  some?: ICardColumnValueFilterInput;\n  any?: boolean;\n}\n\nexport interface ICardColumnValueFilterInput {\n  and?: Array<ICardColumnValueFilterInput>;\n  or?: Array<ICardColumnValueFilterInput>;\n  cardId?: IComparableGuidOperationFilterInput;\n  boardColumnValueId?: IComparableGuidOperationFilterInput;\n  boardColumnValue?: IBoardColumnValueFilterInput;\n  card?: ICardFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfBoardRowFilterInput {\n  all?: IBoardRowFilterInput;\n  none?: IBoardRowFilterInput;\n  some?: IBoardRowFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfNestedFileFilterInput {\n  all?: INestedFileFilterInput;\n  none?: INestedFileFilterInput;\n  some?: INestedFileFilterInput;\n  any?: boolean;\n}\n\nexport interface INestedFileFilterInput {\n  and?: Array<INestedFileFilterInput>;\n  or?: Array<INestedFileFilterInput>;\n  name?: IStringOperationFilterInput;\n  show?: IBooleanOperationFilterInput;\n  url?: IStringOperationFilterInput;\n  cardId?: IComparableGuidOperationFilterInput;\n  card?: ICardFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfMemberCardFilterInput {\n  all?: IMemberCardFilterInput;\n  none?: IMemberCardFilterInput;\n  some?: IMemberCardFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberCardFilterInput {\n  and?: Array<IMemberCardFilterInput>;\n  or?: Array<IMemberCardFilterInput>;\n  cardId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  card?: ICardFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCardReplyFilterInput {\n  all?: ICardReplyFilterInput;\n  none?: ICardReplyFilterInput;\n  some?: ICardReplyFilterInput;\n  any?: boolean;\n}\n\nexport interface ICardReplyFilterInput {\n  and?: Array<ICardReplyFilterInput>;\n  or?: Array<ICardReplyFilterInput>;\n  cardId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  card?: ICardFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCardChecklistFilterInput {\n  all?: ICardChecklistFilterInput;\n  none?: ICardChecklistFilterInput;\n  some?: ICardChecklistFilterInput;\n  any?: boolean;\n}\n\nexport interface ICardChecklistFilterInput {\n  and?: Array<ICardChecklistFilterInput>;\n  or?: Array<ICardChecklistFilterInput>;\n  name?: IStringOperationFilterInput;\n  cardId?: IComparableNullableOfGuidOperationFilterInput;\n  card?: ICardFilterInput;\n  cardCheckComponents?: IListFilterInputTypeOfCardCheckComponentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCardCheckComponentFilterInput {\n  all?: ICardCheckComponentFilterInput;\n  none?: ICardCheckComponentFilterInput;\n  some?: ICardCheckComponentFilterInput;\n  any?: boolean;\n}\n\nexport interface ICardCheckComponentFilterInput {\n  and?: Array<ICardCheckComponentFilterInput>;\n  or?: Array<ICardCheckComponentFilterInput>;\n  description?: IStringOperationFilterInput;\n  selected?: IBooleanOperationFilterInput;\n  order?: IComparableInt32OperationFilterInput;\n  cardChecklistId?: IComparableNullableOfGuidOperationFilterInput;\n  cardChecklist?: ICardChecklistFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfBoardListFilterInput {\n  all?: IBoardListFilterInput;\n  none?: IBoardListFilterInput;\n  some?: IBoardListFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfMemberBoardFilterInput {\n  all?: IMemberBoardFilterInput;\n  none?: IMemberBoardFilterInput;\n  some?: IMemberBoardFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberBoardFilterInput {\n  and?: Array<IMemberBoardFilterInput>;\n  or?: Array<IMemberBoardFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  boardId?: IComparableGuidOperationFilterInput;\n  outstading?: IBooleanOperationFilterInput;\n  order?: IComparableInt32OperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  board?: IBoardFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfMemberSpaceFilterInput {\n  all?: IMemberSpaceFilterInput;\n  none?: IMemberSpaceFilterInput;\n  some?: IMemberSpaceFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberSpaceFilterInput {\n  and?: Array<IMemberSpaceFilterInput>;\n  or?: Array<IMemberSpaceFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  spaceId?: IComparableGuidOperationFilterInput;\n  order?: IComparableNullableOfInt32OperationFilterInput;\n  outstading?: IBooleanOperationFilterInput;\n  access?: IEnumSpaceAccessOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  space?: ISpaceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEnumSpaceAccessOperationFilterInput {\n  eq?: IEnumSpaceAccess;\n  neq?: IEnumSpaceAccess;\n  in?: Array<IEnumSpaceAccess>;\n  nin?: Array<IEnumSpaceAccess>;\n}\n\nexport interface ISpaceSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  image?: ISortEnumType;\n  projectId?: ISortEnumType;\n  areaId?: ISortEnumType;\n  visibility?: ISortEnumType;\n  active?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISpaceCollectionSegment {\n  items?: Array<ISpace>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IBoardStatusSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  color?: ISortEnumType;\n  code?: ISortEnumType;\n  active?: ISortEnumType;\n  projectId?: ISortEnumType;\n  boardId?: ISortEnumType;\n  board?: IBoardSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBoardSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  memberId?: ISortEnumType;\n  order?: ISortEnumType;\n  color?: ISortEnumType;\n  active?: ISortEnumType;\n  serviceId?: ISortEnumType;\n  spaceId?: ISortEnumType;\n  space?: ISpaceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBoardStatusCollectionSegment {\n  items?: Array<IBoardStatus>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IBoardCollectionSegment {\n  items?: Array<IBoard>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IBoardListSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  order?: ISortEnumType;\n  color?: ISortEnumType;\n  active?: ISortEnumType;\n  boardId?: ISortEnumType;\n  boards?: IBoardSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBoardListCollectionSegment {\n  items?: Array<IBoardList>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICardReplySortInput {\n  cardId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  description?: ISortEnumType;\n  active?: ISortEnumType;\n  card?: ICardSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICardSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  active?: ISortEnumType;\n  progress?: ISortEnumType;\n  priority?: ISortEnumType;\n  startDate?: ISortEnumType;\n  endDate?: ISortEnumType;\n  projectId?: ISortEnumType;\n  boardStatusId?: ISortEnumType;\n  boardListId?: ISortEnumType;\n  boardList?: IBoardListSortInput;\n  boardStatus?: IBoardStatusSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICardReplyCollectionSegment {\n  items?: Array<ICardReply>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICardCollectionSegment {\n  items?: Array<ICard>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface INestedFileSortInput {\n  name?: ISortEnumType;\n  show?: ISortEnumType;\n  url?: ISortEnumType;\n  cardId?: ISortEnumType;\n  card?: ICardSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface INestedFileCollectionSegment {\n  items?: Array<INestedFile>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberCardSortInput {\n  cardId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  active?: ISortEnumType;\n  card?: ICardSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberCardCollectionSegment {\n  items?: Array<IMemberCard>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberBoardSortInput {\n  memberId?: ISortEnumType;\n  boardId?: ISortEnumType;\n  outstading?: ISortEnumType;\n  order?: ISortEnumType;\n  active?: ISortEnumType;\n  board?: IBoardSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberBoardCollectionSegment {\n  items?: Array<IMemberBoard>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberSpaceSortInput {\n  memberId?: ISortEnumType;\n  spaceId?: ISortEnumType;\n  order?: ISortEnumType;\n  outstading?: ISortEnumType;\n  access?: ISortEnumType;\n  active?: ISortEnumType;\n  space?: ISpaceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberSpaceCollectionSegment {\n  items?: Array<IMemberSpace>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IListMemberSpaceOnValueConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IListMemberSpaceOnValueEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IMemberSpace>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IListMemberSpaceOnValueEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IMemberSpace;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IListMemberSpaceOnCardConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IListMemberSpaceOnCardEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IMemberSpace>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IListMemberSpaceOnCardEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IMemberSpace;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IListMemberBoardOnValueConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IListMemberBoardOnValueEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IMemberBoard>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IListMemberBoardOnValueEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IMemberBoard;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IListMemberBoardOnCardConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IListMemberBoardOnCardEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IMemberBoard>;\n  totalCount: number;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IListMemberBoardOnCardEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IMemberBoard;\n}\n\nexport interface IBoardColumnTypeSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  dataType?: ISortEnumType;\n  insideType?: ISortEnumType;\n  active?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBoardColumnTypeCollectionSegment {\n  items?: Array<IBoardColumnType>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberBoardDTO {\n  memberSpace: IMemberSpace;\n  memberBoards: Array<IMemberBoard>;\n}\n\nexport interface ICardColumnValueSortInput {\n  cardId?: ISortEnumType;\n  boardColumnValueId?: ISortEnumType;\n  boardColumnValue?: IBoardColumnValueSortInput;\n  card?: ICardSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBoardColumnValueSortInput {\n  value?: ISortEnumType;\n  boardGroupColumnId?: ISortEnumType;\n  boardRowId?: ISortEnumType;\n  boardGroupColumn?: IBoardGroupColumnSortInput;\n  boardRow?: IBoardRowSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBoardGroupColumnSortInput {\n  name?: ISortEnumType;\n  order?: ISortEnumType;\n  boardListId?: ISortEnumType;\n  boardColumnTypeId?: ISortEnumType;\n  boardList?: IBoardListSortInput;\n  boardColumnType?: IBoardColumnTypeSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBoardRowSortInput {\n  title?: ISortEnumType;\n  description?: ISortEnumType;\n  order?: ISortEnumType;\n  active?: ISortEnumType;\n  boardListId?: ISortEnumType;\n  boardList?: IBoardListSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICardColumnValueCollectionSegment {\n  items?: Array<ICardColumnValue>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IBoardMemberReferenceSortInput {\n  memberId?: ISortEnumType;\n  description?: ISortEnumType;\n  active?: ISortEnumType;\n  boardColumnValueId?: ISortEnumType;\n  boardColumnValue?: IBoardColumnValueSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBoardMemberReferenceCollectionSegment {\n  items?: Array<IBoardMemberReference>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IAttribute {\n  value: string;\n  projectId?: IUUID;\n  attributesValues?: Array<IAttributeValue>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IAttributeValue {\n  value: string;\n  projectId?: IUUID;\n  attributeId: IUUID;\n  attribute?: IAttribute;\n  materialCombinationAttributes?: Array<IMaterialCombinationAttribute>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterialCombinationAttribute {\n  projectId?: IUUID;\n  materialCombinationId: IUUID;\n  attributeValueId: IUUID;\n  materialCombination?: IMaterialCombination;\n  attributeValue?: IAttributeValue;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterialCombination {\n  projectId?: IUUID;\n  materialId: IUUID;\n  provCode: string;\n  intCode: string;\n  price: number;\n  material?: IMaterial;\n  materialCombinationAttributes?: Array<IMaterialCombinationAttribute>;\n  materialStocks?: Array<IMaterialStock>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterial {\n  projectId?: IUUID;\n  measureUnityId: IUUID;\n  materialCategoryId: IUUID;\n  materialCategory?: IMaterialCategory;\n  measureUnity?: IMeasureUnity;\n  measureValues?: Array<IMeasureValue>;\n  materialModules?: Array<IMaterialModule>;\n  materialCombinations?: Array<IMaterialCombination>;\n  materialStocks?: Array<IMaterialStock>;\n  name: string;\n  provCode: string;\n  intCode: string;\n  descMaterial: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterialCategory {\n  projectId?: IUUID;\n  nombreCategoria: string;\n  materials?: Array<IMaterial>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMeasureUnity {\n  projectId?: IUUID;\n  name: string;\n  abbreviation: string;\n  materials?: Array<IMaterial>;\n  measureUnitiesTwo?: Array<IMeasureUnityTwo>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMeasureUnityTwo {\n  projectId?: IUUID;\n  measureUnityId: IUUID;\n  measureId: IUUID;\n  measure?: IMeasure;\n  measureUnity?: IMeasureUnity;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMeasure {\n  projectId?: IUUID;\n  name: string;\n  abbreviation: string;\n  measureUnityTwo?: Array<IMeasureUnityTwo>;\n  measureValue?: Array<IMeasureValue>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMeasureValue {\n  projectId?: IUUID;\n  measureId: IUUID;\n  materialId: IUUID;\n  measure?: IMeasure;\n  material?: IMaterial;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterialModule {\n  projectId?: IUUID;\n  moduleId: IUUID;\n  materialCategoryId: IUUID;\n  materialId: IUUID;\n  formule: string;\n  formuleOpe: string;\n  variables: string;\n  module?: IModule;\n  material?: IMaterial;\n  materialVariableModules?: Array<IMaterialVariableModule>;\n  materialCategory?: IMaterialCategory;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IModule {\n  projectId?: IUUID;\n  moduleCategoryId: IUUID;\n  name: string;\n  descModule: string;\n  formule?: string;\n  materialModules?: Array<IMaterialModule>;\n  quotationModules?: Array<IQuotationModule>;\n  moduleCategory?: IModuleCategory;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuotationModule {\n  projectId?: IUUID;\n  quotationId: IUUID;\n  moduleCategoryId: IUUID;\n  moduleId: IUUID;\n  quantity: number;\n  price: number;\n  image: string;\n  materialQuotations?: Array<IMaterialQuotation>;\n  quotation?: IQuotation;\n  module?: IModule;\n  moduleCategory?: IModuleCategory;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterialQuotation {\n  projectId?: IUUID;\n  moduleQuotationId: IUUID;\n  materialId: IUUID;\n  materialModuleId: IUUID;\n  materialCombinationId: IUUID;\n  materialVariableQuotations?: Array<IMaterialVariableQuotation>;\n  quotationModule?: IQuotationModule;\n  material?: IMaterial;\n  materialCombination?: IMaterialCombination;\n  materialModules?: Array<IMaterialModule>;\n  measureValue?: Array<IMeasureValue>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterialVariableQuotation {\n  projectId?: IUUID;\n  materialQuotationId: IUUID;\n  variableId: IUUID;\n  value: string;\n  materialQuotation?: IMaterialQuotation;\n  variable?: IVariable;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IVariable {\n  projectId?: IUUID;\n  value: string;\n  materialVariableModules?: Array<IMaterialVariableModule>;\n  materialVariableQuotations?: Array<IMaterialVariableQuotation>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterialVariableModule {\n  projectId?: IUUID;\n  materialModuleId: IUUID;\n  variableId: IUUID;\n  variable?: IVariable;\n  materialModule?: IMaterialModule;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuotation {\n  projectId?: IUUID;\n  madreQuotationId: IUUID;\n  memberId: IUUID;\n  buildingSiteName: string;\n  folio: string;\n  isOptimized: boolean;\n  quotationModules?: Array<IQuotationModule>;\n  madreQuotation?: IMadreQuotation;\n  buildingSiteAddress?: IBuildingSiteAddress;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMadreQuotation {\n  projectId?: IUUID;\n  memberId: IUUID;\n  userCustomerId: IUUID;\n  folio: string;\n  userCustomer?: IUserCustomer;\n  quotations?: Array<IQuotation>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IUserCustomer {\n  projectId?: IUUID;\n  memberId: IUUID;\n  madreQuotations?: Array<IMadreQuotation>;\n  customers?: Array<ICustomer>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICustomer {\n  projectId?: IUUID;\n  name: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  company: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBuildingSiteAddress {\n  projectId?: IUUID;\n  quotationId: IUUID;\n  countryId: IUUID;\n  stateId: IUUID;\n  street: string;\n  externalNumber: string;\n  internalNumber: string;\n  colony: string;\n  municipality: string;\n  quotation?: IQuotation;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IModuleCategory {\n  projectId?: IUUID;\n  name: string;\n  descCategory: string;\n  modules?: Array<IModule>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterialStock {\n  projectId?: IUUID;\n  materialId: IUUID;\n  materialCombinationId: IUUID;\n  material?: IMaterial;\n  materialCombination?: IMaterialCombination;\n  materialStockMeasures?: Array<IMaterialStockMeasure>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMaterialStockMeasure {\n  projectId?: IUUID;\n  materialStockId: IUUID;\n  quotationId: IUUID;\n  value: number;\n  formule: string;\n  isActive: boolean;\n  quotationIdUsed: IUUID;\n  materialStock?: IMaterialStock;\n  materialStockQuotation?: IQuotation;\n  quotationStockUsed?: IQuotation;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IMaterialCategoriesConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IMaterialCategoriesEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IMaterialCategory>;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IMaterialCategoriesEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IMaterialCategory;\n}\n\nexport interface IBrandsHermer {\n  brands?: Array<string>;\n}\n\nexport interface IModelsHermer {\n  carModels?: Array<string>;\n}\n\nexport interface IYearsHermer {\n  carYears?: Array<number>;\n}\n\nexport interface IModelLobatoHermer {\n  id?: number;\n  idLobato?: number;\n  brand?: string;\n  newUsed?: string;\n  yearModel?: number;\n  subBrand?: string;\n  version?: string;\n  salePrice?: number;\n  buyingPrice?: number;\n  newListPrice?: string;\n  type?: string;\n  intermeditePrice?: number;\n  priceCertificateAgency?: number;\n  brandCatalog?: string;\n}\n\nexport interface IModelMercadoLibreResultHermer {\n  consultId?: number;\n  results?: Array<IModelMercadoLibreHermer>;\n  compared?: Array<IComparedMercadoLibreHermer>;\n}\n\nexport interface IModelMercadoLibreHermer {\n  id?: number;\n  idMercadoLibre?: string;\n  siteId?: string;\n  title?: string;\n  price?: number;\n  salePrice?: string;\n  currencyId?: string;\n  availableQuantity?: number;\n  soldQuantity?: number;\n  buyingMode?: string;\n  listingTypeId?: string;\n  stopTime?: string;\n  condition?: string;\n  permaLink?: string;\n  thumbnail?: string;\n  thumbnailId?: string;\n  acceptsMercadopago?: boolean;\n  installments?: string;\n  originalPrice?: string;\n  categoryId?: string;\n  officialStoreId?: number;\n  domainId?: string;\n  catalogProductId?: string;\n  orderBackend?: number;\n  useThumbnailId?: boolean;\n  offerScore?: string;\n  offerShare?: string;\n  matchScore?: string;\n  winnerItemId?: string;\n  melicoin?: string;\n  discounts?: string;\n  ano?: number;\n  marca?: string;\n  modelo?: string;\n  version?: string;\n  kilometraje?: string;\n  ultimaActualizacionDePrecio?: string;\n  idVendedor?: number;\n  primeraAparicion?: string;\n  ultimaActualizacion?: string;\n  publicadoHace?: number;\n  marcaCatalogo?: string;\n  year?: number;\n}\n\nexport interface IComparedMercadoLibreHermer {\n  comparedId?: number;\n  results?: Array<IModelMercadoLibreHermer>;\n}\n\nexport interface IResultConsultHermer {\n  count?: number;\n  next?: string;\n  previous?: string;\n  results?: Array<IConsultShortHermer>;\n}\n\nexport interface IConsultShortHermer {\n  vinNum?: string;\n  milage?: number;\n  valuador?: string;\n  brand?: string;\n  model?: string;\n  year?: number;\n  properties?: Array<string>;\n  lobatoId?: number;\n  client?: number;\n  carmercadoConsult?: ICarMercadoHermerShort;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICarMercadoHermerShort {\n  id: number;\n  analysisCarmercado?: IAnalysisCarMercadoHermerShort;\n}\n\nexport interface IAnalysisCarMercadoHermerShort {\n  lobatoBuyingPrice?: number;\n  lobatoSalePrice?: number;\n  estimatedEarning?: number;\n  damage?: number;\n  advisedSalePriceWithKmRounded?: number;\n  advisedBuyingPriceWithKmRounded?: number;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IResultConsultAllHermer {\n  count?: number;\n  next?: string;\n  previous?: string;\n  results?: Array<IConsultHermer>;\n}\n\nexport interface IConsultHermer {\n  vinNum?: string;\n  milage?: number;\n  valuador?: string;\n  brand?: string;\n  model?: string;\n  year?: number;\n  properties?: Array<string>;\n  lobatoId?: number;\n  lobatoIdData?: IlobatoHermerData;\n  client?: IClientHermer;\n  comparedConsult?: Array<IComparedHermer>;\n  carmercadoConsult?: ICarMercadoHermer;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IlobatoHermerData {\n  idLobato?: number;\n  marca?: string;\n  nuevoUsado?: string;\n  anoModelo?: number;\n  submarca?: string;\n  version?: string;\n  precioVenta?: number;\n  precioCompra?: number;\n  precioDeListaNuevo?: number;\n  tipo?: string;\n  precioIntermedio?: number;\n  precioAgenciaCertificados?: number;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IClientHermer {\n  firstName?: string;\n  lastName?: string;\n  phone?: string;\n  email?: string;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IComparedHermer {\n  brand?: string;\n  model?: string;\n  year?: number;\n  properties?: Array<string>;\n  lobatoId?: number;\n  lobatoIdData?: IlobatoHermerData;\n  consult?: number;\n  carmercadoCompared?: ICarMercadoHermer;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICarMercadoHermer {\n  analysisCarmercado?: IAnalysisCarMercadoHermer;\n  mercadolibreIds?: Array<string>;\n  mercadolibreIdsData?: Array<IModelMercadoLibreHermer>;\n  manualDevaluation?: number;\n  consult?: number;\n  compared?: number;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IAnalysisCarMercadoHermer {\n  carMercado?: number;\n  meanSalePrice?: number;\n  lobatoSalePrice?: number;\n  meanPriceKm?: number;\n  meanPublishedTime?: number;\n  maxPublishedTime?: number;\n  minPublishedTime?: number;\n  estimatedEarning?: number;\n  salePriceWithoutKm?: number;\n  advisedBuyingPriceWithoutKm?: number;\n  lobatoBuyingPrice?: number;\n  meanKm?: number;\n  advisedSalePriceWithKm?: number;\n  advisedBuyingPriceWithKm?: number;\n  slopeOfPredictiveLine?: number;\n  pointOfPredictiveLine?: string;\n  meanSalePriceCarToCompare?: number;\n  lobatoSalePriceCarToCompare?: number;\n  meanPriceKmCarToCompare?: number;\n  meanPublishedTimeCarToCompare?: number;\n  maxPublishedTimeCarToCompare?: number;\n  minPublishedTimeCarToCompare?: number;\n  estimatedEarningCarToCompare?: number;\n  salePriceWithoutKmCarToCompare?: number;\n  lobatoBuyingPriceCarToCompare?: number;\n  meanKmCarToCompare?: number;\n  advisedSalePriceWithKmCarToCompare?: number;\n  advisedBuyingPriceWithKmCarToCompare?: number;\n  slopeOfPredictiveLineCarToCompare?: number;\n  pointOfPredictiveLineCarToCompare?: string;\n  priceDiferenceByLobato?: number;\n  meanSalePriceCarToCompareMinusPriceDiference?: number;\n  salePriceWithoutKmCarToCompareMinusPriceDiference?: number;\n  advisedSalePriceWithKmCarToCompareMinusPriceDiference?: number;\n  advisedBuyingPriceWithKmCarToCompareMinusPriceDiference?: number;\n  damage?: number;\n  advisedSalePriceWithKmRounded?: number;\n  advisedBuyingPriceWithKmRounded?: number;\n  advisedSalePriceWithKmCarToCompareRounded?: number;\n  advisedBuyingPriceWithKmCarToCompareRounded?: number;\n  advisedSalePriceWithKmCarToCompareMinusPriceDiferenceRounded?: number;\n  advisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceRounded?: number;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IResultConsultLastAnalysisHermer {\n  count?: number;\n  next?: string;\n  previous?: string;\n  results?: Array<IConsultLastAnalysisHermer>;\n}\n\nexport interface IConsultLastAnalysisHermer {\n  vinNum?: string;\n  milage?: number;\n  valuador?: string;\n  brand?: string;\n  model?: string;\n  year?: number;\n  properties?: Array<string>;\n  lobatoId?: number;\n  appraisal?: string;\n  lobatoIdData?: IlobatoHermerData;\n  client?: IClientHermer;\n  lastAnalysis?: ILastAnalysisCarMercadoHermer;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ILastAnalysisCarMercadoHermer {\n  carmercado?: ILastCarMercadoHermer;\n  meanSalePrice?: number;\n  lobatoSalePrice?: number;\n  meanPriceKm?: number;\n  meanPublishedTime?: number;\n  maxPublishedTime?: number;\n  minPublishedTime?: number;\n  estimatedEarning?: number;\n  salePriceWithoutKm?: number;\n  advisedBuyingPriceWithoutKm?: number;\n  lobatoBuyingPrice?: number;\n  meanKm?: number;\n  advisedSalePriceWithKm?: number;\n  advisedBuyingPriceWithKm?: number;\n  slopeOfPredictiveLine?: number;\n  pointOfPredictiveLine?: string;\n  meanSalePriceCarToCompare?: number;\n  lobatoSalePriceCarToCompare?: number;\n  meanPriceKmCarToCompare?: number;\n  meanPublishedTimeCarToCompare?: number;\n  maxPublishedTimeCarToCompare?: number;\n  minPublishedTimeCarToCompare?: number;\n  estimatedEarningCarToCompare?: number;\n  salePriceWithoutKmCarToCompare?: number;\n  lobatoBuyingPriceCarToCompare?: number;\n  meanKmCarToCompare?: number;\n  advisedSalePriceWithKmCarToCompare?: number;\n  advisedBuyingPriceWithKmCarToCompare?: number;\n  slopeOfPredictiveLineCarToCompare?: number;\n  pointOfPredictiveLineCarToCompare?: string;\n  priceDiferenceByLobato?: number;\n  meanSalePriceCarToCompareMinusPriceDiference?: number;\n  salePriceWithoutKmCarToCompareMinusPriceDiference?: number;\n  advisedSalePriceWithKmCarToCompareMinusPriceDiference?: number;\n  advisedBuyingPriceWithKmCarToCompareMinusPriceDiference?: number;\n  damage?: number;\n  advisedSalePriceWithKmRounded?: number;\n  advisedBuyingPriceWithKmRounded?: number;\n  advisedSalePriceWithKmCarToCompareRounded?: number;\n  advisedBuyingPriceWithKmCarToCompareRounded?: number;\n  advisedSalePriceWithKmCarToCompareMinusPriceDiferenceRounded?: number;\n  advisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceRounded?: number;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ILastCarMercadoHermer {\n  mercadolibreIds?: Array<string>;\n  manualDevaluation?: number;\n  consult?: number;\n  compared?: IComparedHermer;\n  id: number;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDownloadFile {\n  url: string;\n}\n\nexport interface IFolderFilterInput {\n  and?: Array<IFolderFilterInput>;\n  or?: Array<IFolderFilterInput>;\n  isActive?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  label?: IStringOperationFilterInput;\n  background?: IStringOperationFilterInput;\n  parentId?: IComparableNullableOfGuidOperationFilterInput;\n  path?: IStringOperationFilterInput;\n  folderType?: IStringOperationFilterInput;\n  isPersonal?: IBooleanOperationFilterInput;\n  isOutstanding?: IBooleanOperationFilterInput;\n  parent?: IFolderFilterInput;\n  subFolders?: IListFilterInputTypeOfFolderFilterInput;\n  files?: IListFilterInputTypeOfFileFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfFolderFilterInput {\n  all?: IFolderFilterInput;\n  none?: IFolderFilterInput;\n  some?: IFolderFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfFileFilterInput {\n  all?: IFileFilterInput;\n  none?: IFileFilterInput;\n  some?: IFileFilterInput;\n  any?: boolean;\n}\n\nexport interface IFileFilterInput {\n  and?: Array<IFileFilterInput>;\n  or?: Array<IFileFilterInput>;\n  folderId?: IComparableGuidOperationFilterInput;\n  folder?: IFolderFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  isProfile?: IBooleanOperationFilterInput;\n  token?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  url?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  isOutstanding?: IBooleanOperationFilterInput;\n  partialUrl?: IStringOperationFilterInput;\n  sharedFiles?: IListFilterInputTypeOfSharedFileFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfSharedFileFilterInput {\n  all?: ISharedFileFilterInput;\n  none?: ISharedFileFilterInput;\n  some?: ISharedFileFilterInput;\n  any?: boolean;\n}\n\nexport interface ISharedFileFilterInput {\n  and?: Array<ISharedFileFilterInput>;\n  or?: Array<ISharedFileFilterInput>;\n  fileId?: IComparableGuidOperationFilterInput;\n  file?: IFileFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IFolderSortInput {\n  isActive?: ISortEnumType;\n  projectId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  label?: ISortEnumType;\n  background?: ISortEnumType;\n  parentId?: ISortEnumType;\n  path?: ISortEnumType;\n  folderType?: ISortEnumType;\n  isPersonal?: ISortEnumType;\n  isOutstanding?: ISortEnumType;\n  parent?: IFolderSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IListFoldersConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IListFoldersEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IFolder>;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IListFoldersEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IFolder;\n}\n\n/**\n * A connection to a list of items.\n */\nexport interface IFoldersListConnection {\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: IPageInfo;\n  \n  /**\n   * A list of edges.\n   */\n  edges?: Array<IFoldersListEdge>;\n  \n  /**\n   * A flattened list of the nodes.\n   */\n  nodes?: Array<IFolder>;\n}\n\n/**\n * An edge in a connection.\n */\nexport interface IFoldersListEdge {\n  \n  /**\n   * A cursor for use in pagination.\n   */\n  cursor: string;\n  \n  /**\n   * The item at the end of the edge.\n   */\n  node: IFolder;\n}\n\nexport interface ISharedFilesFromFolderDto {\n  totalCount: number;\n  files: Array<ISharedFile>;\n}\n\nexport interface IFileSortInput {\n  folderId?: ISortEnumType;\n  folder?: IFolderSortInput;\n  memberId?: ISortEnumType;\n  isProfile?: ISortEnumType;\n  token?: ISortEnumType;\n  name?: ISortEnumType;\n  url?: ISortEnumType;\n  description?: ISortEnumType;\n  isActive?: ISortEnumType;\n  isOutstanding?: ISortEnumType;\n  partialUrl?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IFileCollectionSegment {\n  items?: Array<IFile>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IFolderCollectionSegment {\n  items?: Array<IFolder>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISharedFolderFilterInput {\n  and?: Array<ISharedFolderFilterInput>;\n  or?: Array<ISharedFolderFilterInput>;\n  folderId?: IComparableGuidOperationFilterInput;\n  folder?: IFolderFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IOutstandingFiles {\n  files: Array<IFile>;\n  folders: Array<IFolder>;\n}\n\nexport interface IConversationReply {\n  memberId: IUUID;\n  reply: string;\n  registerDate: IDateTime;\n  status: string;\n  conversationId: IUUID;\n  conversation: IConversation;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  member?: IMemberChat;\n}\n\nexport interface IConversation {\n  projectId: IUUID;\n  memberOne: IUUID;\n  memberTwo: IUUID;\n  registerDate: IDateTime;\n  status: string;\n  replies: Array<IConversationReply>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMemberConversation {\n  memberId: IUUID;\n  conversationId: IUUID;\n  member?: IMemberChat;\n}\n\nexport interface IEWalletFilterInput {\n  and?: Array<IEWalletFilterInput>;\n  or?: Array<IEWalletFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  principal?: IBooleanOperationFilterInput;\n  balance?: IComparableDecimalOperationFilterInput;\n  detained?: IComparableDecimalOperationFilterInput;\n  detainedManual?: IComparableDecimalOperationFilterInput;\n  automaticPayment?: IBooleanOperationFilterInput;\n  memberWallets?: IListFilterInputTypeOfMemberWalletFilterInput;\n  eWalletTransactions?: IListFilterInputTypeOfWalletTransactionFilterInput;\n  eWalletRetrieves?: IListFilterInputTypeOfWalletTransactionFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfMemberWalletFilterInput {\n  all?: IMemberWalletFilterInput;\n  none?: IMemberWalletFilterInput;\n  some?: IMemberWalletFilterInput;\n  any?: boolean;\n}\n\nexport interface IMemberWalletFilterInput {\n  and?: Array<IMemberWalletFilterInput>;\n  or?: Array<IMemberWalletFilterInput>;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  eWalletId?: IComparableGuidOperationFilterInput;\n  eWallet?: IEWalletFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfWalletTransactionFilterInput {\n  all?: IWalletTransactionFilterInput;\n  none?: IWalletTransactionFilterInput;\n  some?: IWalletTransactionFilterInput;\n  any?: boolean;\n}\n\nexport interface IWalletTransactionFilterInput {\n  and?: Array<IWalletTransactionFilterInput>;\n  or?: Array<IWalletTransactionFilterInput>;\n  service?: INullableOfEnumTransactionServiceOperationFilterInput;\n  paymentServiceId?: IStringOperationFilterInput;\n  paymentServiceToken?: IStringOperationFilterInput;\n  amount?: IComparableDecimalOperationFilterInput;\n  detainedAmount?: IComparableDecimalOperationFilterInput;\n  concept?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  projectWalletKeyId?: IComparableNullableOfGuidOperationFilterInput;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  eWalletId?: IComparableNullableOfGuidOperationFilterInput;\n  receptorId?: IComparableNullableOfGuidOperationFilterInput;\n  type?: IEnumTransactionTypeOperationFilterInput;\n  eWallet?: IEWalletFilterInput;\n  receptor?: IEWalletFilterInput;\n  walletTransactionStatus?: IListFilterInputTypeOfWalletTransactionStatusFilterInput;\n  walletTransactionMember?: IWalletTransactionMemberRelationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumTransactionServiceOperationFilterInput {\n  eq?: IEnumTransactionService;\n  neq?: IEnumTransactionService;\n  in?: Array<IEnumTransactionService | null>;\n  nin?: Array<IEnumTransactionService | null>;\n}\n\nexport interface IEnumTransactionTypeOperationFilterInput {\n  eq?: IEnumTransactionType;\n  neq?: IEnumTransactionType;\n  in?: Array<IEnumTransactionType>;\n  nin?: Array<IEnumTransactionType>;\n}\n\nexport interface IListFilterInputTypeOfWalletTransactionStatusFilterInput {\n  all?: IWalletTransactionStatusFilterInput;\n  none?: IWalletTransactionStatusFilterInput;\n  some?: IWalletTransactionStatusFilterInput;\n  any?: boolean;\n}\n\nexport interface IWalletTransactionStatusFilterInput {\n  and?: Array<IWalletTransactionStatusFilterInput>;\n  or?: Array<IWalletTransactionStatusFilterInput>;\n  status?: INullableOfEnumTransactionStatusOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  walletTransactionId?: IComparableNullableOfGuidOperationFilterInput;\n  walletTransaction?: IWalletTransactionFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumTransactionStatusOperationFilterInput {\n  eq?: IEnumTransactionStatus;\n  neq?: IEnumTransactionStatus;\n  in?: Array<IEnumTransactionStatus | null>;\n  nin?: Array<IEnumTransactionStatus | null>;\n}\n\nexport interface IWalletTransactionMemberRelationFilterInput {\n  and?: Array<IWalletTransactionMemberRelationFilterInput>;\n  or?: Array<IWalletTransactionMemberRelationFilterInput>;\n  memberRelationId?: IComparableGuidOperationFilterInput;\n  walletTransactionId?: IComparableNullableOfGuidOperationFilterInput;\n  walletTransaction?: IWalletTransactionFilterInput;\n  walletTransactionMemberDetails?: IListFilterInputTypeOfWalletTransactionMemberDetailFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfWalletTransactionMemberDetailFilterInput {\n  all?: IWalletTransactionMemberDetailFilterInput;\n  none?: IWalletTransactionMemberDetailFilterInput;\n  some?: IWalletTransactionMemberDetailFilterInput;\n  any?: boolean;\n}\n\nexport interface IWalletTransactionMemberDetailFilterInput {\n  and?: Array<IWalletTransactionMemberDetailFilterInput>;\n  or?: Array<IWalletTransactionMemberDetailFilterInput>;\n  amount?: IComparableDecimalOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  walletTransactionMemberId?: IComparableGuidOperationFilterInput;\n  walletTransactionMember?: IWalletTransactionMemberRelationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEWalletSortInput {\n  projectId?: ISortEnumType;\n  principal?: ISortEnumType;\n  balance?: ISortEnumType;\n  detained?: ISortEnumType;\n  detainedManual?: ISortEnumType;\n  automaticPayment?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IEWalletCollectionSegment {\n  items?: Array<IEWallet>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMemberWalletSortInput {\n  memberId?: ISortEnumType;\n  eWalletId?: ISortEnumType;\n  eWallet?: IEWalletSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMemberWalletCollectionSegment {\n  items?: Array<IMemberWallet>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IWalletTransactionSortInput {\n  service?: ISortEnumType;\n  paymentServiceId?: ISortEnumType;\n  paymentServiceToken?: ISortEnumType;\n  amount?: ISortEnumType;\n  detainedAmount?: ISortEnumType;\n  concept?: ISortEnumType;\n  description?: ISortEnumType;\n  projectWalletKeyId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  eWalletId?: ISortEnumType;\n  receptorId?: ISortEnumType;\n  type?: ISortEnumType;\n  eWallet?: IEWalletSortInput;\n  receptor?: IEWalletSortInput;\n  walletTransactionMember?: IWalletTransactionMemberRelationSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IWalletTransactionMemberRelationSortInput {\n  memberRelationId?: ISortEnumType;\n  walletTransactionId?: ISortEnumType;\n  walletTransaction?: IWalletTransactionSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IWalletTransactionCollectionSegment {\n  items?: Array<IWalletTransaction>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IWalletTransactionStatusSortInput {\n  status?: ISortEnumType;\n  description?: ISortEnumType;\n  walletTransactionId?: ISortEnumType;\n  walletTransaction?: IWalletTransactionSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IWalletTransactionStatusCollectionSegment {\n  items?: Array<IWalletTransactionStatus>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IWalletTransactionMemberRelationCollectionSegment {\n  items?: Array<IWalletTransactionMemberRelation>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IWalletTransactionMemberDetailSortInput {\n  amount?: ISortEnumType;\n  description?: ISortEnumType;\n  walletTransactionMemberId?: ISortEnumType;\n  walletTransactionMember?: IWalletTransactionMemberRelationSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IWalletTransactionMemberDetailCollectionSegment {\n  items?: Array<IWalletTransactionMemberDetail>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IWalletTransactionSummary {\n  walletId?: IUUID;\n  walletMemberId?: IUUID;\n  receptorId?: IUUID;\n  receptorMemberId?: IUUID;\n  amount: IDecimal;\n  transactions: Array<IWalletTransaction>;\n  memberRelationSummary?: Array<IWalletTransactionSummaryMemberRelation>;\n  amountSummary: IDecimal;\n  receptorMember?: IMember;\n  walletMember?: IMember;\n}\n\nexport interface IWalletTransactionSummaryMemberRelation {\n  transactions: Array<IWalletTransaction>;\n  memberRelationId?: IUUID;\n  amount: IDecimal;\n  transactionToPrincipal: IWalletTransactionSumaryPrincipal;\n  memberRelation?: IMemberRelation;\n}\n\nexport interface IWalletTransactionSumaryPrincipal {\n  transactions: Array<IWalletTransaction>;\n  amount: IDecimal;\n  createdAt?: IDateTime;\n}\n\nexport interface ICertificateMovementFilterInput {\n  and?: Array<ICertificateMovementFilterInput>;\n  or?: Array<ICertificateMovementFilterInput>;\n  certificateId?: IComparableGuidOperationFilterInput;\n  certificate?: ICertificateFilterInput;\n  certificateMovementType?: ICertificateMovementTypeOperationFilterInput;\n  reasons?: IListFilterInputTypeOfCertificateMovementReasonFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICertificateFilterInput {\n  and?: Array<ICertificateFilterInput>;\n  or?: Array<ICertificateFilterInput>;\n  insurerId?: IComparableNullableOfGuidOperationFilterInput;\n  insurer?: IInsurerModuleFilterInput;\n  contractorId?: IComparableNullableOfGuidOperationFilterInput;\n  branchOfficeId?: IComparableNullableOfGuidOperationFilterInput;\n  merchandiseDetailId?: IComparableGuidOperationFilterInput;\n  trafficDetailId?: IComparableGuidOperationFilterInput;\n  merchandiseDetail?: IMerchandiseDetailFilterInput;\n  trafficDetail?: ITrafficDetailFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  additionalComments?: IStringOperationFilterInput;\n  createdBy?: IComparableGuidOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  cancellationReason?: IStringOperationFilterInput;\n  insurerFeeId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerFee?: IInsurerFeeFilterInput;\n  issueStatus?: IIssueStatusOperationFilterInput;\n  files?: IListFilterInputTypeOfCertificateFileFilterInput;\n  policyModuleId?: IComparableNullableOfGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  statusFrom?: ICertificateStatusFromOperationFilterInput;\n  beneficiaries?: IListFilterInputTypeOfCertificateBeneficiaryFilterInput;\n  shipmentDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  shippingTransport?: IStringOperationFilterInput;\n  estimatedArrivingDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  history?: IListFilterInputTypeOfCertificateMovementFilterInput;\n  externalIdentifier?: IStringOperationFilterInput;\n  internalIdentifier?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerModuleFilterInput {\n  and?: Array<IInsurerModuleFilterInput>;\n  or?: Array<IInsurerModuleFilterInput>;\n  insurerSinisterContactId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerSinisterContact?: IInsurerSinisterContactFilterInput;\n  insurerAdjusterContactId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerAdjusterContact?: IInsurerAdjusterContactFilterInput;\n  logo?: IStringOperationFilterInput;\n  content?: IStringOperationFilterInput;\n  descriptionCoverages?: IStringOperationFilterInput;\n  certificateType?: ICertificateTypeOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  placeInsurer?: IStringOperationFilterInput;\n  insurerType?: IInsurerTypeOperationFilterInput;\n  originCountryId?: IComparableNullableOfGuidOperationFilterInput;\n  countries?: IListComparableGuidOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  insurerCompanyModules?: IListFilterInputTypeOfInsurerCompanyModuleFilterInput;\n  insurerContacts?: IListFilterInputTypeOfInsurerContactFilterInput;\n  insurerBranchId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerBranch?: IInsurerBranchFilterInput;\n  insurerAddresses?: IListFilterInputTypeOfInsurerAddressFilterInput;\n  servicesToShow?: IListStringOperationFilterInput;\n  merchandiseLegalTermsHTML?: IStringOperationFilterInput;\n  merchandiseLegalTermsJSON?: IStringOperationFilterInput;\n  containerLegalTermsHTML?: IStringOperationFilterInput;\n  containerLegalTermsJSON?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerSinisterContactFilterInput {\n  and?: Array<IInsurerSinisterContactFilterInput>;\n  or?: Array<IInsurerSinisterContactFilterInput>;\n  insurerModuleId?: IComparableGuidOperationFilterInput;\n  contactName?: IStringOperationFilterInput;\n  officePhoneNumber?: IStringOperationFilterInput;\n  afterHoursPhoneNumber?: IStringOperationFilterInput;\n  emailOne?: IStringOperationFilterInput;\n  emailTwo?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerAdjusterContactFilterInput {\n  and?: Array<IInsurerAdjusterContactFilterInput>;\n  or?: Array<IInsurerAdjusterContactFilterInput>;\n  name?: IStringOperationFilterInput;\n  emailOne?: IStringOperationFilterInput;\n  emailTwo?: IStringOperationFilterInput;\n  phoneNumber?: IStringOperationFilterInput;\n  insurerModuleId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICertificateTypeOperationFilterInput {\n  eq?: ICertificateType;\n  neq?: ICertificateType;\n  in?: Array<ICertificateType>;\n  nin?: Array<ICertificateType>;\n}\n\nexport const enum ICertificateType {\n  GENERATE_DOCUMENT = 'GENERATE_DOCUMENT',\n  UPLOAD_DOCUMENT = 'UPLOAD_DOCUMENT'\n}\n\nexport interface IInsurerTypeOperationFilterInput {\n  eq?: IInsurerType;\n  neq?: IInsurerType;\n  in?: Array<IInsurerType>;\n  nin?: Array<IInsurerType>;\n}\n\nexport const enum IInsurerType {\n  NATIONAL = 'NATIONAL',\n  INTERNATIONAL = 'INTERNATIONAL',\n  MIXED = 'MIXED'\n}\n\nexport interface IListFilterInputTypeOfInsurerCompanyModuleFilterInput {\n  all?: IInsurerCompanyModuleFilterInput;\n  none?: IInsurerCompanyModuleFilterInput;\n  some?: IInsurerCompanyModuleFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerCompanyModuleFilterInput {\n  and?: Array<IInsurerCompanyModuleFilterInput>;\n  or?: Array<IInsurerCompanyModuleFilterInput>;\n  insurerModuleId?: IComparableGuidOperationFilterInput;\n  insurerModule?: IInsurerModuleFilterInput;\n  key?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  typeValue?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfInsurerContactFilterInput {\n  all?: IInsurerContactFilterInput;\n  none?: IInsurerContactFilterInput;\n  some?: IInsurerContactFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerContactFilterInput {\n  and?: Array<IInsurerContactFilterInput>;\n  or?: Array<IInsurerContactFilterInput>;\n  insurerModuleId?: IComparableGuidOperationFilterInput;\n  insurerModule?: IInsurerModuleFilterInput;\n  name?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  department?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerBranchFilterInput {\n  and?: Array<IInsurerBranchFilterInput>;\n  or?: Array<IInsurerBranchFilterInput>;\n  insurerModuleId?: IComparableGuidOperationFilterInput;\n  insurerModule?: IInsurerModuleFilterInput;\n  life?: IBooleanOperationFilterInput;\n  accidentAndDisease?: IBooleanOperationFilterInput;\n  cars?: IBooleanOperationFilterInput;\n  damages?: IBooleanOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfInsurerAddressFilterInput {\n  all?: IInsurerAddressFilterInput;\n  none?: IInsurerAddressFilterInput;\n  some?: IInsurerAddressFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerAddressFilterInput {\n  and?: Array<IInsurerAddressFilterInput>;\n  or?: Array<IInsurerAddressFilterInput>;\n  insurerModuleId?: IComparableGuidOperationFilterInput;\n  insurerModule?: IInsurerModuleFilterInput;\n  stateName?: IStringOperationFilterInput;\n  municipality?: IStringOperationFilterInput;\n  streetName?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMerchandiseDetailFilterInput {\n  and?: Array<IMerchandiseDetailFilterInput>;\n  or?: Array<IMerchandiseDetailFilterInput>;\n  contractorId?: IComparableGuidOperationFilterInput;\n  officeId?: IComparableGuidOperationFilterInput;\n  merchandiseCategoryId?: IComparableNullableOfGuidOperationFilterInput;\n  merchandiseId?: IComparableGuidOperationFilterInput;\n  merchandise?: IMerchandiseFilterInput;\n  countryOrigin?: IComparableNullableOfGuidOperationFilterInput;\n  countryDestiny?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMerchandiseFilterInput {\n  and?: Array<IMerchandiseFilterInput>;\n  or?: Array<IMerchandiseFilterInput>;\n  name?: IStringOperationFilterInput;\n  merchandiseType?: IStringOperationFilterInput;\n  categoryId?: IComparableGuidOperationFilterInput;\n  insurerId?: IComparableNullableOfGuidOperationFilterInput;\n  insurer?: IInsurerModuleFilterInput;\n  merchandiseStatus?: IMerchandiseStatusOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMerchandiseStatusOperationFilterInput {\n  eq?: IMerchandiseStatus;\n  neq?: IMerchandiseStatus;\n  in?: Array<IMerchandiseStatus>;\n  nin?: Array<IMerchandiseStatus>;\n}\n\nexport const enum IMerchandiseStatus {\n  DISABLED = 'DISABLED',\n  EXCLUDED = 'EXCLUDED',\n  WAITING_FOR_APPROVAL = 'WAITING_FOR_APPROVAL',\n  ENABLED = 'ENABLED'\n}\n\nexport interface ITrafficDetailFilterInput {\n  and?: Array<ITrafficDetailFilterInput>;\n  or?: Array<ITrafficDetailFilterInput>;\n  currencyId?: IComparableGuidOperationFilterInput;\n  beneficiaryId?: IComparableGuidOperationFilterInput;\n  activityDescription?: IStringOperationFilterInput;\n  origin?: IStringOperationFilterInput;\n  destiny?: IStringOperationFilterInput;\n  sumAssured?: IComparableDoubleOperationFilterInput;\n  transportMode?: ITransportModeOperationFilterInput;\n  number?: IStringOperationFilterInput;\n  showPrice?: IBooleanOperationFilterInput;\n  minimumSell?: IComparableNullableOfDecimalOperationFilterInput;\n  priceToShow?: IComparableDecimalOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  typeCoverage?: INullableOfCoverageTypeOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ITransportModeOperationFilterInput {\n  eq?: ITransportMode;\n  neq?: ITransportMode;\n  in?: Array<ITransportMode>;\n  nin?: Array<ITransportMode>;\n}\n\nexport const enum ITransportMode {\n  SEA = 'SEA',\n  AERIAL = 'AERIAL',\n  TERRESTRIAL = 'TERRESTRIAL',\n  INTERMODAL = 'INTERMODAL'\n}\n\nexport interface INullableOfCoverageTypeOperationFilterInput {\n  eq?: ICoverageType;\n  neq?: ICoverageType;\n  in?: Array<ICoverageType | null>;\n  nin?: Array<ICoverageType | null>;\n}\n\nexport const enum ICoverageType {\n  WAREHOUSE_TO_WAREHOUSE = 'WAREHOUSE_TO_WAREHOUSE',\n  HARBOR_TO_HARBOR = 'HARBOR_TO_HARBOR',\n  HARBOR_TO_WAREHOUSE = 'HARBOR_TO_WAREHOUSE',\n  WAREHOUSE_TO_HARBOR = 'WAREHOUSE_TO_HARBOR'\n}\n\nexport interface IInsurerFeeFilterInput {\n  and?: Array<IInsurerFeeFilterInput>;\n  or?: Array<IInsurerFeeFilterInput>;\n  isActive?: IBooleanOperationFilterInput;\n  contractorId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  insurerModuleId?: IComparableNullableOfGuidOperationFilterInput;\n  merchandises?: IListComparableGuidOperationFilterInput;\n  insurerModule?: IInsurerModuleFilterInput;\n  policyModuleId?: IComparableNullableOfGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  originCountries?: IListComparableGuidOperationFilterInput;\n  destinyConutries?: IListComparableGuidOperationFilterInput;\n  feeId?: IComparableGuidOperationFilterInput;\n  fee?: IFeeFilterInput;\n  files?: IListFilterInputTypeOfInsurerFeeFileFilterInput;\n  startVigency?: IComparableNullableOfDateTimeOperationFilterInput;\n  vigencyLimit?: IComparableNullableOfDateTimeOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPolicyModuleFilterInput {\n  and?: Array<IPolicyModuleFilterInput>;\n  or?: Array<IPolicyModuleFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  policyNumber?: IStringOperationFilterInput;\n  insurerModuleId?: IComparableNullableOfGuidOperationFilterInput;\n  insurer?: IInsurerModuleFilterInput;\n  policyType?: IPolicyTypeOperationFilterInput;\n  address?: IStringOperationFilterInput;\n  paymentResponsable?: INullableOfPaymentResponsableOperationFilterInput;\n  phoneNumber?: IStringOperationFilterInput;\n  startDateVigency?: IComparableDateTimeOperationFilterInput;\n  endDatevigency?: IComparableDateTimeOperationFilterInput;\n  moneySymbols?: IListFilterInputTypeOfMoneySymbolFilterInput;\n  dateLimitVigency?: IComparableDateTimeOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  hasRateByPolicy?: IBooleanOperationFilterInput;\n  policyDeductibleId?: IComparableNullableOfGuidOperationFilterInput;\n  deductibles?: IPolicyDeductibleFilterInput;\n  declarations?: IListFilterInputTypeOfPolicyDeclarationFilterInput;\n  policyPrimaId?: IComparableNullableOfGuidOperationFilterInput;\n  policyPrima?: IPolicyPrimaFilterInput;\n  policyFrequencyPaymentId?: IComparableNullableOfGuidOperationFilterInput;\n  policyFrequencyPayment?: IPolicyFrequencyPaymentFilterInput;\n  products?: IListFilterInputTypeOfPolicyProductFilterInput;\n  modules?: IListFilterInputTypeOfModuleFilterInput;\n  policyFiles?: IListFilterInputTypeOfPolicyFileFilterInput;\n  policyCoverageId?: IComparableNullableOfGuidOperationFilterInput;\n  policyCoverage?: IPolicyCoverageFilterInput;\n  contracts?: IListComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPolicyTypeOperationFilterInput {\n  eq?: IPolicyType;\n  neq?: IPolicyType;\n  in?: Array<IPolicyType>;\n  nin?: Array<IPolicyType>;\n}\n\nexport const enum IPolicyType {\n  UNIQUE_CLIENT = 'UNIQUE_CLIENT',\n  MULTICLIENT = 'MULTICLIENT'\n}\n\nexport interface INullableOfPaymentResponsableOperationFilterInput {\n  eq?: IPaymentResponsable;\n  neq?: IPaymentResponsable;\n  in?: Array<IPaymentResponsable | null>;\n  nin?: Array<IPaymentResponsable | null>;\n}\n\nexport const enum IPaymentResponsable {\n  CLIENT = 'CLIENT',\n  INSURER = 'INSURER'\n}\n\nexport interface IListFilterInputTypeOfMoneySymbolFilterInput {\n  all?: IMoneySymbolFilterInput;\n  none?: IMoneySymbolFilterInput;\n  some?: IMoneySymbolFilterInput;\n  any?: boolean;\n}\n\nexport interface IMoneySymbolFilterInput {\n  and?: Array<IMoneySymbolFilterInput>;\n  or?: Array<IMoneySymbolFilterInput>;\n  policyModuleId?: IComparableGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  keyName?: IStringOperationFilterInput;\n  value?: IStringOperationFilterInput;\n  label?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPolicyDeductibleFilterInput {\n  and?: Array<IPolicyDeductibleFilterInput>;\n  or?: Array<IPolicyDeductibleFilterInput>;\n  policyModuleId?: IComparableNullableOfGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  deductibleTheft?: IComparableNullableOfDecimalOperationFilterInput;\n  deductibleMerchandiseSensibility?: IComparableNullableOfDecimalOperationFilterInput;\n  deductibleRefrigeratedMerchandise?: IComparableNullableOfDecimalOperationFilterInput;\n  minimumDeductible?: IComparableNullableOfDecimalOperationFilterInput;\n  damageDeductible?: IComparableNullableOfDecimalOperationFilterInput;\n  minimumPurchase?: IComparableNullableOfDecimalOperationFilterInput;\n  purchaseRate?: IComparableNullableOfDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPolicyDeclarationFilterInput {\n  all?: IPolicyDeclarationFilterInput;\n  none?: IPolicyDeclarationFilterInput;\n  some?: IPolicyDeclarationFilterInput;\n  any?: boolean;\n}\n\nexport interface IPolicyDeclarationFilterInput {\n  and?: Array<IPolicyDeclarationFilterInput>;\n  or?: Array<IPolicyDeclarationFilterInput>;\n  policyModuleId?: IComparableGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  email?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPolicyPrimaFilterInput {\n  and?: Array<IPolicyPrimaFilterInput>;\n  or?: Array<IPolicyPrimaFilterInput>;\n  policyModuleId?: IComparableNullableOfGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  primaNeta?: IComparableDecimalOperationFilterInput;\n  discounts?: IComparableDecimalOperationFilterInput;\n  surchargerPayments?: IStringOperationFilterInput;\n  policyRights?: IStringOperationFilterInput;\n  subTotal?: IComparableDecimalOperationFilterInput;\n  iva?: IComparableDecimalOperationFilterInput;\n  primaTotal?: IComparableDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPolicyFrequencyPaymentFilterInput {\n  and?: Array<IPolicyFrequencyPaymentFilterInput>;\n  or?: Array<IPolicyFrequencyPaymentFilterInput>;\n  policyModuleId?: IComparableNullableOfGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  monthly?: IBooleanOperationFilterInput;\n  bimonthly?: IBooleanOperationFilterInput;\n  quarterly?: IBooleanOperationFilterInput;\n  halfYearly?: IBooleanOperationFilterInput;\n  annual?: IBooleanOperationFilterInput;\n  cash?: IBooleanOperationFilterInput;\n  buyRate?: IComparableNullableOfDecimalOperationFilterInput;\n  minimumBuys?: IComparableNullableOfDecimalOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPolicyProductFilterInput {\n  all?: IPolicyProductFilterInput;\n  none?: IPolicyProductFilterInput;\n  some?: IPolicyProductFilterInput;\n  any?: boolean;\n}\n\nexport interface IPolicyProductFilterInput {\n  and?: Array<IPolicyProductFilterInput>;\n  or?: Array<IPolicyProductFilterInput>;\n  policyModuleId?: IComparableGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  name?: IStringOperationFilterInput;\n  category?: IStringOperationFilterInput;\n  insurerBuy?: IComparableDecimalOperationFilterInput;\n  insurerMinimum?: IComparableDecimalOperationFilterInput;\n  policySell?: IComparableDecimalOperationFilterInput;\n  policyMinimumSell?: IComparableDecimalOperationFilterInput;\n  productId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfModuleFilterInput {\n  all?: IModuleFilterInput;\n  none?: IModuleFilterInput;\n  some?: IModuleFilterInput;\n  any?: boolean;\n}\n\nexport interface IModuleFilterInput {\n  and?: Array<IModuleFilterInput>;\n  or?: Array<IModuleFilterInput>;\n  policyModuleId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerModule?: IPolicyModuleFilterInput;\n  key?: IStringOperationFilterInput;\n  typeValue?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPolicyFileFilterInput {\n  all?: IPolicyFileFilterInput;\n  none?: IPolicyFileFilterInput;\n  some?: IPolicyFileFilterInput;\n  any?: boolean;\n}\n\nexport interface IPolicyFileFilterInput {\n  and?: Array<IPolicyFileFilterInput>;\n  or?: Array<IPolicyFileFilterInput>;\n  policyModuleId?: IComparableGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  fileId?: IComparableGuidOperationFilterInput;\n  url?: IStringOperationFilterInput;\n  message?: IStringOperationFilterInput;\n  token?: IStringOperationFilterInput;\n  partialUrl?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  fileName?: IStringOperationFilterInput;\n  size?: IStringOperationFilterInput;\n  type?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPolicyCoverageFilterInput {\n  and?: Array<IPolicyCoverageFilterInput>;\n  or?: Array<IPolicyCoverageFilterInput>;\n  policyModuleId?: IComparableGuidOperationFilterInput;\n  policyModule?: IPolicyModuleFilterInput;\n  originCountries?: IListComparableGuidOperationFilterInput;\n  destinyCountries?: IListComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IFeeFilterInput {\n  and?: Array<IFeeFilterInput>;\n  or?: Array<IFeeFilterInput>;\n  insurerId?: IComparableNullableOfGuidOperationFilterInput;\n  insurer?: IInsurerModuleFilterInput;\n  purchaseRates?: IComparableNullableOfDoubleOperationFilterInput;\n  minimumPurchase?: IComparableDoubleOperationFilterInput;\n  sellRates?: IComparableNullableOfDoubleOperationFilterInput;\n  maximumSells?: IComparableDoubleOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  minimumSells?: IComparableNullableOfDoubleOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfInsurerFeeFileFilterInput {\n  all?: IInsurerFeeFileFilterInput;\n  none?: IInsurerFeeFileFilterInput;\n  some?: IInsurerFeeFileFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerFeeFileFilterInput {\n  and?: Array<IInsurerFeeFileFilterInput>;\n  or?: Array<IInsurerFeeFileFilterInput>;\n  insurerFeeId?: IComparableGuidOperationFilterInput;\n  insurerFee?: IInsurerFeeFilterInput;\n  fileId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IIssueStatusOperationFilterInput {\n  eq?: IIssueStatus;\n  neq?: IIssueStatus;\n  in?: Array<IIssueStatus>;\n  nin?: Array<IIssueStatus>;\n}\n\nexport const enum IIssueStatus {\n  REMESADO = 'REMESADO',\n  POR_REMESAR = 'POR_REMESAR',\n  RECHAZADO = 'RECHAZADO',\n  AUDITAR = 'AUDITAR'\n}\n\nexport interface IListFilterInputTypeOfCertificateFileFilterInput {\n  all?: ICertificateFileFilterInput;\n  none?: ICertificateFileFilterInput;\n  some?: ICertificateFileFilterInput;\n  any?: boolean;\n}\n\nexport interface ICertificateFileFilterInput {\n  and?: Array<ICertificateFileFilterInput>;\n  or?: Array<ICertificateFileFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  certificateId?: IComparableGuidOperationFilterInput;\n  certificate?: ICertificateFilterInput;\n  fileId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICertificateStatusFromOperationFilterInput {\n  eq?: ICertificateStatusFrom;\n  neq?: ICertificateStatusFrom;\n  in?: Array<ICertificateStatusFrom>;\n  nin?: Array<ICertificateStatusFrom>;\n}\n\nexport const enum ICertificateStatusFrom {\n  ADMINISTRATOR = 'ADMINISTRATOR',\n  PUBLIC_USER = 'PUBLIC_USER'\n}\n\nexport interface IListFilterInputTypeOfCertificateBeneficiaryFilterInput {\n  all?: ICertificateBeneficiaryFilterInput;\n  none?: ICertificateBeneficiaryFilterInput;\n  some?: ICertificateBeneficiaryFilterInput;\n  any?: boolean;\n}\n\nexport interface ICertificateBeneficiaryFilterInput {\n  and?: Array<ICertificateBeneficiaryFilterInput>;\n  or?: Array<ICertificateBeneficiaryFilterInput>;\n  certificateId?: IComparableGuidOperationFilterInput;\n  certificate?: ICertificateFilterInput;\n  beneficiaryId?: IComparableGuidOperationFilterInput;\n  beneficiary?: IBeneficiaryFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBeneficiaryFilterInput {\n  and?: Array<IBeneficiaryFilterInput>;\n  or?: Array<IBeneficiaryFilterInput>;\n  name?: IStringOperationFilterInput;\n  rfc?: IStringOperationFilterInput;\n  countryId?: IComparableGuidOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  contractId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCertificateMovementFilterInput {\n  all?: ICertificateMovementFilterInput;\n  none?: ICertificateMovementFilterInput;\n  some?: ICertificateMovementFilterInput;\n  any?: boolean;\n}\n\nexport interface ICertificateMovementTypeOperationFilterInput {\n  eq?: ICertificateMovementType;\n  neq?: ICertificateMovementType;\n  in?: Array<ICertificateMovementType>;\n  nin?: Array<ICertificateMovementType>;\n}\n\nexport const enum ICertificateMovementType {\n  REJECTION = 'REJECTION',\n  APPROVAL = 'APPROVAL'\n}\n\nexport interface IListFilterInputTypeOfCertificateMovementReasonFilterInput {\n  all?: ICertificateMovementReasonFilterInput;\n  none?: ICertificateMovementReasonFilterInput;\n  some?: ICertificateMovementReasonFilterInput;\n  any?: boolean;\n}\n\nexport interface ICertificateMovementReasonFilterInput {\n  and?: Array<ICertificateMovementReasonFilterInput>;\n  or?: Array<ICertificateMovementReasonFilterInput>;\n  certificateMovementId?: IComparableGuidOperationFilterInput;\n  certificateMovement?: ICertificateMovementFilterInput;\n  reason?: IStringOperationFilterInput;\n  reasonDescription?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICertificateMovement {\n  certificateId: IUUID;\n  certificate?: ICertificate;\n  certificateMovementType: ICertificateMovementType;\n  reasons?: Array<ICertificateMovementReason>;\n  memberId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICertificate {\n  insurerId?: IUUID;\n  insurer?: IInsurerModule;\n  contractorId?: IUUID;\n  branchOfficeId?: IUUID;\n  merchandiseDetailId: IUUID;\n  trafficDetailId: IUUID;\n  merchandiseDetail?: IMerchandiseDetail;\n  trafficDetail?: ITrafficDetail;\n  projectId: IUUID;\n  additionalComments?: string;\n  createdBy: IUUID;\n  isActive: boolean;\n  cancellationReason?: string;\n  insurerFeeId?: IUUID;\n  insurerFee?: IInsurerFee;\n  issueStatus: IIssueStatus;\n  files?: Array<ICertificateFile>;\n  policyModuleId?: IUUID;\n  policyModule?: IPolicyModule;\n  statusFrom: ICertificateStatusFrom;\n  beneficiaries?: Array<ICertificateBeneficiary>;\n  shipmentDate?: IDateTime;\n  shippingTransport?: string;\n  estimatedArrivingDate?: IDateTime;\n  history?: Array<ICertificateMovement>;\n  externalIdentifier?: string;\n  internalIdentifier?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  contractor?: IMember;\n}\n\nexport interface IInsurerModule {\n  insurerSinisterContactId?: IUUID;\n  insurerSinisterContact?: IInsurerSinisterContact;\n  insurerAdjusterContactId?: IUUID;\n  insurerAdjusterContact?: IInsurerAdjusterContact;\n  logo?: string;\n  content?: string;\n  descriptionCoverages?: string;\n  certificateType: ICertificateType;\n  projectId: IUUID;\n  name?: string;\n  placeInsurer?: string;\n  insurerType: IInsurerType;\n  originCountryId?: IUUID;\n  countries?: Array<IUUID>;\n  isActive: boolean;\n  insurerCompanyModules?: Array<IInsurerCompanyModule>;\n  insurerContacts?: Array<IInsurerContact>;\n  insurerBranchId?: IUUID;\n  insurerBranch?: IInsurerBranch;\n  insurerAddresses?: Array<IInsurerAddress>;\n  servicesToShow?: Array<string>;\n  merchandiseLegalTermsHTML?: string;\n  merchandiseLegalTermsJSON?: string;\n  containerLegalTermsHTML?: string;\n  containerLegalTermsJSON?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerSinisterContact {\n  insurerModuleId: IUUID;\n  contactName: string;\n  officePhoneNumber: string;\n  afterHoursPhoneNumber: string;\n  emailOne: string;\n  emailTwo: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerAdjusterContact {\n  name: string;\n  emailOne: string;\n  emailTwo: string;\n  phoneNumber: string;\n  insurerModuleId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerCompanyModule {\n  insurerModuleId: IUUID;\n  insurerModule?: IInsurerModule;\n  key: string;\n  name: string;\n  typeValue?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerContact {\n  insurerModuleId: IUUID;\n  insurerModule?: IInsurerModule;\n  name: string;\n  email: string;\n  department: string;\n  phone: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerBranch {\n  insurerModuleId: IUUID;\n  insurerModule?: IInsurerModule;\n  life: boolean;\n  accidentAndDisease: boolean;\n  cars: boolean;\n  damages: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerAddress {\n  insurerModuleId: IUUID;\n  insurerModule?: IInsurerModule;\n  stateName: string;\n  municipality: string;\n  streetName: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMerchandiseDetail {\n  contractorId: IUUID;\n  officeId: IUUID;\n  merchandiseCategoryId?: IUUID;\n  merchandiseId: IUUID;\n  merchandise?: IMerchandise;\n  countryOrigin?: IUUID;\n  countryDestiny?: IUUID;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMerchandise {\n  name?: string;\n  merchandiseType?: string;\n  categoryId: IUUID;\n  insurerId?: IUUID;\n  insurer?: IInsurerModule;\n  merchandiseStatus: IMerchandiseStatus;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  category?: ITaxonomy;\n}\n\nexport interface ITrafficDetail {\n  currencyId: IUUID;\n  beneficiaryId: IUUID;\n  activityDescription: string;\n  origin: string;\n  destiny: string;\n  sumAssured: number;\n  transportMode: ITransportMode;\n  number: string;\n  showPrice: boolean;\n  minimumSell?: IDecimal;\n  priceToShow: IDecimal;\n  projectId: IUUID;\n  typeCoverage?: ICoverageType;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  currency?: ICurrency;\n}\n\nexport interface IInsurerFee {\n  isActive?: boolean;\n  contractorId?: IUUID;\n  projectId: IUUID;\n  insurerModuleId?: IUUID;\n  merchandises?: Array<IUUID>;\n  insurerModule?: IInsurerModule;\n  policyModuleId?: IUUID;\n  policyModule?: IPolicyModule;\n  originCountries: Array<IUUID>;\n  destinyConutries: Array<IUUID>;\n  feeId: IUUID;\n  fee?: IFee;\n  files?: Array<IInsurerFeeFile>;\n  startVigency?: IDateTime;\n  vigencyLimit?: IDateTime;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicyModule {\n  projectId?: IUUID;\n  policyNumber?: string;\n  insurerModuleId?: IUUID;\n  insurer?: IInsurerModule;\n  policyType: IPolicyType;\n  address?: string;\n  paymentResponsable?: IPaymentResponsable;\n  phoneNumber?: string;\n  startDateVigency: IDateTime;\n  endDatevigency: IDateTime;\n  moneySymbols?: Array<IMoneySymbol>;\n  dateLimitVigency: IDateTime;\n  description?: string;\n  hasRateByPolicy?: boolean;\n  policyDeductibleId?: IUUID;\n  deductibles?: IPolicyDeductible;\n  declarations?: Array<IPolicyDeclaration>;\n  policyPrimaId?: IUUID;\n  policyPrima?: IPolicyPrima;\n  policyFrequencyPaymentId?: IUUID;\n  policyFrequencyPayment?: IPolicyFrequencyPayment;\n  products?: Array<IPolicyProduct>;\n  modules?: Array<Iitus_Module>;\n  policyFiles: Array<IPolicyFile>;\n  policyCoverageId?: IUUID;\n  policyCoverage?: IPolicyCoverage;\n  contracts?: Array<IUUID>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMoneySymbol {\n  policyModuleId: IUUID;\n  policyModule?: IPolicyModule;\n  keyName: string;\n  value: string;\n  label: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicyDeductible {\n  policyModuleId?: IUUID;\n  policyModule?: IPolicyModule;\n  deductibleTheft?: IDecimal;\n  deductibleMerchandiseSensibility?: IDecimal;\n  deductibleRefrigeratedMerchandise?: IDecimal;\n  minimumDeductible?: IDecimal;\n  damageDeductible?: IDecimal;\n  minimumPurchase?: IDecimal;\n  purchaseRate?: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicyDeclaration {\n  policyModuleId: IUUID;\n  policyModule?: IPolicyModule;\n  email: string;\n  name?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicyPrima {\n  policyModuleId?: IUUID;\n  policyModule?: IPolicyModule;\n  primaNeta: IDecimal;\n  discounts: IDecimal;\n  surchargerPayments?: string;\n  policyRights?: string;\n  subTotal: IDecimal;\n  iva: IDecimal;\n  primaTotal: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicyFrequencyPayment {\n  policyModuleId?: IUUID;\n  policyModule?: IPolicyModule;\n  monthly: boolean;\n  bimonthly: boolean;\n  quarterly: boolean;\n  halfYearly: boolean;\n  annual: boolean;\n  cash: boolean;\n  buyRate?: IDecimal;\n  minimumBuys?: IDecimal;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicyProduct {\n  policyModuleId: IUUID;\n  policyModule?: IPolicyModule;\n  name: string;\n  category: string;\n  insurerBuy: IDecimal;\n  insurerMinimum: IDecimal;\n  policySell: IDecimal;\n  policyMinimumSell: IDecimal;\n  productId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface Iitus_Module {\n  policyModuleId?: IUUID;\n  insurerModule?: IPolicyModule;\n  key: string;\n  typeValue: string;\n  name: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicyFile {\n  policyModuleId: IUUID;\n  policyModule?: IPolicyModule;\n  fileId: IUUID;\n  url: string;\n  message: string;\n  token: string;\n  partialUrl: string;\n  name: string;\n  fileName: string;\n  size: string;\n  type: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicyCoverage {\n  policyModuleId: IUUID;\n  policyModule?: IPolicyModule;\n  originCountries: Array<IUUID>;\n  destinyCountries: Array<IUUID>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IFee {\n  insurerId?: IUUID;\n  insurer?: IInsurerModule;\n  purchaseRates?: number;\n  minimumPurchase: number;\n  sellRates?: number;\n  maximumSells: number;\n  projectId: IUUID;\n  minimumSells?: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerFeeFile {\n  insurerFeeId: IUUID;\n  insurerFee?: IInsurerFee;\n  fileId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICertificateFile {\n  projectId: IUUID;\n  certificateId: IUUID;\n  certificate?: ICertificate;\n  fileId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICertificateBeneficiary {\n  certificateId: IUUID;\n  certificate?: ICertificate;\n  beneficiaryId: IUUID;\n  beneficiary?: IBeneficiary;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBeneficiary {\n  name: string;\n  rfc: string;\n  countryId: IUUID;\n  isActive: boolean;\n  projectId: IUUID;\n  contractId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICertificateMovementReason {\n  certificateMovementId: IUUID;\n  certificateMovement?: ICertificateMovement;\n  reason?: string;\n  reasonDescription?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICountryRequestFilterInput {\n  and?: Array<ICountryRequestFilterInput>;\n  or?: Array<ICountryRequestFilterInput>;\n  insurerCompanyId?: IComparableGuidOperationFilterInput;\n  insurerCompany?: IInsurerCompanyFilterInput;\n  countryId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerCompanyFilterInput {\n  and?: Array<IInsurerCompanyFilterInput>;\n  or?: Array<IInsurerCompanyFilterInput>;\n  name?: IStringOperationFilterInput;\n  countries?: IListComparableGuidOperationFilterInput;\n  contractorId?: IComparableGuidOperationFilterInput;\n  contractor?: IContractorFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IContractorFilterInput {\n  and?: Array<IContractorFilterInput>;\n  or?: Array<IContractorFilterInput>;\n  name?: IStringOperationFilterInput;\n  countryId?: IComparableGuidOperationFilterInput;\n  company?: IStringOperationFilterInput;\n  postalCode?: IStringOperationFilterInput;\n  location?: IStringOperationFilterInput;\n  city?: IStringOperationFilterInput;\n  colony?: IStringOperationFilterInput;\n  extNumber?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  typeOfBusiness?: IStringOperationFilterInput;\n  webSite?: IStringOperationFilterInput;\n  rfc?: IStringOperationFilterInput;\n  auxiliaryCode?: IStringOperationFilterInput;\n  paymentMethod?: IStringOperationFilterInput;\n  usesCFDI?: IBooleanOperationFilterInput;\n  paymentTerm?: IPaymentTermOperationFilterInput;\n  invoicingMethod?: IInvoicingMethodOperationFilterInput;\n  creditDays?: IComparableInt32OperationFilterInput;\n  creditAmount?: IComparableDoubleOperationFilterInput;\n  invoicingPeriod?: IInvoicingPeriodOperationFilterInput;\n  companysRfc?: IComparableGuidOperationFilterInput;\n  registration?: IComparableGuidOperationFilterInput;\n  constitutiveAct?: IComparableGuidOperationFilterInput;\n  powerOfAttorney?: IComparableGuidOperationFilterInput;\n  idCopy?: IComparableGuidOperationFilterInput;\n  proofOfAddress?: IComparableGuidOperationFilterInput;\n  positiveOpinionSat?: IComparableGuidOperationFilterInput;\n  taxSituationCertificate?: IComparableGuidOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  officeId?: IComparableGuidOperationFilterInput;\n  office?: Iitus_OfficeFilterInput;\n  beneficiaries?: IListFilterInputTypeOfBeneficiaryFilterInput;\n  contractorPolicies?: IListFilterInputTypeOfContractorPolicyFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPaymentTermOperationFilterInput {\n  eq?: Iitus_PaymentTerm;\n  neq?: Iitus_PaymentTerm;\n  in?: Array<Iitus_PaymentTerm>;\n  nin?: Array<Iitus_PaymentTerm>;\n}\n\nexport const enum Iitus_PaymentTerm {\n  CASH = 'CASH',\n  CREDIT = 'CREDIT'\n}\n\nexport interface IInvoicingMethodOperationFilterInput {\n  eq?: IInvoicingMethod;\n  neq?: IInvoicingMethod;\n  in?: Array<IInvoicingMethod>;\n  nin?: Array<IInvoicingMethod>;\n}\n\nexport const enum IInvoicingMethod {\n  BY_CERTIFICATE = 'BY_CERTIFICATE',\n  GLOBAL = 'GLOBAL'\n}\n\nexport interface IInvoicingPeriodOperationFilterInput {\n  eq?: IInvoicingPeriod;\n  neq?: IInvoicingPeriod;\n  in?: Array<IInvoicingPeriod>;\n  nin?: Array<IInvoicingPeriod>;\n}\n\nexport const enum IInvoicingPeriod {\n  INMEDIATE = 'INMEDIATE',\n  WEEKLY = 'WEEKLY',\n  FORTNIGHT = 'FORTNIGHT',\n  MONTHLY = 'MONTHLY'\n}\n\nexport interface Iitus_OfficeFilterInput {\n  and?: Array<Iitus_OfficeFilterInput>;\n  or?: Array<Iitus_OfficeFilterInput>;\n  name?: IStringOperationFilterInput;\n  contractorId?: IComparableGuidOperationFilterInput;\n  contractor?: IContractorFilterInput;\n  countryId?: IComparableGuidOperationFilterInput;\n  state?: IStringOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfBeneficiaryFilterInput {\n  all?: IBeneficiaryFilterInput;\n  none?: IBeneficiaryFilterInput;\n  some?: IBeneficiaryFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfContractorPolicyFilterInput {\n  all?: IContractorPolicyFilterInput;\n  none?: IContractorPolicyFilterInput;\n  some?: IContractorPolicyFilterInput;\n  any?: boolean;\n}\n\nexport interface IContractorPolicyFilterInput {\n  and?: Array<IContractorPolicyFilterInput>;\n  or?: Array<IContractorPolicyFilterInput>;\n  contractorId?: IComparableGuidOperationFilterInput;\n  policyId?: IComparableGuidOperationFilterInput;\n  contractor?: IContractorFilterInput;\n  policy?: IPolicyFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPolicyFilterInput {\n  and?: Array<IPolicyFilterInput>;\n  or?: Array<IPolicyFilterInput>;\n  countryId?: IComparableGuidOperationFilterInput;\n  insurerId?: IComparableGuidOperationFilterInput;\n  document?: IStringOperationFilterInput;\n  number?: IStringOperationFilterInput;\n  policyType?: IPolicyTypeOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  startValidityDate?: IComparableDateTimeOperationFilterInput;\n  expirationDate?: IComparableDateTimeOperationFilterInput;\n  limitDeclarationDate?: IComparableDateTimeOperationFilterInput;\n  damageDeductible?: IStringOperationFilterInput;\n  robberyDeductible?: IStringOperationFilterInput;\n  crackDeductible?: IStringOperationFilterInput;\n  merchandiseDeductible?: IStringOperationFilterInput;\n  declarationResponsible?: IStringOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  clientPaysItus?: IBooleanOperationFilterInput;\n  contractorType?: IContractorTypeOperationFilterInput;\n  insurerPaysItus?: IBooleanOperationFilterInput;\n  currencies?: IListComparableGuidOperationFilterInput;\n  policyStatus?: IPolicyStatusOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IContractorTypeOperationFilterInput {\n  eq?: IContractorType;\n  neq?: IContractorType;\n  in?: Array<IContractorType>;\n  nin?: Array<IContractorType>;\n}\n\nexport const enum IContractorType {\n  MULTICLIENT = 'MULTICLIENT',\n  ONECLIENT = 'ONECLIENT'\n}\n\nexport interface IPolicyStatusOperationFilterInput {\n  eq?: IPolicyStatus;\n  neq?: IPolicyStatus;\n  in?: Array<IPolicyStatus>;\n  nin?: Array<IPolicyStatus>;\n}\n\nexport const enum IPolicyStatus {\n  REMESADO = 'REMESADO',\n  POR_REMESAR = 'POR_REMESAR'\n}\n\nexport interface ICountryRequest {\n  insurerCompanyId: IUUID;\n  insurerCompany?: IInsurerCompany;\n  countryId: IUUID;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerCompany {\n  name: string;\n  countries: Array<IUUID>;\n  contractorId: IUUID;\n  contractor?: IContractor;\n  isActive: boolean;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContractor {\n  name: string;\n  countryId: IUUID;\n  company: string;\n  postalCode: string;\n  location: string;\n  city: string;\n  colony: string;\n  extNumber: string;\n  phone: string;\n  typeOfBusiness: string;\n  webSite: string;\n  rfc: string;\n  auxiliaryCode: string;\n  paymentMethod: string;\n  usesCFDI: boolean;\n  paymentTerm: Iitus_PaymentTerm;\n  invoicingMethod: IInvoicingMethod;\n  creditDays: number;\n  creditAmount: number;\n  invoicingPeriod: IInvoicingPeriod;\n  companysRfc: IUUID;\n  registration: IUUID;\n  constitutiveAct: IUUID;\n  powerOfAttorney: IUUID;\n  idCopy: IUUID;\n  proofOfAddress: IUUID;\n  positiveOpinionSat: IUUID;\n  taxSituationCertificate: IUUID;\n  isActive: boolean;\n  projectId: IUUID;\n  officeId: IUUID;\n  office?: Iitus_Office;\n  beneficiaries: Array<IBeneficiary>;\n  contractorPolicies: Array<IContractorPolicy>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface Iitus_Office {\n  name: string;\n  contractorId: IUUID;\n  contractor?: IContractor;\n  countryId: IUUID;\n  state: string;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContractorPolicy {\n  contractorId: IUUID;\n  policyId: IUUID;\n  contractor?: IContractor;\n  policy?: Iitus_Policy;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface Iitus_Policy {\n  countryId: IUUID;\n  insurerId: IUUID;\n  document: string;\n  number: string;\n  policyType: IPolicyType;\n  description: string;\n  startValidityDate: IDateTime;\n  expirationDate: IDateTime;\n  limitDeclarationDate: IDateTime;\n  damageDeductible: string;\n  robberyDeductible: string;\n  crackDeductible: string;\n  merchandiseDeductible: string;\n  declarationResponsible: string;\n  projectId: IUUID;\n  clientPaysItus: boolean;\n  contractorType: IContractorType;\n  insurerPaysItus: boolean;\n  currencies: Array<IUUID>;\n  policyStatus: IPolicyStatus;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICertificateCollectionSegment {\n  items?: Array<ICertificate>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IBeneficiaryCollectionSegment {\n  items?: Array<IBeneficiary>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerCompanyCollectionSegment {\n  items?: Array<IInsurerCompany>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMerchandiseCollectionSegment {\n  items?: Array<IMerchandise>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMerchandiseCategoryFilterInput {\n  and?: Array<IMerchandiseCategoryFilterInput>;\n  or?: Array<IMerchandiseCategoryFilterInput>;\n  name?: IStringOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMerchandiseCategory {\n  name: string;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContactFilterInput {\n  and?: Array<IContactFilterInput>;\n  or?: Array<IContactFilterInput>;\n  contractorId?: IComparableGuidOperationFilterInput;\n  fullName?: IStringOperationFilterInput;\n  jobPosition?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  contactType?: IContactTypeOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IContactTypeOperationFilterInput {\n  eq?: IContactType;\n  neq?: IContactType;\n  in?: Array<IContactType>;\n  nin?: Array<IContactType>;\n}\n\nexport const enum IContactType {\n  COLLECTION = 'COLLECTION',\n  GENERAL = 'GENERAL',\n  EMAILINVOICING = 'EMAILINVOICING',\n  INVOICINGMODALITY = 'INVOICINGMODALITY'\n}\n\nexport interface IContact {\n  contractorId: IUUID;\n  fullName: string;\n  jobPosition: string;\n  email: string;\n  phone: string;\n  contactType: IContactType;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMoneyFilterInput {\n  and?: Array<IMoneyFilterInput>;\n  or?: Array<IMoneyFilterInput>;\n  name?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IMoney {\n  name: string;\n  code: string;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicy {\n  user?: string;\n  device?: string;\n  token?: string;\n  sNumeroPoliza?: string;\n  idCotizacion?: number;\n  idAseguradoraSubRamo?: number;\n  idSubramo?: number;\n  agente?: string;\n  telefono?: string;\n  email?: string;\n  subramo?: string;\n  detallesPorAseguradora?: Array<IDetailsInsurer>;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContractorOfficeFilterInput {\n  and?: Array<IContractorOfficeFilterInput>;\n  or?: Array<IContractorOfficeFilterInput>;\n  contractorId?: IComparableGuidOperationFilterInput;\n  officeId?: IComparableGuidOperationFilterInput;\n  contractor?: IContractorFilterInput;\n  office?: Iitus_OfficeFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IContractorOffice {\n  contractorId: IUUID;\n  officeId: IUUID;\n  contractor?: IContractor;\n  office?: Iitus_Office;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContractorContactFilterInput {\n  and?: Array<IContractorContactFilterInput>;\n  or?: Array<IContractorContactFilterInput>;\n  contractorId?: IComparableGuidOperationFilterInput;\n  contactId?: IComparableGuidOperationFilterInput;\n  contractor?: IContractorFilterInput;\n  contact?: IContactFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IContractorContact {\n  contractorId: IUUID;\n  contactId: IUUID;\n  contractor?: IContractor;\n  contact?: IContact;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicyModuleCollectionSegment {\n  items?: Array<IPolicyModule>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerModuleCollectionSegment {\n  items?: Array<IInsurerModule>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerFeeCollectionSegment {\n  items?: Array<IInsurerFee>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISchoolFilterInput {\n  and?: Array<ISchoolFilterInput>;\n  or?: Array<ISchoolFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  photo?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  daysServices?: IListFilterInputTypeOfDayServiceFilterInput;\n  levels?: IListFilterInputTypeOfLevelFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDayServiceFilterInput {\n  all?: IDayServiceFilterInput;\n  none?: IDayServiceFilterInput;\n  some?: IDayServiceFilterInput;\n  any?: boolean;\n}\n\nexport interface IDayServiceFilterInput {\n  and?: Array<IDayServiceFilterInput>;\n  or?: Array<IDayServiceFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  day?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  schoolId?: IComparableNullableOfGuidOperationFilterInput;\n  school?: ISchoolFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfLevelFilterInput {\n  all?: ILevelFilterInput;\n  none?: ILevelFilterInput;\n  some?: ILevelFilterInput;\n  any?: boolean;\n}\n\nexport interface ILevelFilterInput {\n  and?: Array<ILevelFilterInput>;\n  or?: Array<ILevelFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  schoolId?: IComparableGuidOperationFilterInput;\n  school?: ISchoolFilterInput;\n  grade?: IListFilterInputTypeOfGradeFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfGradeFilterInput {\n  all?: IGradeFilterInput;\n  none?: IGradeFilterInput;\n  some?: IGradeFilterInput;\n  any?: boolean;\n}\n\nexport interface IGradeFilterInput {\n  and?: Array<IGradeFilterInput>;\n  or?: Array<IGradeFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  levelId?: IComparableGuidOperationFilterInput;\n  level?: ILevelFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ISchoolSortInput {\n  projectId?: ISortEnumType;\n  photo?: ISortEnumType;\n  name?: ISortEnumType;\n  email?: ISortEnumType;\n  phone?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISchoolCollectionSegment {\n  items?: Array<ISchool>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISchool {\n  projectId: IUUID;\n  photo?: string;\n  name?: string;\n  email?: string;\n  phone?: string;\n  daysServices?: Array<IDayService>;\n  levels?: Array<ILevel>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDayService {\n  projectId: IUUID;\n  day?: string;\n  isActive?: boolean;\n  schoolId?: IUUID;\n  school?: ISchool;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ILevel {\n  projectId: IUUID;\n  name?: string;\n  isActive: boolean;\n  schoolId: IUUID;\n  school?: ISchool;\n  grade?: Array<IGrade>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IGrade {\n  projectId: IUUID;\n  name?: string;\n  isActive: boolean;\n  levelId: IUUID;\n  level?: ILevel;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IClassroomFilterInput {\n  and?: Array<IClassroomFilterInput>;\n  or?: Array<IClassroomFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  schoolId?: IComparableGuidOperationFilterInput;\n  school?: ISchoolFilterInput;\n  gradeId?: IComparableGuidOperationFilterInput;\n  grade?: IGradeFilterInput;\n  levelId?: IComparableGuidOperationFilterInput;\n  level?: ILevelFilterInput;\n  group?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  teacherMemberId?: IComparableNullableOfGuidOperationFilterInput;\n  students?: IListFilterInputTypeOfStudentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfStudentFilterInput {\n  all?: IStudentFilterInput;\n  none?: IStudentFilterInput;\n  some?: IStudentFilterInput;\n  any?: boolean;\n}\n\nexport interface IStudentFilterInput {\n  and?: Array<IStudentFilterInput>;\n  or?: Array<IStudentFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  classroomId?: IComparableGuidOperationFilterInput;\n  classroom?: IClassroomFilterInput;\n  name?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  photo?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  verify?: INullableOfEnumStudenteVerifyOperationFilterInput;\n  attendances?: IListFilterInputTypeOfAttendanceFilterInput;\n  studentTutors?: IListFilterInputTypeOfStudentTutorFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumStudenteVerifyOperationFilterInput {\n  eq?: IEnumStudenteVerify;\n  neq?: IEnumStudenteVerify;\n  in?: Array<IEnumStudenteVerify | null>;\n  nin?: Array<IEnumStudenteVerify | null>;\n}\n\nexport const enum IEnumStudenteVerify {\n  VERIFIED = 'VERIFIED',\n  INCORRECT = 'INCORRECT',\n  TO_BE_CHECKED = 'TO_BE_CHECKED'\n}\n\nexport interface IListFilterInputTypeOfAttendanceFilterInput {\n  all?: IAttendanceFilterInput;\n  none?: IAttendanceFilterInput;\n  some?: IAttendanceFilterInput;\n  any?: boolean;\n}\n\nexport interface IAttendanceFilterInput {\n  and?: Array<IAttendanceFilterInput>;\n  or?: Array<IAttendanceFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  status?: IEnumAttendanceStatusOperationFilterInput;\n  studentId?: IComparableGuidOperationFilterInput;\n  student?: IStudentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEnumAttendanceStatusOperationFilterInput {\n  eq?: IEnumAttendanceStatus;\n  neq?: IEnumAttendanceStatus;\n  in?: Array<IEnumAttendanceStatus>;\n  nin?: Array<IEnumAttendanceStatus>;\n}\n\nexport const enum IEnumAttendanceStatus {\n  ON_SCHOOL = 'ON_SCHOOL',\n  TUTOR_ARRIVED = 'TUTOR_ARRIVED',\n  COMING_OUT = 'COMING_OUT',\n  ON_HOME = 'ON_HOME',\n  ABSENT = 'ABSENT'\n}\n\nexport interface IListFilterInputTypeOfStudentTutorFilterInput {\n  all?: IStudentTutorFilterInput;\n  none?: IStudentTutorFilterInput;\n  some?: IStudentTutorFilterInput;\n  any?: boolean;\n}\n\nexport interface IStudentTutorFilterInput {\n  and?: Array<IStudentTutorFilterInput>;\n  or?: Array<IStudentTutorFilterInput>;\n  tutorMemberId?: IComparableGuidOperationFilterInput;\n  studentId?: IComparableGuidOperationFilterInput;\n  student?: IStudentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IClassroomSortInput {\n  projectId?: ISortEnumType;\n  schoolId?: ISortEnumType;\n  school?: ISchoolSortInput;\n  gradeId?: ISortEnumType;\n  grade?: IGradeSortInput;\n  levelId?: ISortEnumType;\n  level?: ILevelSortInput;\n  group?: ISortEnumType;\n  isActive?: ISortEnumType;\n  teacherMemberId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IGradeSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  isActive?: ISortEnumType;\n  levelId?: ISortEnumType;\n  level?: ILevelSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ILevelSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  isActive?: ISortEnumType;\n  schoolId?: ISortEnumType;\n  school?: ISchoolSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IClassroomCollectionSegment {\n  items?: Array<IClassroom>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IClassroom {\n  projectId: IUUID;\n  schoolId: IUUID;\n  school?: ISchool;\n  gradeId: IUUID;\n  grade?: IGrade;\n  levelId: IUUID;\n  level?: ILevel;\n  group?: string;\n  isActive?: boolean;\n  teacherMemberId?: IUUID;\n  students?: Array<IStudent>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  teacherMember?: IMember;\n}\n\nexport interface IStudent {\n  projectId: IUUID;\n  classroomId: IUUID;\n  classroom?: IClassroom;\n  name?: string;\n  lastName?: string;\n  photo?: string;\n  isActive?: boolean;\n  verify?: IEnumStudenteVerify;\n  attendances?: Array<Ischool_Attendance>;\n  studentTutors?: Array<IStudentTutor>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface Ischool_Attendance {\n  projectId: IUUID;\n  status: IEnumAttendanceStatus;\n  studentId: IUUID;\n  student?: IStudent;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IStudentTutor {\n  tutorMemberId: IUUID;\n  studentId: IUUID;\n  student: IStudent;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n  tutorMember?: IMember;\n}\n\nexport interface ILevelCollectionSegment {\n  items?: Array<ILevel>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IGradeCollectionSegment {\n  items?: Array<IGrade>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IStudentSortInput {\n  projectId?: ISortEnumType;\n  classroomId?: ISortEnumType;\n  classroom?: IClassroomSortInput;\n  name?: ISortEnumType;\n  lastName?: ISortEnumType;\n  photo?: ISortEnumType;\n  isActive?: ISortEnumType;\n  verify?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IStudentCollectionSegment {\n  items?: Array<IStudent>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IAttendanceSortInput {\n  projectId?: ISortEnumType;\n  status?: ISortEnumType;\n  studentId?: ISortEnumType;\n  student?: IStudentSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IAttendanceCollectionSegment {\n  items?: Array<Ischool_Attendance>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IAttendance {\n  conferenceId: number;\n  memberId: IUUID;\n  member?: IMember;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMyConversationFilterInput {\n  and?: Array<IMyConversationFilterInput>;\n  or?: Array<IMyConversationFilterInput>;\n  username?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  updated_at?: IStringOperationFilterInput;\n  messages?: IListFilterInputTypeOfMyMessageFilterInput;\n  key?: IStringOperationFilterInput;\n  value?: IStringOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfMyMessageFilterInput {\n  all?: IMyMessageFilterInput;\n  none?: IMyMessageFilterInput;\n  some?: IMyMessageFilterInput;\n  any?: boolean;\n}\n\nexport interface IMyMessageFilterInput {\n  and?: Array<IMyMessageFilterInput>;\n  or?: Array<IMyMessageFilterInput>;\n  message?: IStringOperationFilterInput;\n  sender?: IStringOperationFilterInput;\n  createdAt?: IStringOperationFilterInput;\n}\n\nexport interface IMyConversationSortInput {\n  username?: ISortEnumType;\n  phone?: ISortEnumType;\n  updated_at?: ISortEnumType;\n  key?: ISortEnumType;\n  value?: ISortEnumType;\n}\n\nexport interface IMyConversationCollectionSegment {\n  items?: Array<IMyConversation>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IMyConversation {\n  username?: string;\n  phone?: string;\n  updated_at?: string;\n  messages?: Array<IMyMessage>;\n  key?: string;\n  value?: string;\n}\n\nexport interface IMyMessage {\n  message?: string;\n  sender?: string;\n  createdAt?: string;\n}\n\nexport interface IAgentProviderBonoFilterInput {\n  and?: Array<IAgentProviderBonoFilterInput>;\n  or?: Array<IAgentProviderBonoFilterInput>;\n  agentKeyId?: IComparableNullableOfGuidOperationFilterInput;\n  startValidity?: IComparableNullableOfDateTimeOperationFilterInput;\n  endValidity?: IComparableNullableOfDateTimeOperationFilterInput;\n  quantity?: IComparableNullableOfInt32OperationFilterInput;\n  exchangeRate?: INullableOfEnumFCurrencyOperationFilterInput;\n  bono?: INullableOfEnumBonoTypeOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  factureNumber?: IStringOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  referrerId?: IComparableNullableOfGuidOperationFilterInput;\n  agentKey?: IAgentKeyFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumFCurrencyOperationFilterInput {\n  eq?: IEnumFCurrency;\n  neq?: IEnumFCurrency;\n  in?: Array<IEnumFCurrency | null>;\n  nin?: Array<IEnumFCurrency | null>;\n}\n\nexport const enum IEnumFCurrency {\n  PESO = 'PESO',\n  DOLLAR = 'DOLLAR',\n  UDI = 'UDI',\n  EURO = 'EURO'\n}\n\nexport interface INullableOfEnumBonoTypeOperationFilterInput {\n  eq?: IEnumBonoType;\n  neq?: IEnumBonoType;\n  in?: Array<IEnumBonoType | null>;\n  nin?: Array<IEnumBonoType | null>;\n}\n\nexport const enum IEnumBonoType {\n  EMISSION = 'EMISSION',\n  CANCEL = 'CANCEL',\n  PRODUCTION = 'PRODUCTION',\n  ANOTHER = 'ANOTHER'\n}\n\nexport interface IAgentKeyFilterInput {\n  and?: Array<IAgentKeyFilterInput>;\n  or?: Array<IAgentKeyFilterInput>;\n  ownerId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  key?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  projectAgentProviderId?: IComparableGuidOperationFilterInput;\n  projectAgentProvider?: IProjectAgentProviderFilterInput;\n  comissions?: IListFilterInputTypeOfComissionFilterInput;\n  polices?: IListFilterInputTypeOfPoliceFilterInput;\n  agentProviderBono?: IListFilterInputTypeOfAgentProviderBonoFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProjectAgentProviderFilterInput {\n  and?: Array<IProjectAgentProviderFilterInput>;\n  or?: Array<IProjectAgentProviderFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  agentProviderId?: IComparableGuidOperationFilterInput;\n  agentProvider?: IAgentProviderFilterInput;\n  observations?: IStringOperationFilterInput;\n  coveragePackages?: IListFilterInputTypeOfCoveragePackageFilterInput;\n  agentProviderContact?: IListFilterInputTypeOfAgentProviderContactFilterInput;\n  insurerReminderProjectAgentProvider?: IListFilterInputTypeOfInsurerReminderProjectAgentProviderFilterInput;\n  projectAgentProviderEmailReminders?: IListFilterInputTypeOfProjectAgentProviderEmailReminderFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IAgentProviderFilterInput {\n  and?: Array<IAgentProviderFilterInput>;\n  or?: Array<IAgentProviderFilterInput>;\n  companyName?: IStringOperationFilterInput;\n  alias?: IStringOperationFilterInput;\n  rFC?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  website?: IStringOperationFilterInput;\n  ownerId?: IComparableGuidOperationFilterInput;\n  typeAgentProvider?: ITypeAgentProviderOperationFilterInput;\n  projectAgentProviders?: IListFilterInputTypeOfProjectAgentProviderFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ITypeAgentProviderOperationFilterInput {\n  eq?: ITypeAgentProvider;\n  neq?: ITypeAgentProvider;\n  in?: Array<ITypeAgentProvider>;\n  nin?: Array<ITypeAgentProvider>;\n}\n\nexport const enum ITypeAgentProvider {\n  SURETY = 'SURETY',\n  INSURANCE_CARRIER = 'INSURANCE_CARRIER'\n}\n\nexport interface IListFilterInputTypeOfProjectAgentProviderFilterInput {\n  all?: IProjectAgentProviderFilterInput;\n  none?: IProjectAgentProviderFilterInput;\n  some?: IProjectAgentProviderFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfCoveragePackageFilterInput {\n  all?: ICoveragePackageFilterInput;\n  none?: ICoveragePackageFilterInput;\n  some?: ICoveragePackageFilterInput;\n  any?: boolean;\n}\n\nexport interface ICoveragePackageFilterInput {\n  and?: Array<ICoveragePackageFilterInput>;\n  or?: Array<ICoveragePackageFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  projectAgentProviderBranchId?: IComparableGuidOperationFilterInput;\n  typePackage?: IComparableInt32OperationFilterInput;\n  policy?: IComparableInt32OperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  projectAgentProviderId?: IComparableNullableOfGuidOperationFilterInput;\n  projectAgentProvider?: IProjectAgentProviderFilterInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProjectAgentProviderBranchFilterInput {\n  and?: Array<IProjectAgentProviderBranchFilterInput>;\n  or?: Array<IProjectAgentProviderBranchFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  projectAgentProviderId?: IComparableGuidOperationFilterInput;\n  projectAgentProvider?: IProjectAgentProviderFilterInput;\n  branchId?: IComparableGuidOperationFilterInput;\n  branch?: IBranchFilterInput;\n  subBranchId?: IComparableNullableOfGuidOperationFilterInput;\n  subBranch?: ISubBranchFilterInput;\n  projectAgentProviderBranches?: IListFilterInputTypeOfProjectAgentProviderBranchFilterInput;\n  polices?: IListFilterInputTypeOfPoliceFilterInput;\n  comissions?: IListFilterInputTypeOfComissionFilterInput;\n  agentProviderContacts?: IListFilterInputTypeOfAgentProviderContactFilterInput;\n  referrerBranchs?: IListFilterInputTypeOfReferrerBranchFilterInput;\n  coveragePackages?: IListFilterInputTypeOfCoveragePackageFilterInput;\n  policeQuotes?: IListFilterInputTypeOfPoliceQuoteFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IBranchFilterInput {\n  and?: Array<IBranchFilterInput>;\n  or?: Array<IBranchFilterInput>;\n  branchName?: IStringOperationFilterInput;\n  branchCode?: IComparableNullableOfInt32OperationFilterInput;\n  typeAgentProviders?: IListTypeAgentProviderOperationFilterInput;\n  subBranches?: IListFilterInputTypeOfSubBranchFilterInput;\n  projectAgentProviderBranches?: IListFilterInputTypeOfProjectAgentProviderBranchFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListTypeAgentProviderOperationFilterInput {\n  all?: ITypeAgentProviderOperationFilterInput;\n  none?: ITypeAgentProviderOperationFilterInput;\n  some?: ITypeAgentProviderOperationFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfSubBranchFilterInput {\n  all?: ISubBranchFilterInput;\n  none?: ISubBranchFilterInput;\n  some?: ISubBranchFilterInput;\n  any?: boolean;\n}\n\nexport interface ISubBranchFilterInput {\n  and?: Array<ISubBranchFilterInput>;\n  or?: Array<ISubBranchFilterInput>;\n  subBranchName?: IStringOperationFilterInput;\n  subBranchCode?: IComparableNullableOfInt32OperationFilterInput;\n  branchId?: IComparableGuidOperationFilterInput;\n  branch?: IBranchFilterInput;\n  projectAgentProviderBranches?: IListFilterInputTypeOfProjectAgentProviderBranchFilterInput;\n  insurerBailTypes?: IListFilterInputTypeOfInsurerBailTypeFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfProjectAgentProviderBranchFilterInput {\n  all?: IProjectAgentProviderBranchFilterInput;\n  none?: IProjectAgentProviderBranchFilterInput;\n  some?: IProjectAgentProviderBranchFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfInsurerBailTypeFilterInput {\n  all?: IInsurerBailTypeFilterInput;\n  none?: IInsurerBailTypeFilterInput;\n  some?: IInsurerBailTypeFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerBailTypeFilterInput {\n  and?: Array<IInsurerBailTypeFilterInput>;\n  or?: Array<IInsurerBailTypeFilterInput>;\n  name?: IStringOperationFilterInput;\n  code?: IComparableNullableOfInt32OperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  subBranchId?: IComparableNullableOfGuidOperationFilterInput;\n  subBranch?: ISubBranchFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPoliceFilterInput {\n  all?: IPoliceFilterInput;\n  none?: IPoliceFilterInput;\n  some?: IPoliceFilterInput;\n  any?: boolean;\n}\n\nexport interface IPoliceFilterInput {\n  and?: Array<IPoliceFilterInput>;\n  or?: Array<IPoliceFilterInput>;\n  number?: IStringOperationFilterInput;\n  startValidity?: IComparableNullableOfDateTimeOperationFilterInput;\n  endValidity?: IComparableNullableOfDateTimeOperationFilterInput;\n  formaDePago?: INullableOfEnumPolicePaymentTypeOperationFilterInput;\n  status?: INullableOfEnumPoliceStatusOperationFilterInput;\n  observations?: IStringOperationFilterInput;\n  folio?: IStringOperationFilterInput;\n  internalNumber?: IStringOperationFilterInput;\n  documentType?: INullableOfEnumPoliceDocumentTypeOperationFilterInput;\n  addressId?: IComparableNullableOfInt32OperationFilterInput;\n  aseguradoraId?: IComparableNullableOfInt32OperationFilterInput;\n  claveId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  packageId?: IComparableNullableOfInt32OperationFilterInput;\n  projectAgentProviderBranchId?: IComparableNullableOfGuidOperationFilterInput;\n  fCurrency?: INullableOfEnumFCurrencyOperationFilterInput;\n  identifier?: IStringOperationFilterInput;\n  rigth?: IComparableNullableOfDecimalOperationFilterInput;\n  iVA?: IComparableNullableOfDecimalOperationFilterInput;\n  pNeta?: IComparableNullableOfDecimalOperationFilterInput;\n  pTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  rPF?: IComparableNullableOfDecimalOperationFilterInput;\n  comision?: IComparableNullableOfDecimalOperationFilterInput;\n  administrationType?: INullableOfEnumPoliceAdministrationTypeOperationFilterInput;\n  caratule?: IStringOperationFilterInput;\n  certificadoIncisoActivo?: IBooleanOperationFilterInput;\n  certificateNumber?: IStringOperationFilterInput;\n  comisionPercent?: IComparableNullableOfDoubleOperationFilterInput;\n  hospitalLevel?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  parentId?: IComparableNullableOfGuidOperationFilterInput;\n  discount?: IComparableNullableOfDecimalOperationFilterInput;\n  isRenewable?: INullableOfEnumPoliceRenewOperationFilterInput;\n  reasonRen?: IStringOperationFilterInput;\n  renewedStatus?: INullableOfEnumPoliceRenewalStatusOperationFilterInput;\n  contact?: IStringOperationFilterInput;\n  fechaBajaInciso?: IComparableNullableOfDateTimeOperationFilterInput;\n  reasonCancel?: IStringOperationFilterInput;\n  receiptsBy?: INullableOfEnumPoliceReceiptsOperationFilterInput;\n  responsableId?: IComparableNullableOfGuidOperationFilterInput;\n  comisionGiven?: IComparableNullableOfDecimalOperationFilterInput;\n  recAntiquity?: IComparableNullableOfDateTimeOperationFilterInput;\n  collectionExecutiveId?: IComparableNullableOfInt32OperationFilterInput;\n  sucursalId?: IComparableNullableOfGuidOperationFilterInput;\n  subTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  trackBitacora?: IBooleanOperationFilterInput;\n  accidentRate?: IComparableNullableOfDecimalOperationFilterInput;\n  scheme?: INullableOfEnumPaySchemeOperationFilterInput;\n  steps?: IStringOperationFilterInput;\n  totalReceipts?: IComparableNullableOfInt32OperationFilterInput;\n  conceptAnnulment?: INullableOfEnumPoliceConceptOperationFilterInput;\n  deductible?: IStringOperationFilterInput;\n  emisionDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  emisionStatus?: INullableOfEnumPoliceEmisionStatusOperationFilterInput;\n  fechaAnuencia?: IComparableNullableOfDateTimeOperationFilterInput;\n  fianzaTypeId?: IComparableNullableOfInt32OperationFilterInput;\n  gastoInvestigacion?: IComparableNullableOfDecimalOperationFilterInput;\n  reasonRehabbilitate?: IStringOperationFilterInput;\n  bussinessLine?: INullableOfEnumPoliceBussinessLineOperationFilterInput;\n  contratanteSubGroup?: IComparableNullableOfInt32OperationFilterInput;\n  celulaId?: IComparableNullableOfInt32OperationFilterInput;\n  groupingLevelId?: IComparableNullableOfInt32OperationFilterInput;\n  typePolicy?: INullableOfEnumPolicyTypeOperationFilterInput;\n  conductoDePago?: INullableOfEnumConductChoiseOperationFilterInput;\n  tabulator?: IStringOperationFilterInput;\n  bonoVariable?: IComparableNullableOfDecimalOperationFilterInput;\n  hasProgramaDeProveedores?: IBooleanOperationFilterInput;\n  contractorId?: IComparableNullableOfGuidOperationFilterInput;\n  programaDeProveedoresContractorId?: IComparableNullableOfInt32OperationFilterInput;\n  chargeDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  comisionEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  comisionPercentEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  rigthEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  discountEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  ivaEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  pNetaEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  pTotalEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  rPFEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  subTotalEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  dateCancel?: IComparableNullableOfDateTimeOperationFilterInput;\n  amountCanceled?: IComparableNullableOfDecimalOperationFilterInput;\n  stateCirculation?: IStringOperationFilterInput;\n  fechaPagoComision?: IComparableNullableOfDateTimeOperationFilterInput;\n  dateEmitionFactura?: IComparableNullableOfDateTimeOperationFilterInput;\n  folioFactura?: IStringOperationFilterInput;\n  monthFactura?: IComparableNullableOfInt32OperationFilterInput;\n  exchangeRate?: IComparableNullableOfDecimalOperationFilterInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchFilterInput;\n  agentKey?: IAgentKeyFilterInput;\n  sucursal?: ISucursalFilterInput;\n  parent?: IPoliceFilterInput;\n  contractor?: Isaam_ContractorFilterInput;\n  polices?: IListFilterInputTypeOfPoliceFilterInput;\n  policeAssign?: IPoliceAssignFilterInput;\n  policePendient?: IPolicePendientFilterInput;\n  formAccidentDisease?: IFormAccidentDiseaseFilterInput;\n  formAutomobileDamage?: IFormAutomobileDamageFilterInput;\n  formDamage?: IFormDamageFilterInput;\n  formLife?: IFormLifeFilterInput;\n  personalInformation?: IPersonalInformationFilterInput;\n  involvedReferrer?: IInvolvedReferrerFilterInput;\n  oldPolices?: IListFilterInputTypeOfOldPoliceFilterInput;\n  newPolices?: IListFilterInputTypeOfOldPoliceFilterInput;\n  coverageInPolicies?: IListFilterInputTypeOfCoverageInPolicyFilterInput;\n  endorsements?: IListFilterInputTypeOfEndorsementFilterInput;\n  sinisters?: IListFilterInputTypeOfSinisterFilterInput;\n  policeReceipts?: IListFilterInputTypeOfPoliceReceiptFilterInput;\n  policeFiles?: IListFilterInputTypeOfPoliceFileFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumPolicePaymentTypeOperationFilterInput {\n  eq?: IEnumPolicePaymentType;\n  neq?: IEnumPolicePaymentType;\n  in?: Array<IEnumPolicePaymentType | null>;\n  nin?: Array<IEnumPolicePaymentType | null>;\n}\n\nexport const enum IEnumPolicePaymentType {\n  MONTHLY = 'MONTHLY',\n  BIMONTHLY = 'BIMONTHLY',\n  QUARTERLY = 'QUARTERLY',\n  CASH_PAYMENT = 'CASH_PAYMENT',\n  BIANNUAL = 'BIANNUAL',\n  ANNUAL = 'ANNUAL',\n  FORTNIGTHLY = 'FORTNIGTHLY',\n  WEEKLLY = 'WEEKLLY',\n  FOURTEEN = 'FOURTEEN'\n}\n\nexport interface INullableOfEnumPoliceStatusOperationFilterInput {\n  eq?: IEnumPoliceStatus;\n  neq?: IEnumPoliceStatus;\n  in?: Array<IEnumPoliceStatus | null>;\n  nin?: Array<IEnumPoliceStatus | null>;\n}\n\nexport const enum IEnumPoliceStatus {\n  DISABLED = 'DISABLED',\n  N_OR_A = 'N_OR_A',\n  IN_PROCESS = 'IN_PROCESS',\n  OT_CANCELED = 'OT_CANCELED',\n  TO_START = 'TO_START',\n  VALID = 'VALID',\n  CANCALED = 'CANCALED',\n  EXPIRED = 'EXPIRED',\n  RENEWED = 'RENEWED',\n  UNRENEWED = 'UNRENEWED',\n  PRE_CANCELED = 'PRE_CANCELED',\n  ACTIVE_BY_A_ENDORSEMENT = 'ACTIVE_BY_A_ENDORSEMENT',\n  INACTIVE_BY_D_ENDORSEMENT = 'INACTIVE_BY_D_ENDORSEMENT',\n  INACTIVE_INITIAL_BY_CANCELATION = 'INACTIVE_INITIAL_BY_CANCELATION',\n  INACTIVE_A_ENDORSEMENT_BY_CANCELATION = 'INACTIVE_A_ENDORSEMENT_BY_CANCELATION',\n  INACTIVE_BY_EXPIRED_POLICY = 'INACTIVE_BY_EXPIRED_POLICY',\n  INACTIVE_BY_RENEWED_POLICY = 'INACTIVE_BY_RENEWED_POLICY'\n}\n\nexport interface INullableOfEnumPoliceDocumentTypeOperationFilterInput {\n  eq?: IEnumPoliceDocumentType;\n  neq?: IEnumPoliceDocumentType;\n  in?: Array<IEnumPoliceDocumentType | null>;\n  nin?: Array<IEnumPoliceDocumentType | null>;\n}\n\nexport const enum IEnumPoliceDocumentType {\n  POLICY = 'POLICY',\n  POLICY_GROUP = 'POLICY_GROUP',\n  SUBGROUP = 'SUBGROUP',\n  CATEGORY = 'CATEGORY',\n  CERTIFICATE = 'CERTIFICATE',\n  BAIL = 'BAIL',\n  BAIL_COVER = 'BAIL_COVER',\n  BAIL_CATEGORY = 'BAIL_CATEGORY',\n  BAIL_CERTIFICATE = 'BAIL_CERTIFICATE',\n  COLLECTIVITIES = 'COLLECTIVITIES',\n  COLLECTIVITIES_POLICY = 'COLLECTIVITIES_POLICY'\n}\n\nexport interface INullableOfEnumPoliceAdministrationTypeOperationFilterInput {\n  eq?: IEnumPoliceAdministrationType;\n  neq?: IEnumPoliceAdministrationType;\n  in?: Array<IEnumPoliceAdministrationType | null>;\n  nin?: Array<IEnumPoliceAdministrationType | null>;\n}\n\nexport const enum IEnumPoliceAdministrationType {\n  SIMPLIFIED = 'SIMPLIFIED',\n  SELFMANAGED = 'SELFMANAGED',\n  DETAILED = 'DETAILED'\n}\n\nexport interface INullableOfEnumPoliceRenewOperationFilterInput {\n  eq?: IEnumPoliceRenew;\n  neq?: IEnumPoliceRenew;\n  in?: Array<IEnumPoliceRenew | null>;\n  nin?: Array<IEnumPoliceRenew | null>;\n}\n\nexport const enum IEnumPoliceRenew {\n  RENEWABLE = 'RENEWABLE',\n  UNRENEWABLE = 'UNRENEWABLE'\n}\n\nexport interface INullableOfEnumPoliceRenewalStatusOperationFilterInput {\n  eq?: IEnumPoliceRenewalStatus;\n  neq?: IEnumPoliceRenewalStatus;\n  in?: Array<IEnumPoliceRenewalStatus | null>;\n  nin?: Array<IEnumPoliceRenewalStatus | null>;\n}\n\nexport const enum IEnumPoliceRenewalStatus {\n  THERE_IS_NO_SUBSEQUENT_RENEWAL = 'THERE_IS_NO_SUBSEQUENT_RENEWAL',\n  RENEW_IN_PROCESS = 'RENEW_IN_PROCESS',\n  COMPLETEW_RENOVATION = 'COMPLETEW_RENOVATION',\n  ERROR_THERE_ARE_MULTIPLE_RENOVATIONS = 'ERROR_THERE_ARE_MULTIPLE_RENOVATIONS'\n}\n\nexport interface INullableOfEnumPoliceReceiptsOperationFilterInput {\n  eq?: IEnumPoliceReceipts;\n  neq?: IEnumPoliceReceipts;\n  in?: Array<IEnumPoliceReceipts | null>;\n  nin?: Array<IEnumPoliceReceipts | null>;\n}\n\nexport const enum IEnumPoliceReceipts {\n  POLICY = 'POLICY',\n  SUBGROUP = 'SUBGROUP',\n  CATEGORY = 'CATEGORY'\n}\n\nexport interface INullableOfEnumPaySchemeOperationFilterInput {\n  eq?: IEnumPayScheme;\n  neq?: IEnumPayScheme;\n  in?: Array<IEnumPayScheme | null>;\n  nin?: Array<IEnumPayScheme | null>;\n}\n\nexport const enum IEnumPayScheme {\n  TRADITIONAL = 'TRADITIONAL',\n  MINIMUM_PRIMA = 'MINIMUM_PRIMA'\n}\n\nexport interface INullableOfEnumPoliceConceptOperationFilterInput {\n  eq?: IEnumPoliceConcept;\n  neq?: IEnumPoliceConcept;\n  in?: Array<IEnumPoliceConcept | null>;\n  nin?: Array<IEnumPoliceConcept | null>;\n}\n\nexport const enum IEnumPoliceConcept {\n  PRECANCELED = 'PRECANCELED',\n  CAPTURE_ERROR = 'CAPTURE_ERROR',\n  REISSUE = 'REISSUE',\n  NON_PAYMENT = 'NON_PAYMENT',\n  ANOTHER = 'ANOTHER',\n  NOT_APPLY = 'NOT_APPLY'\n}\n\nexport interface INullableOfEnumPoliceEmisionStatusOperationFilterInput {\n  eq?: IEnumPoliceEmisionStatus;\n  neq?: IEnumPoliceEmisionStatus;\n  in?: Array<IEnumPoliceEmisionStatus | null>;\n  nin?: Array<IEnumPoliceEmisionStatus | null>;\n}\n\nexport const enum IEnumPoliceEmisionStatus {\n  DOCUMENTS_RECEIVED = 'DOCUMENTS_RECEIVED',\n  DOCUMENT_PENDING = 'DOCUMENT_PENDING',\n  DOCUMENT_UPLODAD = 'DOCUMENT_UPLODAD',\n  IN_AUTHORIZATION = 'IN_AUTHORIZATION',\n  EMMITED = 'EMMITED'\n}\n\nexport interface INullableOfEnumPoliceBussinessLineOperationFilterInput {\n  eq?: IEnumPoliceBussinessLine;\n  neq?: IEnumPoliceBussinessLine;\n  in?: Array<IEnumPoliceBussinessLine | null>;\n  nin?: Array<IEnumPoliceBussinessLine | null>;\n}\n\nexport const enum IEnumPoliceBussinessLine {\n  COMERTIAL = 'COMERTIAL',\n  PERSONAL = 'PERSONAL',\n  ANOTHER = 'ANOTHER'\n}\n\nexport interface INullableOfEnumPolicyTypeOperationFilterInput {\n  eq?: IEnumPolicyType;\n  neq?: IEnumPolicyType;\n  in?: Array<IEnumPolicyType | null>;\n  nin?: Array<IEnumPolicyType | null>;\n}\n\nexport const enum IEnumPolicyType {\n  OPEN = 'OPEN',\n  CLOSED = 'CLOSED'\n}\n\nexport interface INullableOfEnumConductChoiseOperationFilterInput {\n  eq?: IEnumConductChoise;\n  neq?: IEnumConductChoise;\n  in?: Array<IEnumConductChoise | null>;\n  nin?: Array<IEnumConductChoise | null>;\n}\n\nexport const enum IEnumConductChoise {\n  UNDOMICILED = 'UNDOMICILED',\n  AGENT = 'AGENT',\n  CAC = 'CAC',\n  CAT_OR_DOMICILED = 'CAT_OR_DOMICILED',\n  PAYROLL = 'PAYROLL',\n  CUT = 'CUT'\n}\n\nexport interface ISucursalFilterInput {\n  and?: Array<ISucursalFilterInput>;\n  or?: Array<ISucursalFilterInput>;\n  name?: IStringOperationFilterInput;\n  details?: IStringOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  police?: IListFilterInputTypeOfPoliceFilterInput;\n  contractors?: IListFilterInputTypeOfContractorFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfContractorFilterInput {\n  all?: Isaam_ContractorFilterInput;\n  none?: Isaam_ContractorFilterInput;\n  some?: Isaam_ContractorFilterInput;\n  any?: boolean;\n}\n\nexport interface Isaam_ContractorFilterInput {\n  and?: Array<Isaam_ContractorFilterInput>;\n  or?: Array<Isaam_ContractorFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  secondLastName?: IStringOperationFilterInput;\n  socialReason?: IStringOperationFilterInput;\n  fullName?: IStringOperationFilterInput;\n  gender?: IEnumGenderOperationFilterInput;\n  birthDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  phoneNumber?: IStringOperationFilterInput;\n  rFC?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  contractorType?: IEnumContractorTypeOperationFilterInput;\n  sucursalId?: IComparableNullableOfGuidOperationFilterInput;\n  contractorClassificationId?: IComparableGuidOperationFilterInput;\n  contractorClassification?: IContractorClassificationFilterInput;\n  contractorGroupId?: IComparableGuidOperationFilterInput;\n  contractorGroup?: IContractorGroupFilterInput;\n  contractorGroupingLevelId?: IComparableGuidOperationFilterInput;\n  contractorGroupingLevel?: IContractorGroupingLevelFilterInput;\n  contractorCelulaId?: IComparableGuidOperationFilterInput;\n  contractorCelula?: IContractorCelulaFilterInput;\n  ownerId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  responsableId?: IComparableGuidOperationFilterInput;\n  referrerId?: IComparableGuidOperationFilterInput;\n  referrer?: IReferrerFilterInput;\n  sucursal?: ISucursalFilterInput;\n  contractorProcessDocuments?: IListFilterInputTypeOfContractorProcessDocumentFilterInput;\n  agentProviderContact?: IListFilterInputTypeOfAgentProviderContactFilterInput;\n  policeQuotes?: IListFilterInputTypeOfPoliceQuoteFilterInput;\n  polices?: IListFilterInputTypeOfPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEnumGenderOperationFilterInput {\n  eq?: Isaam_EnumGender;\n  neq?: Isaam_EnumGender;\n  in?: Array<Isaam_EnumGender>;\n  nin?: Array<Isaam_EnumGender>;\n}\n\nexport const enum Isaam_EnumGender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n  UNKNOWN = 'UNKNOWN'\n}\n\nexport interface IEnumContractorTypeOperationFilterInput {\n  eq?: IEnumContractorType;\n  neq?: IEnumContractorType;\n  in?: Array<IEnumContractorType>;\n  nin?: Array<IEnumContractorType>;\n}\n\nexport const enum IEnumContractorType {\n  PHYSICAL = 'PHYSICAL',\n  MORAL = 'MORAL'\n}\n\nexport interface IContractorClassificationFilterInput {\n  and?: Array<IContractorClassificationFilterInput>;\n  or?: Array<IContractorClassificationFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  contractors?: IListFilterInputTypeOfContractorFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IContractorGroupFilterInput {\n  and?: Array<IContractorGroupFilterInput>;\n  or?: Array<IContractorGroupFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  ownerId?: IComparableGuidOperationFilterInput;\n  parentId?: IComparableNullableOfGuidOperationFilterInput;\n  responsableId?: IComparableGuidOperationFilterInput;\n  groupType?: INullableOfEnumContractorGroupTypeOperationFilterInput;\n  parent?: IContractorGroupFilterInput;\n  contractorGroups?: IListFilterInputTypeOfContractorGroupFilterInput;\n  agentProviderContact?: IListFilterInputTypeOfAgentProviderContactFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumContractorGroupTypeOperationFilterInput {\n  eq?: IEnumContractorGroupType;\n  neq?: IEnumContractorGroupType;\n  in?: Array<IEnumContractorGroupType | null>;\n  nin?: Array<IEnumContractorGroupType | null>;\n}\n\nexport const enum IEnumContractorGroupType {\n  GROUP = 'GROUP',\n  SUBGROUP = 'SUBGROUP',\n  SUBSUBGROUP = 'SUBSUBGROUP'\n}\n\nexport interface IListFilterInputTypeOfContractorGroupFilterInput {\n  all?: IContractorGroupFilterInput;\n  none?: IContractorGroupFilterInput;\n  some?: IContractorGroupFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfAgentProviderContactFilterInput {\n  all?: IAgentProviderContactFilterInput;\n  none?: IAgentProviderContactFilterInput;\n  some?: IAgentProviderContactFilterInput;\n  any?: boolean;\n}\n\nexport interface IAgentProviderContactFilterInput {\n  and?: Array<IAgentProviderContactFilterInput>;\n  or?: Array<IAgentProviderContactFilterInput>;\n  projectAgentProviderBranchId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  department?: IStringOperationFilterInput;\n  sinisterAccidentId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableGuidOperationFilterInput;\n  contractorGroupId?: IComparableGuidOperationFilterInput;\n  contractorGroup?: IContractorGroupFilterInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchFilterInput;\n  contractorId?: IComparableGuidOperationFilterInput;\n  contractor?: Isaam_ContractorFilterInput;\n  projectAgentProviderId?: IComparableGuidOperationFilterInput;\n  projectAgentProvider?: IProjectAgentProviderFilterInput;\n  sinisterAccident?: ISinisterAccidentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ISinisterAccidentFilterInput {\n  and?: Array<ISinisterAccidentFilterInput>;\n  or?: Array<ISinisterAccidentFilterInput>;\n  relationShip?: INullableOfEnumSinisterRelationOperationFilterInput;\n  kindSinister?: INullableOfEnumSinisterKindOperationFilterInput;\n  sinisterReason?: INullableOfEnumSinisterReasonOperationFilterInput;\n  sinisterComplement?: IStringOperationFilterInput;\n  sinisterType?: INullableOfEnumSinisterTypeOperationFilterInput;\n  paymentType?: INullableOfEnumSinisterPaymentTypeOperationFilterInput;\n  totalPayment?: IComparableNullableOfDecimalOperationFilterInput;\n  totalProcedent?: IComparableNullableOfDecimalOperationFilterInput;\n  totalCoaseguro?: IComparableNullableOfDecimalOperationFilterInput;\n  totalDeductible?: IComparableNullableOfDecimalOperationFilterInput;\n  totalFinal?: IComparableNullableOfDecimalOperationFilterInput;\n  initial?: IBooleanOperationFilterInput;\n  receiptStatus?: IStringOperationFilterInput;\n  dependientId?: IComparableNullableOfGuidOperationFilterInput;\n  sinisterAilingId?: IComparableNullableOfGuidOperationFilterInput;\n  sinisterId?: IComparableNullableOfGuidOperationFilterInput;\n  titularId?: IComparableNullableOfGuidOperationFilterInput;\n  ailment?: IStringOperationFilterInput;\n  anesthesiologist?: IComparableNullableOfDecimalOperationFilterInput;\n  helper?: IComparableNullableOfDecimalOperationFilterInput;\n  surgeon?: IComparableNullableOfDecimalOperationFilterInput;\n  coasHonorarios?: IComparableNullableOfDecimalOperationFilterInput;\n  coasHospital?: IComparableNullableOfDecimalOperationFilterInput;\n  dedHonorarios?: IComparableNullableOfDecimalOperationFilterInput;\n  dedHospital?: IComparableNullableOfDecimalOperationFilterInput;\n  montoHonorarios?: IComparableNullableOfDecimalOperationFilterInput;\n  montoHospital?: IComparableNullableOfDecimalOperationFilterInput;\n  others?: IComparableNullableOfDecimalOperationFilterInput;\n  surgeryDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  hospital?: IStringOperationFilterInput;\n  affectedFullName?: IStringOperationFilterInput;\n  complementConsecutiveNumber?: IComparableNullableOfInt32OperationFilterInput;\n  initialAccidentId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  sinister?: ISinisterFilterInput;\n  personalInformation?: IPersonalInformationFilterInput;\n  dependient?: IRelationShipFilterInput;\n  initialAccident?: ISinisterAccidentFilterInput;\n  sinisterAiling?: ISinisterAilingFilterInput;\n  sinisterAccidents?: IListFilterInputTypeOfSinisterAccidentFilterInput;\n  agentProviderContacts?: IListFilterInputTypeOfAgentProviderContactFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumSinisterRelationOperationFilterInput {\n  eq?: IEnumSinisterRelation;\n  neq?: IEnumSinisterRelation;\n  in?: Array<IEnumSinisterRelation | null>;\n  nin?: Array<IEnumSinisterRelation | null>;\n}\n\nexport const enum IEnumSinisterRelation {\n  TITULAR = 'TITULAR',\n  SPOUSE = 'SPOUSE',\n  FIRSTBORN = 'FIRSTBORN',\n  ANOTHER = 'ANOTHER'\n}\n\nexport interface INullableOfEnumSinisterKindOperationFilterInput {\n  eq?: IEnumSinisterKind;\n  neq?: IEnumSinisterKind;\n  in?: Array<IEnumSinisterKind | null>;\n  nin?: Array<IEnumSinisterKind | null>;\n}\n\nexport const enum IEnumSinisterKind {\n  PERSONAL_ACCIDENTS = 'PERSONAL_ACCIDENTS',\n  MEDICAL_EXPENSES = 'MEDICAL_EXPENSES',\n  HEALTH = 'HEALTH',\n  LIFE = 'LIFE',\n  CIVIL_LIABILITY_AND_PROFESSIONAL_RISKS = 'CIVIL_LIABILITY_AND_PROFESSIONAL_RISKS',\n  MARITIME_AND_TRANSPORT = 'MARITIME_AND_TRANSPORT',\n  FIRE = 'FIRE',\n  AGRICULTURALAND_ANIMALS = 'AGRICULTURALAND_ANIMALS',\n  AUTOMOBILES = 'AUTOMOBILES',\n  CREDIT = 'CREDIT',\n  HOME_CREDIT = 'HOME_CREDIT',\n  FINANCIAL_GUARANTEE = 'FINANCIAL_GUARANTEE',\n  DIVERSE = 'DIVERSE',\n  EARTHQUAKE_AND_CATASTROPHIC_RISKS = 'EARTHQUAKE_AND_CATASTROPHIC_RISKS'\n}\n\nexport interface INullableOfEnumSinisterReasonOperationFilterInput {\n  eq?: IEnumSinisterReason;\n  neq?: IEnumSinisterReason;\n  in?: Array<IEnumSinisterReason | null>;\n  nin?: Array<IEnumSinisterReason | null>;\n}\n\nexport const enum IEnumSinisterReason {\n  ACCIDENT = 'ACCIDENT',\n  DISEASE = 'DISEASE',\n  BIRTH = 'BIRTH'\n}\n\nexport interface INullableOfEnumSinisterTypeOperationFilterInput {\n  eq?: IEnumSinisterType;\n  neq?: IEnumSinisterType;\n  in?: Array<IEnumSinisterType | null>;\n  nin?: Array<IEnumSinisterType | null>;\n}\n\nexport const enum IEnumSinisterType {\n  INITIAL = 'INITIAL',\n  COMPLEMENT = 'COMPLEMENT'\n}\n\nexport interface INullableOfEnumSinisterPaymentTypeOperationFilterInput {\n  eq?: IEnumSinisterPaymentType;\n  neq?: IEnumSinisterPaymentType;\n  in?: Array<IEnumSinisterPaymentType | null>;\n  nin?: Array<IEnumSinisterPaymentType | null>;\n}\n\nexport const enum IEnumSinisterPaymentType {\n  CHECK = 'CHECK',\n  TRANSFER = 'TRANSFER'\n}\n\nexport interface ISinisterFilterInput {\n  and?: Array<ISinisterFilterInput>;\n  or?: Array<ISinisterFilterInput>;\n  companyFolio?: IStringOperationFilterInput;\n  internFolio?: IStringOperationFilterInput;\n  status?: INullableOfEnumSinisterStatusOperationFilterInput;\n  promiseDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  affectedItem?: IStringOperationFilterInput;\n  sinisterNumber?: IStringOperationFilterInput;\n  sinisterDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  typeSinisterGeneral?: INullableOfEnumTypeSinisterGeneralOperationFilterInput;\n  reason?: IStringOperationFilterInput;\n  observations?: IStringOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  ingressDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  affectedAux?: IStringOperationFilterInput;\n  compromiseDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  affectedAuxRelationShip?: INullableOfEnumSinisterRelationOperationFilterInput;\n  insurerZipCodeSepomexId?: IComparableNullableOfGuidOperationFilterInput;\n  date?: IComparableNullableOfDateTimeOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  terminationDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  fileLoadedDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  police?: IPoliceFilterInput;\n  sinisterCars?: IListFilterInputTypeOfSinisterCarFilterInput;\n  sinisterDamages?: IListFilterInputTypeOfSinisterDamageFilterInput;\n  sinisterFacturas?: IListFilterInputTypeOfSinisterFacturaFilterInput;\n  sinisterLifes?: IListFilterInputTypeOfSinisterLifeFilterInput;\n  sinisterAccidents?: IListFilterInputTypeOfSinisterAccidentFilterInput;\n  insurerZipCodeSepomex?: IInsurerZipCodeSepomexFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumSinisterStatusOperationFilterInput {\n  eq?: IEnumSinisterStatus;\n  neq?: IEnumSinisterStatus;\n  in?: Array<IEnumSinisterStatus | null>;\n  nin?: Array<IEnumSinisterStatus | null>;\n}\n\nexport const enum IEnumSinisterStatus {\n  PENDING = 'PENDING',\n  IN_PROCESS = 'IN_PROCESS',\n  COMPLETED = 'COMPLETED',\n  CANCELED = 'CANCELED',\n  REJECTED = 'REJECTED',\n  ON_WAITING = 'ON_WAITING',\n  REPROCESS = 'REPROCESS',\n  DISCONFORMITY = 'DISCONFORMITY'\n}\n\nexport interface INullableOfEnumTypeSinisterGeneralOperationFilterInput {\n  eq?: IEnumTypeSinisterGeneral;\n  neq?: IEnumTypeSinisterGeneral;\n  in?: Array<IEnumTypeSinisterGeneral | null>;\n  nin?: Array<IEnumTypeSinisterGeneral | null>;\n}\n\nexport const enum IEnumTypeSinisterGeneral {\n  ACCIDENTS_AND_DISEASES = 'ACCIDENTS_AND_DISEASES',\n  CAR_DAMAGES = 'CAR_DAMAGES',\n  NON_CARS_DAMAGE = 'NON_CARS_DAMAGE',\n  LIFE = 'LIFE'\n}\n\nexport interface IListFilterInputTypeOfSinisterCarFilterInput {\n  all?: ISinisterCarFilterInput;\n  none?: ISinisterCarFilterInput;\n  some?: ISinisterCarFilterInput;\n  any?: boolean;\n}\n\nexport interface ISinisterCarFilterInput {\n  and?: Array<ISinisterCarFilterInput>;\n  or?: Array<ISinisterCarFilterInput>;\n  typeSinister?: INullableOfEnumSinisterCarTypeOperationFilterInput;\n  explication?: IStringOperationFilterInput;\n  third?: IStringOperationFilterInput;\n  imdemnization?: IComparableNullableOfDecimalOperationFilterInput;\n  sinisterId?: IComparableNullableOfGuidOperationFilterInput;\n  driver?: IStringOperationFilterInput;\n  coaseguro?: IComparableNullableOfDecimalOperationFilterInput;\n  deductible?: IComparableNullableOfDecimalOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  firstSubTypeSinister?: INullableOfEnumSinisterCarSubTypeOperationFilterInput;\n  secondSubTypeSinister?: INullableOfEnumSinisterCarSubSubTypeOperationFilterInput;\n  sinister?: ISinisterFilterInput;\n  sinisterCarContacts?: IListFilterInputTypeOfSinisterCarContactFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumSinisterCarTypeOperationFilterInput {\n  eq?: IEnumSinisterCarType;\n  neq?: IEnumSinisterCarType;\n  in?: Array<IEnumSinisterCarType | null>;\n  nin?: Array<IEnumSinisterCarType | null>;\n}\n\nexport const enum IEnumSinisterCarType {\n  COLLISION = 'COLLISION',\n  FIRE = 'FIRE',\n  OVERTURN = 'OVERTURN',\n  TOTAL_THEFT = 'TOTAL_THEFT',\n  PARTIAL_THIEF = 'PARTIAL_THIEF',\n  GLASS = 'GLASS',\n  FLOODS = 'FLOODS',\n  CRANE_SERVICE = 'CRANE_SERVICE',\n  TOTAL_LOSS = 'TOTAL_LOSS',\n  VANDALISM = 'VANDALISM',\n  SCOPE_AND_PROOJECTION = 'SCOPE_AND_PROOJECTION',\n  DAMAGES = 'DAMAGES',\n  NATUAL_PHENOMENA = 'NATUAL_PHENOMENA',\n  AFFECTED_BY_COLISION = 'AFFECTED_BY_COLISION',\n  TIRE_DAMAGE = 'TIRE_DAMAGE',\n  ROADSIDE_ASSISTANCE = 'ROADSIDE_ASSISTANCE',\n  RUN_OVER = 'RUN_OVER',\n  ADMINISTRATIVE_TRANSACTIONS = 'ADMINISTRATIVE_TRANSACTIONS',\n  PARTIAL_LOSS = 'PARTIAL_LOSS'\n}\n\nexport interface INullableOfEnumSinisterCarSubTypeOperationFilterInput {\n  eq?: IEnumSinisterCarSubType;\n  neq?: IEnumSinisterCarSubType;\n  in?: Array<IEnumSinisterCarSubType | null>;\n  nin?: Array<IEnumSinisterCarSubType | null>;\n}\n\nexport const enum IEnumSinisterCarSubType {\n  CONCLUSION_DE_AJUSTE_O_PETICIONES_EN_GENERAL = 'CONCLUSION_DE_AJUSTE_O_PETICIONES_EN_GENERAL',\n  LEGAL = 'LEGAL',\n  VALUATION = 'VALUATION',\n  RERAIR = 'RERAIR',\n  MATERIAL_DAMAGE = 'MATERIAL_DAMAGE',\n  THEFT = 'THEFT',\n  THEFT_LOCATED = 'THEFT_LOCATED',\n  REIMBURSEMENT_OF_MEDICAL_EXPENSES = 'REIMBURSEMENT_OF_MEDICAL_EXPENSES',\n  REIMBURSEMENT_OF_FUNERAL_EXPENSES = 'REIMBURSEMENT_OF_FUNERAL_EXPENSES',\n  CRANE_REINBURSEMENT = 'CRANE_REINBURSEMENT',\n  CRANE_REIMBURSEMENT_FOR_ASSISTANCE = 'CRANE_REIMBURSEMENT_FOR_ASSISTANCE',\n  GLASS_REINBURSEMENT = 'GLASS_REINBURSEMENT',\n  REFUND_OR_DEDUCTIBLE_OR_DAMAGES_TO_THIRD_PARTIES = 'REFUND_OR_DEDUCTIBLE_OR_DAMAGES_TO_THIRD_PARTIES',\n  PAYMENT_OF_DAMAGES = 'PAYMENT_OF_DAMAGES',\n  PT_LETTER_AND_AMOUTS = 'PT_LETTER_AND_AMOUTS',\n  REJECTION_LETTER = 'REJECTION_LETTER',\n  DEDUCTIBLE_BILL = 'DEDUCTIBLE_BILL'\n}\n\nexport interface INullableOfEnumSinisterCarSubSubTypeOperationFilterInput {\n  eq?: IEnumSinisterCarSubSubType;\n  neq?: IEnumSinisterCarSubSubType;\n  in?: Array<IEnumSinisterCarSubSubType | null>;\n  nin?: Array<IEnumSinisterCarSubSubType | null>;\n}\n\nexport const enum IEnumSinisterCarSubSubType {\n  DOCUMENT_REVIEW = 'DOCUMENT_REVIEW',\n  COMPENSATION = 'COMPENSATION'\n}\n\nexport interface IListFilterInputTypeOfSinisterCarContactFilterInput {\n  all?: ISinisterCarContactFilterInput;\n  none?: ISinisterCarContactFilterInput;\n  some?: ISinisterCarContactFilterInput;\n  any?: boolean;\n}\n\nexport interface ISinisterCarContactFilterInput {\n  and?: Array<ISinisterCarContactFilterInput>;\n  or?: Array<ISinisterCarContactFilterInput>;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  secondLastName?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  references?: IStringOperationFilterInput;\n  sinisterCarId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  sinisterCar?: ISinisterCarFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfSinisterDamageFilterInput {\n  all?: ISinisterDamageFilterInput;\n  none?: ISinisterDamageFilterInput;\n  some?: ISinisterDamageFilterInput;\n  any?: boolean;\n}\n\nexport interface ISinisterDamageFilterInput {\n  and?: Array<ISinisterDamageFilterInput>;\n  or?: Array<ISinisterDamageFilterInput>;\n  insuredProperty?: IStringOperationFilterInput;\n  lossEstimate?: IStringOperationFilterInput;\n  claimCause?: IStringOperationFilterInput;\n  affectedCoverage?: IStringOperationFilterInput;\n  indemnization?: IComparableNullableOfDecimalOperationFilterInput;\n  totalClaim?: IComparableNullableOfDecimalOperationFilterInput;\n  sinisterId?: IComparableNullableOfGuidOperationFilterInput;\n  currency?: INullableOfEnumFCurrencyOperationFilterInput;\n  exchangeRate?: INullableOfEnumFCurrencyOperationFilterInput;\n  totalCoaseguro?: IComparableNullableOfDecimalOperationFilterInput;\n  totalDeductible?: IComparableNullableOfDecimalOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  sinister?: ISinisterFilterInput;\n  sinisterDamageContacts?: IListFilterInputTypeOfSinisterDamageContactFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfSinisterDamageContactFilterInput {\n  all?: ISinisterDamageContactFilterInput;\n  none?: ISinisterDamageContactFilterInput;\n  some?: ISinisterDamageContactFilterInput;\n  any?: boolean;\n}\n\nexport interface ISinisterDamageContactFilterInput {\n  and?: Array<ISinisterDamageContactFilterInput>;\n  or?: Array<ISinisterDamageContactFilterInput>;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  secondLastName?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  references?: IStringOperationFilterInput;\n  sinisterDamageId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  sinisterDamage?: ISinisterDamageFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfSinisterFacturaFilterInput {\n  all?: ISinisterFacturaFilterInput;\n  none?: ISinisterFacturaFilterInput;\n  some?: ISinisterFacturaFilterInput;\n  any?: boolean;\n}\n\nexport interface ISinisterFacturaFilterInput {\n  and?: Array<ISinisterFacturaFilterInput>;\n  or?: Array<ISinisterFacturaFilterInput>;\n  facturaNumber?: IStringOperationFilterInput;\n  provider?: IStringOperationFilterInput;\n  facturaDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  import?: IComparableNullableOfDecimalOperationFilterInput;\n  iVA?: IComparableNullableOfDecimalOperationFilterInput;\n  total?: IComparableNullableOfDecimalOperationFilterInput;\n  procedent?: IComparableNullableOfDecimalOperationFilterInput;\n  observations?: IStringOperationFilterInput;\n  sinisterId?: IComparableNullableOfGuidOperationFilterInput;\n  concept?: IStringOperationFilterInput;\n  serie?: IStringOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  sinister?: ISinisterFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfSinisterLifeFilterInput {\n  all?: ISinisterLifeFilterInput;\n  none?: ISinisterLifeFilterInput;\n  some?: ISinisterLifeFilterInput;\n  any?: boolean;\n}\n\nexport interface ISinisterLifeFilterInput {\n  and?: Array<ISinisterLifeFilterInput>;\n  or?: Array<ISinisterLifeFilterInput>;\n  sinisterReason?: INullableOfEnumSinisterLifeReasonOperationFilterInput;\n  paymentType?: INullableOfEnumSinisterPaymentTypeOperationFilterInput;\n  sinisterId?: IComparableNullableOfGuidOperationFilterInput;\n  affectedName?: IStringOperationFilterInput;\n  relationAffected?: INullableOfEnumSinisterRelationOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  sinister?: ISinisterFilterInput;\n  sinisterLifes?: IListFilterInputTypeOfSinisterLifeFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumSinisterLifeReasonOperationFilterInput {\n  eq?: IEnumSinisterLifeReason;\n  neq?: IEnumSinisterLifeReason;\n  in?: Array<IEnumSinisterLifeReason | null>;\n  nin?: Array<IEnumSinisterLifeReason | null>;\n}\n\nexport const enum IEnumSinisterLifeReason {\n  NATURAL = 'NATURAL',\n  ACCIDENTAL = 'ACCIDENTAL',\n  ORGANIC_LOSSES = 'ORGANIC_LOSSES',\n  DISABILITY = 'DISABILITY',\n  FUNERALS = 'FUNERALS'\n}\n\nexport interface IListFilterInputTypeOfSinisterAccidentFilterInput {\n  all?: ISinisterAccidentFilterInput;\n  none?: ISinisterAccidentFilterInput;\n  some?: ISinisterAccidentFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerZipCodeSepomexFilterInput {\n  and?: Array<IInsurerZipCodeSepomexFilterInput>;\n  or?: Array<IInsurerZipCodeSepomexFilterInput>;\n  zipCode?: IComparableNullableOfInt32OperationFilterInput;\n  colony?: IStringOperationFilterInput;\n  city?: IStringOperationFilterInput;\n  state?: IStringOperationFilterInput;\n  code?: IStringOperationFilterInput;\n  cityId?: IStringOperationFilterInput;\n  sinisters?: IListFilterInputTypeOfSinisterFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfSinisterFilterInput {\n  all?: ISinisterFilterInput;\n  none?: ISinisterFilterInput;\n  some?: ISinisterFilterInput;\n  any?: boolean;\n}\n\nexport interface IPersonalInformationFilterInput {\n  and?: Array<IPersonalInformationFilterInput>;\n  or?: Array<IPersonalInformationFilterInput>;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  secondLastName?: IStringOperationFilterInput;\n  birthDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  sex?: IStringOperationFilterInput;\n  ownerId?: IStringOperationFilterInput;\n  fullName?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  salary?: IComparableNullableOfDecimalOperationFilterInput;\n  sumAssured?: IComparableNullableOfDecimalOperationFilterInput;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  antiquity?: IComparableNullableOfDateTimeOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  policyType?: IComparableNullableOfInt32OperationFilterInput;\n  typeSA?: INullableOfEnumSATypeOperationFilterInput;\n  certificate?: IStringOperationFilterInput;\n  comision?: IComparableNullableOfDecimalOperationFilterInput;\n  rigth?: IComparableNullableOfDecimalOperationFilterInput;\n  iVA?: IComparableNullableOfDecimalOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  pNeta?: IComparableNullableOfDecimalOperationFilterInput;\n  pTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  rPF?: IComparableNullableOfDecimalOperationFilterInput;\n  discount?: IComparableNullableOfDecimalOperationFilterInput;\n  gastosInvestigacion?: IComparableNullableOfDecimalOperationFilterInput;\n  subTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  chargeDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  comisionEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  comisionPercentEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  rigthEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  discountEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  dischargeDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  iVAEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  pNetaEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  pTotalEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  rPFEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  subTotalEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  endDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  initDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  comisionPaymentDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  exchangeRate?: IComparableNullableOfDecimalOperationFilterInput;\n  maquila?: IComparableNullableOfDecimalOperationFilterInput;\n  bonoDdate?: IComparableNullableOfDateTimeOperationFilterInput;\n  maquilaDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  facturaYear?: IComparableNullableOfInt32OperationFilterInput;\n  formAccidentDisease?: IFormAccidentDiseaseFilterInput;\n  formAutomobileDamage?: IFormAutomobileDamageFilterInput;\n  formDamage?: IFormDamageFilterInput;\n  formLife?: IFormLifeFilterInput;\n  police?: IPoliceFilterInput;\n  sinisterAccidents?: IListFilterInputTypeOfSinisterAccidentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumSATypeOperationFilterInput {\n  eq?: IEnumSAType;\n  neq?: IEnumSAType;\n  in?: Array<IEnumSAType | null>;\n  nin?: Array<IEnumSAType | null>;\n}\n\nexport const enum IEnumSAType {\n  PERMANENT = 'PERMANENT',\n  RULE_IN_MONTHS = 'RULE_IN_MONTHS',\n  ANOTHER = 'ANOTHER'\n}\n\nexport interface IFormAccidentDiseaseFilterInput {\n  and?: Array<IFormAccidentDiseaseFilterInput>;\n  or?: Array<IFormAccidentDiseaseFilterInput>;\n  diseaseType?: IComparableNullableOfInt32OperationFilterInput;\n  coinsurance?: IStringOperationFilterInput;\n  documentType?: INullableOfEnumPoliceDocumentTypeOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  personalId?: IComparableNullableOfGuidOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  personalInformation?: IPersonalInformationFilterInput;\n  police?: IPoliceFilterInput;\n  relationShips?: IListFilterInputTypeOfRelationShipFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfRelationShipFilterInput {\n  all?: IRelationShipFilterInput;\n  none?: IRelationShipFilterInput;\n  some?: IRelationShipFilterInput;\n  any?: boolean;\n}\n\nexport interface IRelationShipFilterInput {\n  and?: Array<IRelationShipFilterInput>;\n  or?: Array<IRelationShipFilterInput>;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  secondLastName?: IStringOperationFilterInput;\n  birthDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  sex?: IStringOperationFilterInput;\n  relationship?: IComparableNullableOfInt32OperationFilterInput;\n  accidentId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  fullName?: IStringOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  endorsementId?: IComparableNullableOfGuidOperationFilterInput;\n  antiquity?: IComparableNullableOfDateTimeOperationFilterInput;\n  certificate?: IStringOperationFilterInput;\n  comision?: IComparableNullableOfDecimalOperationFilterInput;\n  rigth?: IComparableNullableOfDecimalOperationFilterInput;\n  iVA?: IComparableNullableOfDecimalOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  pNeta?: IComparableNullableOfDecimalOperationFilterInput;\n  pTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  rPF?: IComparableNullableOfDecimalOperationFilterInput;\n  discount?: IComparableNullableOfDecimalOperationFilterInput;\n  gastosInvestigacion?: IComparableNullableOfDecimalOperationFilterInput;\n  subTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  chargeDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  comisionEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  comisionPercentEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  rigthEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  discountEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  dischangeDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  iVAEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  pNetaEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  pTotalEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  rPFEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  subTotalEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  comisionPaymentDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  exchangeRate?: IComparableNullableOfDecimalOperationFilterInput;\n  maquila?: IComparableNullableOfDecimalOperationFilterInput;\n  bonoDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  maquilaDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  facturaYear?: IComparableNullableOfInt32OperationFilterInput;\n  formAccidentDisease?: IFormAccidentDiseaseFilterInput;\n  endorsement?: IEndorsementFilterInput;\n  endorsementCerts?: IListFilterInputTypeOfEndorsementCertFilterInput;\n  sinisterAccidents?: IListFilterInputTypeOfSinisterAccidentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IEndorsementFilterInput {\n  and?: Array<IEndorsementFilterInput>;\n  or?: Array<IEndorsementFilterInput>;\n  type?: INullableOfEnumEntorsementTypeOperationFilterInput;\n  status?: IComparableNullableOfInt32OperationFilterInput;\n  initDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  endDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  numberEndorsement?: IStringOperationFilterInput;\n  internalNumber?: IStringOperationFilterInput;\n  concept?: IComparableNullableOfInt32OperationFilterInput;\n  otherDesc?: IStringOperationFilterInput;\n  original?: IStringOperationFilterInput;\n  change?: IStringOperationFilterInput;\n  observations?: IStringOperationFilterInput;\n  pNeta?: IComparableNullableOfDecimalOperationFilterInput;\n  rPF?: IComparableNullableOfDecimalOperationFilterInput;\n  rigth?: IComparableNullableOfDecimalOperationFilterInput;\n  iVA?: IComparableNullableOfDecimalOperationFilterInput;\n  pTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  comision?: IComparableNullableOfDecimalOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  comisionPercent?: IComparableNullableOfDecimalOperationFilterInput;\n  anuency?: IComparableNullableOfDateTimeOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  discount?: IComparableNullableOfDecimalOperationFilterInput;\n  researchCost?: IComparableNullableOfDecimalOperationFilterInput;\n  comisionPercentEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  discoutnEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  iVaEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  pNETAEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  pTotalEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  rPFEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  subTotalEarned?: IComparableNullableOfDecimalOperationFilterInput;\n  insuranceFolio?: IStringOperationFilterInput;\n  comitionPatmentDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  exchangeRate?: IComparableNullableOfDecimalOperationFilterInput;\n  maquila?: IComparableNullableOfDecimalOperationFilterInput;\n  bonoDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  variableBono?: IComparableNullableOfDecimalOperationFilterInput;\n  emisionFacturaDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  maquilaDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  folioFactura?: IStringOperationFilterInput;\n  monthFactura?: IComparableNullableOfInt32OperationFilterInput;\n  fechaEntrega?: IComparableNullableOfDateTimeOperationFilterInput;\n  police?: IPoliceFilterInput;\n  beneficiaries?: IListFilterInputTypeOfBeneficiarieFilterInput;\n  relationShips?: IListFilterInputTypeOfRelationShipFilterInput;\n  endorsementCerts?: IListFilterInputTypeOfEndorsementCertFilterInput;\n  policeReceipts?: IListFilterInputTypeOfPoliceReceiptFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumEntorsementTypeOperationFilterInput {\n  eq?: IEnumEntorsementType;\n  neq?: IEnumEntorsementType;\n  in?: Array<IEnumEntorsementType | null>;\n  nin?: Array<IEnumEntorsementType | null>;\n}\n\nexport const enum IEnumEntorsementType {\n  A = 'A',\n  B = 'B',\n  D = 'D'\n}\n\nexport interface IListFilterInputTypeOfBeneficiarieFilterInput {\n  all?: IBeneficiarieFilterInput;\n  none?: IBeneficiarieFilterInput;\n  some?: IBeneficiarieFilterInput;\n  any?: boolean;\n}\n\nexport interface IBeneficiarieFilterInput {\n  and?: Array<IBeneficiarieFilterInput>;\n  or?: Array<IBeneficiarieFilterInput>;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  secondLastName?: IStringOperationFilterInput;\n  birthDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  sex?: IStringOperationFilterInput;\n  percentage?: IComparableNullableOfDoubleOperationFilterInput;\n  optionalRelation?: IStringOperationFilterInput;\n  lifeId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  fullName?: IStringOperationFilterInput;\n  iSR?: IComparableNullableOfDecimalOperationFilterInput;\n  procedente?: IStringOperationFilterInput;\n  clause?: IStringOperationFilterInput;\n  jName?: IStringOperationFilterInput;\n  rFC?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  endorsementId?: IComparableNullableOfGuidOperationFilterInput;\n  antiquity?: IComparableNullableOfDateTimeOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  chargeDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  dishargeDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  formLife?: IFormLifeFilterInput;\n  endorsement?: IEndorsementFilterInput;\n  endorsementCerts?: IListFilterInputTypeOfEndorsementCertFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IFormLifeFilterInput {\n  and?: Array<IFormLifeFilterInput>;\n  or?: Array<IFormLifeFilterInput>;\n  smoker?: IBooleanOperationFilterInput;\n  documentType?: INullableOfEnumPoliceDocumentTypeOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  personalId?: IComparableNullableOfGuidOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  beneficiarie?: IBeneficiarieFilterInput;\n  personalInformation?: IPersonalInformationFilterInput;\n  police?: IPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfEndorsementCertFilterInput {\n  all?: IEndorsementCertFilterInput;\n  none?: IEndorsementCertFilterInput;\n  some?: IEndorsementCertFilterInput;\n  any?: boolean;\n}\n\nexport interface IEndorsementCertFilterInput {\n  and?: Array<IEndorsementCertFilterInput>;\n  or?: Array<IEndorsementCertFilterInput>;\n  proceed?: IBooleanOperationFilterInput;\n  certificate?: IStringOperationFilterInput;\n  endorsementId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  beneficiarieId?: IComparableNullableOfGuidOperationFilterInput;\n  relationShipId?: IComparableNullableOfGuidOperationFilterInput;\n  endorsement?: IEndorsementFilterInput;\n  beneficiarie?: IBeneficiarieFilterInput;\n  relationShip?: IRelationShipFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPoliceReceiptFilterInput {\n  all?: IPoliceReceiptFilterInput;\n  none?: IPoliceReceiptFilterInput;\n  some?: IPoliceReceiptFilterInput;\n  any?: boolean;\n}\n\nexport interface IPoliceReceiptFilterInput {\n  and?: Array<IPoliceReceiptFilterInput>;\n  or?: Array<IPoliceReceiptFilterInput>;\n  number?: IComparableNullableOfInt32OperationFilterInput;\n  primaNeta?: IComparableNullableOfDecimalOperationFilterInput;\n  rPF?: IComparableNullableOfDecimalOperationFilterInput;\n  right?: IComparableNullableOfDecimalOperationFilterInput;\n  iVA?: IComparableNullableOfDecimalOperationFilterInput;\n  subTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  primaTotal?: IComparableNullableOfDecimalOperationFilterInput;\n  status?: INullableOfEnumPoliceReceiptStatusOperationFilterInput;\n  startDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  endDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  folio?: IStringOperationFilterInput;\n  type?: INullableOfEnumPoliceReceiptTypeOperationFilterInput;\n  payForm?: IComparableNullableOfInt32OperationFilterInput;\n  paymentDocument?: IStringOperationFilterInput;\n  isCopy?: IBooleanOperationFilterInput;\n  isActive?: IBooleanOperationFilterInput;\n  bank?: INullableOfEnumBankOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  comision?: IComparableNullableOfDecimalOperationFilterInput;\n  validityDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  reconciledComision?: IStringOperationFilterInput;\n  reconciledDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  reconciledObservation?: IStringOperationFilterInput;\n  settlementFolio?: IStringOperationFilterInput;\n  reconciledFolio?: IStringOperationFilterInput;\n  settlementDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  reconcilationAccountId?: IComparableNullableOfGuidOperationFilterInput;\n  paymentDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  endorsementId?: IComparableNullableOfGuidOperationFilterInput;\n  delivered?: IBooleanOperationFilterInput;\n  paymentFolio?: IStringOperationFilterInput;\n  settlementBank?: INullableOfEnumBankOperationFilterInput;\n  settlementCurrRate?: IComparableNullableOfInt32OperationFilterInput;\n  settlementDoc?: IStringOperationFilterInput;\n  settlementForm?: IComparableNullableOfInt32OperationFilterInput;\n  excedent?: IComparableNullableOfDecimalOperationFilterInput;\n  agentProviderBonoId?: IComparableNullableOfGuidOperationFilterInput;\n  changeReferrerComision?: IBooleanOperationFilterInput;\n  referrerComosion?: IComparableNullableOfDecimalOperationFilterInput;\n  binnacleTrack?: IBooleanOperationFilterInput;\n  emailTrack?: IBooleanOperationFilterInput;\n  phoneTrack?: IBooleanOperationFilterInput;\n  referrerClosedNew?: INullableOfEnumReferrerClosedOperationFilterInput;\n  memberPaymentId?: IComparableNullableOfGuidOperationFilterInput;\n  paymentPromise?: IComparableNullableOfDateTimeOperationFilterInput;\n  researchCost?: IComparableNullableOfDecimalOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  conductPayment?: INullableOfEnumConductChoiseOperationFilterInput;\n  exchangeRate?: IComparableNullableOfDecimalOperationFilterInput;\n  manualSerie?: IComparableNullableOfInt32OperationFilterInput;\n  settlementMethod?: IStringOperationFilterInput;\n  memberSettlementId?: IComparableNullableOfInt32OperationFilterInput;\n  police?: IPoliceFilterInput;\n  endorsement?: IEndorsementFilterInput;\n  policeReceiptAccount?: IPoliceReceiptAccountFilterInput;\n  agentProviderbono?: IAgentProviderBonoFilterInput;\n  policeReceiptAccountStates?: IListFilterInputTypeOfPoliceReceiptAccountStateFilterInput;\n  policeReceiptPayments?: IListFilterInputTypeOfPoliceReceiptPaymentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumPoliceReceiptStatusOperationFilterInput {\n  eq?: IEnumPoliceReceiptStatus;\n  neq?: IEnumPoliceReceiptStatus;\n  in?: Array<IEnumPoliceReceiptStatus | null>;\n  nin?: Array<IEnumPoliceReceiptStatus | null>;\n}\n\nexport const enum IEnumPoliceReceiptStatus {\n  PAID = 'PAID',\n  CANCELED = 'CANCELED',\n  EXTENDED = 'EXTENDED',\n  PAY_PENDING = 'PAY_PENDING',\n  LIQUIDATE = 'LIQUIDATE',\n  RECONCILED = 'RECONCILED',\n  CLOSED = 'CLOSED',\n  DISABLED = 'DISABLED',\n  PRECANCELED = 'PRECANCELED',\n  PRTIAL_PAYMENT = 'PRTIAL_PAYMENT',\n  PRE_CANCELED = 'PRE_CANCELED'\n}\n\nexport interface INullableOfEnumPoliceReceiptTypeOperationFilterInput {\n  eq?: IEnumPoliceReceiptType;\n  neq?: IEnumPoliceReceiptType;\n  in?: Array<IEnumPoliceReceiptType | null>;\n  nin?: Array<IEnumPoliceReceiptType | null>;\n}\n\nexport const enum IEnumPoliceReceiptType {\n  POLICY = 'POLICY',\n  A_ENDORSEMENT = 'A_ENDORSEMENT',\n  D_ENDORSEMENT_CREDIT_NOTE = 'D_ENDORSEMENT_CREDIT_NOTE',\n  BOND = 'BOND',\n  CERTIFICATE = 'CERTIFICATE'\n}\n\nexport interface INullableOfEnumBankOperationFilterInput {\n  eq?: IEnumBank;\n  neq?: IEnumBank;\n  in?: Array<IEnumBank | null>;\n  nin?: Array<IEnumBank | null>;\n}\n\nexport const enum IEnumBank {\n  ABC_CAPITAL = 'ABC_CAPITAL',\n  ACCIVAL = 'ACCIVAL',\n  ACTINVER = 'ACTINVER',\n  AFIRME = 'AFIRME',\n  AKALA = 'AKALA',\n  AMERICAN_EXPRESS = 'AMERICAN_EXPRESS',\n  AUTOFIN = 'AUTOFIN',\n  AXA = 'AXA',\n  AZTECA = 'AZTECA',\n  BAJIO = 'BAJIO',\n  BAMSA = 'BAMSA',\n  BANCO_FAMSA = 'BANCO_FAMSA',\n  BANCO_INBURSA = 'BANCO_INBURSA',\n  BANCOMEXT = 'BANCOMEXT',\n  BANCOPPEL = 'BANCOPPEL',\n  BANJERCITO = 'BANJERCITO',\n  BANK_OF_AMERICA = 'BANK_OF_AMERICA',\n  BANOBRAS = 'BANOBRAS',\n  BANORTE = 'BANORTE',\n  BANREGIO = 'BANREGIO',\n  BANSEFI = 'BANSEFI',\n  BANSI = 'BANSI',\n  BARCLAYS = 'BARCLAYS',\n  B_AND_B = 'B_AND_B',\n  BBASE = 'BBASE',\n  BBVA = 'BBVA',\n  BITAL = 'BITAL',\n  BMONEX = 'BMONEX',\n  BMULTIVA = 'BMULTIVA',\n  BULLTICK_CB = 'BULLTICK_CB',\n  BX = 'BX',\n  BXM = 'BXM',\n  CA = 'CA',\n  CB_ACTINVER = 'CB_ACTINVER',\n  CBDEUTSCHE = 'CBDEUTSCHE',\n  CB_INTERCAM = 'CB_INTERCAM',\n  CB_JPMORGAN = 'CB_JPMORGAN',\n  CIBANCO = 'CIBANCO',\n  CI_BOLSA = 'CI_BOLSA',\n  CITI_BANAMEX = 'CITI_BANAMEX',\n  CLS = 'CLS',\n  COMPARTAMOS = 'COMPARTAMOS',\n  CONSUBANCO = 'CONSUBANCO',\n  CREDIT_SUISSE = 'CREDIT_SUISSE',\n  DEUTSCHE = 'DEUTSCHE',\n  DS = 'DS',\n  CASH = 'CASH',\n  ESTRUCTURADORES = 'ESTRUCTURADORES',\n  EVERCORE = 'EVERCORE',\n  FAMSA = 'FAMSA',\n  FIESTA_REWARDS_PLATINUM = 'FIESTA_REWARDS_PLATINUM',\n  FINAMEX = 'FINAMEX',\n  FINCOMUN = 'FINCOMUN',\n  GBM = 'GBM',\n  HDI_SEGUROS = 'HDI_SEGUROS',\n  HIPOTECARIAFEDERAL = 'HIPOTECARIAFEDERAL',\n  HSBC = 'HSBC',\n  INBURSA = 'INBURSA',\n  INDEVAL = 'INDEVAL',\n  ING = 'ING',\n  INTERACCIONES = 'INTERACCIONES',\n  INTERBANCO = 'INTERBANCO',\n  INTERNATIONAL_BANK_OF_COMERCE = 'INTERNATIONAL_BANK_OF_COMERCE',\n  INVERLAT = 'INVERLAT',\n  INVEX = 'INVEX',\n  IXE = 'IXE',\n  JP_MORGAN = 'JP_MORGAN',\n  KUSPIT = 'KUSPIT',\n  LAREDO_NATIONAL_BANK = 'LAREDO_NATIONAL_BANK',\n  LB = 'LB',\n  LIBERTAD = 'LIBERTAD',\n  LIVERPOOL = 'LIVERPOOL',\n  MAPFRE = 'MAPFRE',\n  MASARI = 'MASARI',\n  MASTER_CARD = 'MASTER_CARD',\n  MERRILL_LYNCH = 'MERRILL_LYNCH',\n  MSI = 'MSI',\n  MIFEL = 'MIFEL',\n  MONEXCB = 'MONEXCB',\n  NAFIN = 'NAFIN',\n  OACTIN = 'OACTIN',\n  OPCIONES_EMPRESARIALES_DEL_NOROESTE = 'OPCIONES_EMPRESARIALES_DEL_NOROESTE',\n  ORDER = 'ORDER',\n  OTROS = 'OTROS',\n  PROFUTURO = 'PROFUTURO',\n  REFORMA = 'REFORMA',\n  SANTANDER = 'SANTANDER',\n  SCOTIABANK = 'SCOTIABANK',\n  SEGMTY = 'SEGMTY',\n  SKANDIA = 'SKANDIA',\n  SOFIEXPRESS = 'SOFIEXPRESS',\n  STERLING = 'STERLING',\n  STP = 'STP',\n  SU_CASITA = 'SU_CASITA',\n  TC = 'TC',\n  TELECOMM = 'TELECOMM',\n  THE_ROYAL_BANK = 'THE_ROYAL_BANK',\n  TIBER = 'TIBER',\n  TOKYO = 'TOKYO',\n  TRANSFER = 'TRANSFER',\n  UBS_BANK = 'UBS_BANK',\n  UNAGRA = 'UNAGRA',\n  UNICA = 'UNICA',\n  VALMEX = 'VALMEX',\n  VALUE = 'VALUE',\n  VECTOR = 'VECTOR',\n  VE_POR_MAS = 'VE_POR_MAS',\n  VISA = 'VISA',\n  VOLKSWAGEN = 'VOLKSWAGEN',\n  WAL_MART = 'WAL_MART',\n  ZURICH = 'ZURICH'\n}\n\nexport interface INullableOfEnumReferrerClosedOperationFilterInput {\n  eq?: IEnumReferrerClosed;\n  neq?: IEnumReferrerClosed;\n  in?: Array<IEnumReferrerClosed | null>;\n  nin?: Array<IEnumReferrerClosed | null>;\n}\n\nexport const enum IEnumReferrerClosed {\n  NON_PAYMENT = 'NON_PAYMENT',\n  IN_ACCOUNT = 'IN_ACCOUNT',\n  CLOSED = 'CLOSED'\n}\n\nexport interface IPoliceReceiptAccountFilterInput {\n  and?: Array<IPoliceReceiptAccountFilterInput>;\n  or?: Array<IPoliceReceiptAccountFilterInput>;\n  name?: IStringOperationFilterInput;\n  account?: IStringOperationFilterInput;\n  observations?: IStringOperationFilterInput;\n  bank?: INullableOfEnumBankOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  policeReceiptAccountStates?: IListFilterInputTypeOfPoliceReceiptAccountStateFilterInput;\n  policeReceipts?: IListFilterInputTypeOfPoliceReceiptFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPoliceReceiptAccountStateFilterInput {\n  all?: IPoliceReceiptAccountStateFilterInput;\n  none?: IPoliceReceiptAccountStateFilterInput;\n  some?: IPoliceReceiptAccountStateFilterInput;\n  any?: boolean;\n}\n\nexport interface IPoliceReceiptAccountStateFilterInput {\n  and?: Array<IPoliceReceiptAccountStateFilterInput>;\n  or?: Array<IPoliceReceiptAccountStateFilterInput>;\n  policeReceiptAccountId?: IComparableNullableOfGuidOperationFilterInput;\n  policeReceiptId?: IComparableNullableOfGuidOperationFilterInput;\n  policeReceipt?: IPoliceReceiptFilterInput;\n  policeReceiptAccount?: IPoliceReceiptAccountFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPoliceReceiptPaymentFilterInput {\n  all?: IPoliceReceiptPaymentFilterInput;\n  none?: IPoliceReceiptPaymentFilterInput;\n  some?: IPoliceReceiptPaymentFilterInput;\n  any?: boolean;\n}\n\nexport interface IPoliceReceiptPaymentFilterInput {\n  and?: Array<IPoliceReceiptPaymentFilterInput>;\n  or?: Array<IPoliceReceiptPaymentFilterInput>;\n  paymentMethod?: INullableOfEnumPoliceReceiptPaymentMethodOperationFilterInput;\n  paymentDocument?: IStringOperationFilterInput;\n  amount?: IComparableNullableOfDecimalOperationFilterInput;\n  paymentDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  policeReceiptId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  policeReceipt?: IPoliceReceiptFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumPoliceReceiptPaymentMethodOperationFilterInput {\n  eq?: IEnumPoliceReceiptPaymentMethod;\n  neq?: IEnumPoliceReceiptPaymentMethod;\n  in?: Array<IEnumPoliceReceiptPaymentMethod | null>;\n  nin?: Array<IEnumPoliceReceiptPaymentMethod | null>;\n}\n\nexport const enum IEnumPoliceReceiptPaymentMethod {\n  UNKNOWN = 'UNKNOWN',\n  CHECK = 'CHECK',\n  CASH = 'CASH',\n  TRANSFER = 'TRANSFER',\n  CREDIT_NOTE = 'CREDIT_NOTE',\n  DEPOSIT_PRIMA = 'DEPOSIT_PRIMA',\n  BANK_DEPOSIT = 'BANK_DEPOSIT',\n  CREDIT_CARD = 'CREDIT_CARD',\n  DEBIT_CARD = 'DEBIT_CARD',\n  ACCOUNT_STATUS = 'ACCOUNT_STATUS',\n  COMPANY = 'COMPANY'\n}\n\nexport interface IFormAutomobileDamageFilterInput {\n  and?: Array<IFormAutomobileDamageFilterInput>;\n  or?: Array<IFormAutomobileDamageFilterInput>;\n  brand?: IStringOperationFilterInput;\n  model?: IStringOperationFilterInput;\n  year?: IComparableNullableOfInt32OperationFilterInput;\n  version?: IStringOperationFilterInput;\n  serial?: IStringOperationFilterInput;\n  engine?: IStringOperationFilterInput;\n  color?: IStringOperationFilterInput;\n  licensePlates?: IStringOperationFilterInput;\n  documentType?: INullableOfEnumPoliceDocumentTypeOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  usage?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  beneficiaryAddress?: IStringOperationFilterInput;\n  beneficiaryName?: IStringOperationFilterInput;\n  beneficiaryRFC?: IStringOperationFilterInput;\n  adjusment?: IStringOperationFilterInput;\n  drive?: IStringOperationFilterInput;\n  montAdjustment?: IStringOperationFilterInput;\n  montSpecialTeam?: IStringOperationFilterInput;\n  specialTeam?: IStringOperationFilterInput;\n  service?: IStringOperationFilterInput;\n  policyType?: INullableOfEnumAutoTypeOperationFilterInput;\n  chargeType?: INullableOfEnumChargeTypeOperationFilterInput;\n  procedencia?: INullableOfEnumProcedentOperationFilterInput;\n  personalId?: IComparableNullableOfGuidOperationFilterInput;\n  preferencialBeneficiary?: IStringOperationFilterInput;\n  sumInsured?: IStringOperationFilterInput;\n  carOwner?: IStringOperationFilterInput;\n  noEmployee?: IStringOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  personalInformation?: IPersonalInformationFilterInput;\n  police?: IPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumAutoTypeOperationFilterInput {\n  eq?: IEnumAutoType;\n  neq?: IEnumAutoType;\n  in?: Array<IEnumAutoType | null>;\n  nin?: Array<IEnumAutoType | null>;\n}\n\nexport const enum IEnumAutoType {\n  CAR = 'CAR',\n  MOTORCYCLE = 'MOTORCYCLE',\n  TRACT = 'TRACT',\n  BUS = 'BUS',\n  PICK_UP = 'PICK_UP',\n  TRUCK_1_5_TON = 'TRUCK_1_5_TON',\n  DRIVER_APP = 'DRIVER_APP',\n  TRAILER = 'TRAILER',\n  TRUCK_PLUS_1_5_TON = 'TRUCK_PLUS_1_5_TON'\n}\n\nexport interface INullableOfEnumChargeTypeOperationFilterInput {\n  eq?: IEnumChargeType;\n  neq?: IEnumChargeType;\n  in?: Array<IEnumChargeType | null>;\n  nin?: Array<IEnumChargeType | null>;\n}\n\nexport const enum IEnumChargeType {\n  A = 'A',\n  B = 'B',\n  C = 'C',\n  UNKNOWN = 'UNKNOWN'\n}\n\nexport interface INullableOfEnumProcedentOperationFilterInput {\n  eq?: IEnumProcedent;\n  neq?: IEnumProcedent;\n  in?: Array<IEnumProcedent | null>;\n  nin?: Array<IEnumProcedent | null>;\n}\n\nexport const enum IEnumProcedent {\n  RESICENCE = 'RESICENCE',\n  TOURIST = 'TOURIST',\n  LEGALIZED = 'LEGALIZED',\n  FRONTIER = 'FRONTIER',\n  UNSPECIFIED = 'UNSPECIFIED'\n}\n\nexport interface IFormDamageFilterInput {\n  and?: Array<IFormDamageFilterInput>;\n  or?: Array<IFormDamageFilterInput>;\n  damageType?: INullableOfEnumFormDamageTypeOperationFilterInput;\n  insuredItem?: IStringOperationFilterInput;\n  itemAddress?: IStringOperationFilterInput;\n  itemDetails?: IStringOperationFilterInput;\n  coinsurance?: IStringOperationFilterInput;\n  documentType?: INullableOfEnumPoliceDocumentTypeOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  personalId?: IComparableNullableOfGuidOperationFilterInput;\n  brand?: IStringOperationFilterInput;\n  color?: IStringOperationFilterInput;\n  constructionYear?: IComparableNullableOfInt32OperationFilterInput;\n  damOwner?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  engine?: IStringOperationFilterInput;\n  fHMZone?: IStringOperationFilterInput;\n  girp?: IStringOperationFilterInput;\n  matricula?: IStringOperationFilterInput;\n  model?: IStringOperationFilterInput;\n  noEmployee?: IStringOperationFilterInput;\n  noLevels?: IComparableNullableOfInt32OperationFilterInput;\n  permiso?: IStringOperationFilterInput;\n  purchaseValue?: IStringOperationFilterInput;\n  reconstructionYear?: IComparableNullableOfInt32OperationFilterInput;\n  serial?: IStringOperationFilterInput;\n  sucursal?: IStringOperationFilterInput;\n  tYEVZone?: IStringOperationFilterInput;\n  typeConstruction?: INullableOfEnumConstructionTypeOperationFilterInput;\n  usage?: IStringOperationFilterInput;\n  version?: IStringOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  personalInformation?: IPersonalInformationFilterInput;\n  police?: IPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumFormDamageTypeOperationFilterInput {\n  eq?: IEnumFormDamageType;\n  neq?: IEnumFormDamageType;\n  in?: Array<IEnumFormDamageType | null>;\n  nin?: Array<IEnumFormDamageType | null>;\n}\n\nexport const enum IEnumFormDamageType {\n  N_A = 'N_A',\n  ANOTHER = 'ANOTHER',\n  FAMILIAR = 'FAMILIAR',\n  HOUSE_ROOM = 'HOUSE_ROOM',\n  CONDOMINIUM = 'CONDOMINIUM',\n  BUILDING = 'BUILDING',\n  MULTIPLE_BUSSINESS = 'MULTIPLE_BUSSINESS',\n  ONLY_FIRE = 'ONLY_FIRE',\n  PLANE = 'PLANE',\n  SHIP = 'SHIP',\n  STATEMENT = 'STATEMENT',\n  DRONE = 'DRONE',\n  PLEASURE_BOATS = 'PLEASURE_BOATS',\n  SPECIFY = 'SPECIFY',\n  HELICOPTER = 'HELICOPTER',\n  PROGNOSIS = 'PROGNOSIS',\n  ANIMALS = 'ANIMALS',\n  CROPS = 'CROPS',\n  GENERAL_CREDIT = 'GENERAL_CREDIT',\n  HOME_CREDIT = 'HOME_CREDIT',\n  DOCUMENTOS_QUE_SEAN_OBJETO_DE_OFERTA_PUBLICA_O_DE_INTERMEDIACION_EN_MERCADOS_DE_VALORES = 'DOCUMENTOS_QUE_SEAN_OBJETO_DE_OFERTA_PUBLICA_O_DE_INTERMEDIACION_EN_MERCADOS_DE_VALORES',\n  SECURITIES_EMISSIONS = 'SECURITIES_EMISSIONS',\n  CREDIT_TITLES = 'CREDIT_TITLES',\n  ADMINISTRATION = 'ADMINISTRATION',\n  ARCHITECTS = 'ARCHITECTS',\n  CONTRACTOR = 'CONTRACTOR',\n  CRIME = 'CRIME',\n  ATOS = 'ATOS',\n  OFFICERS = 'OFFICERS',\n  MISCELLANEOUS_E_AND_O = 'MISCELLANEOUS_E_AND_O',\n  BUSSINESS = 'BUSSINESS',\n  EVENT = 'EVENT',\n  FAMILIAR_AND_CONDOMINIUM = 'FAMILIAR_AND_CONDOMINIUM',\n  HOLE_IN_ONE = 'HOLE_IN_ONE',\n  ENGINEERING = 'ENGINEERING',\n  FINANCIAL_INSTITUTIONS = 'FINANCIAL_INSTITUTIONS',\n  FINANCIAL_LINES = 'FINANCIAL_LINES',\n  DOCTORS = 'DOCTORS',\n  CATASTRHOPHIC_RISKS = 'CATASTRHOPHIC_RISKS',\n  BOILERS_AND_PRESSURE_VESSELS = 'BOILERS_AND_PRESSURE_VESSELS',\n  MONEY_AND_VALUES = 'MONEY_AND_VALUES',\n  EQ_CONTRACTORS_AND_HEAVY_MACHINE = 'EQ_CONTRACTORS_AND_HEAVY_MACHINE',\n  EQ_ELLECTRONIC = 'EQ_ELLECTRONIC',\n  MACHINERY_ASSEMBLY = 'MACHINERY_ASSEMBLY',\n  CIVIL_WORKS_UNDER_CONSTRUCCION = 'CIVIL_WORKS_UNDER_CONSTRUCCION',\n  FINISHED_CIVIL_WORKS = 'FINISHED_CIVIL_WORKS',\n  GLASS_BREAK = 'GLASS_BREAK',\n  MACHINERY_BREAK = 'MACHINERY_BREAK',\n  CRIME_OR_BBB = 'CRIME_OR_BBB',\n  D_AND_O = 'D_AND_O',\n  FIPI = 'FIPI',\n  CYBER = 'CYBER',\n  VCAPS = 'VCAPS',\n  MEDICAL_RCP = 'MEDICAL_RCP',\n  POLITICAL_RISK = 'POLITICAL_RISK',\n  RC_PUBLIC_SERVERS = 'RC_PUBLIC_SERVERS',\n  RCP = 'RCP'\n}\n\nexport interface INullableOfEnumConstructionTypeOperationFilterInput {\n  eq?: IEnumConstructionType;\n  neq?: IEnumConstructionType;\n  in?: Array<IEnumConstructionType | null>;\n  nin?: Array<IEnumConstructionType | null>;\n}\n\nexport const enum IEnumConstructionType {\n  SOLID = 'SOLID',\n  WOOD = 'WOOD',\n  LEAF = 'LEAF',\n  ANOTHER = 'ANOTHER'\n}\n\nexport interface ISinisterAilingFilterInput {\n  and?: Array<ISinisterAilingFilterInput>;\n  or?: Array<ISinisterAilingFilterInput>;\n  code?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  sinisterAccidents?: IListFilterInputTypeOfSinisterAccidentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IContractorGroupingLevelFilterInput {\n  and?: Array<IContractorGroupingLevelFilterInput>;\n  or?: Array<IContractorGroupingLevelFilterInput>;\n  levelGrouping?: IComparableInt32OperationFilterInput;\n  description?: IStringOperationFilterInput;\n  ownerId?: IComparableGuidOperationFilterInput;\n  parentId?: IComparableNullableOfGuidOperationFilterInput;\n  responsableId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  groupingType?: INullableOfEnumContractorGroupingTypeOperationFilterInput;\n  contractors?: IListFilterInputTypeOfContractorFilterInput;\n  parent?: IContractorGroupingLevelFilterInput;\n  contractorGroupingLevels?: IListFilterInputTypeOfContractorGroupingLevelFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumContractorGroupingTypeOperationFilterInput {\n  eq?: IEnumContractorGroupingType;\n  neq?: IEnumContractorGroupingType;\n  in?: Array<IEnumContractorGroupingType | null>;\n  nin?: Array<IEnumContractorGroupingType | null>;\n}\n\nexport const enum IEnumContractorGroupingType {\n  ENTERPRISE = 'ENTERPRISE',\n  COLLEGE = 'COLLEGE',\n  INDIVIDUAL = 'INDIVIDUAL'\n}\n\nexport interface IListFilterInputTypeOfContractorGroupingLevelFilterInput {\n  all?: IContractorGroupingLevelFilterInput;\n  none?: IContractorGroupingLevelFilterInput;\n  some?: IContractorGroupingLevelFilterInput;\n  any?: boolean;\n}\n\nexport interface IContractorCelulaFilterInput {\n  and?: Array<IContractorCelulaFilterInput>;\n  or?: Array<IContractorCelulaFilterInput>;\n  celulaName?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  contractors?: IListFilterInputTypeOfContractorFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IReferrerFilterInput {\n  and?: Array<IReferrerFilterInput>;\n  or?: Array<IReferrerFilterInput>;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  hiredDate?: IComparableDateTimeOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  address?: IStringOperationFilterInput;\n  operationFactures?: IStringOperationFilterInput;\n  paymentType?: INullableOfEnumReferrerPaymentTypeOperationFilterInput;\n  paymentFrequency?: INullableOfEnumReferrerFrequencyOperationFilterInput;\n  referenceNumber?: IStringOperationFilterInput;\n  bank?: INullableOfEnumBankOperationFilterInput;\n  phones?: IListStringOperationFilterInput;\n  referrerAccountStates?: IListFilterInputTypeOfReferrerAccountStateFilterInput;\n  referrerBranches?: IListFilterInputTypeOfReferrerBranchFilterInput;\n  contractors?: IListFilterInputTypeOfContractorFilterInput;\n  involvedReferrer?: IInvolvedReferrerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumReferrerPaymentTypeOperationFilterInput {\n  eq?: IEnumReferrerPaymentType;\n  neq?: IEnumReferrerPaymentType;\n  in?: Array<IEnumReferrerPaymentType | null>;\n  nin?: Array<IEnumReferrerPaymentType | null>;\n}\n\nexport const enum IEnumReferrerPaymentType {\n  CLABE = 'CLABE',\n  ACCOUNT_NUMBER = 'ACCOUNT_NUMBER',\n  CARD_NUMBER = 'CARD_NUMBER',\n  CASH = 'CASH'\n}\n\nexport interface INullableOfEnumReferrerFrequencyOperationFilterInput {\n  eq?: IEnumReferrerFrequency;\n  neq?: IEnumReferrerFrequency;\n  in?: Array<IEnumReferrerFrequency | null>;\n  nin?: Array<IEnumReferrerFrequency | null>;\n}\n\nexport const enum IEnumReferrerFrequency {\n  WEEKLY = 'WEEKLY',\n  FORTNIGHTLY = 'FORTNIGHTLY',\n  MONTHLY = 'MONTHLY'\n}\n\nexport interface IListFilterInputTypeOfReferrerAccountStateFilterInput {\n  all?: IReferrerAccountStateFilterInput;\n  none?: IReferrerAccountStateFilterInput;\n  some?: IReferrerAccountStateFilterInput;\n  any?: boolean;\n}\n\nexport interface IReferrerAccountStateFilterInput {\n  and?: Array<IReferrerAccountStateFilterInput>;\n  or?: Array<IReferrerAccountStateFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  folio?: IStringOperationFilterInput;\n  total?: IComparableNullableOfDecimalOperationFilterInput;\n  printDate?: IComparableDateTimeOperationFilterInput;\n  status?: INullableOfEnumReferrerAccountStateOperationFilterInput;\n  transactionNumber?: IStringOperationFilterInput;\n  reasonReject?: IStringOperationFilterInput;\n  observation?: IStringOperationFilterInput;\n  referrerId?: IComparableGuidOperationFilterInput;\n  referrer?: IReferrerFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumReferrerAccountStateOperationFilterInput {\n  eq?: IEnumReferrerAccountState;\n  neq?: IEnumReferrerAccountState;\n  in?: Array<IEnumReferrerAccountState | null>;\n  nin?: Array<IEnumReferrerAccountState | null>;\n}\n\nexport const enum IEnumReferrerAccountState {\n  PRE_APPROVED = 'PRE_APPROVED',\n  CLOSED = 'CLOSED',\n  REJECTED = 'REJECTED'\n}\n\nexport interface IListFilterInputTypeOfReferrerBranchFilterInput {\n  all?: IReferrerBranchFilterInput;\n  none?: IReferrerBranchFilterInput;\n  some?: IReferrerBranchFilterInput;\n  any?: boolean;\n}\n\nexport interface IReferrerBranchFilterInput {\n  and?: Array<IReferrerBranchFilterInput>;\n  or?: Array<IReferrerBranchFilterInput>;\n  projectAgentProviderId?: IComparableGuidOperationFilterInput;\n  projectAgentProviderBranchId?: IComparableGuidOperationFilterInput;\n  referrerId?: IComparableGuidOperationFilterInput;\n  comition?: IComparableNullableOfDecimalOperationFilterInput;\n  referrer?: IReferrerFilterInput;\n  projectAgentProvider?: IProjectAgentProviderFilterInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInvolvedReferrerFilterInput {\n  and?: Array<IInvolvedReferrerFilterInput>;\n  or?: Array<IInvolvedReferrerFilterInput>;\n  comisionVendedor?: IComparableNullableOfDecimalOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  referrerId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  referrer?: IReferrerFilterInput;\n  police?: IPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfContractorProcessDocumentFilterInput {\n  all?: IContractorProcessDocumentFilterInput;\n  none?: IContractorProcessDocumentFilterInput;\n  some?: IContractorProcessDocumentFilterInput;\n  any?: boolean;\n}\n\nexport interface IContractorProcessDocumentFilterInput {\n  and?: Array<IContractorProcessDocumentFilterInput>;\n  or?: Array<IContractorProcessDocumentFilterInput>;\n  delivered?: IBooleanOperationFilterInput;\n  validated?: IBooleanOperationFilterInput;\n  processDocumentId?: IComparableGuidOperationFilterInput;\n  contractorId?: IComparableGuidOperationFilterInput;\n  contractor?: Isaam_ContractorFilterInput;\n  processDocument?: IProcessDocumentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProcessDocumentFilterInput {\n  and?: Array<IProcessDocumentFilterInput>;\n  or?: Array<IProcessDocumentFilterInput>;\n  name?: IStringOperationFilterInput;\n  slug?: IStringOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  typeAgentProvider?: IListTypeAgentProviderOperationFilterInput;\n  contractorProcessDocuments?: IListFilterInputTypeOfContractorProcessDocumentFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfPoliceQuoteFilterInput {\n  all?: IPoliceQuoteFilterInput;\n  none?: IPoliceQuoteFilterInput;\n  some?: IPoliceQuoteFilterInput;\n  any?: boolean;\n}\n\nexport interface IPoliceQuoteFilterInput {\n  and?: Array<IPoliceQuoteFilterInput>;\n  or?: Array<IPoliceQuoteFilterInput>;\n  projectAgentProviderBranchId?: IComparableNullableOfGuidOperationFilterInput;\n  ramoCode?: IStringOperationFilterInput;\n  subRamoCode?: IStringOperationFilterInput;\n  status?: INullableOfEnumPoliceQuoteStatusOperationFilterInput;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  secondLastName?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  car?: IStringOperationFilterInput;\n  observations?: IStringOperationFilterInput;\n  accidents?: IStringOperationFilterInput;\n  damages?: IStringOperationFilterInput;\n  life?: IStringOperationFilterInput;\n  isComplete?: IBooleanOperationFilterInput;\n  type?: IStringOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  mainParent?: IComparableInt32OperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  prospectId?: IComparableNullableOfGuidOperationFilterInput;\n  agentProviders?: IListComparableGuidOperationFilterInput;\n  selectedAgentProvider?: IListComparableGuidOperationFilterInput;\n  contractorId?: IComparableNullableOfGuidOperationFilterInput;\n  contractor?: Isaam_ContractorFilterInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchFilterInput;\n  policeQuotePrimas?: IListFilterInputTypeOfPoliceQuotePrimaFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumPoliceQuoteStatusOperationFilterInput {\n  eq?: IEnumPoliceQuoteStatus;\n  neq?: IEnumPoliceQuoteStatus;\n  in?: Array<IEnumPoliceQuoteStatus | null>;\n  nin?: Array<IEnumPoliceQuoteStatus | null>;\n}\n\nexport const enum IEnumPoliceQuoteStatus {\n  DISABLED = 'DISABLED',\n  IN_PROCESS = 'IN_PROCESS',\n  EMITTED = 'EMITTED',\n  BATTED = 'BATTED'\n}\n\nexport interface IListFilterInputTypeOfPoliceQuotePrimaFilterInput {\n  all?: IPoliceQuotePrimaFilterInput;\n  none?: IPoliceQuotePrimaFilterInput;\n  some?: IPoliceQuotePrimaFilterInput;\n  any?: boolean;\n}\n\nexport interface IPoliceQuotePrimaFilterInput {\n  and?: Array<IPoliceQuotePrimaFilterInput>;\n  or?: Array<IPoliceQuotePrimaFilterInput>;\n  aseguradora?: IStringOperationFilterInput;\n  prima?: IStringOperationFilterInput;\n  checked?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  policeQuoteId?: IComparableGuidOperationFilterInput;\n  policeQuote?: IPoliceQuoteFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPoliceAssignFilterInput {\n  and?: Array<IPoliceAssignFilterInput>;\n  or?: Array<IPoliceAssignFilterInput>;\n  isOwner?: IBooleanOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  policeId?: IComparableGuidOperationFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  police?: IPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPolicePendientFilterInput {\n  and?: Array<IPolicePendientFilterInput>;\n  or?: Array<IPolicePendientFilterInput>;\n  email?: IStringOperationFilterInput;\n  isOwner?: IBooleanOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  policeId?: IComparableGuidOperationFilterInput;\n  police?: IPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfOldPoliceFilterInput {\n  all?: IOldPoliceFilterInput;\n  none?: IOldPoliceFilterInput;\n  some?: IOldPoliceFilterInput;\n  any?: boolean;\n}\n\nexport interface IOldPoliceFilterInput {\n  and?: Array<IOldPoliceFilterInput>;\n  or?: Array<IOldPoliceFilterInput>;\n  basePolicyId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  newPolicyId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  basePolice?: IPoliceFilterInput;\n  newPolice?: IPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCoverageInPolicyFilterInput {\n  all?: ICoverageInPolicyFilterInput;\n  none?: ICoverageInPolicyFilterInput;\n  some?: ICoverageInPolicyFilterInput;\n  any?: boolean;\n}\n\nexport interface ICoverageInPolicyFilterInput {\n  and?: Array<ICoverageInPolicyFilterInput>;\n  or?: Array<ICoverageInPolicyFilterInput>;\n  name?: IStringOperationFilterInput;\n  sumInsured?: IStringOperationFilterInput;\n  deductible?: IStringOperationFilterInput;\n  prima?: IStringOperationFilterInput;\n  coinsurance?: IStringOperationFilterInput;\n  topecoinsurance?: IStringOperationFilterInput;\n  priority?: IComparableNullableOfInt32OperationFilterInput;\n  ownerId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  policyId?: IComparableGuidOperationFilterInput;\n  packageId?: IComparableGuidOperationFilterInput;\n  coveragePackage?: ICoveragePackageFilterInput;\n  police?: IPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfEndorsementFilterInput {\n  all?: IEndorsementFilterInput;\n  none?: IEndorsementFilterInput;\n  some?: IEndorsementFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfPoliceFileFilterInput {\n  all?: IPoliceFileFilterInput;\n  none?: IPoliceFileFilterInput;\n  some?: IPoliceFileFilterInput;\n  any?: boolean;\n}\n\nexport interface IPoliceFileFilterInput {\n  and?: Array<IPoliceFileFilterInput>;\n  or?: Array<IPoliceFileFilterInput>;\n  url?: IStringOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  sensible?: IBooleanOperationFilterInput;\n  shared?: IBooleanOperationFilterInput;\n  documentType?: IBooleanOperationFilterInput;\n  checked?: IBooleanOperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  folio?: IStringOperationFilterInput;\n  baseModel?: IStringOperationFilterInput;\n  height?: IStringOperationFilterInput;\n  width?: IStringOperationFilterInput;\n  policeId?: IComparableNullableOfGuidOperationFilterInput;\n  police?: IPoliceFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfComissionFilterInput {\n  all?: IComissionFilterInput;\n  none?: IComissionFilterInput;\n  some?: IComissionFilterInput;\n  any?: boolean;\n}\n\nexport interface IComissionFilterInput {\n  and?: Array<IComissionFilterInput>;\n  or?: Array<IComissionFilterInput>;\n  projectAgentProviderBranchId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  amount?: IComparableDecimalOperationFilterInput;\n  uDI?: IComparableDecimalOperationFilterInput;\n  other?: IComparableDecimalOperationFilterInput;\n  observations?: IStringOperationFilterInput;\n  efectiveDate?: IComparableDateTimeOperationFilterInput;\n  expireDate?: IComparableDateTimeOperationFilterInput;\n  commisionRPF?: IComparableDecimalOperationFilterInput;\n  otherRPF?: IComparableDecimalOperationFilterInput;\n  rigth?: IComparableDecimalOperationFilterInput;\n  otherRigths?: IComparableDecimalOperationFilterInput;\n  initialPeriod?: IComparableInt32OperationFilterInput;\n  subSequentPeriod?: IComparableInt32OperationFilterInput;\n  anualRPF?: IComparableDecimalOperationFilterInput;\n  bimestralRPF?: IComparableDecimalOperationFilterInput;\n  mensualRPF?: IComparableDecimalOperationFilterInput;\n  trimestralRPF?: IComparableDecimalOperationFilterInput;\n  rigthUDI?: IComparableDecimalOperationFilterInput;\n  rigthComission?: IComparableDecimalOperationFilterInput;\n  keyId?: IComparableGuidOperationFilterInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchFilterInput;\n  agentKey?: IAgentKeyFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfInsurerReminderProjectAgentProviderFilterInput {\n  all?: IInsurerReminderProjectAgentProviderFilterInput;\n  none?: IInsurerReminderProjectAgentProviderFilterInput;\n  some?: IInsurerReminderProjectAgentProviderFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerReminderProjectAgentProviderFilterInput {\n  and?: Array<IInsurerReminderProjectAgentProviderFilterInput>;\n  or?: Array<IInsurerReminderProjectAgentProviderFilterInput>;\n  insurerReminderId?: IComparableNullableOfGuidOperationFilterInput;\n  projectAgentProviderId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerReminder?: IInsurerReminderFilterInput;\n  projectAgentProvider?: IProjectAgentProviderFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerReminderFilterInput {\n  and?: Array<IInsurerReminderFilterInput>;\n  or?: Array<IInsurerReminderFilterInput>;\n  name?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  sended?: IBooleanOperationFilterInput;\n  type?: INullableOfEnumInsurerReminderTypeOperationFilterInput;\n  instanceType?: INullableOfEnumInsurerReminderInstanceTypeOperationFilterInput;\n  reminderDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerReminderRecords?: IListFilterInputTypeOfInsurerReminderRecordFilterInput;\n  insurerReminderSubBranchs?: IListFilterInputTypeOfInsurerReminderSubBranchFilterInput;\n  insurerReminderProjectAgentProviders?: IListFilterInputTypeOfInsurerReminderProjectAgentProviderFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumInsurerReminderTypeOperationFilterInput {\n  eq?: IEnumInsurerReminderType;\n  neq?: IEnumInsurerReminderType;\n  in?: Array<IEnumInsurerReminderType | null>;\n  nin?: Array<IEnumInsurerReminderType | null>;\n}\n\nexport const enum IEnumInsurerReminderType {\n  AUTOMATIC = 'AUTOMATIC',\n  FREE = 'FREE',\n  FROM_RECORD = 'FROM_RECORD'\n}\n\nexport interface INullableOfEnumInsurerReminderInstanceTypeOperationFilterInput {\n  eq?: IEnumInsurerReminderInstanceType;\n  neq?: IEnumInsurerReminderInstanceType;\n  in?: Array<IEnumInsurerReminderInstanceType | null>;\n  nin?: Array<IEnumInsurerReminderInstanceType | null>;\n}\n\nexport const enum IEnumInsurerReminderInstanceType {\n  POLICY_NOT_RENEWED_VALIDITY_DATE = 'POLICY_NOT_RENEWED_VALIDITY_DATE',\n  PAY_PENDING_RECEIPTS_START_VALIDITY_DATE = 'PAY_PENDING_RECEIPTS_START_VALIDITY_DATE',\n  PAY_PENDING_RECEIPTS_END_VALIDITY_DATE = 'PAY_PENDING_RECEIPTS_END_VALIDITY_DATE',\n  PAY_PENDING_RECEIPTS_PROMISE_DATE = 'PAY_PENDING_RECEIPTS_PROMISE_DATE',\n  SINISTER_COMPROMISE_DATE = 'SINISTER_COMPROMISE_DATE'\n}\n\nexport interface IListFilterInputTypeOfInsurerReminderRecordFilterInput {\n  all?: IInsurerReminderRecordFilterInput;\n  none?: IInsurerReminderRecordFilterInput;\n  some?: IInsurerReminderRecordFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerReminderRecordFilterInput {\n  and?: Array<IInsurerReminderRecordFilterInput>;\n  or?: Array<IInsurerReminderRecordFilterInput>;\n  insurerReminderId?: IComparableNullableOfGuidOperationFilterInput;\n  seen?: IBooleanOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  recordId?: IComparableNullableOfGuidOperationFilterInput;\n  recordModel?: INullableOfEnumInsurerCommentModelOperationFilterInput;\n  insurerReminder?: IInsurerReminderFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumInsurerCommentModelOperationFilterInput {\n  eq?: IEnumInsurerCommentModel;\n  neq?: IEnumInsurerCommentModel;\n  in?: Array<IEnumInsurerCommentModel | null>;\n  nin?: Array<IEnumInsurerCommentModel | null>;\n}\n\nexport const enum IEnumInsurerCommentModel {\n  POLICE = 'POLICE',\n  CONTRACTOR = 'CONTRACTOR',\n  RECEIPTS = 'RECEIPTS',\n  SINISTER = 'SINISTER',\n  RENOVATIONS = 'RENOVATIONS',\n  COMMISSIONS_RECEIPTS = 'COMMISSIONS_RECEIPTS',\n  GROUPS = 'GROUPS',\n  PACKAGE = 'PACKAGE',\n  ENDORSEMENT = 'ENDORSEMENT',\n  AGENTPROVIDER = 'AGENTPROVIDER',\n  ACCOUNT_STATUS = 'ACCOUNT_STATUS',\n  BAIL = 'BAIL',\n  BONDS = 'BONDS',\n  COMMENTS = 'COMMENTS',\n  LOG = 'LOG',\n  LETTERS = 'LETTERS',\n  COLLECTIVITIES = 'COLLECTIVITIES',\n  GRAPHS = 'GRAPHS',\n  NOTES = 'NOTES',\n  BAIL_CLAIM = 'BAIL_CLAIM',\n  TASKS = 'TASKS',\n  FINISHED_TASKS = 'FINISHED_TASKS',\n  EVENTS = 'EVENTS',\n  CERTIFICATE = 'CERTIFICATE',\n  REPORTS = 'REPORTS',\n  APP_MNOTIFICATIONS = 'APP_MNOTIFICATIONS',\n  FLOTILLAS = 'FLOTILLAS',\n  MAILING_TEMPLATE = 'MAILING_TEMPLATE',\n  REMINDERS = 'REMINDERS'\n}\n\nexport interface IListFilterInputTypeOfInsurerReminderSubBranchFilterInput {\n  all?: IInsurerReminderSubBranchFilterInput;\n  none?: IInsurerReminderSubBranchFilterInput;\n  some?: IInsurerReminderSubBranchFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerReminderSubBranchFilterInput {\n  and?: Array<IInsurerReminderSubBranchFilterInput>;\n  or?: Array<IInsurerReminderSubBranchFilterInput>;\n  insurerReminderId?: IComparableNullableOfGuidOperationFilterInput;\n  subBranch?: IComparableNullableOfInt32OperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerReminder?: IInsurerReminderFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfProjectAgentProviderEmailReminderFilterInput {\n  all?: IProjectAgentProviderEmailReminderFilterInput;\n  none?: IProjectAgentProviderEmailReminderFilterInput;\n  some?: IProjectAgentProviderEmailReminderFilterInput;\n  any?: boolean;\n}\n\nexport interface IProjectAgentProviderEmailReminderFilterInput {\n  and?: Array<IProjectAgentProviderEmailReminderFilterInput>;\n  or?: Array<IProjectAgentProviderEmailReminderFilterInput>;\n  model?: INullableOfEnumEmaiModelOperationFilterInput;\n  text?: IStringOperationFilterInput;\n  footer?: IStringOperationFilterInput;\n  ownerId?: IComparableGuidOperationFilterInput;\n  frequency?: INullableOfEnumEmailFrequencyOperationFilterInput;\n  ramoCode?: INullableOfEnumEmailRamoOperationFilterInput;\n  policyType?: INullableOfEnumEmailTypeOperationFilterInput;\n  chargeType?: INullableOfEnumEmailChargeTypeOperationFilterInput;\n  dateType?: INullableOfEnumEmailDateTypeOperationFilterInput;\n  projectAgentProviders?: IListComparableGuidOperationFilterInput;\n  subbranches?: IListComparableGuidOperationFilterInput;\n  projectAgentProviderId?: IComparableGuidOperationFilterInput;\n  projectAgentProvider?: IProjectAgentProviderFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumEmaiModelOperationFilterInput {\n  eq?: IEnumEmaiModel;\n  neq?: IEnumEmaiModel;\n  in?: Array<IEnumEmaiModel | null>;\n  nin?: Array<IEnumEmaiModel | null>;\n}\n\nexport const enum IEnumEmaiModel {\n  OT_REQUEST = 'OT_REQUEST',\n  OT_REGISTER = 'OT_REGISTER',\n  ACCIDENT_REQUEST = 'ACCIDENT_REQUEST',\n  ACCIDENT_END = 'ACCIDENT_END',\n  REMINDER = 'REMINDER',\n  PAYMENT = 'PAYMENT',\n  CREATED_NOTE = 'CREATED_NOTE',\n  APPLIED_NOTE = 'APPLIED_NOTE',\n  POLICE_RENEW = 'POLICE_RENEW',\n  REMINDER_POLICE_RENEW = 'REMINDER_POLICE_RENEW',\n  ACCIDENT_IN_PROCESS = 'ACCIDENT_IN_PROCESS',\n  ACCIDENT_CANCELED = 'ACCIDENT_CANCELED',\n  ACCIDENT_REJECTED = 'ACCIDENT_REJECTED',\n  ACCIDENT_ON_QUEUE = 'ACCIDENT_ON_QUEUE'\n}\n\nexport interface INullableOfEnumEmailFrequencyOperationFilterInput {\n  eq?: IEnumEmailFrequency;\n  neq?: IEnumEmailFrequency;\n  in?: Array<IEnumEmailFrequency | null>;\n  nin?: Array<IEnumEmailFrequency | null>;\n}\n\nexport const enum IEnumEmailFrequency {\n  MONTHLY = 'MONTHLY',\n  FORTNIGTHLY = 'FORTNIGTHLY',\n  WEEKLY = 'WEEKLY',\n  OVERDUE = 'OVERDUE',\n  LATER_WEEK = 'LATER_WEEK',\n  LATER_FORTNIGTH = 'LATER_FORTNIGTH',\n  LATER_MONTH = 'LATER_MONTH',\n  OVERDUE_POLICE_TO_RENEW = 'OVERDUE_POLICE_TO_RENEW',\n  TWENTY_DATYS_AFTER = 'TWENTY_DATYS_AFTER',\n  TWENTY_DATYS_BEFORE = 'TWENTY_DATYS_BEFORE'\n}\n\nexport interface INullableOfEnumEmailRamoOperationFilterInput {\n  eq?: IEnumEmailRamo;\n  neq?: IEnumEmailRamo;\n  in?: Array<IEnumEmailRamo | null>;\n  nin?: Array<IEnumEmailRamo | null>;\n}\n\nexport const enum IEnumEmailRamo {\n  LIFE = 'LIFE',\n  ACIDENTS_AND_DISEASES = 'ACIDENTS_AND_DISEASES',\n  DAMAGES = 'DAMAGES',\n  ALL = 'ALL'\n}\n\nexport interface INullableOfEnumEmailTypeOperationFilterInput {\n  eq?: IEnumEmailType;\n  neq?: IEnumEmailType;\n  in?: Array<IEnumEmailType | null>;\n  nin?: Array<IEnumEmailType | null>;\n}\n\nexport const enum IEnumEmailType {\n  POLICE = 'POLICE',\n  IND_POLICE_OF_COLECTIVITY = 'IND_POLICE_OF_COLECTIVITY',\n  GROUP_POLICE = 'GROUP_POLICE',\n  ALL = 'ALL'\n}\n\nexport interface INullableOfEnumEmailChargeTypeOperationFilterInput {\n  eq?: IEnumEmailChargeType;\n  neq?: IEnumEmailChargeType;\n  in?: Array<IEnumEmailChargeType | null>;\n  nin?: Array<IEnumEmailChargeType | null>;\n}\n\nexport const enum IEnumEmailChargeType {\n  DOMICILED = 'DOMICILED',\n  UNDOMICILED = 'UNDOMICILED',\n  ALL = 'ALL',\n  UNDOMICILIED_AND_AGENT = 'UNDOMICILIED_AND_AGENT'\n}\n\nexport interface INullableOfEnumEmailDateTypeOperationFilterInput {\n  eq?: IEnumEmailDateType;\n  neq?: IEnumEmailDateType;\n  in?: Array<IEnumEmailDateType | null>;\n  nin?: Array<IEnumEmailDateType | null>;\n}\n\nexport const enum IEnumEmailDateType {\n  VALIDITY_BEGIN = 'VALIDITY_BEGIN',\n  OVERDUE = 'OVERDUE'\n}\n\nexport interface IListFilterInputTypeOfAgentProviderBonoFilterInput {\n  all?: IAgentProviderBonoFilterInput;\n  none?: IAgentProviderBonoFilterInput;\n  some?: IAgentProviderBonoFilterInput;\n  any?: boolean;\n}\n\nexport interface IAgentProviderBonoSortInput {\n  agentKeyId?: ISortEnumType;\n  startValidity?: ISortEnumType;\n  endValidity?: ISortEnumType;\n  quantity?: ISortEnumType;\n  exchangeRate?: ISortEnumType;\n  bono?: ISortEnumType;\n  projectId?: ISortEnumType;\n  factureNumber?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  referrerId?: ISortEnumType;\n  agentKey?: IAgentKeySortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IAgentKeySortInput {\n  ownerId?: ISortEnumType;\n  name?: ISortEnumType;\n  key?: ISortEnumType;\n  isActive?: ISortEnumType;\n  projectAgentProviderId?: ISortEnumType;\n  projectAgentProvider?: IProjectAgentProviderSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProjectAgentProviderSortInput {\n  projectId?: ISortEnumType;\n  agentProviderId?: ISortEnumType;\n  agentProvider?: IAgentProviderSortInput;\n  observations?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IAgentProviderSortInput {\n  companyName?: ISortEnumType;\n  alias?: ISortEnumType;\n  rFC?: ISortEnumType;\n  phone?: ISortEnumType;\n  website?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  typeAgentProvider?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IAgentProviderBonoCollectionSegment {\n  items?: Array<IAgentProviderBono>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IAgentProviderBono {\n  agentKeyId?: IUUID;\n  startValidity?: IDateTime;\n  endValidity?: IDateTime;\n  quantity?: number;\n  exchangeRate?: IEnumFCurrency;\n  bono?: IEnumBonoType;\n  projectId?: IUUID;\n  factureNumber?: string;\n  ownerId?: IUUID;\n  referrerId?: IUUID;\n  agentKey?: IAgentKey;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IAgentKey {\n  ownerId: IUUID;\n  name: string;\n  key: string;\n  isActive: boolean;\n  projectAgentProviderId: IUUID;\n  projectAgentProvider?: IProjectAgentProvider;\n  comissions: Array<IComission>;\n  polices: Array<IPolice>;\n  agentProviderBono: Array<IAgentProviderBono>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProjectAgentProvider {\n  projectId: IUUID;\n  agentProviderId: IUUID;\n  agentProvider?: IAgentProvider;\n  observations?: string;\n  coveragePackages: Array<ICoveragePackage>;\n  agentProviderContact: Array<IAgentProviderContact>;\n  insurerReminderProjectAgentProvider: Array<IInsurerReminderProjectAgentProvider>;\n  projectAgentProviderEmailReminders: Array<IProjectAgentProviderEmailReminder>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IAgentProvider {\n  companyName: string;\n  alias?: string;\n  rFC?: string;\n  phone?: string;\n  website?: string;\n  ownerId: IUUID;\n  typeAgentProvider: ITypeAgentProvider;\n  projectAgentProviders: Array<IProjectAgentProvider>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICoveragePackage {\n  name?: string;\n  description?: string;\n  projectAgentProviderBranchId: IUUID;\n  typePackage: number;\n  policy: number;\n  ownerId?: IUUID;\n  projectAgentProviderId?: IUUID;\n  projectAgentProvider?: IProjectAgentProvider;\n  projectAgentProviderBranch?: IProjectAgentProviderBranch;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProjectAgentProviderBranch {\n  projectId: IUUID;\n  projectAgentProviderId: IUUID;\n  projectAgentProvider?: IProjectAgentProvider;\n  branchId: IUUID;\n  branch?: IBranch;\n  subBranchId?: IUUID;\n  subBranch?: ISubBranch;\n  projectAgentProviderBranches: Array<IProjectAgentProviderBranch>;\n  polices: Array<IPolice>;\n  comissions: Array<IComission>;\n  agentProviderContacts: Array<IAgentProviderContact>;\n  referrerBranchs: Array<IReferrerBranch>;\n  coveragePackages: Array<ICoveragePackage>;\n  policeQuotes: Array<IPoliceQuote>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBranch {\n  branchName: string;\n  branchCode?: number;\n  typeAgentProviders: Array<ITypeAgentProvider>;\n  subBranches: Array<ISubBranch>;\n  projectAgentProviderBranches: Array<IProjectAgentProviderBranch>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISubBranch {\n  subBranchName: string;\n  subBranchCode?: number;\n  branchId: IUUID;\n  branch?: IBranch;\n  projectAgentProviderBranches: Array<IProjectAgentProviderBranch>;\n  insurerBailTypes: Array<IInsurerBailType>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerBailType {\n  name?: string;\n  code?: number;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n  subBranchId?: IUUID;\n  subBranch?: ISubBranch;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolice {\n  number?: string;\n  startValidity?: IDateTime;\n  endValidity?: IDateTime;\n  formaDePago?: IEnumPolicePaymentType;\n  status?: IEnumPoliceStatus;\n  observations?: string;\n  folio?: string;\n  internalNumber?: string;\n  documentType?: IEnumPoliceDocumentType;\n  addressId?: number;\n  aseguradoraId?: number;\n  claveId?: IUUID;\n  ownerId?: IUUID;\n  packageId?: number;\n  projectAgentProviderBranchId?: IUUID;\n  fCurrency?: IEnumFCurrency;\n  identifier?: string;\n  rigth?: IDecimal;\n  iVA?: IDecimal;\n  pNeta?: IDecimal;\n  pTotal?: IDecimal;\n  rPF?: IDecimal;\n  comision?: IDecimal;\n  administrationType?: IEnumPoliceAdministrationType;\n  caratule?: string;\n  certificadoIncisoActivo?: boolean;\n  certificateNumber?: string;\n  comisionPercent?: number;\n  hospitalLevel?: string;\n  name?: string;\n  parentId?: IUUID;\n  discount?: IDecimal;\n  isRenewable?: IEnumPoliceRenew;\n  reasonRen?: string;\n  renewedStatus?: IEnumPoliceRenewalStatus;\n  contact?: string;\n  fechaBajaInciso?: IDateTime;\n  reasonCancel?: string;\n  receiptsBy?: IEnumPoliceReceipts;\n  responsableId?: IUUID;\n  comisionGiven?: IDecimal;\n  recAntiquity?: IDateTime;\n  collectionExecutiveId?: number;\n  sucursalId?: IUUID;\n  subTotal?: IDecimal;\n  trackBitacora?: boolean;\n  accidentRate?: IDecimal;\n  scheme?: IEnumPayScheme;\n  steps?: string;\n  totalReceipts?: number;\n  conceptAnnulment?: IEnumPoliceConcept;\n  deductible?: string;\n  emisionDate?: IDateTime;\n  emisionStatus?: IEnumPoliceEmisionStatus;\n  fechaAnuencia?: IDateTime;\n  fianzaTypeId?: number;\n  gastoInvestigacion?: IDecimal;\n  reasonRehabbilitate?: string;\n  bussinessLine?: IEnumPoliceBussinessLine;\n  contratanteSubGroup?: number;\n  celulaId?: number;\n  groupingLevelId?: number;\n  typePolicy?: IEnumPolicyType;\n  conductoDePago?: IEnumConductChoise;\n  tabulator?: string;\n  bonoVariable?: IDecimal;\n  hasProgramaDeProveedores?: boolean;\n  contractorId?: IUUID;\n  programaDeProveedoresContractorId?: number;\n  chargeDate?: IDateTime;\n  comisionEarned?: IDecimal;\n  comisionPercentEarned?: IDecimal;\n  rigthEarned?: IDecimal;\n  discountEarned?: IDecimal;\n  ivaEarned?: IDecimal;\n  pNetaEarned?: IDecimal;\n  pTotalEarned?: IDecimal;\n  rPFEarned?: IDecimal;\n  subTotalEarned?: IDecimal;\n  dateCancel?: IDateTime;\n  amountCanceled?: IDecimal;\n  stateCirculation?: string;\n  fechaPagoComision?: IDateTime;\n  dateEmitionFactura?: IDateTime;\n  folioFactura?: string;\n  monthFactura?: number;\n  exchangeRate?: IDecimal;\n  projectAgentProviderBranch?: IProjectAgentProviderBranch;\n  agentKey?: IAgentKey;\n  sucursal?: ISucursal;\n  parent?: IPolice;\n  contractor?: Isaam_Contractor;\n  polices?: Array<IPolice>;\n  policeAssign?: IPoliceAssign;\n  policePendient?: IPolicePendient;\n  formAccidentDisease?: IFormAccidentDisease;\n  formAutomobileDamage?: IFormAutomobileDamage;\n  formDamage?: IFormDamage;\n  formLife?: IFormLife;\n  personalInformation?: IPersonalInformation;\n  involvedReferrer?: IInvolvedReferrer;\n  oldPolices?: Array<IOldPolice>;\n  newPolices?: Array<IOldPolice>;\n  coverageInPolicies?: Array<ICoverageInPolicy>;\n  endorsements?: Array<IEndorsement>;\n  sinisters?: Array<ISinister>;\n  policeReceipts?: Array<IPoliceReceipt>;\n  policeFiles?: Array<IPoliceFile>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISucursal {\n  name?: string;\n  details?: string;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n  police?: Array<IPolice>;\n  contractors?: Array<Isaam_Contractor>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface Isaam_Contractor {\n  projectId: IUUID;\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  socialReason?: string;\n  fullName: string;\n  gender: Isaam_EnumGender;\n  birthDate?: IDateTime;\n  phoneNumber?: string;\n  rFC?: string;\n  description?: string;\n  email?: string;\n  active: boolean;\n  contractorType: IEnumContractorType;\n  sucursalId?: IUUID;\n  contractorClassificationId: IUUID;\n  contractorClassification?: IContractorClassification;\n  contractorGroupId: IUUID;\n  contractorGroup?: IContractorGroup;\n  contractorGroupingLevelId: IUUID;\n  contractorGroupingLevel?: IContractorGroupingLevel;\n  contractorCelulaId: IUUID;\n  contractorCelula?: IContractorCelula;\n  ownerId: IUUID;\n  memberId: IUUID;\n  responsableId: IUUID;\n  referrerId: IUUID;\n  referrer?: IReferrer;\n  sucursal?: ISucursal;\n  contractorProcessDocuments: Array<IContractorProcessDocument>;\n  agentProviderContact: Array<IAgentProviderContact>;\n  policeQuotes?: Array<IPoliceQuote>;\n  polices?: Array<IPolice>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContractorClassification {\n  name?: string;\n  description?: string;\n  projectId: IUUID;\n  ownerId?: IUUID;\n  contractors: Array<Isaam_Contractor>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContractorGroup {\n  name?: string;\n  description?: string;\n  ownerId: IUUID;\n  parentId?: IUUID;\n  responsableId: IUUID;\n  groupType?: IEnumContractorGroupType;\n  parent?: IContractorGroup;\n  contractorGroups: Array<IContractorGroup>;\n  agentProviderContact: Array<IAgentProviderContact>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IAgentProviderContact {\n  projectAgentProviderBranchId: IUUID;\n  name: string;\n  email?: string;\n  phone?: string;\n  department?: string;\n  sinisterAccidentId?: IUUID;\n  ownerId: IUUID;\n  contractorGroupId: IUUID;\n  contractorGroup?: IContractorGroup;\n  projectAgentProviderBranch?: IProjectAgentProviderBranch;\n  contractorId: IUUID;\n  contractor?: Isaam_Contractor;\n  projectAgentProviderId: IUUID;\n  projectAgentProvider?: IProjectAgentProvider;\n  sinisterAccident?: ISinisterAccident;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinisterAccident {\n  relationShip?: IEnumSinisterRelation;\n  kindSinister?: IEnumSinisterKind;\n  sinisterReason?: IEnumSinisterReason;\n  sinisterComplement?: string;\n  sinisterType?: IEnumSinisterType;\n  paymentType?: IEnumSinisterPaymentType;\n  totalPayment?: IDecimal;\n  totalProcedent?: IDecimal;\n  totalCoaseguro?: IDecimal;\n  totalDeductible?: IDecimal;\n  totalFinal?: IDecimal;\n  initial?: boolean;\n  receiptStatus?: string;\n  dependientId?: IUUID;\n  sinisterAilingId?: IUUID;\n  sinisterId?: IUUID;\n  titularId?: IUUID;\n  ailment?: string;\n  anesthesiologist?: IDecimal;\n  helper?: IDecimal;\n  surgeon?: IDecimal;\n  coasHonorarios?: IDecimal;\n  coasHospital?: IDecimal;\n  dedHonorarios?: IDecimal;\n  dedHospital?: IDecimal;\n  montoHonorarios?: IDecimal;\n  montoHospital?: IDecimal;\n  others?: IDecimal;\n  surgeryDate?: IDateTime;\n  hospital?: string;\n  affectedFullName?: string;\n  complementConsecutiveNumber?: number;\n  initialAccidentId?: IUUID;\n  projectId?: IUUID;\n  sinister?: ISinister;\n  personalInformation?: IPersonalInformation;\n  dependient?: IRelationShip;\n  initialAccident?: ISinisterAccident;\n  sinisterAiling?: ISinisterAiling;\n  sinisterAccidents: Array<ISinisterAccident>;\n  agentProviderContacts: Array<IAgentProviderContact>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinister {\n  companyFolio?: string;\n  internFolio?: string;\n  status?: IEnumSinisterStatus;\n  promiseDate?: IDateTime;\n  affectedItem?: string;\n  sinisterNumber?: string;\n  sinisterDate?: IDateTime;\n  typeSinisterGeneral?: IEnumTypeSinisterGeneral;\n  reason?: string;\n  observations?: string;\n  ownerId?: IUUID;\n  policeId?: IUUID;\n  ingressDate?: IDateTime;\n  affectedAux?: string;\n  compromiseDate?: IDateTime;\n  affectedAuxRelationShip?: IEnumSinisterRelation;\n  insurerZipCodeSepomexId?: IUUID;\n  date?: IDateTime;\n  projectId?: IUUID;\n  terminationDate?: IDateTime;\n  fileLoadedDate?: IDateTime;\n  police?: IPolice;\n  sinisterCars?: Array<ISinisterCar>;\n  sinisterDamages?: Array<ISinisterDamage>;\n  sinisterFacturas?: Array<ISinisterFactura>;\n  sinisterLifes: Array<ISinisterLife>;\n  sinisterAccidents: Array<ISinisterAccident>;\n  insurerZipCodeSepomex?: IInsurerZipCodeSepomex;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinisterCar {\n  typeSinister?: IEnumSinisterCarType;\n  explication?: string;\n  third?: string;\n  imdemnization?: IDecimal;\n  sinisterId?: IUUID;\n  driver?: string;\n  coaseguro?: IDecimal;\n  deductible?: IDecimal;\n  projectId?: IUUID;\n  firstSubTypeSinister?: IEnumSinisterCarSubType;\n  secondSubTypeSinister?: IEnumSinisterCarSubSubType;\n  sinister?: ISinister;\n  sinisterCarContacts?: Array<ISinisterCarContact>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinisterCarContact {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  phone?: string;\n  email?: string;\n  references?: string;\n  sinisterCarId?: IUUID;\n  projectId?: IUUID;\n  sinisterCar?: ISinisterCar;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinisterDamage {\n  insuredProperty?: string;\n  lossEstimate?: string;\n  claimCause?: string;\n  affectedCoverage?: string;\n  indemnization?: IDecimal;\n  totalClaim?: IDecimal;\n  sinisterId?: IUUID;\n  currency?: IEnumFCurrency;\n  exchangeRate?: IEnumFCurrency;\n  totalCoaseguro?: IDecimal;\n  totalDeductible?: IDecimal;\n  projectId?: IUUID;\n  sinister?: ISinister;\n  sinisterDamageContacts: Array<ISinisterDamageContact>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinisterDamageContact {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  phone?: string;\n  email?: string;\n  references?: string;\n  sinisterDamageId?: IUUID;\n  projectId?: IUUID;\n  sinisterDamage?: ISinisterDamage;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinisterFactura {\n  facturaNumber?: string;\n  provider?: string;\n  facturaDate?: IDateTime;\n  import?: IDecimal;\n  iVA?: IDecimal;\n  total?: IDecimal;\n  procedent?: IDecimal;\n  observations?: string;\n  sinisterId?: IUUID;\n  concept?: string;\n  serie?: string;\n  projectId?: IUUID;\n  sinister?: ISinister;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinisterLife {\n  sinisterReason?: IEnumSinisterLifeReason;\n  paymentType?: IEnumSinisterPaymentType;\n  sinisterId?: IUUID;\n  affectedName?: string;\n  relationAffected?: IEnumSinisterRelation;\n  projectId?: IUUID;\n  sinister?: ISinister;\n  sinisterLifes: Array<ISinisterLife>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerZipCodeSepomex {\n  zipCode?: number;\n  colony?: string;\n  city?: string;\n  state?: string;\n  code?: string;\n  cityId?: string;\n  sinisters: Array<ISinister>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPersonalInformation {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  birthDate?: IDateTime;\n  sex?: string;\n  ownerId?: string;\n  fullName?: string;\n  email?: string;\n  salary?: IDecimal;\n  sumAssured?: IDecimal;\n  memberId?: IUUID;\n  antiquity?: IDateTime;\n  policeId?: IUUID;\n  policyType?: number;\n  typeSA?: IEnumSAType;\n  certificate?: string;\n  comision?: IDecimal;\n  rigth?: IDecimal;\n  iVA?: IDecimal;\n  projectId?: IUUID;\n  pNeta?: IDecimal;\n  pTotal?: IDecimal;\n  rPF?: IDecimal;\n  discount?: IDecimal;\n  gastosInvestigacion?: IDecimal;\n  subTotal?: IDecimal;\n  chargeDate?: IDateTime;\n  comisionEarned?: IDecimal;\n  comisionPercentEarned?: IDecimal;\n  rigthEarned?: IDecimal;\n  discountEarned?: IDecimal;\n  dischargeDate?: IDateTime;\n  iVAEarned?: IDecimal;\n  pNetaEarned?: IDecimal;\n  pTotalEarned?: IDecimal;\n  rPFEarned?: IDecimal;\n  subTotalEarned?: IDecimal;\n  endDate?: IDateTime;\n  initDate?: IDateTime;\n  comisionPaymentDate?: IDateTime;\n  exchangeRate?: IDecimal;\n  maquila?: IDecimal;\n  bonoDdate?: IDateTime;\n  maquilaDate?: IDateTime;\n  facturaYear?: number;\n  formAccidentDisease?: IFormAccidentDisease;\n  formAutomobileDamage?: IFormAutomobileDamage;\n  formDamage?: IFormDamage;\n  formLife?: IFormLife;\n  police?: IPolice;\n  sinisterAccidents: Array<ISinisterAccident>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IFormAccidentDisease {\n  diseaseType?: number;\n  coinsurance?: string;\n  documentType?: IEnumPoliceDocumentType;\n  ownerId?: IUUID;\n  personalId?: IUUID;\n  policeId?: IUUID;\n  projectId?: IUUID;\n  personalInformation?: IPersonalInformation;\n  police?: IPolice;\n  relationShips: Array<IRelationShip>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IRelationShip {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  birthDate?: IDateTime;\n  sex?: string;\n  relationship?: number;\n  accidentId?: IUUID;\n  ownerId?: IUUID;\n  fullName?: string;\n  isActive?: boolean;\n  endorsementId?: IUUID;\n  antiquity?: IDateTime;\n  certificate?: string;\n  comision?: IDecimal;\n  rigth?: IDecimal;\n  iVA?: IDecimal;\n  projectId: IUUID;\n  pNeta?: IDecimal;\n  pTotal?: IDecimal;\n  rPF?: IDecimal;\n  discount?: IDecimal;\n  gastosInvestigacion?: IDecimal;\n  subTotal?: IDecimal;\n  chargeDate?: IDateTime;\n  comisionEarned?: IDecimal;\n  comisionPercentEarned?: IDecimal;\n  rigthEarned?: IDecimal;\n  discountEarned?: IDecimal;\n  dischangeDate?: IDateTime;\n  iVAEarned?: IDecimal;\n  pNetaEarned?: IDecimal;\n  pTotalEarned?: IDecimal;\n  rPFEarned?: IDecimal;\n  subTotalEarned?: IDecimal;\n  comisionPaymentDate?: IDateTime;\n  exchangeRate?: IDecimal;\n  maquila?: IDecimal;\n  bonoDate?: IDateTime;\n  maquilaDate?: IDateTime;\n  facturaYear?: number;\n  formAccidentDisease?: IFormAccidentDisease;\n  endorsement?: IEndorsement;\n  endorsementCerts: Array<IEndorsementCert>;\n  sinisterAccidents: Array<ISinisterAccident>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IEndorsement {\n  type?: IEnumEntorsementType;\n  status?: number;\n  initDate?: IDateTime;\n  endDate?: IDateTime;\n  numberEndorsement?: string;\n  internalNumber?: string;\n  concept?: number;\n  otherDesc?: string;\n  original?: string;\n  change?: string;\n  observations?: string;\n  pNeta?: IDecimal;\n  rPF?: IDecimal;\n  rigth?: IDecimal;\n  iVA?: IDecimal;\n  pTotal?: IDecimal;\n  comision?: IDecimal;\n  ownerId?: IUUID;\n  policeId?: IUUID;\n  comisionPercent?: IDecimal;\n  anuency?: IDateTime;\n  projectId?: IUUID;\n  discount?: IDecimal;\n  researchCost?: IDecimal;\n  comisionPercentEarned?: IDecimal;\n  discoutnEarned?: IDecimal;\n  iVaEarned?: IDecimal;\n  pNETAEarned?: IDecimal;\n  pTotalEarned?: IDecimal;\n  rPFEarned?: IDecimal;\n  subTotalEarned?: IDecimal;\n  insuranceFolio?: string;\n  comitionPatmentDate?: IDateTime;\n  exchangeRate?: IDecimal;\n  maquila?: IDecimal;\n  bonoDate?: IDateTime;\n  variableBono?: IDecimal;\n  emisionFacturaDate?: IDateTime;\n  maquilaDate?: IDateTime;\n  folioFactura?: string;\n  monthFactura?: number;\n  fechaEntrega?: IDateTime;\n  police?: IPolice;\n  beneficiaries: Array<IBeneficiarie>;\n  relationShips: Array<IRelationShip>;\n  endorsementCerts: Array<IEndorsementCert>;\n  policeReceipts: Array<IPoliceReceipt>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBeneficiarie {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  birthDate?: IDateTime;\n  sex?: string;\n  percentage?: number;\n  optionalRelation?: string;\n  lifeId?: IUUID;\n  ownerId?: IUUID;\n  fullName?: string;\n  iSR?: IDecimal;\n  procedente?: string;\n  clause?: string;\n  jName?: string;\n  rFC?: string;\n  active?: boolean;\n  endorsementId?: IUUID;\n  antiquity?: IDateTime;\n  projectId?: IUUID;\n  chargeDate?: IDateTime;\n  dishargeDate?: IDateTime;\n  formLife?: IFormLife;\n  endorsement?: IEndorsement;\n  endorsementCerts: Array<IEndorsementCert>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IFormLife {\n  smoker?: boolean;\n  documentType?: IEnumPoliceDocumentType;\n  ownerId?: IUUID;\n  personalId?: IUUID;\n  policeId?: IUUID;\n  projectId?: IUUID;\n  beneficiarie?: IBeneficiarie;\n  personalInformation?: IPersonalInformation;\n  police?: IPolice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IEndorsementCert {\n  proceed?: boolean;\n  certificate?: string;\n  endorsementId?: IUUID;\n  projectId?: IUUID;\n  beneficiarieId?: IUUID;\n  relationShipId?: IUUID;\n  endorsement?: IEndorsement;\n  beneficiarie?: IBeneficiarie;\n  relationShip?: IRelationShip;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceReceipt {\n  number?: number;\n  primaNeta?: IDecimal;\n  rPF?: IDecimal;\n  right?: IDecimal;\n  iVA?: IDecimal;\n  subTotal?: IDecimal;\n  primaTotal?: IDecimal;\n  status?: IEnumPoliceReceiptStatus;\n  startDate?: IDateTime;\n  endDate?: IDateTime;\n  description?: string;\n  folio?: string;\n  type?: IEnumPoliceReceiptType;\n  payForm?: number;\n  paymentDocument?: string;\n  isCopy?: boolean;\n  isActive?: boolean;\n  bank?: IEnumBank;\n  ownerId?: IUUID;\n  policeId?: IUUID;\n  comision?: IDecimal;\n  validityDate?: IDateTime;\n  reconciledComision?: string;\n  reconciledDate?: IDateTime;\n  reconciledObservation?: string;\n  settlementFolio?: string;\n  reconciledFolio?: string;\n  settlementDate?: IDateTime;\n  reconcilationAccountId?: IUUID;\n  paymentDate?: IDateTime;\n  endorsementId?: IUUID;\n  delivered?: boolean;\n  paymentFolio?: string;\n  settlementBank?: IEnumBank;\n  settlementCurrRate?: number;\n  settlementDoc?: string;\n  settlementForm?: number;\n  excedent?: IDecimal;\n  agentProviderBonoId?: IUUID;\n  changeReferrerComision?: boolean;\n  referrerComosion?: IDecimal;\n  binnacleTrack?: boolean;\n  emailTrack?: boolean;\n  phoneTrack?: boolean;\n  referrerClosedNew?: IEnumReferrerClosed;\n  memberPaymentId?: IUUID;\n  paymentPromise?: IDateTime;\n  researchCost?: IDecimal;\n  projectId?: IUUID;\n  conductPayment?: IEnumConductChoise;\n  exchangeRate?: IDecimal;\n  manualSerie?: number;\n  settlementMethod?: string;\n  memberSettlementId?: number;\n  police?: IPolice;\n  endorsement?: IEndorsement;\n  policeReceiptAccount?: IPoliceReceiptAccount;\n  agentProviderbono?: IAgentProviderBono;\n  policeReceiptAccountStates: Array<IPoliceReceiptAccountState>;\n  policeReceiptPayments: Array<IPoliceReceiptPayment>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceReceiptAccount {\n  name?: string;\n  account?: string;\n  observations?: string;\n  bank?: IEnumBank;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n  policeReceiptAccountStates: Array<IPoliceReceiptAccountState>;\n  policeReceipts: Array<IPoliceReceipt>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceReceiptAccountState {\n  policeReceiptAccountId?: IUUID;\n  policeReceiptId?: IUUID;\n  policeReceipt?: IPoliceReceipt;\n  policeReceiptAccount?: IPoliceReceiptAccount;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceReceiptPayment {\n  paymentMethod?: IEnumPoliceReceiptPaymentMethod;\n  paymentDocument?: string;\n  amount?: IDecimal;\n  paymentDate?: IDateTime;\n  ownerId?: IUUID;\n  policeReceiptId?: IUUID;\n  projectId?: IUUID;\n  policeReceipt?: IPoliceReceipt;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IFormAutomobileDamage {\n  brand?: string;\n  model?: string;\n  year?: number;\n  version?: string;\n  serial?: string;\n  engine?: string;\n  color?: string;\n  licensePlates?: string;\n  documentType?: IEnumPoliceDocumentType;\n  ownerId?: IUUID;\n  policeId?: IUUID;\n  usage?: string;\n  email?: string;\n  beneficiaryAddress?: string;\n  beneficiaryName?: string;\n  beneficiaryRFC?: string;\n  adjusment?: string;\n  drive?: string;\n  montAdjustment?: string;\n  montSpecialTeam?: string;\n  specialTeam?: string;\n  service?: string;\n  policyType?: IEnumAutoType;\n  chargeType?: IEnumChargeType;\n  procedencia?: IEnumProcedent;\n  personalId?: IUUID;\n  preferencialBeneficiary?: string;\n  sumInsured?: string;\n  carOwner?: string;\n  noEmployee?: string;\n  projectId?: IUUID;\n  personalInformation?: IPersonalInformation;\n  police?: IPolice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IFormDamage {\n  damageType?: IEnumFormDamageType;\n  insuredItem?: string;\n  itemAddress?: string;\n  itemDetails?: string;\n  coinsurance?: string;\n  documentType?: IEnumPoliceDocumentType;\n  ownerId?: IUUID;\n  policeId?: IUUID;\n  personalId?: IUUID;\n  brand?: string;\n  color?: string;\n  constructionYear?: number;\n  damOwner?: string;\n  email?: string;\n  engine?: string;\n  fHMZone?: string;\n  girp?: string;\n  matricula?: string;\n  model?: string;\n  noEmployee?: string;\n  noLevels?: number;\n  permiso?: string;\n  purchaseValue?: string;\n  reconstructionYear?: number;\n  serial?: string;\n  sucursal?: string;\n  tYEVZone?: string;\n  typeConstruction?: IEnumConstructionType;\n  usage?: string;\n  version?: string;\n  projectId?: IUUID;\n  personalInformation?: IPersonalInformation;\n  police?: IPolice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinisterAiling {\n  code?: string;\n  description?: string;\n  sinisterAccidents: Array<ISinisterAccident>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContractorGroupingLevel {\n  levelGrouping: number;\n  description?: string;\n  ownerId: IUUID;\n  parentId?: IUUID;\n  responsableId: IUUID;\n  projectId: IUUID;\n  groupingType?: IEnumContractorGroupingType;\n  contractors: Array<Isaam_Contractor>;\n  parent?: IContractorGroupingLevel;\n  contractorGroupingLevels: Array<IContractorGroupingLevel>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContractorCelula {\n  celulaName?: string;\n  description?: string;\n  active?: boolean;\n  projectId: IUUID;\n  ownerId?: IUUID;\n  contractors: Array<Isaam_Contractor>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IReferrer {\n  memberId?: IUUID;\n  projectId: IUUID;\n  hiredDate: IDateTime;\n  email?: string;\n  address?: string;\n  operationFactures?: string;\n  paymentType?: IEnumReferrerPaymentType;\n  paymentFrequency?: IEnumReferrerFrequency;\n  referenceNumber?: string;\n  bank?: IEnumBank;\n  phones: Array<string>;\n  referrerAccountStates: Array<IReferrerAccountState>;\n  referrerBranches: Array<IReferrerBranch>;\n  contractors: Array<Isaam_Contractor>;\n  involvedReferrer?: IInvolvedReferrer;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IReferrerAccountState {\n  projectId: IUUID;\n  ownerId?: IUUID;\n  folio?: string;\n  total?: IDecimal;\n  printDate: IDateTime;\n  status?: IEnumReferrerAccountState;\n  transactionNumber?: string;\n  reasonReject?: string;\n  observation?: string;\n  referrerId: IUUID;\n  referrer?: IReferrer;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IReferrerBranch {\n  projectAgentProviderId: IUUID;\n  projectAgentProviderBranchId: IUUID;\n  referrerId: IUUID;\n  comition?: IDecimal;\n  referrer?: IReferrer;\n  projectAgentProvider?: IProjectAgentProvider;\n  projectAgentProviderBranch?: IProjectAgentProviderBranch;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInvolvedReferrer {\n  comisionVendedor?: IDecimal;\n  ownerId?: IUUID;\n  policeId?: IUUID;\n  referrerId?: IUUID;\n  projectId?: IUUID;\n  referrer?: IReferrer;\n  police?: IPolice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IContractorProcessDocument {\n  delivered: boolean;\n  validated: boolean;\n  processDocumentId: IUUID;\n  contractorId: IUUID;\n  contractor?: Isaam_Contractor;\n  processDocument?: IProcessDocument;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProcessDocument {\n  name?: string;\n  slug?: string;\n  active: boolean;\n  typeAgentProvider: Array<ITypeAgentProvider>;\n  contractorProcessDocuments: Array<IContractorProcessDocument>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceQuote {\n  projectAgentProviderBranchId?: IUUID;\n  ramoCode?: string;\n  subRamoCode?: string;\n  status?: IEnumPoliceQuoteStatus;\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  email?: string;\n  phone?: string;\n  car?: string;\n  observations?: string;\n  accidents?: string;\n  damages?: string;\n  life?: string;\n  isComplete?: boolean;\n  type?: string;\n  ownerId?: IUUID;\n  projectId: IUUID;\n  mainParent: number;\n  active: boolean;\n  prospectId?: IUUID;\n  agentProviders: Array<IUUID>;\n  selectedAgentProvider: Array<IUUID>;\n  contractorId?: IUUID;\n  contractor?: Isaam_Contractor;\n  projectAgentProviderBranch?: IProjectAgentProviderBranch;\n  policeQuotePrimas?: Array<IPoliceQuotePrima>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceQuotePrima {\n  aseguradora?: string;\n  prima?: string;\n  checked: boolean;\n  projectId: IUUID;\n  policeQuoteId: IUUID;\n  policeQuote?: IPoliceQuote;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceAssign {\n  isOwner?: boolean;\n  active?: boolean;\n  policeId: IUUID;\n  memberId: IUUID;\n  police?: IPolice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPolicePendient {\n  email?: string;\n  isOwner?: boolean;\n  active: boolean;\n  policeId: IUUID;\n  police?: IPolice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IOldPolice {\n  basePolicyId?: IUUID;\n  ownerId?: IUUID;\n  newPolicyId?: IUUID;\n  projectId?: IUUID;\n  basePolice?: IPolice;\n  newPolice?: IPolice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICoverageInPolicy {\n  name?: string;\n  sumInsured?: string;\n  deductible?: string;\n  prima?: string;\n  coinsurance?: string;\n  topecoinsurance?: string;\n  priority?: number;\n  ownerId: IUUID;\n  projectId: IUUID;\n  policyId: IUUID;\n  packageId: IUUID;\n  coveragePackage?: ICoveragePackage;\n  police?: IPolice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceFile {\n  url?: string;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n  name?: string;\n  sensible?: boolean;\n  shared?: boolean;\n  documentType?: boolean;\n  checked?: boolean;\n  active?: boolean;\n  folio?: string;\n  baseModel?: string;\n  height?: string;\n  width?: string;\n  policeId?: IUUID;\n  police?: IPolice;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IComission {\n  projectAgentProviderBranchId: IUUID;\n  name?: string;\n  amount: IDecimal;\n  uDI: IDecimal;\n  other: IDecimal;\n  observations?: string;\n  efectiveDate: IDateTime;\n  expireDate: IDateTime;\n  commisionRPF: IDecimal;\n  otherRPF: IDecimal;\n  rigth: IDecimal;\n  otherRigths: IDecimal;\n  initialPeriod: number;\n  subSequentPeriod: number;\n  anualRPF: IDecimal;\n  bimestralRPF: IDecimal;\n  mensualRPF: IDecimal;\n  trimestralRPF: IDecimal;\n  rigthUDI: IDecimal;\n  rigthComission: IDecimal;\n  keyId: IUUID;\n  projectAgentProviderBranch?: IProjectAgentProviderBranch;\n  agentKey?: IAgentKey;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerReminderProjectAgentProvider {\n  insurerReminderId?: IUUID;\n  projectAgentProviderId?: IUUID;\n  projectId?: IUUID;\n  insurerReminder?: IInsurerReminder;\n  projectAgentProvider?: IProjectAgentProvider;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerReminder {\n  name?: string;\n  description?: string;\n  sended: boolean;\n  type?: IEnumInsurerReminderType;\n  instanceType?: IEnumInsurerReminderInstanceType;\n  reminderDate?: IDateTime;\n  projectId?: IUUID;\n  insurerReminderRecords: Array<IInsurerReminderRecord>;\n  insurerReminderSubBranchs: Array<IInsurerReminderSubBranch>;\n  insurerReminderProjectAgentProviders: Array<IInsurerReminderProjectAgentProvider>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerReminderRecord {\n  insurerReminderId?: IUUID;\n  seen?: boolean;\n  projectId?: IUUID;\n  recordId?: IUUID;\n  recordModel?: IEnumInsurerCommentModel;\n  insurerReminder?: IInsurerReminder;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerReminderSubBranch {\n  insurerReminderId?: IUUID;\n  subBranch?: number;\n  projectId?: IUUID;\n  insurerReminder?: IInsurerReminder;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProjectAgentProviderEmailReminder {\n  model?: IEnumEmaiModel;\n  text?: string;\n  footer?: string;\n  ownerId: IUUID;\n  frequency?: IEnumEmailFrequency;\n  ramoCode?: IEnumEmailRamo;\n  policyType?: IEnumEmailType;\n  chargeType?: IEnumEmailChargeType;\n  dateType?: IEnumEmailDateType;\n  projectAgentProviders: Array<IUUID>;\n  subbranches: Array<IUUID>;\n  projectAgentProviderId: IUUID;\n  projectAgentProvider?: IProjectAgentProvider;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBeneficiarieSortInput {\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  secondLastName?: ISortEnumType;\n  birthDate?: ISortEnumType;\n  sex?: ISortEnumType;\n  percentage?: ISortEnumType;\n  optionalRelation?: ISortEnumType;\n  lifeId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  fullName?: ISortEnumType;\n  iSR?: ISortEnumType;\n  procedente?: ISortEnumType;\n  clause?: ISortEnumType;\n  jName?: ISortEnumType;\n  rFC?: ISortEnumType;\n  active?: ISortEnumType;\n  endorsementId?: ISortEnumType;\n  antiquity?: ISortEnumType;\n  projectId?: ISortEnumType;\n  chargeDate?: ISortEnumType;\n  dishargeDate?: ISortEnumType;\n  formLife?: IFormLifeSortInput;\n  endorsement?: IEndorsementSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IFormLifeSortInput {\n  smoker?: ISortEnumType;\n  documentType?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  personalId?: ISortEnumType;\n  policeId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  beneficiarie?: IBeneficiarieSortInput;\n  personalInformation?: IPersonalInformationSortInput;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPersonalInformationSortInput {\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  secondLastName?: ISortEnumType;\n  birthDate?: ISortEnumType;\n  sex?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  fullName?: ISortEnumType;\n  email?: ISortEnumType;\n  salary?: ISortEnumType;\n  sumAssured?: ISortEnumType;\n  memberId?: ISortEnumType;\n  antiquity?: ISortEnumType;\n  policeId?: ISortEnumType;\n  policyType?: ISortEnumType;\n  typeSA?: ISortEnumType;\n  certificate?: ISortEnumType;\n  comision?: ISortEnumType;\n  rigth?: ISortEnumType;\n  iVA?: ISortEnumType;\n  projectId?: ISortEnumType;\n  pNeta?: ISortEnumType;\n  pTotal?: ISortEnumType;\n  rPF?: ISortEnumType;\n  discount?: ISortEnumType;\n  gastosInvestigacion?: ISortEnumType;\n  subTotal?: ISortEnumType;\n  chargeDate?: ISortEnumType;\n  comisionEarned?: ISortEnumType;\n  comisionPercentEarned?: ISortEnumType;\n  rigthEarned?: ISortEnumType;\n  discountEarned?: ISortEnumType;\n  dischargeDate?: ISortEnumType;\n  iVAEarned?: ISortEnumType;\n  pNetaEarned?: ISortEnumType;\n  pTotalEarned?: ISortEnumType;\n  rPFEarned?: ISortEnumType;\n  subTotalEarned?: ISortEnumType;\n  endDate?: ISortEnumType;\n  initDate?: ISortEnumType;\n  comisionPaymentDate?: ISortEnumType;\n  exchangeRate?: ISortEnumType;\n  maquila?: ISortEnumType;\n  bonoDdate?: ISortEnumType;\n  maquilaDate?: ISortEnumType;\n  facturaYear?: ISortEnumType;\n  formAccidentDisease?: IFormAccidentDiseaseSortInput;\n  formAutomobileDamage?: IFormAutomobileDamageSortInput;\n  formDamage?: IFormDamageSortInput;\n  formLife?: IFormLifeSortInput;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IFormAccidentDiseaseSortInput {\n  diseaseType?: ISortEnumType;\n  coinsurance?: ISortEnumType;\n  documentType?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  personalId?: ISortEnumType;\n  policeId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  personalInformation?: IPersonalInformationSortInput;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceSortInput {\n  number?: ISortEnumType;\n  startValidity?: ISortEnumType;\n  endValidity?: ISortEnumType;\n  formaDePago?: ISortEnumType;\n  status?: ISortEnumType;\n  observations?: ISortEnumType;\n  folio?: ISortEnumType;\n  internalNumber?: ISortEnumType;\n  documentType?: ISortEnumType;\n  addressId?: ISortEnumType;\n  aseguradoraId?: ISortEnumType;\n  claveId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  packageId?: ISortEnumType;\n  projectAgentProviderBranchId?: ISortEnumType;\n  fCurrency?: ISortEnumType;\n  identifier?: ISortEnumType;\n  rigth?: ISortEnumType;\n  iVA?: ISortEnumType;\n  pNeta?: ISortEnumType;\n  pTotal?: ISortEnumType;\n  rPF?: ISortEnumType;\n  comision?: ISortEnumType;\n  administrationType?: ISortEnumType;\n  caratule?: ISortEnumType;\n  certificadoIncisoActivo?: ISortEnumType;\n  certificateNumber?: ISortEnumType;\n  comisionPercent?: ISortEnumType;\n  hospitalLevel?: ISortEnumType;\n  name?: ISortEnumType;\n  parentId?: ISortEnumType;\n  discount?: ISortEnumType;\n  isRenewable?: ISortEnumType;\n  reasonRen?: ISortEnumType;\n  renewedStatus?: ISortEnumType;\n  contact?: ISortEnumType;\n  fechaBajaInciso?: ISortEnumType;\n  reasonCancel?: ISortEnumType;\n  receiptsBy?: ISortEnumType;\n  responsableId?: ISortEnumType;\n  comisionGiven?: ISortEnumType;\n  recAntiquity?: ISortEnumType;\n  collectionExecutiveId?: ISortEnumType;\n  sucursalId?: ISortEnumType;\n  subTotal?: ISortEnumType;\n  trackBitacora?: ISortEnumType;\n  accidentRate?: ISortEnumType;\n  scheme?: ISortEnumType;\n  steps?: ISortEnumType;\n  totalReceipts?: ISortEnumType;\n  conceptAnnulment?: ISortEnumType;\n  deductible?: ISortEnumType;\n  emisionDate?: ISortEnumType;\n  emisionStatus?: ISortEnumType;\n  fechaAnuencia?: ISortEnumType;\n  fianzaTypeId?: ISortEnumType;\n  gastoInvestigacion?: ISortEnumType;\n  reasonRehabbilitate?: ISortEnumType;\n  bussinessLine?: ISortEnumType;\n  contratanteSubGroup?: ISortEnumType;\n  celulaId?: ISortEnumType;\n  groupingLevelId?: ISortEnumType;\n  typePolicy?: ISortEnumType;\n  conductoDePago?: ISortEnumType;\n  tabulator?: ISortEnumType;\n  bonoVariable?: ISortEnumType;\n  hasProgramaDeProveedores?: ISortEnumType;\n  contractorId?: ISortEnumType;\n  programaDeProveedoresContractorId?: ISortEnumType;\n  chargeDate?: ISortEnumType;\n  comisionEarned?: ISortEnumType;\n  comisionPercentEarned?: ISortEnumType;\n  rigthEarned?: ISortEnumType;\n  discountEarned?: ISortEnumType;\n  ivaEarned?: ISortEnumType;\n  pNetaEarned?: ISortEnumType;\n  pTotalEarned?: ISortEnumType;\n  rPFEarned?: ISortEnumType;\n  subTotalEarned?: ISortEnumType;\n  dateCancel?: ISortEnumType;\n  amountCanceled?: ISortEnumType;\n  stateCirculation?: ISortEnumType;\n  fechaPagoComision?: ISortEnumType;\n  dateEmitionFactura?: ISortEnumType;\n  folioFactura?: ISortEnumType;\n  monthFactura?: ISortEnumType;\n  exchangeRate?: ISortEnumType;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchSortInput;\n  agentKey?: IAgentKeySortInput;\n  sucursal?: ISucursalSortInput;\n  parent?: IPoliceSortInput;\n  contractor?: IContractorSortInput;\n  policeAssign?: IPoliceAssignSortInput;\n  policePendient?: IPolicePendientSortInput;\n  formAccidentDisease?: IFormAccidentDiseaseSortInput;\n  formAutomobileDamage?: IFormAutomobileDamageSortInput;\n  formDamage?: IFormDamageSortInput;\n  formLife?: IFormLifeSortInput;\n  personalInformation?: IPersonalInformationSortInput;\n  involvedReferrer?: IInvolvedReferrerSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProjectAgentProviderBranchSortInput {\n  projectId?: ISortEnumType;\n  projectAgentProviderId?: ISortEnumType;\n  projectAgentProvider?: IProjectAgentProviderSortInput;\n  branchId?: ISortEnumType;\n  branch?: IBranchSortInput;\n  subBranchId?: ISortEnumType;\n  subBranch?: ISubBranchSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBranchSortInput {\n  branchName?: ISortEnumType;\n  branchCode?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISubBranchSortInput {\n  subBranchName?: ISortEnumType;\n  subBranchCode?: ISortEnumType;\n  branchId?: ISortEnumType;\n  branch?: IBranchSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISucursalSortInput {\n  name?: ISortEnumType;\n  details?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IContractorSortInput {\n  projectId?: ISortEnumType;\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  secondLastName?: ISortEnumType;\n  socialReason?: ISortEnumType;\n  fullName?: ISortEnumType;\n  gender?: ISortEnumType;\n  birthDate?: ISortEnumType;\n  phoneNumber?: ISortEnumType;\n  rFC?: ISortEnumType;\n  description?: ISortEnumType;\n  email?: ISortEnumType;\n  active?: ISortEnumType;\n  contractorType?: ISortEnumType;\n  sucursalId?: ISortEnumType;\n  contractorClassificationId?: ISortEnumType;\n  contractorClassification?: IContractorClassificationSortInput;\n  contractorGroupId?: ISortEnumType;\n  contractorGroup?: IContractorGroupSortInput;\n  contractorGroupingLevelId?: ISortEnumType;\n  contractorGroupingLevel?: IContractorGroupingLevelSortInput;\n  contractorCelulaId?: ISortEnumType;\n  contractorCelula?: IContractorCelulaSortInput;\n  ownerId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  responsableId?: ISortEnumType;\n  referrerId?: ISortEnumType;\n  referrer?: IReferrerSortInput;\n  sucursal?: ISucursalSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IContractorClassificationSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  projectId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IContractorGroupSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  parentId?: ISortEnumType;\n  responsableId?: ISortEnumType;\n  groupType?: ISortEnumType;\n  parent?: IContractorGroupSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IContractorGroupingLevelSortInput {\n  levelGrouping?: ISortEnumType;\n  description?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  parentId?: ISortEnumType;\n  responsableId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  groupingType?: ISortEnumType;\n  parent?: IContractorGroupingLevelSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IContractorCelulaSortInput {\n  celulaName?: ISortEnumType;\n  description?: ISortEnumType;\n  active?: ISortEnumType;\n  projectId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IReferrerSortInput {\n  memberId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  hiredDate?: ISortEnumType;\n  email?: ISortEnumType;\n  address?: ISortEnumType;\n  operationFactures?: ISortEnumType;\n  paymentType?: ISortEnumType;\n  paymentFrequency?: ISortEnumType;\n  referenceNumber?: ISortEnumType;\n  bank?: ISortEnumType;\n  involvedReferrer?: IInvolvedReferrerSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInvolvedReferrerSortInput {\n  comisionVendedor?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  policeId?: ISortEnumType;\n  referrerId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  referrer?: IReferrerSortInput;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceAssignSortInput {\n  isOwner?: ISortEnumType;\n  active?: ISortEnumType;\n  policeId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPolicePendientSortInput {\n  email?: ISortEnumType;\n  isOwner?: ISortEnumType;\n  active?: ISortEnumType;\n  policeId?: ISortEnumType;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IFormAutomobileDamageSortInput {\n  brand?: ISortEnumType;\n  model?: ISortEnumType;\n  year?: ISortEnumType;\n  version?: ISortEnumType;\n  serial?: ISortEnumType;\n  engine?: ISortEnumType;\n  color?: ISortEnumType;\n  licensePlates?: ISortEnumType;\n  documentType?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  policeId?: ISortEnumType;\n  usage?: ISortEnumType;\n  email?: ISortEnumType;\n  beneficiaryAddress?: ISortEnumType;\n  beneficiaryName?: ISortEnumType;\n  beneficiaryRFC?: ISortEnumType;\n  adjusment?: ISortEnumType;\n  drive?: ISortEnumType;\n  montAdjustment?: ISortEnumType;\n  montSpecialTeam?: ISortEnumType;\n  specialTeam?: ISortEnumType;\n  service?: ISortEnumType;\n  policyType?: ISortEnumType;\n  chargeType?: ISortEnumType;\n  procedencia?: ISortEnumType;\n  personalId?: ISortEnumType;\n  preferencialBeneficiary?: ISortEnumType;\n  sumInsured?: ISortEnumType;\n  carOwner?: ISortEnumType;\n  noEmployee?: ISortEnumType;\n  projectId?: ISortEnumType;\n  personalInformation?: IPersonalInformationSortInput;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IFormDamageSortInput {\n  damageType?: ISortEnumType;\n  insuredItem?: ISortEnumType;\n  itemAddress?: ISortEnumType;\n  itemDetails?: ISortEnumType;\n  coinsurance?: ISortEnumType;\n  documentType?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  policeId?: ISortEnumType;\n  personalId?: ISortEnumType;\n  brand?: ISortEnumType;\n  color?: ISortEnumType;\n  constructionYear?: ISortEnumType;\n  damOwner?: ISortEnumType;\n  email?: ISortEnumType;\n  engine?: ISortEnumType;\n  fHMZone?: ISortEnumType;\n  girp?: ISortEnumType;\n  matricula?: ISortEnumType;\n  model?: ISortEnumType;\n  noEmployee?: ISortEnumType;\n  noLevels?: ISortEnumType;\n  permiso?: ISortEnumType;\n  purchaseValue?: ISortEnumType;\n  reconstructionYear?: ISortEnumType;\n  serial?: ISortEnumType;\n  sucursal?: ISortEnumType;\n  tYEVZone?: ISortEnumType;\n  typeConstruction?: ISortEnumType;\n  usage?: ISortEnumType;\n  version?: ISortEnumType;\n  projectId?: ISortEnumType;\n  personalInformation?: IPersonalInformationSortInput;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IEndorsementSortInput {\n  type?: ISortEnumType;\n  status?: ISortEnumType;\n  initDate?: ISortEnumType;\n  endDate?: ISortEnumType;\n  numberEndorsement?: ISortEnumType;\n  internalNumber?: ISortEnumType;\n  concept?: ISortEnumType;\n  otherDesc?: ISortEnumType;\n  original?: ISortEnumType;\n  change?: ISortEnumType;\n  observations?: ISortEnumType;\n  pNeta?: ISortEnumType;\n  rPF?: ISortEnumType;\n  rigth?: ISortEnumType;\n  iVA?: ISortEnumType;\n  pTotal?: ISortEnumType;\n  comision?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  policeId?: ISortEnumType;\n  comisionPercent?: ISortEnumType;\n  anuency?: ISortEnumType;\n  projectId?: ISortEnumType;\n  discount?: ISortEnumType;\n  researchCost?: ISortEnumType;\n  comisionPercentEarned?: ISortEnumType;\n  discoutnEarned?: ISortEnumType;\n  iVaEarned?: ISortEnumType;\n  pNETAEarned?: ISortEnumType;\n  pTotalEarned?: ISortEnumType;\n  rPFEarned?: ISortEnumType;\n  subTotalEarned?: ISortEnumType;\n  insuranceFolio?: ISortEnumType;\n  comitionPatmentDate?: ISortEnumType;\n  exchangeRate?: ISortEnumType;\n  maquila?: ISortEnumType;\n  bonoDate?: ISortEnumType;\n  variableBono?: ISortEnumType;\n  emisionFacturaDate?: ISortEnumType;\n  maquilaDate?: ISortEnumType;\n  folioFactura?: ISortEnumType;\n  monthFactura?: ISortEnumType;\n  fechaEntrega?: ISortEnumType;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBeneficiarieCollectionSegment {\n  items?: Array<IBeneficiarie>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IFormAccidentDiseaseCollectionSegment {\n  items?: Array<IFormAccidentDisease>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IFormAutomobileDamageCollectionSegment {\n  items?: Array<IFormAutomobileDamage>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IFormCarCatalogFilterInput {\n  and?: Array<IFormCarCatalogFilterInput>;\n  or?: Array<IFormCarCatalogFilterInput>;\n  carModel?: IStringOperationFilterInput;\n  carBrand?: IStringOperationFilterInput;\n  carYear?: IComparableNullableOfInt32OperationFilterInput;\n  description?: IStringOperationFilterInput;\n  carSubbrand?: IStringOperationFilterInput;\n  shortDescription?: IStringOperationFilterInput;\n  carType?: IStringOperationFilterInput;\n  carOccupants?: IComparableNullableOfInt32OperationFilterInput;\n  carClass?: IComparableNullableOfInt32OperationFilterInput;\n  carSearch?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IFormCarCatalogSortInput {\n  carModel?: ISortEnumType;\n  carBrand?: ISortEnumType;\n  carYear?: ISortEnumType;\n  description?: ISortEnumType;\n  carSubbrand?: ISortEnumType;\n  shortDescription?: ISortEnumType;\n  carType?: ISortEnumType;\n  carOccupants?: ISortEnumType;\n  carClass?: ISortEnumType;\n  carSearch?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IFormCarCatalogCollectionSegment {\n  items?: Array<IFormCarCatalog>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IFormCarCatalog {\n  carModel?: string;\n  carBrand?: string;\n  carYear?: number;\n  description?: string;\n  carSubbrand?: string;\n  shortDescription?: string;\n  carType?: string;\n  carOccupants?: number;\n  carClass?: number;\n  carSearch?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IFormDamageCollectionSegment {\n  items?: Array<IFormDamage>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IFormLifeCollectionSegment {\n  items?: Array<IFormLife>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInvolvedReferrerCollectionSegment {\n  items?: Array<IInvolvedReferrer>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IOldPoliceSortInput {\n  basePolicyId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  newPolicyId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  basePolice?: IPoliceSortInput;\n  newPolice?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IOldPoliceCollectionSegment {\n  items?: Array<IOldPolice>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPersonalInformationCollectionSegment {\n  items?: Array<IPersonalInformation>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPoliceCollectionSegment {\n  items?: Array<IPolice>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPoliceAssignCollectionSegment {\n  items?: Array<IPoliceAssign>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPolicePendientCollectionSegment {\n  items?: Array<IPolicePendient>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPoliceQuoteSortInput {\n  projectAgentProviderBranchId?: ISortEnumType;\n  ramoCode?: ISortEnumType;\n  subRamoCode?: ISortEnumType;\n  status?: ISortEnumType;\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  secondLastName?: ISortEnumType;\n  email?: ISortEnumType;\n  phone?: ISortEnumType;\n  car?: ISortEnumType;\n  observations?: ISortEnumType;\n  accidents?: ISortEnumType;\n  damages?: ISortEnumType;\n  life?: ISortEnumType;\n  isComplete?: ISortEnumType;\n  type?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  mainParent?: ISortEnumType;\n  active?: ISortEnumType;\n  prospectId?: ISortEnumType;\n  contractorId?: ISortEnumType;\n  contractor?: IContractorSortInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceQuoteCollectionSegment {\n  items?: Array<IPoliceQuote>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPoliceQuotePrimaSortInput {\n  aseguradora?: ISortEnumType;\n  prima?: ISortEnumType;\n  checked?: ISortEnumType;\n  projectId?: ISortEnumType;\n  policeQuoteId?: ISortEnumType;\n  policeQuote?: IPoliceQuoteSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceQuotePrimaCollectionSegment {\n  items?: Array<IPoliceQuotePrima>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IRelationShipSortInput {\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  secondLastName?: ISortEnumType;\n  birthDate?: ISortEnumType;\n  sex?: ISortEnumType;\n  relationship?: ISortEnumType;\n  accidentId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  fullName?: ISortEnumType;\n  isActive?: ISortEnumType;\n  endorsementId?: ISortEnumType;\n  antiquity?: ISortEnumType;\n  certificate?: ISortEnumType;\n  comision?: ISortEnumType;\n  rigth?: ISortEnumType;\n  iVA?: ISortEnumType;\n  projectId?: ISortEnumType;\n  pNeta?: ISortEnumType;\n  pTotal?: ISortEnumType;\n  rPF?: ISortEnumType;\n  discount?: ISortEnumType;\n  gastosInvestigacion?: ISortEnumType;\n  subTotal?: ISortEnumType;\n  chargeDate?: ISortEnumType;\n  comisionEarned?: ISortEnumType;\n  comisionPercentEarned?: ISortEnumType;\n  rigthEarned?: ISortEnumType;\n  discountEarned?: ISortEnumType;\n  dischangeDate?: ISortEnumType;\n  iVAEarned?: ISortEnumType;\n  pNetaEarned?: ISortEnumType;\n  pTotalEarned?: ISortEnumType;\n  rPFEarned?: ISortEnumType;\n  subTotalEarned?: ISortEnumType;\n  comisionPaymentDate?: ISortEnumType;\n  exchangeRate?: ISortEnumType;\n  maquila?: ISortEnumType;\n  bonoDate?: ISortEnumType;\n  maquilaDate?: ISortEnumType;\n  facturaYear?: ISortEnumType;\n  formAccidentDisease?: IFormAccidentDiseaseSortInput;\n  endorsement?: IEndorsementSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IRelationShipCollectionSegment {\n  items?: Array<IRelationShip>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISucursalCollectionSegment {\n  items?: Array<ISucursal>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IEndorsementCollectionSegment {\n  items?: Array<IEndorsement>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IEndorsementCertSortInput {\n  proceed?: ISortEnumType;\n  certificate?: ISortEnumType;\n  endorsementId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  beneficiarieId?: ISortEnumType;\n  relationShipId?: ISortEnumType;\n  endorsement?: IEndorsementSortInput;\n  beneficiarie?: IBeneficiarieSortInput;\n  relationShip?: IRelationShipSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IEndorsementCertCollectionSegment {\n  items?: Array<IEndorsementCert>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterSortInput {\n  companyFolio?: ISortEnumType;\n  internFolio?: ISortEnumType;\n  status?: ISortEnumType;\n  promiseDate?: ISortEnumType;\n  affectedItem?: ISortEnumType;\n  sinisterNumber?: ISortEnumType;\n  sinisterDate?: ISortEnumType;\n  typeSinisterGeneral?: ISortEnumType;\n  reason?: ISortEnumType;\n  observations?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  policeId?: ISortEnumType;\n  ingressDate?: ISortEnumType;\n  affectedAux?: ISortEnumType;\n  compromiseDate?: ISortEnumType;\n  affectedAuxRelationShip?: ISortEnumType;\n  insurerZipCodeSepomexId?: ISortEnumType;\n  date?: ISortEnumType;\n  projectId?: ISortEnumType;\n  terminationDate?: ISortEnumType;\n  fileLoadedDate?: ISortEnumType;\n  police?: IPoliceSortInput;\n  insurerZipCodeSepomex?: IInsurerZipCodeSepomexSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerZipCodeSepomexSortInput {\n  zipCode?: ISortEnumType;\n  colony?: ISortEnumType;\n  city?: ISortEnumType;\n  state?: ISortEnumType;\n  code?: ISortEnumType;\n  cityId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterCollectionSegment {\n  items?: Array<ISinister>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterAccidentSortInput {\n  relationShip?: ISortEnumType;\n  kindSinister?: ISortEnumType;\n  sinisterReason?: ISortEnumType;\n  sinisterComplement?: ISortEnumType;\n  sinisterType?: ISortEnumType;\n  paymentType?: ISortEnumType;\n  totalPayment?: ISortEnumType;\n  totalProcedent?: ISortEnumType;\n  totalCoaseguro?: ISortEnumType;\n  totalDeductible?: ISortEnumType;\n  totalFinal?: ISortEnumType;\n  initial?: ISortEnumType;\n  receiptStatus?: ISortEnumType;\n  dependientId?: ISortEnumType;\n  sinisterAilingId?: ISortEnumType;\n  sinisterId?: ISortEnumType;\n  titularId?: ISortEnumType;\n  ailment?: ISortEnumType;\n  anesthesiologist?: ISortEnumType;\n  helper?: ISortEnumType;\n  surgeon?: ISortEnumType;\n  coasHonorarios?: ISortEnumType;\n  coasHospital?: ISortEnumType;\n  dedHonorarios?: ISortEnumType;\n  dedHospital?: ISortEnumType;\n  montoHonorarios?: ISortEnumType;\n  montoHospital?: ISortEnumType;\n  others?: ISortEnumType;\n  surgeryDate?: ISortEnumType;\n  hospital?: ISortEnumType;\n  affectedFullName?: ISortEnumType;\n  complementConsecutiveNumber?: ISortEnumType;\n  initialAccidentId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  sinister?: ISinisterSortInput;\n  personalInformation?: IPersonalInformationSortInput;\n  dependient?: IRelationShipSortInput;\n  initialAccident?: ISinisterAccidentSortInput;\n  sinisterAiling?: ISinisterAilingSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterAilingSortInput {\n  code?: ISortEnumType;\n  description?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterAccidentCollectionSegment {\n  items?: Array<ISinisterAccident>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterAilingCollectionSegment {\n  items?: Array<ISinisterAiling>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterCarSortInput {\n  typeSinister?: ISortEnumType;\n  explication?: ISortEnumType;\n  third?: ISortEnumType;\n  imdemnization?: ISortEnumType;\n  sinisterId?: ISortEnumType;\n  driver?: ISortEnumType;\n  coaseguro?: ISortEnumType;\n  deductible?: ISortEnumType;\n  projectId?: ISortEnumType;\n  firstSubTypeSinister?: ISortEnumType;\n  secondSubTypeSinister?: ISortEnumType;\n  sinister?: ISinisterSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterCarCollectionSegment {\n  items?: Array<ISinisterCar>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterCarContactSortInput {\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  secondLastName?: ISortEnumType;\n  phone?: ISortEnumType;\n  email?: ISortEnumType;\n  references?: ISortEnumType;\n  sinisterCarId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  sinisterCar?: ISinisterCarSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterCarContactCollectionSegment {\n  items?: Array<ISinisterCarContact>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterDamageSortInput {\n  insuredProperty?: ISortEnumType;\n  lossEstimate?: ISortEnumType;\n  claimCause?: ISortEnumType;\n  affectedCoverage?: ISortEnumType;\n  indemnization?: ISortEnumType;\n  totalClaim?: ISortEnumType;\n  sinisterId?: ISortEnumType;\n  currency?: ISortEnumType;\n  exchangeRate?: ISortEnumType;\n  totalCoaseguro?: ISortEnumType;\n  totalDeductible?: ISortEnumType;\n  projectId?: ISortEnumType;\n  sinister?: ISinisterSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterDamageCollectionSegment {\n  items?: Array<ISinisterDamage>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterDamageContactSortInput {\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  secondLastName?: ISortEnumType;\n  phone?: ISortEnumType;\n  email?: ISortEnumType;\n  references?: ISortEnumType;\n  sinisterDamageId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  sinisterDamage?: ISinisterDamageSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterDamageContactCollectionSegment {\n  items?: Array<ISinisterDamageContact>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterFacturaSortInput {\n  facturaNumber?: ISortEnumType;\n  provider?: ISortEnumType;\n  facturaDate?: ISortEnumType;\n  import?: ISortEnumType;\n  iVA?: ISortEnumType;\n  total?: ISortEnumType;\n  procedent?: ISortEnumType;\n  observations?: ISortEnumType;\n  sinisterId?: ISortEnumType;\n  concept?: ISortEnumType;\n  serie?: ISortEnumType;\n  projectId?: ISortEnumType;\n  sinister?: ISinisterSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterFacturaCollectionSegment {\n  items?: Array<ISinisterFactura>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterHospitalFilterInput {\n  and?: Array<ISinisterHospitalFilterInput>;\n  or?: Array<ISinisterHospitalFilterInput>;\n  description?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ISinisterHospitalSortInput {\n  description?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterHospitalCollectionSegment {\n  items?: Array<ISinisterHospital>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterHospital {\n  description?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ISinisterLifeSortInput {\n  sinisterReason?: ISortEnumType;\n  paymentType?: ISortEnumType;\n  sinisterId?: ISortEnumType;\n  affectedName?: ISortEnumType;\n  relationAffected?: ISortEnumType;\n  projectId?: ISortEnumType;\n  sinister?: ISinisterSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterLifeCollectionSegment {\n  items?: Array<ISinisterLife>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterLifeContactFilterInput {\n  and?: Array<ISinisterLifeContactFilterInput>;\n  or?: Array<ISinisterLifeContactFilterInput>;\n  firstName?: IStringOperationFilterInput;\n  lastName?: IStringOperationFilterInput;\n  secondLastName?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  references?: IStringOperationFilterInput;\n  sinisterLifeId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  sinisterLife?: ISinisterLifeFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ISinisterLifeContactSortInput {\n  firstName?: ISortEnumType;\n  lastName?: ISortEnumType;\n  secondLastName?: ISortEnumType;\n  phone?: ISortEnumType;\n  email?: ISortEnumType;\n  references?: ISortEnumType;\n  sinisterLifeId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  sinisterLife?: ISinisterLifeSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ISinisterLifeContactCollectionSegment {\n  items?: Array<ISinisterLifeContact>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISinisterLifeContact {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  phone?: string;\n  email?: string;\n  references?: string;\n  sinisterLifeId?: IUUID;\n  projectId?: IUUID;\n  sinisterLife?: ISinisterLife;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceReceiptSortInput {\n  number?: ISortEnumType;\n  primaNeta?: ISortEnumType;\n  rPF?: ISortEnumType;\n  right?: ISortEnumType;\n  iVA?: ISortEnumType;\n  subTotal?: ISortEnumType;\n  primaTotal?: ISortEnumType;\n  status?: ISortEnumType;\n  startDate?: ISortEnumType;\n  endDate?: ISortEnumType;\n  description?: ISortEnumType;\n  folio?: ISortEnumType;\n  type?: ISortEnumType;\n  payForm?: ISortEnumType;\n  paymentDocument?: ISortEnumType;\n  isCopy?: ISortEnumType;\n  isActive?: ISortEnumType;\n  bank?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  policeId?: ISortEnumType;\n  comision?: ISortEnumType;\n  validityDate?: ISortEnumType;\n  reconciledComision?: ISortEnumType;\n  reconciledDate?: ISortEnumType;\n  reconciledObservation?: ISortEnumType;\n  settlementFolio?: ISortEnumType;\n  reconciledFolio?: ISortEnumType;\n  settlementDate?: ISortEnumType;\n  reconcilationAccountId?: ISortEnumType;\n  paymentDate?: ISortEnumType;\n  endorsementId?: ISortEnumType;\n  delivered?: ISortEnumType;\n  paymentFolio?: ISortEnumType;\n  settlementBank?: ISortEnumType;\n  settlementCurrRate?: ISortEnumType;\n  settlementDoc?: ISortEnumType;\n  settlementForm?: ISortEnumType;\n  excedent?: ISortEnumType;\n  agentProviderBonoId?: ISortEnumType;\n  changeReferrerComision?: ISortEnumType;\n  referrerComosion?: ISortEnumType;\n  binnacleTrack?: ISortEnumType;\n  emailTrack?: ISortEnumType;\n  phoneTrack?: ISortEnumType;\n  referrerClosedNew?: ISortEnumType;\n  memberPaymentId?: ISortEnumType;\n  paymentPromise?: ISortEnumType;\n  researchCost?: ISortEnumType;\n  projectId?: ISortEnumType;\n  conductPayment?: ISortEnumType;\n  exchangeRate?: ISortEnumType;\n  manualSerie?: ISortEnumType;\n  settlementMethod?: ISortEnumType;\n  memberSettlementId?: ISortEnumType;\n  police?: IPoliceSortInput;\n  endorsement?: IEndorsementSortInput;\n  policeReceiptAccount?: IPoliceReceiptAccountSortInput;\n  agentProviderbono?: IAgentProviderBonoSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceReceiptAccountSortInput {\n  name?: ISortEnumType;\n  account?: ISortEnumType;\n  observations?: ISortEnumType;\n  bank?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceReceiptCollectionSegment {\n  items?: Array<IPoliceReceipt>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPoliceReceiptAccountCollectionSegment {\n  items?: Array<IPoliceReceiptAccount>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPoliceReceiptAccountStateSortInput {\n  policeReceiptAccountId?: ISortEnumType;\n  policeReceiptId?: ISortEnumType;\n  policeReceipt?: IPoliceReceiptSortInput;\n  policeReceiptAccount?: IPoliceReceiptAccountSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceReceiptAccountStateCollectionSegment {\n  items?: Array<IPoliceReceiptAccountState>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPoliceReceiptFolioFilterInput {\n  and?: Array<IPoliceReceiptFolioFilterInput>;\n  or?: Array<IPoliceReceiptFolioFilterInput>;\n  paymentMethod?: INullableOfEnumPoliceReceiptFolioPaymentMethodOperationFilterInput;\n  paymentDocument?: IStringOperationFilterInput;\n  currentRate?: IComparableNullableOfInt32OperationFilterInput;\n  paymentDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  folio?: IStringOperationFilterInput;\n  bank?: INullableOfEnumBankOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumPoliceReceiptFolioPaymentMethodOperationFilterInput {\n  eq?: IEnumPoliceReceiptFolioPaymentMethod;\n  neq?: IEnumPoliceReceiptFolioPaymentMethod;\n  in?: Array<IEnumPoliceReceiptFolioPaymentMethod | null>;\n  nin?: Array<IEnumPoliceReceiptFolioPaymentMethod | null>;\n}\n\nexport const enum IEnumPoliceReceiptFolioPaymentMethod {\n  CHECK = 'CHECK',\n  CASH = 'CASH',\n  TRANSFER = 'TRANSFER',\n  BANK_DEPOSIT = 'BANK_DEPOSIT',\n  CREDIT_CARD = 'CREDIT_CARD',\n  DEBIT_CARD = 'DEBIT_CARD',\n  ACCOUNT_STATUS = 'ACCOUNT_STATUS',\n  COMPANY = 'COMPANY',\n  UNKNOWN = 'UNKNOWN'\n}\n\nexport interface IPoliceReceiptFolioSortInput {\n  paymentMethod?: ISortEnumType;\n  paymentDocument?: ISortEnumType;\n  currentRate?: ISortEnumType;\n  paymentDate?: ISortEnumType;\n  folio?: ISortEnumType;\n  bank?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceReceiptFolioCollectionSegment {\n  items?: Array<IPoliceReceiptFolio>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPoliceReceiptFolio {\n  paymentMethod?: IEnumPoliceReceiptFolioPaymentMethod;\n  paymentDocument?: string;\n  currentRate?: number;\n  paymentDate?: IDateTime;\n  folio?: string;\n  bank?: IEnumBank;\n  projectId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPoliceReceiptPaymentSortInput {\n  paymentMethod?: ISortEnumType;\n  paymentDocument?: ISortEnumType;\n  amount?: ISortEnumType;\n  paymentDate?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  policeReceiptId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  policeReceipt?: IPoliceReceiptSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceReceiptPaymentCollectionSegment {\n  items?: Array<IPoliceReceiptPayment>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IPoliceFileSortInput {\n  url?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  sensible?: ISortEnumType;\n  shared?: ISortEnumType;\n  documentType?: ISortEnumType;\n  checked?: ISortEnumType;\n  active?: ISortEnumType;\n  folio?: ISortEnumType;\n  baseModel?: ISortEnumType;\n  height?: ISortEnumType;\n  width?: ISortEnumType;\n  policeId?: ISortEnumType;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPoliceFileCollectionSegment {\n  items?: Array<IPoliceFile>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerCommentFilterInput {\n  and?: Array<IInsurerCommentFilterInput>;\n  or?: Array<IInsurerCommentFilterInput>;\n  model?: INullableOfEnumInsurerCommentModelOperationFilterInput;\n  modelId?: IComparableNullableOfGuidOperationFilterInput;\n  content?: IStringOperationFilterInput;\n  isChild?: IBooleanOperationFilterInput;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  hasReminder?: IBooleanOperationFilterInput;\n  reminderDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  taskModel?: IStringOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  parentId?: IComparableNullableOfGuidOperationFilterInput;\n  parent?: IInsurerCommentFilterInput;\n  insurerComments?: IListFilterInputTypeOfInsurerCommentFilterInput;\n  insurerLogEmails?: IListFilterInputTypeOfInsurerLogEmailFilterInput;\n  insurerTickets?: IListFilterInputTypeOfInsurerTicketFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfInsurerCommentFilterInput {\n  all?: IInsurerCommentFilterInput;\n  none?: IInsurerCommentFilterInput;\n  some?: IInsurerCommentFilterInput;\n  any?: boolean;\n}\n\nexport interface IListFilterInputTypeOfInsurerLogEmailFilterInput {\n  all?: IInsurerLogEmailFilterInput;\n  none?: IInsurerLogEmailFilterInput;\n  some?: IInsurerLogEmailFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerLogEmailFilterInput {\n  and?: Array<IInsurerLogEmailFilterInput>;\n  or?: Array<IInsurerLogEmailFilterInput>;\n  moldel?: INullableOfEnumInsurerCommentModelOperationFilterInput;\n  associatedId?: IStringOperationFilterInput;\n  to?: IListStringOperationFilterInput;\n  cC?: IListStringOperationFilterInput;\n  cCO?: IListStringOperationFilterInput;\n  subject?: IStringOperationFilterInput;\n  body?: IStringOperationFilterInput;\n  file?: IStringOperationFilterInput;\n  insurerCommentId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerLogId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerComment?: IInsurerCommentFilterInput;\n  insurerLog?: IInsurerLogFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerLogFilterInput {\n  and?: Array<IInsurerLogFilterInput>;\n  or?: Array<IInsurerLogFilterInput>;\n  moldel?: INullableOfEnumInsurerCommentModelOperationFilterInput;\n  event?: INullableOfEnumInsurerLogEventOperationFilterInput;\n  associatedId?: IStringOperationFilterInput;\n  identifier?: IStringOperationFilterInput;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  original?: IStringOperationFilterInput;\n  change?: IStringOperationFilterInput;\n  insurerLogEmails?: IListFilterInputTypeOfInsurerLogEmailFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumInsurerLogEventOperationFilterInput {\n  eq?: IEnumInsurerLogEvent;\n  neq?: IEnumInsurerLogEvent;\n  in?: Array<IEnumInsurerLogEvent | null>;\n  nin?: Array<IEnumInsurerLogEvent | null>;\n}\n\nexport const enum IEnumInsurerLogEvent {\n  CREATE = 'CREATE',\n  DELETE = 'DELETE',\n  UPDATE = 'UPDATE',\n  CANCEL = 'CANCEL'\n}\n\nexport interface IListFilterInputTypeOfInsurerTicketFilterInput {\n  all?: IInsurerTicketFilterInput;\n  none?: IInsurerTicketFilterInput;\n  some?: IInsurerTicketFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerTicketFilterInput {\n  and?: Array<IInsurerTicketFilterInput>;\n  or?: Array<IInsurerTicketFilterInput>;\n  title?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  date?: IComparableNullableOfDateTimeOperationFilterInput;\n  priority?: INullableOfEnumInsurerTicketPriorityOperationFilterInput;\n  closeDay?: IComparableNullableOfDateTimeOperationFilterInput;\n  closed?: IBooleanOperationFilterInput;\n  identifier?: IStringOperationFilterInput;\n  assignedId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  archived?: IBooleanOperationFilterInput;\n  associated?: IStringOperationFilterInput;\n  model?: IComparableNullableOfInt32OperationFilterInput;\n  route?: IStringOperationFilterInput;\n  concept?: INullableOfEnumInsurerTicketConceptOperationFilterInput;\n  insurerCommentId?: IComparableNullableOfGuidOperationFilterInput;\n  closedBy?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  reassingBy?: IComparableNullableOfGuidOperationFilterInput;\n  reassignDate?: IComparableNullableOfDateTimeOperationFilterInput;\n  insurerComment?: IInsurerCommentFilterInput;\n  insurerInvolved?: IListFilterInputTypeOfInsurerInvolvedFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumInsurerTicketPriorityOperationFilterInput {\n  eq?: IEnumInsurerTicketPriority;\n  neq?: IEnumInsurerTicketPriority;\n  in?: Array<IEnumInsurerTicketPriority | null>;\n  nin?: Array<IEnumInsurerTicketPriority | null>;\n}\n\nexport const enum IEnumInsurerTicketPriority {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH'\n}\n\nexport interface INullableOfEnumInsurerTicketConceptOperationFilterInput {\n  eq?: IEnumInsurerTicketConcept;\n  neq?: IEnumInsurerTicketConcept;\n  in?: Array<IEnumInsurerTicketConcept | null>;\n  nin?: Array<IEnumInsurerTicketConcept | null>;\n}\n\nexport const enum IEnumInsurerTicketConcept {\n  ENDORSEMENT = 'ENDORSEMENT',\n  EMISSION = 'EMISSION',\n  QUOTE = 'QUOTE',\n  CORRECTION = 'CORRECTION',\n  CANCELATION = 'CANCELATION',\n  RENEW = 'RENEW',\n  ANOTHER = 'ANOTHER',\n  REFUND = 'REFUND',\n  SURGERY_SCHEDULING = 'SURGERY_SCHEDULING',\n  B_ENDORSEMENT = 'B_ENDORSEMENT',\n  D_ENDORSEMENT = 'D_ENDORSEMENT',\n  RECOGNITION_ANTIQUITY = 'RECOGNITION_ANTIQUITY',\n  ANTIQUITY_LETTER = 'ANTIQUITY_LETTER'\n}\n\nexport interface IListFilterInputTypeOfInsurerInvolvedFilterInput {\n  all?: IInsurerInvolvedFilterInput;\n  none?: IInsurerInvolvedFilterInput;\n  some?: IInsurerInvolvedFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerInvolvedFilterInput {\n  and?: Array<IInsurerInvolvedFilterInput>;\n  or?: Array<IInsurerInvolvedFilterInput>;\n  involvedId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  personId?: IComparableNullableOfGuidOperationFilterInput;\n  projetId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerTicket?: IInsurerTicketFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerCommentSortInput {\n  model?: ISortEnumType;\n  modelId?: ISortEnumType;\n  content?: ISortEnumType;\n  isChild?: ISortEnumType;\n  memberId?: ISortEnumType;\n  hasReminder?: ISortEnumType;\n  reminderDate?: ISortEnumType;\n  taskModel?: ISortEnumType;\n  projectId?: ISortEnumType;\n  parentId?: ISortEnumType;\n  parent?: IInsurerCommentSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerCommentCollectionSegment {\n  items?: Array<IInsurerComment>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerComment {\n  model?: IEnumInsurerCommentModel;\n  modelId?: IUUID;\n  content?: string;\n  isChild?: boolean;\n  memberId?: IUUID;\n  hasReminder?: boolean;\n  reminderDate?: IDateTime;\n  taskModel?: string;\n  projectId?: IUUID;\n  parentId?: IUUID;\n  parent?: IInsurerComment;\n  insurerComments: Array<IInsurerComment>;\n  insurerLogEmails: Array<IInsurerLogEmail>;\n  insurerTickets: Array<IInsurerTicket>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerLogEmail {\n  moldel?: IEnumInsurerCommentModel;\n  associatedId?: string;\n  to: Array<string>;\n  cC: Array<string>;\n  cCO: Array<string>;\n  subject?: string;\n  body?: string;\n  file?: string;\n  insurerCommentId?: IUUID;\n  insurerLogId?: IUUID;\n  insurerComment?: IInsurerComment;\n  insurerLog?: IInsurerLog;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerLog {\n  moldel?: IEnumInsurerCommentModel;\n  event?: IEnumInsurerLogEvent;\n  associatedId?: string;\n  identifier?: string;\n  memberId?: IUUID;\n  projectId?: IUUID;\n  original?: string;\n  change?: string;\n  insurerLogEmails: Array<IInsurerLogEmail>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerTicket {\n  title?: string;\n  description?: string;\n  date?: IDateTime;\n  priority?: IEnumInsurerTicketPriority;\n  closeDay?: IDateTime;\n  closed?: boolean;\n  identifier?: string;\n  assignedId?: IUUID;\n  ownerId?: IUUID;\n  archived?: boolean;\n  associated?: string;\n  model?: number;\n  route?: string;\n  concept?: IEnumInsurerTicketConcept;\n  insurerCommentId?: IUUID;\n  closedBy?: IUUID;\n  projectId?: IUUID;\n  reassingBy?: IUUID;\n  reassignDate?: IDateTime;\n  insurerComment?: IInsurerComment;\n  insurerInvolved: Array<IInsurerInvolved>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerInvolved {\n  involvedId?: IUUID;\n  ownerId?: IUUID;\n  personId?: IUUID;\n  projetId?: IUUID;\n  insurerTicket?: IInsurerTicket;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerFileReadingFilterInput {\n  and?: Array<IInsurerFileReadingFilterInput>;\n  or?: Array<IInsurerFileReadingFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  policeType?: IStringOperationFilterInput;\n  insurer?: IStringOperationFilterInput;\n  branch?: IStringOperationFilterInput;\n  subBranch?: IStringOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerFileReadingSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  policeType?: ISortEnumType;\n  insurer?: ISortEnumType;\n  branch?: ISortEnumType;\n  subBranch?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerFileReadingCollectionSegment {\n  items?: Array<IInsurerFileReading>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerFileReading {\n  projectId?: IUUID;\n  name?: string;\n  policeType?: string;\n  insurer?: string;\n  branch?: string;\n  subBranch?: string;\n  ownerId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerFileReadingTagFilterInput {\n  and?: Array<IInsurerFileReadingTagFilterInput>;\n  or?: Array<IInsurerFileReadingTagFilterInput>;\n  area?: IStringOperationFilterInput;\n  cssClass?: IStringOperationFilterInput;\n  height?: IStringOperationFilterInput;\n  width?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  pageNumber?: IStringOperationFilterInput;\n  tag?: IStringOperationFilterInput;\n  x?: IStringOperationFilterInput;\n  y?: IStringOperationFilterInput;\n  z?: IStringOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerFileReadingTagSortInput {\n  area?: ISortEnumType;\n  cssClass?: ISortEnumType;\n  height?: ISortEnumType;\n  width?: ISortEnumType;\n  name?: ISortEnumType;\n  pageNumber?: ISortEnumType;\n  tag?: ISortEnumType;\n  x?: ISortEnumType;\n  y?: ISortEnumType;\n  z?: ISortEnumType;\n  projectId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerFileReadingTagCollectionSegment {\n  items?: Array<IInsurerFileReadingTag>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerFileReadingTag {\n  area?: string;\n  cssClass?: string;\n  height?: string;\n  width?: string;\n  name?: string;\n  pageNumber?: string;\n  tag?: string;\n  x?: string;\n  y?: string;\n  z?: string;\n  projectId?: IUUID;\n  ownerId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerInvolvedSortInput {\n  involvedId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  personId?: ISortEnumType;\n  projetId?: ISortEnumType;\n  insurerTicket?: IInsurerTicketSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerTicketSortInput {\n  title?: ISortEnumType;\n  description?: ISortEnumType;\n  date?: ISortEnumType;\n  priority?: ISortEnumType;\n  closeDay?: ISortEnumType;\n  closed?: ISortEnumType;\n  identifier?: ISortEnumType;\n  assignedId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  archived?: ISortEnumType;\n  associated?: ISortEnumType;\n  model?: ISortEnumType;\n  route?: ISortEnumType;\n  concept?: ISortEnumType;\n  insurerCommentId?: ISortEnumType;\n  closedBy?: ISortEnumType;\n  projectId?: ISortEnumType;\n  reassingBy?: ISortEnumType;\n  reassignDate?: ISortEnumType;\n  insurerComment?: IInsurerCommentSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerInvolvedCollectionSegment {\n  items?: Array<IInsurerInvolved>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerLogSortInput {\n  moldel?: ISortEnumType;\n  event?: ISortEnumType;\n  associatedId?: ISortEnumType;\n  identifier?: ISortEnumType;\n  memberId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  original?: ISortEnumType;\n  change?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerLogCollectionSegment {\n  items?: Array<IInsurerLog>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerLogEmailSortInput {\n  moldel?: ISortEnumType;\n  associatedId?: ISortEnumType;\n  subject?: ISortEnumType;\n  body?: ISortEnumType;\n  file?: ISortEnumType;\n  insurerCommentId?: ISortEnumType;\n  insurerLogId?: ISortEnumType;\n  insurerComment?: IInsurerCommentSortInput;\n  insurerLog?: IInsurerLogSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerLogEmailCollectionSegment {\n  items?: Array<IInsurerLogEmail>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerOrgInfoFilterInput {\n  and?: Array<IInsurerOrgInfoFilterInput>;\n  or?: Array<IInsurerOrgInfoFilterInput>;\n  policeRequest?: IBooleanOperationFilterInput;\n  endosoRequest?: IBooleanOperationFilterInput;\n  renewal?: IBooleanOperationFilterInput;\n  policeRecord?: IBooleanOperationFilterInput;\n  endosoRecord?: IBooleanOperationFilterInput;\n  sinisterRequest?: IBooleanOperationFilterInput;\n  sinisterEnd?: IBooleanOperationFilterInput;\n  coberageReminder?: IBooleanOperationFilterInput;\n  renReminder?: IBooleanOperationFilterInput;\n  collectionRemider?: IBooleanOperationFilterInput;\n  noteCreated?: IBooleanOperationFilterInput;\n  noteApplied?: IBooleanOperationFilterInput;\n  sinisterCancel?: IBooleanOperationFilterInput;\n  sinisterReject?: IBooleanOperationFilterInput;\n  sinisterOnHold?: IBooleanOperationFilterInput;\n  sinisterInProcess?: IBooleanOperationFilterInput;\n  cumReminder?: IBooleanOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerOrgInfoSortInput {\n  policeRequest?: ISortEnumType;\n  endosoRequest?: ISortEnumType;\n  renewal?: ISortEnumType;\n  policeRecord?: ISortEnumType;\n  endosoRecord?: ISortEnumType;\n  sinisterRequest?: ISortEnumType;\n  sinisterEnd?: ISortEnumType;\n  coberageReminder?: ISortEnumType;\n  renReminder?: ISortEnumType;\n  collectionRemider?: ISortEnumType;\n  noteCreated?: ISortEnumType;\n  noteApplied?: ISortEnumType;\n  sinisterCancel?: ISortEnumType;\n  sinisterReject?: ISortEnumType;\n  sinisterOnHold?: ISortEnumType;\n  sinisterInProcess?: ISortEnumType;\n  cumReminder?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerOrgInfoCollectionSegment {\n  items?: Array<IInsurerOrgInfo>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerOrgInfo {\n  policeRequest?: boolean;\n  endosoRequest?: boolean;\n  renewal?: boolean;\n  policeRecord?: boolean;\n  endosoRecord?: boolean;\n  sinisterRequest?: boolean;\n  sinisterEnd?: boolean;\n  coberageReminder?: boolean;\n  renReminder?: boolean;\n  collectionRemider?: boolean;\n  noteCreated?: boolean;\n  noteApplied?: boolean;\n  sinisterCancel?: boolean;\n  sinisterReject?: boolean;\n  sinisterOnHold?: boolean;\n  sinisterInProcess?: boolean;\n  cumReminder?: boolean;\n  projectId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerTicketCollectionSegment {\n  items?: Array<IInsurerTicket>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerScheduleFilterInput {\n  and?: Array<IInsurerScheduleFilterInput>;\n  or?: Array<IInsurerScheduleFilterInput>;\n  title?: IStringOperationFilterInput;\n  color?: IStringOperationFilterInput;\n  startsAt?: IComparableNullableOfDateTimeOperationFilterInput;\n  endsAt?: IComparableNullableOfDateTimeOperationFilterInput;\n  resizable?: IBooleanOperationFilterInput;\n  draggable?: IBooleanOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  observations?: IStringOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerScheduleParticipant?: IListFilterInputTypeOfInsurerScheduleParticipantFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfInsurerScheduleParticipantFilterInput {\n  all?: IInsurerScheduleParticipantFilterInput;\n  none?: IInsurerScheduleParticipantFilterInput;\n  some?: IInsurerScheduleParticipantFilterInput;\n  any?: boolean;\n}\n\nexport interface IInsurerScheduleParticipantFilterInput {\n  and?: Array<IInsurerScheduleParticipantFilterInput>;\n  or?: Array<IInsurerScheduleParticipantFilterInput>;\n  insurerScheduleId?: IComparableNullableOfGuidOperationFilterInput;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerSchedule?: IInsurerScheduleFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerScheduleSortInput {\n  title?: ISortEnumType;\n  color?: ISortEnumType;\n  startsAt?: ISortEnumType;\n  endsAt?: ISortEnumType;\n  resizable?: ISortEnumType;\n  draggable?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  observations?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerScheduleCollectionSegment {\n  items?: Array<IInsurerSchedule>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerSchedule {\n  title?: string;\n  color?: string;\n  startsAt?: IDateTime;\n  endsAt?: IDateTime;\n  resizable?: boolean;\n  draggable?: boolean;\n  ownerId?: IUUID;\n  observations?: string;\n  projectId?: IUUID;\n  insurerScheduleParticipant: Array<IInsurerScheduleParticipant>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerScheduleParticipant {\n  insurerScheduleId?: IUUID;\n  memberId?: IUUID;\n  insurerSchedule?: IInsurerSchedule;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerScheduleParticipantSortInput {\n  insurerScheduleId?: ISortEnumType;\n  memberId?: ISortEnumType;\n  insurerSchedule?: IInsurerScheduleSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerScheduleParticipantCollectionSegment {\n  items?: Array<IInsurerScheduleParticipant>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerNotificationFilterInput {\n  and?: Array<IInsurerNotificationFilterInput>;\n  or?: Array<IInsurerNotificationFilterInput>;\n  model?: INullableOfEnumInsurerCommentModelOperationFilterInput;\n  modelId?: IComparableNullableOfGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  seen?: IBooleanOperationFilterInput;\n  involved?: IBooleanOperationFilterInput;\n  assignedId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  areaInvolved?: IBooleanOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  contractorPolice?: IListComparableGuidOperationFilterInput;\n  policeGroupongLevel?: IComparableNullableOfGuidOperationFilterInput;\n  policeProvider?: IListComparableGuidOperationFilterInput;\n  policeBranch?: IListComparableGuidOperationFilterInput;\n  site?: IStringOperationFilterInput;\n  startsAt?: IComparableNullableOfDateTimeOperationFilterInput;\n  type?: INullableOfEnumNotificationTypeOperationFilterInput;\n  reminderRecordId?: IComparableNullableOfGuidOperationFilterInput;\n  insurerReminderRecord?: IInsurerReminderRecordFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumNotificationTypeOperationFilterInput {\n  eq?: IEnumNotificationType;\n  neq?: IEnumNotificationType;\n  in?: Array<IEnumNotificationType | null>;\n  nin?: Array<IEnumNotificationType | null>;\n}\n\nexport const enum IEnumNotificationType {\n  NOTIFICATION = 'NOTIFICATION',\n  PROMOTION = 'PROMOTION'\n}\n\nexport interface IInsurerNotificationSortInput {\n  model?: ISortEnumType;\n  modelId?: ISortEnumType;\n  title?: ISortEnumType;\n  description?: ISortEnumType;\n  seen?: ISortEnumType;\n  involved?: ISortEnumType;\n  assignedId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  areaInvolved?: ISortEnumType;\n  projectId?: ISortEnumType;\n  policeGroupongLevel?: ISortEnumType;\n  site?: ISortEnumType;\n  startsAt?: ISortEnumType;\n  type?: ISortEnumType;\n  reminderRecordId?: ISortEnumType;\n  insurerReminderRecord?: IInsurerReminderRecordSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerReminderRecordSortInput {\n  insurerReminderId?: ISortEnumType;\n  seen?: ISortEnumType;\n  projectId?: ISortEnumType;\n  recordId?: ISortEnumType;\n  recordModel?: ISortEnumType;\n  insurerReminder?: IInsurerReminderSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerReminderSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  sended?: ISortEnumType;\n  type?: ISortEnumType;\n  instanceType?: ISortEnumType;\n  reminderDate?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerNotificationCollectionSegment {\n  items?: Array<IInsurerNotification>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerNotification {\n  model?: IEnumInsurerCommentModel;\n  modelId?: IUUID;\n  title?: string;\n  description?: string;\n  seen?: boolean;\n  involved?: boolean;\n  assignedId?: IUUID;\n  ownerId?: IUUID;\n  areaInvolved?: boolean;\n  projectId?: IUUID;\n  contractorPolice?: Array<IUUID>;\n  policeGroupongLevel?: IUUID;\n  policeProvider?: Array<IUUID>;\n  policeBranch?: Array<IUUID>;\n  site?: string;\n  startsAt?: IDateTime;\n  type?: IEnumNotificationType;\n  reminderRecordId?: IUUID;\n  insurerReminderRecord?: IInsurerReminderRecord;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerReminderCollectionSegment {\n  items?: Array<IInsurerReminder>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerReminderProjectAgentProviderSortInput {\n  insurerReminderId?: ISortEnumType;\n  projectAgentProviderId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  insurerReminder?: IInsurerReminderSortInput;\n  projectAgentProvider?: IProjectAgentProviderSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerReminderProjectAgentProviderCollectionSegment {\n  items?: Array<IInsurerReminderProjectAgentProvider>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerReminderRecordCollectionSegment {\n  items?: Array<IInsurerReminderRecord>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerReminderSubBranchSortInput {\n  insurerReminderId?: ISortEnumType;\n  subBranch?: ISortEnumType;\n  projectId?: ISortEnumType;\n  insurerReminder?: IInsurerReminderSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerReminderSubBranchCollectionSegment {\n  items?: Array<IInsurerReminderSubBranch>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerBailTypeSortInput {\n  name?: ISortEnumType;\n  code?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  subBranchId?: ISortEnumType;\n  subBranch?: ISubBranchSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerBailTypeCollectionSegment {\n  items?: Array<IInsurerBailType>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerBirthDateTemplateFilterInput {\n  and?: Array<IInsurerBirthDateTemplateFilterInput>;\n  or?: Array<IInsurerBirthDateTemplateFilterInput>;\n  subject?: IStringOperationFilterInput;\n  text?: IStringOperationFilterInput;\n  enabled?: IBooleanOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerBirthDateTemplateSortInput {\n  subject?: ISortEnumType;\n  text?: ISortEnumType;\n  enabled?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerBirthDateTemplateCollectionSegment {\n  items?: Array<IInsurerBirthDateTemplate>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerBirthDateTemplate {\n  subject?: string;\n  text?: string;\n  enabled?: boolean;\n  projectId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerDirectoryFilterInput {\n  and?: Array<IInsurerDirectoryFilterInput>;\n  or?: Array<IInsurerDirectoryFilterInput>;\n  name?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  area?: IStringOperationFilterInput;\n  employment?: IStringOperationFilterInput;\n  branch?: IComparableNullableOfGuidOperationFilterInput;\n  gender?: INullableOfEnumGenderOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumGenderOperationFilterInput {\n  eq?: Isaam_EnumGender;\n  neq?: Isaam_EnumGender;\n  in?: Array<Isaam_EnumGender | null>;\n  nin?: Array<Isaam_EnumGender | null>;\n}\n\nexport interface IInsurerDirectorySortInput {\n  name?: ISortEnumType;\n  phone?: ISortEnumType;\n  area?: ISortEnumType;\n  employment?: ISortEnumType;\n  branch?: ISortEnumType;\n  gender?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerDirectoryCollectionSegment {\n  items?: Array<IInsurerDirectory>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerDirectory {\n  name?: string;\n  phone?: string;\n  area?: string;\n  employment?: string;\n  branch?: IUUID;\n  gender?: Isaam_EnumGender;\n  projectId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerExpenseFilterInput {\n  and?: Array<IInsurerExpenseFilterInput>;\n  or?: Array<IInsurerExpenseFilterInput>;\n  quantity?: IComparableNullableOfInt32OperationFilterInput;\n  concept?: IStringOperationFilterInput;\n  month?: INullableOfEnumMonthOperationFilterInput;\n  porjectId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumMonthOperationFilterInput {\n  eq?: IEnumMonth;\n  neq?: IEnumMonth;\n  in?: Array<IEnumMonth | null>;\n  nin?: Array<IEnumMonth | null>;\n}\n\nexport const enum IEnumMonth {\n  JANUARY = 'JANUARY',\n  FEBRUARY = 'FEBRUARY',\n  MARCH = 'MARCH',\n  APRIL = 'APRIL',\n  MAY = 'MAY',\n  JUNE = 'JUNE',\n  JULY = 'JULY',\n  AUGUST = 'AUGUST',\n  SEPTEMBER = 'SEPTEMBER',\n  OCTOBER = 'OCTOBER',\n  NOVEMBER = 'NOVEMBER',\n  DECEMBER = 'DECEMBER'\n}\n\nexport interface IInsurerExpenseSortInput {\n  quantity?: ISortEnumType;\n  concept?: ISortEnumType;\n  month?: ISortEnumType;\n  porjectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerExpenseCollectionSegment {\n  items?: Array<IInsurerExpense>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerExpense {\n  quantity?: number;\n  concept?: string;\n  month?: IEnumMonth;\n  porjectId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerIbisFormFilterInput {\n  and?: Array<IInsurerIbisFormFilterInput>;\n  or?: Array<IInsurerIbisFormFilterInput>;\n  file?: IStringOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  branch?: IComparableNullableOfGuidOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerIbisFormSortInput {\n  file?: ISortEnumType;\n  name?: ISortEnumType;\n  branch?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerIbisFormCollectionSegment {\n  items?: Array<IInsurerIbisForm>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerIbisForm {\n  file?: string;\n  name?: string;\n  branch?: IUUID;\n  projectId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerIbisProviderFilterInput {\n  and?: Array<IInsurerIbisProviderFilterInput>;\n  or?: Array<IInsurerIbisProviderFilterInput>;\n  name?: IStringOperationFilterInput;\n  street?: IStringOperationFilterInput;\n  number?: IStringOperationFilterInput;\n  colony?: IStringOperationFilterInput;\n  city?: IStringOperationFilterInput;\n  zipCode?: IComparableNullableOfInt32OperationFilterInput;\n  state?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  latitude?: IComparableNullableOfDoubleOperationFilterInput;\n  length?: IComparableNullableOfDoubleOperationFilterInput;\n  branch?: IComparableNullableOfGuidOperationFilterInput;\n  type?: IComparableNullableOfInt32OperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerIbisProviderSortInput {\n  name?: ISortEnumType;\n  street?: ISortEnumType;\n  number?: ISortEnumType;\n  colony?: ISortEnumType;\n  city?: ISortEnumType;\n  zipCode?: ISortEnumType;\n  state?: ISortEnumType;\n  phone?: ISortEnumType;\n  latitude?: ISortEnumType;\n  length?: ISortEnumType;\n  branch?: ISortEnumType;\n  type?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerIbisProviderCollectionSegment {\n  items?: Array<IInsurerIbisProvider>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerIbisProvider {\n  name?: string;\n  street?: string;\n  number?: string;\n  colony?: string;\n  city?: string;\n  zipCode?: number;\n  state?: string;\n  phone?: string;\n  latitude?: number;\n  length?: number;\n  branch?: IUUID;\n  type?: number;\n  projectId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerSenderFilterInput {\n  and?: Array<IInsurerSenderFilterInput>;\n  or?: Array<IInsurerSenderFilterInput>;\n  email?: IStringOperationFilterInput;\n  passApp?: IStringOperationFilterInput;\n  area?: IComparableNullableOfInt32OperationFilterInput;\n  active?: IBooleanOperationFilterInput;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IInsurerSenderSortInput {\n  email?: ISortEnumType;\n  passApp?: ISortEnumType;\n  area?: ISortEnumType;\n  active?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IInsurerSenderCollectionSegment {\n  items?: Array<IInsurerSender>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IInsurerSender {\n  email?: string;\n  passApp?: string;\n  area?: number;\n  active?: boolean;\n  projectId?: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IInsurerZipCodeSepomexCollectionSegment {\n  items?: Array<IInsurerZipCodeSepomex>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IComissionSortInput {\n  projectAgentProviderBranchId?: ISortEnumType;\n  name?: ISortEnumType;\n  amount?: ISortEnumType;\n  uDI?: ISortEnumType;\n  other?: ISortEnumType;\n  observations?: ISortEnumType;\n  efectiveDate?: ISortEnumType;\n  expireDate?: ISortEnumType;\n  commisionRPF?: ISortEnumType;\n  otherRPF?: ISortEnumType;\n  rigth?: ISortEnumType;\n  otherRigths?: ISortEnumType;\n  initialPeriod?: ISortEnumType;\n  subSequentPeriod?: ISortEnumType;\n  anualRPF?: ISortEnumType;\n  bimestralRPF?: ISortEnumType;\n  mensualRPF?: ISortEnumType;\n  trimestralRPF?: ISortEnumType;\n  rigthUDI?: ISortEnumType;\n  rigthComission?: ISortEnumType;\n  keyId?: ISortEnumType;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchSortInput;\n  agentKey?: IAgentKeySortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IComissionCollectionSegment {\n  items?: Array<IComission>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICoverageTopecoinsuranceFilterInput {\n  and?: Array<ICoverageTopecoinsuranceFilterInput>;\n  or?: Array<ICoverageTopecoinsuranceFilterInput>;\n  topecinsurance?: IStringOperationFilterInput;\n  topecinsuranceId?: IComparableNullableOfInt32OperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICoverageTopecoinsuranceSortInput {\n  topecinsurance?: ISortEnumType;\n  topecinsuranceId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICoverageTopecoinsuranceCollectionSegment {\n  items?: Array<ICoverageTopecoinsurance>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICoverageTopecoinsurance {\n  topecinsurance?: string;\n  topecinsuranceId?: number;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICoverageSuminsuredFilterInput {\n  and?: Array<ICoverageSuminsuredFilterInput>;\n  or?: Array<ICoverageSuminsuredFilterInput>;\n  sumInsured?: IStringOperationFilterInput;\n  sumId?: IComparableNullableOfInt32OperationFilterInput;\n  default?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICoverageSuminsuredSortInput {\n  sumInsured?: ISortEnumType;\n  sumId?: ISortEnumType;\n  default?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICoverageSuminsuredCollectionSegment {\n  items?: Array<ICoverageSuminsured>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICoverageSuminsured {\n  sumInsured?: string;\n  sumId?: number;\n  default?: boolean;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICoveragePackageSortInput {\n  name?: ISortEnumType;\n  description?: ISortEnumType;\n  projectAgentProviderBranchId?: ISortEnumType;\n  typePackage?: ISortEnumType;\n  policy?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  projectAgentProviderId?: ISortEnumType;\n  projectAgentProvider?: IProjectAgentProviderSortInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICoveragePackageCollectionSegment {\n  items?: Array<ICoveragePackage>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICoverageFilterInput {\n  and?: Array<ICoverageFilterInput>;\n  or?: Array<ICoverageFilterInput>;\n  name?: IStringOperationFilterInput;\n  default?: IBooleanOperationFilterInput;\n  ownerId?: IComparableGuidOperationFilterInput;\n  packageId?: IComparableGuidOperationFilterInput;\n  projectAgentProviderId?: IComparableGuidOperationFilterInput;\n  priority?: IComparableInt32OperationFilterInput;\n  typeCoverage?: IComparableInt32OperationFilterInput;\n  coveragePackage?: ICoveragePackageFilterInput;\n  projectAgentProvider?: IProjectAgentProviderFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICoverageSortInput {\n  name?: ISortEnumType;\n  default?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  packageId?: ISortEnumType;\n  projectAgentProviderId?: ISortEnumType;\n  priority?: ISortEnumType;\n  typeCoverage?: ISortEnumType;\n  coveragePackage?: ICoveragePackageSortInput;\n  projectAgentProvider?: IProjectAgentProviderSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICoverageCollectionSegment {\n  items?: Array<Isaam_Coverage>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface Isaam_Coverage {\n  name?: string;\n  default?: boolean;\n  ownerId: IUUID;\n  packageId: IUUID;\n  projectAgentProviderId: IUUID;\n  priority: number;\n  typeCoverage: number;\n  coveragePackage?: ICoveragePackage;\n  projectAgentProvider?: IProjectAgentProvider;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICoverageInPolicySortInput {\n  name?: ISortEnumType;\n  sumInsured?: ISortEnumType;\n  deductible?: ISortEnumType;\n  prima?: ISortEnumType;\n  coinsurance?: ISortEnumType;\n  topecoinsurance?: ISortEnumType;\n  priority?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  policyId?: ISortEnumType;\n  packageId?: ISortEnumType;\n  coveragePackage?: ICoveragePackageSortInput;\n  police?: IPoliceSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICoverageInPolicyCollectionSegment {\n  items?: Array<ICoverageInPolicy>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICoverageDeductibleFilterInput {\n  and?: Array<ICoverageDeductibleFilterInput>;\n  or?: Array<ICoverageDeductibleFilterInput>;\n  deductible?: IStringOperationFilterInput;\n  deductibleId?: IComparableNullableOfInt32OperationFilterInput;\n  default?: IBooleanOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICoverageDeductibleSortInput {\n  deductible?: ISortEnumType;\n  deductibleId?: ISortEnumType;\n  default?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICoverageDeductibleCollectionSegment {\n  items?: Array<ICoverageDeductible>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICoverageDeductible {\n  deductible?: string;\n  deductibleId?: number;\n  default?: boolean;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICoverageCoinsuranceFilterInput {\n  and?: Array<ICoverageCoinsuranceFilterInput>;\n  or?: Array<ICoverageCoinsuranceFilterInput>;\n  coinsurance?: IStringOperationFilterInput;\n  coinsuranceId?: IComparableNullableOfInt32OperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface ICoverageCoinsuranceSortInput {\n  coinsurance?: ISortEnumType;\n  coinsuranceId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICoverageCoinsuranceCollectionSegment {\n  items?: Array<ICoverageCoinsurance>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICoverageCoinsurance {\n  coinsurance?: string;\n  coinsuranceId?: number;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IResponsableInvolvedFilterInput {\n  and?: Array<IResponsableInvolvedFilterInput>;\n  or?: Array<IResponsableInvolvedFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  responsableId?: IComparableNullableOfGuidOperationFilterInput;\n  ownerId?: IComparableNullableOfGuidOperationFilterInput;\n  area?: INullableOfEnumResponsableAreaOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  contractorId?: IComparableGuidOperationFilterInput;\n  contractor?: Isaam_ContractorFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INullableOfEnumResponsableAreaOperationFilterInput {\n  eq?: IEnumResponsableArea;\n  neq?: IEnumResponsableArea;\n  in?: Array<IEnumResponsableArea | null>;\n  nin?: Array<IEnumResponsableArea | null>;\n}\n\nexport const enum IEnumResponsableArea {\n  EMITION = 'EMITION',\n  EJECUTIVE = 'EJECUTIVE',\n  COMERTIAL = 'COMERTIAL',\n  COLLECTION = 'COLLECTION',\n  SINISTER = 'SINISTER'\n}\n\nexport interface IResponsableInvolvedSortInput {\n  projectId?: ISortEnumType;\n  responsableId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  area?: ISortEnumType;\n  name?: ISortEnumType;\n  contractorId?: ISortEnumType;\n  contractor?: IContractorSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IResponsableInvolvedCollectionSegment {\n  items?: Array<IResponsableInvolved>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IResponsableInvolved {\n  projectId: IUUID;\n  responsableId?: IUUID;\n  ownerId?: IUUID;\n  area?: IEnumResponsableArea;\n  name?: string;\n  contractorId: IUUID;\n  contractor?: Isaam_Contractor;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProjectAgentProviderEmailReminderSortInput {\n  model?: ISortEnumType;\n  text?: ISortEnumType;\n  footer?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  frequency?: ISortEnumType;\n  ramoCode?: ISortEnumType;\n  policyType?: ISortEnumType;\n  chargeType?: ISortEnumType;\n  dateType?: ISortEnumType;\n  projectAgentProviderId?: ISortEnumType;\n  projectAgentProvider?: IProjectAgentProviderSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProjectAgentProviderEmailReminderCollectionSegment {\n  items?: Array<IProjectAgentProviderEmailReminder>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IProjectAgentProviderCollectionSegment {\n  items?: Array<IProjectAgentProvider>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IAgentProviderContactSortInput {\n  projectAgentProviderBranchId?: ISortEnumType;\n  name?: ISortEnumType;\n  email?: ISortEnumType;\n  phone?: ISortEnumType;\n  department?: ISortEnumType;\n  sinisterAccidentId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  contractorGroupId?: ISortEnumType;\n  contractorGroup?: IContractorGroupSortInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchSortInput;\n  contractorId?: ISortEnumType;\n  contractor?: IContractorSortInput;\n  projectAgentProviderId?: ISortEnumType;\n  projectAgentProvider?: IProjectAgentProviderSortInput;\n  sinisterAccident?: ISinisterAccidentSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IAgentProviderContactCollectionSegment {\n  items?: Array<IAgentProviderContact>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IAgentProviderCollectionSegment {\n  items?: Array<IAgentProvider>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IAgentKeyCollectionSegment {\n  items?: Array<IAgentKey>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IReferrerCollectionSegment {\n  items?: Array<IReferrer>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IReferrerBranchSortInput {\n  projectAgentProviderId?: ISortEnumType;\n  projectAgentProviderBranchId?: ISortEnumType;\n  referrerId?: ISortEnumType;\n  comition?: ISortEnumType;\n  referrer?: IReferrerSortInput;\n  projectAgentProvider?: IProjectAgentProviderSortInput;\n  projectAgentProviderBranch?: IProjectAgentProviderBranchSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IReferrerBranchCollectionSegment {\n  items?: Array<IReferrerBranch>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IReferrerAccountStateSortInput {\n  projectId?: ISortEnumType;\n  ownerId?: ISortEnumType;\n  folio?: ISortEnumType;\n  total?: ISortEnumType;\n  printDate?: ISortEnumType;\n  status?: ISortEnumType;\n  transactionNumber?: ISortEnumType;\n  reasonReject?: ISortEnumType;\n  observation?: ISortEnumType;\n  referrerId?: ISortEnumType;\n  referrer?: IReferrerSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IReferrerAccountStateCollectionSegment {\n  items?: Array<IReferrerAccountState>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IContractorCollectionSegment {\n  items?: Array<Isaam_Contractor>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IContractorCelulaCollectionSegment {\n  items?: Array<IContractorCelula>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IContractorGroupCollectionSegment {\n  items?: Array<IContractorGroup>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IContractorGroupingLevelCollectionSegment {\n  items?: Array<IContractorGroupingLevel>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IContractorClassificationCollectionSegment {\n  items?: Array<IContractorClassification>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IContractorProcessDocumentSortInput {\n  delivered?: ISortEnumType;\n  validated?: ISortEnumType;\n  processDocumentId?: ISortEnumType;\n  contractorId?: ISortEnumType;\n  contractor?: IContractorSortInput;\n  processDocument?: IProcessDocumentSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProcessDocumentSortInput {\n  name?: ISortEnumType;\n  slug?: ISortEnumType;\n  active?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IContractorProcessDocumentCollectionSegment {\n  items?: Array<IContractorProcessDocument>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IProcessDocumentCollectionSegment {\n  items?: Array<IProcessDocument>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IBranchCollectionSegment {\n  items?: Array<IBranch>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ISubBranchCollectionSegment {\n  items?: Array<ISubBranch>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IProjectAgentProviderBranchCollectionSegment {\n  items?: Array<IProjectAgentProviderBranch>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface IDeviceFilterInput {\n  and?: Array<IDeviceFilterInput>;\n  or?: Array<IDeviceFilterInput>;\n  memberId?: IComparableGuidOperationFilterInput;\n  projectId?: IComparableGuidOperationFilterInput;\n  token?: IStringOperationFilterInput;\n  unique?: IBooleanOperationFilterInput;\n  avalible?: IBooleanOperationFilterInput;\n  deviceNotifications?: IListFilterInputTypeOfDeviceNotificationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfDeviceNotificationFilterInput {\n  all?: IDeviceNotificationFilterInput;\n  none?: IDeviceNotificationFilterInput;\n  some?: IDeviceNotificationFilterInput;\n  any?: boolean;\n}\n\nexport interface IDeviceNotificationFilterInput {\n  and?: Array<IDeviceNotificationFilterInput>;\n  or?: Array<IDeviceNotificationFilterInput>;\n  deviceId?: IComparableNullableOfGuidOperationFilterInput;\n  notificationId?: IComparableNullableOfGuidOperationFilterInput;\n  device?: IDeviceFilterInput;\n  notification?: INotificationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface INotificationFilterInput {\n  and?: Array<INotificationFilterInput>;\n  or?: Array<INotificationFilterInput>;\n  title?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  data?: IStringOperationFilterInput;\n  enabled?: IBooleanOperationFilterInput;\n  view?: IBooleanOperationFilterInput;\n  date?: IComparableDateTimeOperationFilterInput;\n  memberId?: IComparableNullableOfGuidOperationFilterInput;\n  deviceNotifications?: IListFilterInputTypeOfDeviceNotificationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IDeviceSortInput {\n  memberId?: ISortEnumType;\n  projectId?: ISortEnumType;\n  token?: ISortEnumType;\n  unique?: ISortEnumType;\n  avalible?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IDeviceCollectionSegment {\n  items?: Array<IDevice>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface INotificationSortInput {\n  title?: ISortEnumType;\n  description?: ISortEnumType;\n  data?: ISortEnumType;\n  enabled?: ISortEnumType;\n  view?: ISortEnumType;\n  date?: ISortEnumType;\n  memberId?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface INotificationCollectionSegment {\n  items?: Array<INotification>;\n  \n  /**\n   * Information to aid in pagination.\n   */\n  pageInfo: ICollectionSegmentInfo;\n  totalCount: number;\n}\n\nexport interface ICode {\n  projectId?: IUUID;\n  uniqueCode: string;\n  expiration: IDateTime;\n  orderId: string;\n  brandId?: IUUID;\n  brand?: IBrand;\n  batch: string;\n  dots: number;\n  providerId: IUUID;\n  provider?: IProvider;\n  state?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBrand {\n  projectId: IUUID;\n  name: string;\n  image?: string;\n  codes?: Array<ICode>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IProvider {\n  projectId?: IUUID;\n  name: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IBrandFilterInput {\n  and?: Array<IBrandFilterInput>;\n  or?: Array<IBrandFilterInput>;\n  projectId?: IComparableGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  image?: IStringOperationFilterInput;\n  codes?: IListFilterInputTypeOfCodeFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IListFilterInputTypeOfCodeFilterInput {\n  all?: ICodeFilterInput;\n  none?: ICodeFilterInput;\n  some?: ICodeFilterInput;\n  any?: boolean;\n}\n\nexport interface ICodeFilterInput {\n  and?: Array<ICodeFilterInput>;\n  or?: Array<ICodeFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  uniqueCode?: IStringOperationFilterInput;\n  expiration?: IComparableDateTimeOperationFilterInput;\n  orderId?: IStringOperationFilterInput;\n  brandId?: IComparableNullableOfGuidOperationFilterInput;\n  brand?: IBrandFilterInput;\n  batch?: IStringOperationFilterInput;\n  dots?: IComparableInt32OperationFilterInput;\n  providerId?: IComparableGuidOperationFilterInput;\n  provider?: IProviderFilterInput;\n  state?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IProviderFilterInput {\n  and?: Array<IProviderFilterInput>;\n  or?: Array<IProviderFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IDotMovementFilterInput {\n  and?: Array<IDotMovementFilterInput>;\n  or?: Array<IDotMovementFilterInput>;\n  codeId?: IComparableNullableOfGuidOperationFilterInput;\n  code?: ICodeFilterInput;\n  memberId?: IComparableGuidOperationFilterInput;\n  dots?: IComparableInt32OperationFilterInput;\n  name?: IStringOperationFilterInput;\n  email?: IStringOperationFilterInput;\n  phone?: IStringOperationFilterInput;\n  status?: IStatusOperationFilterInput;\n  movementType?: IMovementTypeOperationFilterInput;\n  prizeCategoryId?: IComparableNullableOfGuidOperationFilterInput;\n  prizeCategory?: IPrizeCategoryFilterInput;\n  providerId?: IComparableNullableOfGuidOperationFilterInput;\n  provider?: IProviderFilterInput;\n  prizeCodeId?: IComparableNullableOfGuidOperationFilterInput;\n  prizeCode?: IPrizeCodeFilterInput;\n  image?: IStringOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IStatusOperationFilterInput {\n  eq?: Iexchange_Status;\n  neq?: Iexchange_Status;\n  in?: Array<Iexchange_Status>;\n  nin?: Array<Iexchange_Status>;\n}\n\nexport const enum Iexchange_Status {\n  INPROCESS = 'INPROCESS',\n  EXCHANGED = 'EXCHANGED'\n}\n\nexport interface IMovementTypeOperationFilterInput {\n  eq?: IMovementType;\n  neq?: IMovementType;\n  in?: Array<IMovementType>;\n  nin?: Array<IMovementType>;\n}\n\nexport const enum IMovementType {\n  CODEREGISTRATION = 'CODEREGISTRATION',\n  EXCHANGE = 'EXCHANGE'\n}\n\nexport interface IPrizeCategoryFilterInput {\n  and?: Array<IPrizeCategoryFilterInput>;\n  or?: Array<IPrizeCategoryFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  name?: IStringOperationFilterInput;\n  image?: IStringOperationFilterInput;\n  dots?: IComparableNullableOfInt32OperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPrizeCodeFilterInput {\n  and?: Array<IPrizeCodeFilterInput>;\n  or?: Array<IPrizeCodeFilterInput>;\n  projectId?: IComparableNullableOfGuidOperationFilterInput;\n  title?: IStringOperationFilterInput;\n  description?: IStringOperationFilterInput;\n  status?: IPrizeCodeStatusOperationFilterInput;\n  prizeCategoryId?: IComparableGuidOperationFilterInput;\n  dots?: IComparableInt32OperationFilterInput;\n  code?: IStringOperationFilterInput;\n  prizeCategory?: IPrizeCategoryFilterInput;\n  value?: IComparableNullableOfDoubleOperationFilterInput;\n  id?: IComparableGuidOperationFilterInput;\n  createdAt?: IComparableDateTimeOperationFilterInput;\n  updatedAt?: IComparableDateTimeOperationFilterInput;\n}\n\nexport interface IPrizeCodeStatusOperationFilterInput {\n  eq?: IPrizeCodeStatus;\n  neq?: IPrizeCodeStatus;\n  in?: Array<IPrizeCodeStatus>;\n  nin?: Array<IPrizeCodeStatus>;\n}\n\nexport const enum IPrizeCodeStatus {\n  AVAILABLE = 'AVAILABLE',\n  EXCHANGED = 'EXCHANGED'\n}\n\nexport interface IDotMovement {\n  codeId?: IUUID;\n  code?: ICode;\n  memberId: IUUID;\n  dots: number;\n  name?: string;\n  email?: string;\n  phone?: string;\n  status: Iexchange_Status;\n  movementType: IMovementType;\n  prizeCategoryId?: IUUID;\n  prizeCategory?: IPrizeCategory;\n  providerId?: IUUID;\n  provider?: IProvider;\n  prizeCodeId?: IUUID;\n  prizeCode?: IPrizeCode;\n  image?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPrizeCategory {\n  projectId?: IUUID;\n  name: string;\n  image: string;\n  dots?: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPrizeCode {\n  projectId?: IUUID;\n  title?: string;\n  description: string;\n  status: IPrizeCodeStatus;\n  prizeCategoryId: IUUID;\n  dots: number;\n  code: string;\n  prizeCategory?: IPrizeCategory;\n  value?: number;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDotMovementSortInput {\n  codeId?: ISortEnumType;\n  code?: ICodeSortInput;\n  memberId?: ISortEnumType;\n  dots?: ISortEnumType;\n  name?: ISortEnumType;\n  email?: ISortEnumType;\n  phone?: ISortEnumType;\n  status?: ISortEnumType;\n  movementType?: ISortEnumType;\n  prizeCategoryId?: ISortEnumType;\n  prizeCategory?: IPrizeCategorySortInput;\n  providerId?: ISortEnumType;\n  provider?: IProviderSortInput;\n  prizeCodeId?: ISortEnumType;\n  prizeCode?: IPrizeCodeSortInput;\n  image?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface ICodeSortInput {\n  projectId?: ISortEnumType;\n  uniqueCode?: ISortEnumType;\n  expiration?: ISortEnumType;\n  orderId?: ISortEnumType;\n  brandId?: ISortEnumType;\n  brand?: IBrandSortInput;\n  batch?: ISortEnumType;\n  dots?: ISortEnumType;\n  providerId?: ISortEnumType;\n  provider?: IProviderSortInput;\n  state?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IBrandSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  image?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IProviderSortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPrizeCategorySortInput {\n  projectId?: ISortEnumType;\n  name?: ISortEnumType;\n  image?: ISortEnumType;\n  dots?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IPrizeCodeSortInput {\n  projectId?: ISortEnumType;\n  title?: ISortEnumType;\n  description?: ISortEnumType;\n  status?: ISortEnumType;\n  prizeCategoryId?: ISortEnumType;\n  dots?: ISortEnumType;\n  code?: ISortEnumType;\n  prizeCategory?: IPrizeCategorySortInput;\n  value?: ISortEnumType;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface IMutation {\n  sendQuizToEmail: ISendQuizToEmailPayload;\n  translateCountries: boolean;\n  updateWithIdProfile: IUpdateProfileWithIdPayload;\n  createNiche: INichePayload;\n  updateNiche: INichePayload;\n  deleteNiche: IUUID;\n  createNicheService: INicheServicePayload;\n  createBulkTutor: ICreateBulkTutorPayload;\n  updateNicheService: INicheServicePayload;\n  deleteNicheService: IUUID;\n  updateBillingData: IUpdateBillingDataPayload;\n  updateCompanyData: IUpdateCompanyDataPayload;\n  createBulkTeacher: ICreateBulkTeacherPayload;\n  updateHealthInsurance: IUpdateHealthInsurancePayload;\n  createAttendanceExcel: ICreateAttendanceExcelPayload;\n  createBulkUser: ICreateBulkUserPayload;\n  createAttendance: ICreateAttendancePayload;\n  createCheisiUsersExcel: ICreateCheisiUsersExcelPayload;\n  newContactForm: INewContactFormPayload;\n  newExternalLogin: INewExternalLoginPayload;\n  deleteUser: IDeleteUserPayload;\n  testBulk: ITestBulkPayload;\n  updatePositionColumns: IUpdatePositionColumnsPayload;\n  updatePositionBlockColumns: IUpdatePositionBlockColumnsPayload;\n  loginWithProvider: ILoginWithProviderPayload;\n  createProjectSocialNetwork: ICreateProjectSocialNetworkPayload;\n  updateProjectSocialNetwork: IUpdateProjectSocialNetworkPayload;\n  deleteProjectSocialNetwork: IDeleteProjectSocialNetworkPayload;\n  createRecommendedProject: ICreateRecommendedProjectPayload;\n  updateRecommendedProject: IUpdateRecommendedProjectPayload;\n  deleteRecommendedProject: IDeleteRecommendedProjectPayload;\n  setProjectToProduction: ISetProjectToProductionPayload;\n  createProjectTemplate: ICreateProjectTemplatePayload;\n  updateProjectTemplate: IUpdateProjectTemplatePayload;\n  deleteProjectTemplate: IDeleteProjectTemplatePayload;\n  createMember: ICreateMemberPayload;\n  loginMember: ILoginMemberPayload;\n  createCompany: ICreateCompanyPayload;\n  createProject: ICreateProjectPayload;\n  generateSlug: string;\n  createNewRoles: ICreateNewRolesPayload;\n  createUser: ICreateUserPayload;\n  createOrFindUser: ICreateOrFindUserPayload;\n  createOrdinaryUser: ICreateOrdinaryUserPayload;\n  createUserWithoutMail: ICreateUserPayload;\n  updateProfile: IUpdateProfilePayload;\n  updatePassword: IUpdatePasswordPayload;\n  activeMember: IActiveMemberPayload;\n  createProjectRole: ICreateProjectRolePayload;\n  removeAccent: string;\n  uploadPhotoProfile: IUploadPhotoProfilePayload;\n  deleteProject: IDeleteProjectPayload;\n  updateCompany: IUpdateCompanyPayload;\n  restorePassword: IRestorePasswordPayload;\n  recoverPassword: IRecoverPasswordPayload;\n  verifyToken: IVerifyTokenPayload;\n  createGroup: ICreateGroupPayload;\n  addGroupToMember: IAddGroupToMemberPayload;\n  addGroupToTaxonomy: IAddGroupToTaxonomyPayload;\n  addTaxonomyToMember: IAddTaxonomyToMemberPayload;\n  deleteGroup: IDeleteGroupPayload;\n  deleteGroupTaxonomy: IDeleteGroupTaxonomyPayload;\n  deleteMemberGroup: IDeleteMemberGroupMutationPayload;\n  deleteMemberTaxonomy: IDeleteMemberTaxonomyPayload;\n  deleteMember: string;\n  deleteProjectRole: IDeleteProjectRolePayload;\n  createUpdatePermission: ICreateUpdatePermissionPayload;\n  updateProject: IUpdateProjectPayload;\n  updateProjectRole: IUpdateProjectRolePayload;\n  updateGroup: IUpdateGroupPayload;\n  addMemberAsAdmin: IAddMemberAsAdminPayload;\n  createMemberStream: ICreateMemberStreamPayload;\n  deleteMemberFromMemberProjects: IDeleteMemberFromMemberProjectsPayload;\n  addMemberToCompany: IAddMemberToCompanyPayload;\n  createPageManager: ICreatePageManagerPayload;\n  createViewManager: ICreateViewManagerPayload;\n  createViewColumn: ICreateViewColumnPayload;\n  createViewBlockColumn: ICreateViewBlockColumnPayload;\n  updatePageManager: IUpdatePageManagerPayload;\n  updateViewManager: IUpdateViewManagerPayload;\n  updateViewColumn: IUpdateViewColumnPayload;\n  updateViewBlockColumn: IUpdateViewBlockColumnPayload;\n  deletePageManager: IDeletePageManagerPayload;\n  deleteViewManager: IDeleteViewManagerPayload;\n  deleteViewColumn: IDeleteViewColumnPayload;\n  linkTransactionToSell: ILinkTransactionToSellPayload;\n  updateSell: IUpdateSellPayload;\n  deleteViewBlockColumn: IDeleteViewBlockColumnPayload;\n  createMultipleMemberRelation: IMultipleMemberRelationPayload;\n  createMemberRelation: IMemberRelationPayload;\n  updateMemberRelation: IMemberRelationPayload;\n  deleteMemberRelation: IUUID;\n  updateProductSell: IUpdateProductSellPayload;\n  createTax: ICreateTaxPayload;\n  deleteTax: IDeleteTaxPayload;\n  importProductsFromExcel: IImportProductsFromExcelPayload;\n  createRoute: ICreateRoutePayload;\n  deleteRoute: IDeleteRoutePayload;\n  createProductSell: ICreateProductSellPayload;\n  deleteProductSell: IDeleteProductSellPayload;\n  createPurchaseQuote: ICreatePurchaseQuotePayload;\n  deletePurchaseQuote: IDeletePurchaseQuotePayload;\n  createStockAlert: ICreateStockAlertPayload;\n  deleteStockAlert: IDeleteStockAlertPayload;\n  updateStockAlert: IUpdateStockAlertPayload;\n  createLegalTerm: ICreateLegalTermPayload;\n  createInsuranceForm: ICreateInsuranceFormPayload;\n  updateInsuranceForm: IUpdateInsuranceFormPayload;\n  updateLegalTerm: IUpdateLegalTermPayload;\n  deleteLegalTerm: IDeleteLegalTermPayload;\n  createArticle: ICreateArticlePayload;\n  updateStatusArticle: IUpdateStatusArticlePayload;\n  createTaxonomy: ICreateTaxonomyPayload;\n  blog_generateSlug: string;\n  updateArticle: IUpdateArticlePayload;\n  updateTaxonomy: IUpdateTaxonomyPayload;\n  deleteArticle: IDeleteArticlePayload;\n  deleteTaxonomy: IDeleteTaxonomyPayload;\n  newSurvey: INewSurveyPayload;\n  updateSurvey: IUpdateSurveyPayload;\n  deleteSurvey: IDeleteSurveyPayload;\n  newQuestion: INewQuestionPayload;\n  deleteQuestion: IDeleteQuestionPayload;\n  updateQuestion: IUpdateQuestionPayload;\n  newOption: INewOptionPayload;\n  deleteOption: IDeleteOptionPayload;\n  updateOption: IUpdateOptionPayload;\n  answerQuestion: IAnswerQuestionPayload;\n  createProduct: ICreateProductPayload;\n  updateProduct: IUpdateProductPayload;\n  deleteProduct: IDeleteProductPayload;\n  createAddress: ICreateAddressPayload;\n  updateAddress: IUpdateAddressPayload;\n  deleteAddress: IDeleteAddressPayload;\n  createUpdateShop: ICreateUpdateShopPayload;\n  createDisease: ICreateDiseasePayload;\n  updateDisease: IUpdateDiseasePayload;\n  deleteDisease: IDeleteDiseasePayload;\n  createTopicDisease: ICreateTopicDiseasePayload;\n  updateTopicDisease: IUpdateTopicDiseasePayload;\n  deleteTopicDisease: IDeleteTopicDiseasePayload;\n  createFAQ: ICreateFAQPayload;\n  updateFAQ: IUpdateFAQPayload;\n  deleteFAQ: IDeleteFAQPayload;\n  runJobShop: IRunJobShopPayload;\n  createCourse: ICreateCoursePayload;\n  createBeginCourse: ICreateBeginCoursePayload;\n  createCourseForm: ICreateCourseFormPayload;\n  updateCourse: IUpdateCoursePayload;\n  updateBeginCourse: IUpdateBeginCoursePayload;\n  updateCourseForm: IUpdateCourseFormPayload;\n  deleteCourse: IDeleteCoursePayload;\n  deleteBeginCourse: IDeleteBeginCoursePayload;\n  deleteCourseForm: IDeleteCourseFormPayload;\n  fixProduct: IFixProductPayload;\n  deleteCourseSchedule: IDeleteCourseSchedulePayload;\n  updateCourseSchedule: IUpdateCourseSchedulePayload;\n  createBranchOffice: ICreateBranchOfficePayload;\n  createManager: ICreateManagerPayload;\n  createProductPurchase: ICreateProductPurchasePayload;\n  createPurchase: ICreatePurchasePayload;\n  createStore: ICreateStorePayload;\n  newStoreTransfer: INewStoreTransferPayload;\n  createProvider: ICreateProviderPayload;\n  updateBranchOffice: IUpdateBranchOfficePayload;\n  updateManager: IUpdateManagerPayload;\n  updatePurchase: IUpdatePurchasePayload;\n  updateStore: IUpdateStorePayload;\n  deleteStore: IDeleteStorePayload;\n  deleteManager: IDeleteManagerPayload;\n  updateProvider: IUpdateProviderPayload;\n  deleteProvider: IDeleteProviderPayload;\n  deletePurchase: IDeletePurchasePayload;\n  deleteProductPurchase: IDeleteProductPurchasePayload;\n  deleteBranchOffice: IDeleteBranchOfficePayload;\n  associationServiceToProject: IAssociationServiceToProjectPayload;\n  createArrayFunction: ICreateArrayFunctionPayload;\n  deleteArrayFunction: IDeleteArrayFunctionPayload;\n  updateServiceProject: IUpdateServiceProjectPayload;\n  deleteServiceProject: IDeleteServiceProjectPayload;\n  cancelEvent: ICancelEventPayload;\n  createEventType: ICreateEventTypePayload;\n  createSubEventType: ICreateSubEventTypePayload;\n  deleteSubEventType: IDeleteSubEventTypePayload;\n  updateSubEventType: IUpdateSubEventTypePayload;\n  addSubTypeToEventType: IAddSubTypeToEventTypePayload;\n  deleteEventType: IDeleteEventTypePayload;\n  updateEventType: IUpdateEventTypePayload;\n  createEvent: ICreateEventPayload;\n  createEventMember: ICreateEventMemberPayload;\n  updateEvent: IUpdateEventPayload;\n  deleteEvent: IDeleteEventPayload;\n  createEventSession: ICreateEventSessionPayload;\n  updateEventSession: IUpdateEventSessionPayload;\n  deleteEventSession: IDeleteEventSessionPayload;\n  sendRecordatory: boolean;\n  createSchedule: ICreateSchedulePayload;\n  associationMemberToConsult: IAssociationMemberToConsultPayload;\n  cancellationMemberToConsult: ICancellationMemberToConsultPayload;\n  changeStatusEvent: IChangeStatusEventPayload;\n  deleteSchedule: IDeleteSchedulePayload;\n  deleteTurn: IDeleteTurnPayload;\n  createResourceQuote: IResourceQuotePayload;\n  updateResourceQuote: IResourceQuotePayload;\n  deleteResourceQuote: IUUID;\n  createResourceQuoteDetail: IResourceQuoteDetailPayload;\n  updateResourceQuoteDetail: IResourceQuoteDetailPayload;\n  deleteResourceQuoteDetail: IUUID;\n  createProposal: IProposalPayload;\n  updateProposal: IProposalPayload;\n  deleteProposal: IUUID;\n  createCollaborator: ICollaboratorPayload;\n  updateCollaborator: ICollaboratorPayload;\n  deleteCollaborator: IUUID;\n  createCollaboratorHours: ICollaboratorHoursPayload;\n  updateCollaboratorHours: ICollaboratorHoursPayload;\n  deleteCollaboratorHours: IUUID;\n  createHiring: IHiringPayload;\n  updateHiring: IHiringPayload;\n  deleteHiring: IUUID;\n  createHiringService: IHiringServicePayload;\n  updateHiringService: IHiringServicePayload;\n  deleteHiringService: IUUID;\n  createHiringType: IHiringTypePayload;\n  updateHiringType: IHiringTypePayload;\n  deleteHiringType: IUUID;\n  createShift: IShiftPayload;\n  updateShift: IShiftPayload;\n  deleteShift: IUUID;\n  createBusinessType: ICreateBusinessTypePayload;\n  updateBusinessType: IUpdateBusinessTypePayload;\n  deleteBusinessType: IDeleteBusinessPayload;\n  createBusinessRule: ICreateBusinessRulePayload;\n  updateBusinessRule: IUpdateBusinessRulePayload;\n  deleteBusinessRule: IDeleteBusinessRulePayload;\n  deleteCouponFromTemplate: IDeleteCouponFromTemplatePayload;\n  addCouponsToTemplate: IAddCouponsToTemplatePayload;\n  createUpdateConfigurationTemplate: ICreateUpdateConfigurationTemplatePayload;\n  sendTemplate: ISendTemplatePayload;\n  putFirebaseDevice: IPutFirebaseDevicePayload;\n  createCoupon: ICreateCouponPayload;\n  updateCoupon: IUpdateCouponPayload;\n  deleteCoupon: IDeleteCouponPayload;\n  createTemplate: ICreateTemplatePayload;\n  updateTemplate: IUpdateTemplatePayload;\n  deleteTemplate: IDeleteTemplatePayload;\n  createErrorPage: ICreateErrorPagePayload;\n  updateErrorPage: IUpdateErrorPagePayload;\n  deleteErrorPage: IDeleteErrorPagePayload;\n  createErrorPageValidation: ICreateErrorPageValidationPayload;\n  updateErrorPageValidation: IUpdateErrorPageValidationPayload;\n  deleteErrorValidationPage: IDeleteErrorPageValidationPayload;\n  createBusiness: ICreateBusinessPayload;\n  updateBusiness: IUpdateBusinessPayload;\n  deleteBusiness: IDeleteBusinessPayload;\n  associateBusinessRules: IAssociateBusinessRulesPayload;\n  associateProjectPlanSubscription: IAssociateProjectPlanSubscriptionPayload;\n  createProjectPlan: ICreateProjectPlanPayload;\n  updateProjectPlan: IUpdateProjectPlanPayload;\n  deleteProjectPlan: IDeleteProjectPlanPayload;\n  deleteProjectPlanSubscription: IDeleteProjectPlanSubscriptionPayload;\n  putConfig: IPutConfigPayload;\n  deleteConfig: IDeleteConfigPayload;\n  updateOrderPages: IUpdateOrderPagesPayload;\n  updateBatchWewbsiteComponent: IUpdateBatchWewbsiteComponentPayload;\n  createComponent: ICreateComponentPayload;\n  createWebsiteComponent: ICreateWebsiteComponentPayload;\n  createWebsitePage: ICreateWebsitePagePayload;\n  createWebsiteSeo: ICreateWebsiteSeoPayload;\n  updateComponent: IUpdateComponentPayload;\n  updateWebsiteComponent: IUpdateWebsiteComponentPayload;\n  updateWebsitePage: IUpdateWebsitePagePayload;\n  updateWebsiteSeo: IUpdateWebsiteSeoPayload;\n  deleteComponent: IDeleteComponentPayload;\n  deleteWebsiteComponent: IDeleteWebsiteComponentPayload;\n  deleteWebsitePage: IDeleteWebsitePagePayload;\n  deleteWebsiteSeo: IDeleteWebsiteSeoPayload;\n  deleteBusinessRuleProjectPlans: IUUID;\n  createDocumentCategory: IDocumentCategoryPayload;\n  updateDocumentCategory: IDocumentCategoryPayload;\n  deleteDocumentCategory: IUUID;\n  createDocumentCategoryDetail: IDocumentCategoryDetailPayload;\n  updateDocumentCategoryDetail: IDocumentCategoryDetailPayload;\n  deleteDocumentCategoryDetail: IUUID;\n  createDocument: IDocumentPayload;\n  updateDocument: IDocumentPayload;\n  deleteDocument: IUUID;\n  createDocumentTemplate: IDocumentTemplatePayload;\n  updateDocumentTemplate: IDocumentTemplatePayload;\n  deleteDocumentTemplate: IUUID;\n  createTemplatePage: ITemplatePagePayload;\n  updateTemplatePage: ITemplatePagePayload;\n  deleteTemplatePage: IUUID;\n  createDocumentTag: IDocumentTagPayload;\n  updateDocumentTag: IDocumentTagPayload;\n  deleteDocumentTag: IUUID;\n  createDocumentScan: IDocumentScanPayload;\n  updateDocumentScan: IDocumentScanPayload;\n  deleteDocumentScan: IUUID;\n  createDocumentRead: IDocumentReadPayload;\n  updateDocumentRead: IDocumentReadPayload;\n  deleteDocumentRead: IUUID;\n  readTextFromImage: ICreateTemplatePayload;\n  createVideoCall: ICreateVideoCallPayload;\n  updateVideoCall: IUpdateVideoCallPayload;\n  deleteVideoCall: IDeleteVideoCallPayload;\n  createAccessToken: IRoomAccessToken;\n  createVideoRoom: ICreateVideoRoomPayload;\n  sendNotification: ISendNotificationUsersPayload;\n  sendEmailDownload: ISendEmailDownloadPayload;\n  sendEmailNotification: ISendEmailNotificationPayload;\n  muteParticipant: boolean;\n  removeParticipantRoom: boolean;\n  updateParticipantRoom: boolean;\n  startRecordRoom2?: string;\n  endRecordRoom: IRecordingPath;\n  createUpdateContactEmail: ICreateUpdateContactEmailPayload;\n  sendEmail: ISendEmailPayload;\n  deleteContactEmail: IDeleteContactEmailPayload;\n  sendMailBot: ISendMailBotPayload;\n  sendQuiz: IHttpStatusCode;\n  mainSection: string;\n  hyperVincule: string;\n  sendQuizGratitude: IHttpStatusCode;\n  createServiceArea: IServiceAreaPayload;\n  updateServiceArea: IServiceAreaPayload;\n  deleteServiceArea: IUUID;\n  createArea: IAreaPayload;\n  updateArea: IAreaPayload;\n  deleteArea: IUUID;\n  updateBatchServiceMember: Array<IUUID>;\n  createServiceMember: IServiceMemberPayload;\n  updateServiceMember: IServiceMemberPayload;\n  deleteServiceMember: IUUID;\n  createServiceQuiz: IServiceQuizPayload;\n  updateServiceQuiz: IServiceQuizPayload;\n  deleteServiceQuiz: IUUID;\n  createQuiz: IQuizPayload;\n  updateQuiz: IQuizPayload;\n  deleteQuiz: IUUID;\n  createQuizSection: IQuizSectionPayload;\n  updateQuizSection: IQuizSectionPayload;\n  deleteQuizSection: IUUID;\n  duplicateQuizQuestion: IQuizQuestionPayload;\n  createQuizQuestion: IQuizQuestionPayload;\n  updateQuizQuestion: IQuizQuestionPayload;\n  deleteQuizQuestion: IUUID;\n  createQuizQuestionNested: IQuizQuestionNestedPayload;\n  updateQuizQuestionNested: IQuizQuestionNestedPayload;\n  deleteQuizQuestionNested: IUUID;\n  updateBatchQuizQuestion: Array<IUUID>;\n  createQuizQuestionAnswer: IQuizQuestionAnswerPayload;\n  updateQuizQuestionAnswer: IQuizQuestionAnswerPayload;\n  deleteQuizQuestionAnswer: IQuizQuestionAnswerPayload;\n  updateBatchQuizQuestionAnswer: Array<IUUID>;\n  createQuizAnswer: IQuizAnswerPayload;\n  updateQuizAnswer: IQuizAnswerPayload;\n  deleteQuizAnswer: IUUID;\n  createQuizMember: IQuizMemberPayload;\n  updateQuizMember: IQuizMemberPayload;\n  deleteQuizMember: IUUID;\n  createQuizQuestionMember: IQuizQuestionMemberPayload;\n  updateQuizQuestionMember: IQuizQuestionMemberPayload;\n  deleteQuizQuestionMember: IUUID;\n  updateBatchQuizQuestionMember: Array<IUUID>;\n  createQuizMemberAnswer: IQuizMemberAnswerPayload;\n  updateQuizMemberAnswer: IQuizMemberAnswerPayload;\n  deleteQuizMemberAnswer: IUUID;\n  updateBatchQuizMemberAnswer: Array<IUUID>;\n  createQuizMemberDescription: IQuizMemberDescriptionPayload;\n  updateQuizMemberDescription: IQuizMemberDescriptionPayload;\n  deleteQuizMemberDescription: IUUID;\n  updateBatchQuizMemberDescription: Array<IUUID>;\n  createKey: IKeyPayload;\n  createQuotationAarco: IQuotationPayload;\n  loginAarco: ILoginPayload;\n  policyAarco: IPolicyPayload;\n  quotationDownloadPDFAarco: IQuotationDownloadPDFPayload;\n  quotationEmitAarco: IQuotationEmitPayload;\n  quotationSendPDFAarco: ISendQuotationPayload;\n  attachPaymentMethodToCustomer: ICreatePaymentMethodPayload;\n  createSetupIntentStripe: ISetupIntentStripePayload;\n  setDefaultPaymentMethodOnCustomer: ISetDefaultPaymentMethodOnCustomerPayload;\n  updatePriceStripe: IUpdatePriceStripePayload;\n  newPaymentsAnyType: INewPaymentsAnyTypePayload;\n  createProductStripe: ICreateProductStripePayload;\n  createPlan: IPlanPayload;\n  createStripePrice: ICreateStripePricePayload;\n  createMethodPayment: ICreateMethodPaymentPayload;\n  updateMethodPayment: IUpdateMethodPaymentPayload;\n  deleteMethodPayment: IDeleteMethodPaymentPayload;\n  createPaymentStripe: ICreatePaymentStripePayload;\n  createPaymentStripeToAccount: ICreatePaymentStripePayload;\n  createSuscriptionStripe: ICreateSuscriptionStripePayload;\n  createSuscriptionExternalStripe: ICreateSuscriptionExternalStripePayload;\n  deleteSuscriptionExternalStripe: IDeleteSuscriptionExternalStripePayload;\n  createAccountStripe: ICreateStripeAccountPayload;\n  deletePayment: IDeletePaymentPayload;\n  updatePayment: IUpdatePaymentPayload;\n  createInvoice: ICreateInvoicePayload;\n  updateStatusInvoice: IUpdateStatusInvoicePayload;\n  createPaymentMethod: ICreatePaymentMethodPayload;\n  deletePaymentMethod: IDeletePaymentMethodPayload;\n  createBatchInsurerCoverages: ICreateBatchInsurerCoveragesPayload;\n  createQuote: ICreateQuotePayload;\n  createNewOffices: ICreateNewOfficesPayload;\n  createNewProfiles: ICreateNewProfilesPayload;\n  createInsurer: ICreateInsurerPayload;\n  createOffice: ICreateOfficePayload;\n  createRegistration: ICreateRegistrationPayload;\n  createQuatorProfile: ICreateQuatorProfilePayload;\n  deleteInsurer: IDeleteInsurerPayload;\n  deleteOffice: IDeleteOfficePayload;\n  deleteQuoterProfile: IDeleteQuoterProfilePayload;\n  updateInsurer: IUpdateInsurerPayload;\n  updateOffice: IUpdateOfficePayload;\n  updateQuoterProfile: IUpdateQuoterProfilePayload;\n  createCatalog: ICreateCatalogPayload;\n  populateCredentials: IPopulateCredentialsPayload;\n  populateServices: IPopulateServicesPayload;\n  registrarPersona: string;\n  runServiceQuote?: IRunServicePayload;\n  emissionCar: IEmissionCarPayload;\n  printEmission: IPrintEmissionPayload;\n  createQuoteCoverage: ICreateQuoteCoveragePayload;\n  updateQuoteCoverage: IUpdateQuoteCoveragePayload;\n  deleteQuoteCoverage: IDeleteQuoteCoveragePayload;\n  associationWithQuoterProfile: IAssociationWithQuoterProfilePayload;\n  updateQuote: IUpdateQuotePayload;\n  createInsurerCredential: ICreateInsurerCredentialPayload;\n  updateInsurerCredential: IUpdateInsurerCredentialPayload;\n  associationRelationCar: IAssociationRelationCarPayload;\n  createCoverageProject: ICreateCoverageProjectPayload;\n  updateCoverageProject: IUpdateCoverageProjectPayload;\n  updateBatchCoverageProject: IUpdateBatchCoverageProjectPayload;\n  createApiService: ICreateApiServicePayload;\n  updateApiService: IUpdateApiServicePayload;\n  createDynamicCustomMeta: IDynamicCustomMetaPayload;\n  updateDynamicCustomMeta: IDynamicCustomMetaPayload;\n  deleteDynamicCustomMeta: IUUID;\n  updateBatchDynamicCustomMeta: Array<IUUID>;\n  createDynamicCustomValue: IDynamicCustomValuePayload;\n  updateDynamicCustomValue: IDynamicCustomValuePayload;\n  deleteDynamicCustomValue: IUUID;\n  updateBatchDynamicCustomValue: Array<IUUID>;\n  createDynamicPage: IDynamicPagePayload;\n  updateDynamicPage: IDynamicPagePayload;\n  deleteDynamicPage: IUUID;\n  createDynamicBlock: IDynamicBlockPayload;\n  updateDynamicBlock: IDynamicBlockPayload;\n  deleteDynamicBlock: IUUID;\n  createDynamicSection: IDynamicSectionPayload;\n  updateDynamicSection: IDynamicSectionPayload;\n  deleteDynamicSection: IUUID;\n  createDynamicSectionBlock: IDynamicSectionBlockPayload;\n  updateDynamicSectionBlock: IDynamicSectionBlockPayload;\n  deleteDynamicSectionBlock: IUUID;\n  createDynamicTab: IDynamicTabPayload;\n  updateDynamicTabBlock: IDynamicTabPayload;\n  deleteDynamicTab: IUUID;\n  createCharge: ICreateChargePayload;\n  createClinicHistory: ICreateClinicHistoryPayload;\n  createClinicHistoryMedicalBackgroundDetail: ICreateClinicHistoryMedicalBackgroundDetailPayload;\n  createEventDetail: ICreateEventDetailPayload;\n  createFisicExam: ICreateFisicExamPayload;\n  createFormat: ICreateFormatPayload;\n  createMedicalBackgroundDetail: ICreateMedicalBackgroundDetailPayload;\n  createMedicalBackground: ICreateMedicalBackgroundPayload;\n  createMedicalConfig: ICreateMedicalConfigPayload;\n  createMedicalService: ICreateMedicalServicePaylod;\n  createMedicine: ICreateMedicinePayload;\n  createVaccine: ICreateVaccinePayload;\n  createVitalSigns: ICreateVitalSignsPayload;\n  createMedicRecipe: ICreateMedicRecipePayload;\n  createRecipeConfig: ICreateRecipeConfigPaylod;\n  createRegistSesion: ICreateRegistSesionPayload;\n  createPacientNote: ICreatePacientNotePayload;\n  createTherapy: ICreateChargePayload;\n  createDiagnostic: ICreateDiagnosticPayload;\n  createConsultNote: ICreateConsultNotePayload;\n  createMedicalBackgroundSet: ICreateMedicalBackgroundSetPayload;\n  createMedicalBackgroundTemplate: boolean;\n  createVitalSignsTemplate: boolean;\n  createPacientMedicalBackground: ICreatePacientMedicalBackgroundPaylod;\n  createPatientVitalSignsResponse: ICreatePatientVitalSignsResponsePayload;\n  updateCharge: IUpdateChargePayload;\n  updateClinicHistory: IUpdateClinicHistoryPayloads;\n  updateClinicHistoryMedicalBackgroundDetail: IUpdateClinicHistoryMedicalBackgroundDetailPayload;\n  updateEventDetail: IUpdateEventDetailtPayload;\n  updateFisicExam: IUpdateFisicExamPayload;\n  updateFormat: IUpdateFormatPayload;\n  updateMedicalBackgroundDetail: IUpdateMedicalBackgroundDetailPayload;\n  updateMedicalBackground: IUpdateMedicalBackgroundPayload;\n  updateMedicalConfig: IUpdateMedicalConfigPayload;\n  updateMedicalService: IUpdateMedicalServicePayload;\n  updateMedicine: IUpdateMedicinePayload;\n  updateVaccine: IUpdateVaccinePayload;\n  updateVitalSigns: IUpdateVitalSingsPayloads;\n  updateMedicRecipe: IUpdateMedicRecipePayload;\n  updateRecipeConfig: IUpdateRecipeConfigPayload;\n  updateRegistSesion: IUpdateRegistSesionPayload;\n  updatePacientNote: IUpdatePacientNotePayload;\n  updateTherapy: IUpdateTherapyPayload;\n  updateDiagnostic: IUpdateDiagnosticPayload;\n  updateConsultNote: IUpdateConsultNotePayload;\n  updatePacientMedicalBackground: IUpdatePacientMedicalBackgroundPayload;\n  updateBillingRequest: IUpdateBillingRequestPayload;\n  updateSortFormat: IUpdateSortFormatPayload;\n  updatePatientVitalSignsResponse: IUpdatePatientVitalSignsResponsePayloads;\n  deleteCharge: IDeleteChargePayload;\n  deleteClinicHistory: IDeleteClinicHistoryPayload;\n  deleteClinicHistoryMedicalBackgrounDetail: IDeleteClinicHistoryMedicalBackgroundDetailPayload;\n  deleteConsult: IDeleteConsultPayload;\n  deleteFisicExam: IDeleteFisicalExamPayload;\n  deleteMedicalBackgroundDetail: IDeleteMedicalBackgroundDetailPayload;\n  deleteMedicalBackground: IDeleteMedicalBackgroundPayload;\n  deleteMedicalConfig: IDeleteMedicalConfigPayload;\n  deleteMedicalService: IDeleteMedicalServicePayload;\n  deleteMedicine: IDeleteMedicinePayload;\n  deleteVaccine: IDeleteVaccinePayload;\n  deleteVitalSign: IDeleteVitalSignPayload;\n  deleteMedicRecipe: IDeleteMedicRecipePayload;\n  deleteRecipeConfig: IDeleteRecipeConfigPayload;\n  deleteRegistSesion: IDeleteRegistSesionPayload;\n  deleteTherapy: IDeleteTherapyPayload;\n  deleteDiagnostic: IDeleteDiagnosticPayload;\n  deleteConsultNote: IDeleteConsultNotePayload;\n  deletePacientNote: IDeletePacientNotePayload;\n  deletePacientMedicalBackground: IDeletePacientMedicalBackgroundPayload;\n  deleteBillingRequest: IDeleteBillingRequestPayload;\n  deleteFormat: IDeleteFormatPayload;\n  printWithImageFromUrl: ICreatePDFPayload;\n  bulkWorkSpace: boolean;\n  orderingMemberBoard: IOrderingMemberBoardPayload;\n  createSpace: ISpacePayload;\n  updateSpace: ISpacePayload;\n  deleteSpace: IUUID;\n  updateBatchMemberSpace: Array<IUUID>;\n  createMemberSpace: IMemberSpacePayload;\n  updateMemberSpace: IMemberSpacePayload;\n  deleteMemberSpace: IUUID;\n  createBoardStatus: IBoardStatusPayload;\n  updateBoardStatus: IBoardStatusPayload;\n  deleteBoardStatus: IUUID;\n  updateBatchMemberBoard: Array<IUUID>;\n  createBoard: IBoardPayload;\n  updateBoard: IBoardPayload;\n  deleteBoard: IUUID;\n  createBoardList: IBoardListPayload;\n  updateBoardList: IBoardListPayload;\n  updateBatchBoardList: Array<IUUID>;\n  deleteBoardList: IUUID;\n  createBoardGroupColumn: IBoardGroupColumnPayload;\n  updateBoardGroupColumn: IBoardGroupColumnPayload;\n  updateBatchBoardGroupColumn: Array<IUUID>;\n  deleteBoardGroupColumn: IUUID;\n  createBoardColumnType: IBoardColumnTypePayload;\n  updateBoardColumnType: IBoardColumnTypePayload;\n  deleteBoardColumnType: IUUID;\n  createBoardColumnValue: IBoardColumnValuePayload;\n  updateBoardColumnValue: IBoardColumnValuePayload;\n  deleteBoardColumnValue: IUUID;\n  createCardColumnValue: ICardColumnValuePayload;\n  updateCardColumnValue: ICardColumnValuePayload;\n  deleteCardColumnValue: IUUID;\n  createBoardMemberReference: IBoardMemberReferencePayload;\n  updateBoardMemberReference: IBoardMemberReferencePayload;\n  deleteBoardMemberReference: IUUID;\n  createBoardRowForResourceQuote: IBoardRowPayload;\n  createBoardRow: IBoardRowPayload;\n  updateBoardRow: IBoardRowPayload;\n  updateBatchBoardRow: Array<IUUID>;\n  deleteBoardRow: IUUID;\n  createCard: ICardPayload;\n  updateCard: ICardPayload;\n  deleteCard: IUUID;\n  createCardChecklist: ICardChecklistPayload;\n  updateCardChecklist: ICardChecklistPayload;\n  deleteCardChecklist: IUUID;\n  updateBatchCardCheckComponent: Array<IUUID>;\n  createCardCheckComponent: ICardCheckComponentPayload;\n  updateCardCheckComponent: ICardCheckComponentPayload;\n  deleteCardCheckComponent: IUUID;\n  createCardReply: ICardReplyPayload;\n  updateCardReply: ICardReplyPayload;\n  deleteCardReply: IUUID;\n  createNestedFiles: INestedFilesPayload;\n  updateNestedFiles: INestedFilesPayload;\n  deleteNestedFiles: IUUID;\n  createMemberCard: IMemberCardPayload;\n  updateMemberCard: IMemberCardPayload;\n  deleteMemberCard: IUUID;\n  createMemberBoard: IMemberBoardPayload;\n  updateMemberBoard: IMemberBoardPayload;\n  deleteMemberBoard: IUUID;\n  deleteMeasure: IDeleteMeasurePayload;\n  updateMeasure: IUpdateMeasurePayload;\n  deleteMaterialCategory: IDeleteMaterialCategoryPayload;\n  createMeasureValue: ICreateMeasureValuePayload;\n  updateMeasureValue: IUpdateMeasureValuePayload;\n  deleteMeasureValue: IDeleteMeasureValuePayload;\n  deleteMeasureUnityTwo: IDeleteMeasureUnityTwoPayload;\n  updateModule: IUpdateModulePayload;\n  createMaterialQuotation: ICreateMaterialQuotationPayload;\n  updateMaterialQuotation: IUpdateMaterialQuotationPayload;\n  deleteMaterialQuotation: IDeleteMaterialQuotationPayload;\n  createMaterialModule: ICreateMaterialModulePayload;\n  updateMaterialModule: IUpdateMaterialModulePayload;\n  deleteMaterialModule: IDeleteMaterialModulePayload;\n  createUserCustomer: ICreateUserCustomerPayload;\n  createMeasureUnity: ICreateMeasureUnityPayload;\n  updateMeasureUnity: IUpdateMeasureUnityPayload;\n  deleteMeasureUnity: IDeleteMeasureUnityPayload;\n  createAttribute: ICreateAttributePayload;\n  createAttributeValue: ICreateAttributeValuePayload;\n  createBuildingSite: ICreateBuildingSiteAddressPayload;\n  createMadreQuotation: ICreateMadreQuotationPayload;\n  createMaterialCategory: ICreateMaterialCategoryPayload;\n  createMaterialCombination: ICreateMaterialCombinationPayload;\n  createMaterial: ICreateMaterialPayload;\n  createMaterialStockMeasure: ICreateMaterialStockMeasurePayload;\n  createMaterialStock: ICreateMaterialStockPayload;\n  createMaterialVariableQuotation: ICreateMaterialVariableQuotationPayload;\n  createMeasure: ICreateMeasurePayload;\n  createMeasureUnityTwo: ICreateMeasureTwoPayload;\n  createModuleCategory: ICreateModuleCategoryPayload;\n  createModule: ICreateModulePayload;\n  createQuotation: ICreateQuotationPayload;\n  createQuotationModule: ICreateQuotationModulePayload;\n  createVariable: ICreateVariablePayload;\n  deleteAttribute: IDeleteAttributePayload;\n  deleteAttributeValue: IDeleteAttributeValuePayload;\n  deleteBuildingSiteAddress: IDeleteBuildingSiteAddressPayload;\n  deleteMaterialCombination: IDeleteMaterialCombinationPayload;\n  deleteMaterial: IDeleteMaterialPayload;\n  deleteMaterialStock: IDeleteMaterialStockPayload;\n  deleteMaterialStockMeasure: IDeleteMaterialStockMeasurePayload;\n  deleteMaterialVariableQuotation: IDeleteMaterialVariableQuotationPayload;\n  deleteModuleCategory: IDeleteModuleCategoryPayload;\n  deleteModule: IDeleteModulePayload;\n  deleteQuotationModule: IDeleteQuotationModulePayload;\n  deleteQuotation: IDeleteQuotationPayload;\n  deleteVariable: IDeleteVariablePayload;\n  updateAttribute: IUpdateAttributePayload;\n  updateAttributeValue: IUpdateAttributeValuePayload;\n  updateBuildingSiteAddress: IUpdateBuildingSiteAddressPayload;\n  updateMaterialCategory: IUpdateMaterialCategoryPayload;\n  updateMaterialCombination: IUpdateMaterialCombinationPayload;\n  updateMaterial: IUpdateMaterialPayload;\n  updateMaterialStockMeasure: IUpdateMaterialStockMeasurePayload;\n  updateMaterialStock: IUpdateMaterialStockPayload;\n  updateMadreQuotation: IUpdateMadreQuotationPayload;\n  deleteMadreQuotation: IDeleteMadreQuotationPayload;\n  updateMaterialVariableQuotation: IUpdateMaterialVariableQuotationPayload;\n  updateMeasureUnityTwo: IUpdateMeasureUnityTwoPayload;\n  updateCategoryModule: IUpdateModuleCategoryPayload;\n  updateQuotationModule: IUpdateQuotationModulePayload;\n  updateQuotation: IUpdateQuotationPayload;\n  updateVariable: IUpdateVariablePayload;\n  updateAnalysis: IUpdateAnalysisPayload;\n  createClient: ICreateClientPayload;\n  updateClient: IUpdateClientPayload;\n  createConsult: ICreateConsultPayload;\n  updateConsult: IUpdateConsultPayload;\n  calculator_deleteConsult: IDeleteConsultPayload;\n  createCompared: ICreateComparedPayload;\n  updateCompared: IUpdateComparedPayload;\n  deleteCompared: IDeleteComparedPayload;\n  createCarMercado: ICreateCarMercadoPayload;\n  createCarMercadoMassive: ICreateCarMercadoMassivePayload;\n  deleteCarMercado: IDeleteCarMercadoPayload;\n  uploadFile: string;\n  zipFolderContent: IZipFolderContentPayload;\n  createFolder: IFolderPayload;\n  updateFolder: IFolderPayload;\n  deleteFolder: IDeleteFolderPayLoad;\n  createFile: ICreateFilePayload;\n  updateFile: IUpdateFilesPayload;\n  deleteFile: IDeleteFilePayLoad;\n  shareFile: IShareFilePayload;\n  shareFolder: IShareFolderPayload;\n  stopSharingFolder: IStopSharingFolderPayload;\n  stopSharingFile: IStopSharingFilePayload;\n  uploadFilePrivate: IUploadFilePrivatePayload;\n  addChatMember: IAddChatMemberPayload;\n  addChatMemberWs: IAddChatMemberWsPayload;\n  conversationId: IGetConversationIdPayload;\n  deleteReply: IDeleteReplyPayload;\n  createWallet: IWalletPayload;\n  updateWallet: IWalletPayload;\n  deleteWallet: IUUID;\n  createWalletTransaction: IWalletTransactionPayload;\n  createMultipleWalletTransaction: IMultipleWalletTransactionPayload;\n  createWalletTransactionStatus: IWalletTransactionStatusPayload;\n  createWalletTransactionMemberRelation: IWalletTransactionMemberRelationPayload;\n  createMemberWallet: IMemberWalletPayload;\n  updateMemberWallet: IMemberWalletPayload;\n  deleteMemberWallet: IUUID;\n  createProjectWalletKey: IProjectWalletKeyPayload;\n  updateProjectWalletKey: IProjectWalletKeyPayload;\n  deleteProjectWalletKey: IUUID;\n  createCertificateMovement: ICreateCertificateMovementPayload;\n  deleteCertificate: IDeleteCertificatePayload;\n  updateInsurerModule: IUpdateInsurerModulePayload;\n  createInsurerModule: ICreateInsurerModulePayload;\n  createPolicyModule: ICreatePolicyModulePayload;\n  updatePolicyModule: IUpdatePolicyModulePayload;\n  deletePolicyModule: IDeletePolicyModulePayload;\n  createInsurerFee: ICreateInsurerFeePayload;\n  deleteInsurerFee: IDeleteInsurerFeePayload;\n  updateInsurerFee: IUpdateInsurerFeePayload;\n  createPolicy: ICreatePolicyPayload;\n  cancelCertificate: ICancelCertificatePayload;\n  createBeneficiary: ICreateBeneficiaryPayload;\n  createCertificate: ICreateCertificatePayload;\n  createCertificateFile: ICreateCertificateFilePayload;\n  createContact: ICreateContactPayload;\n  createContractorBranchOffice: ICreateContractorBranchOfficePayload;\n  createContractorContact: ICreateContractorContactPayload;\n  createContractor: ICreateContractorPayload;\n  createContractorPolicy: ICreateContractorPolicyPayload;\n  createCountryRequest: ICreateCountryRequestPayload;\n  createFee: ICreateFeePayload;\n  createInsurerCompany: ICreateInsurerCompanyPayload;\n  createIssuedReport: ICreateIssuedReportPayload;\n  createMerchandiseDetail: ICreateMerchandiseDetailPayload;\n  createMerchandise: ICreateMerchandisePayload;\n  createMoney: ICreateMoneyPayload;\n  createMoneyPolicy: ICreateMoneyPolicyPayload;\n  itus_createOffice: ICreateOfficePayload;\n  deleteBeneficiary: IDeleteBeneficiaryPayload;\n  deleteContact: IDeleteContactPayload;\n  deleteContractor: IDeleteContractorPayload;\n  deleteContractorOffice: IDeleteContractorOfficePayload;\n  deleteContractorPolicy: IDeleteContractorPolicyPayload;\n  deleteInsurerModule: IDeleteInsurerModulePayload;\n  deleteFee: IDeleteFeePayload;\n  deleteMerchandise: IDeleteMerchandisePayload;\n  deleteInsurerCompany: IDeleteInsurerCompanyPayload;\n  deleteMoney: IDeleteMoneyPayload;\n  deletePolicy: IDeletePolicyPayload;\n  updateBeneficiary: IUpdateBeneficiaryPayload;\n  updateCertificate: IUpdateCertificatePayload;\n  updateContact: IUpdateContactPayload;\n  updateContractor: IUpdateContractorPayload;\n  updateFee: IUpdateFeePayload;\n  updateInsurerCompany: IUpdateInsurerCompanyPayload;\n  updateMerchandise: IUpdateMerchandisePayload;\n  updateMoney: IUpdateMoneyPayload;\n  updatePolicy: IUpdatePolicyPayload;\n  createAttendanceStudent: IAttendancePayload;\n  createClassroom: IClassroomPayload;\n  createDayService: IDayServicePayload;\n  createGrade: IGradePayload;\n  createLevel: ILevelPayload;\n  createSchool: ISchoolPayload;\n  createStudent: IStudentPayload;\n  createBulkStudent: ICreateBulkStudentPayload;\n  updateAttendanceStudents: IAttendancePayload;\n  updateClassroom: IClassroomPayload;\n  updateDayService: IDayServicePayload;\n  updateGrade: IGradePayload;\n  updateLevel: ILevelPayload;\n  updateSchool: ISchoolPayload;\n  updateStudent: IStudentPayload;\n  deleteAttendanceStudent: IUUID;\n  deleteClassroom: IUUID;\n  deleteDayService: IUUID;\n  deleteGrade: IUUID;\n  deleteLevel: IUUID;\n  deleteSchool: IUUID;\n  deleteStudent: IUUID;\n  deleteStudentTutor: IUUID;\n  createBeneficiarie: IBeneficiariePayload;\n  updateBeneficiarie: IBeneficiariePayload;\n  deleteBeneficiarie: IUUID;\n  createFormAccidentDisease: IFormAccidentDiseasePayload;\n  updateFormAccidentDisease: IFormAccidentDiseasePayload;\n  deleteFormAccidentDisease: IUUID;\n  createFormAutomobileDamage: IFormAutomobileDamagePayload;\n  updateFormAutomobileDamage: IFormAutomobileDamagePayload;\n  deleteFormAutomobileDamage: IUUID;\n  createFormCarCatalog: IFormCarCatalogPayload;\n  updateFormCarCatalog: IFormCarCatalogPayload;\n  deleteFormCarCatalog: IUUID;\n  createFormDamage: IFormDamagePayload;\n  updateFormDamage: IFormDamagePayload;\n  deleteFormDamage: IUUID;\n  createFormLife: IFormLifePayload;\n  updateFormLife: IFormLifePayload;\n  deleteFormLife: IUUID;\n  createInvolvedReferrer: IInvolvedReferrerPayload;\n  updateInvolvedReferrer: IInvolvedReferrerPayload;\n  deleteInvolvedReferrer: IUUID;\n  createOldPolice: IOldPolicePayload;\n  updateOldPolice: IOldPolicePayload;\n  deleteOldPolice: IUUID;\n  createPersonalInformation: IPersonalInformationPayload;\n  updatePersonalInformation: IPersonalInformationPayload;\n  deletePersonalInformation: IUUID;\n  createPolice: IPolicePayload;\n  updatePolice: IPolicePayload;\n  deletePolice: IUUID;\n  createPoliceAssign: IPoliceAssignPayload;\n  updatePoliceAssign: IPoliceAssignPayload;\n  deletePoliceAssign: IUUID;\n  createPolicePendient: IPolicePendientPayload;\n  updatePolicePendient: IPolicePendientPayload;\n  deletePolicePendient: IUUID;\n  createPoliceQuote: IPoliceQuotePayload;\n  updatePoliceQuote: IPoliceQuotePayload;\n  deletePoliceQuote: IUUID;\n  updatePoliceQuotePrima: IPoliceQuotePrimaPayload;\n  deletePoliceQuotePrima: IUUID;\n  createRelationShip: IRelationShipPayload;\n  updateRelationShip: IRelationShipPayload;\n  deleteRelationShip: IUUID;\n  createSucursal: ISucursalPayload;\n  updateSucursal: ISucursalPayload;\n  deleteSucursal: IUUID;\n  createAgentKey: IAgentKeyPayload;\n  updateAgentKey: IAgentKeyPayload;\n  deleteAgentKey: IUUID;\n  createAgentProviderContact: IAgentProviderContactPayload;\n  updateAgentProviderContact: IAgentProviderContactPayload;\n  deleteAgentProviderContact: IUUID;\n  createAgentProvider: IAgentProviderPayload;\n  updateAgentProvider: IAgentProviderPayload;\n  deleteAgentProvider: IUUID;\n  createBranch: IBranchPayload;\n  updateBranch: IBranchPayload;\n  deleteBranch: IUUID;\n  createComission: IComissionPayload;\n  updateComission: IComissionPayload;\n  deleteComission: IUUID;\n  createContractorCelula: IContractorCelulaPayload;\n  updateContractorCelula: IContractorCelulaPayload;\n  deleteContractorCelula: IUUID;\n  createContractorClassification: IContractorClassificationPayload;\n  updateContractorClassification: IContractorClassificationPayload;\n  deleteContractorClassification: IUUID;\n  createContractorGroupingLevel: IContractorGroupingLevelPayload;\n  updateContractorGroupingLevel: IContractorGroupingLevelPayload;\n  deleteContractorGroupingLevel: IUUID;\n  saam_createContractor: IContractorPayload;\n  saam_updateContractor: IContractorPayload;\n  saam_deleteContractor: IUUID;\n  createContractorProcessDocument: IContractorProcessDocumentPayload;\n  updateContractorProcessDocument: IContractorProcessDocumentPayload;\n  deleteContractorProcessDocument: IUUID;\n  createCoverageCoinsurance: ICoverageCoinsurancePayload;\n  updateCoverageCoinsurance: ICoverageCoinsurancePayload;\n  deleteCoverageCoinsurance: IUUID;\n  createCoverageDeductible: ICoverageDeductiblePayload;\n  updateCoverageDeductible: ICoverageDeductiblePayload;\n  deleteCoverageDeductible: IUUID;\n  createCoverageInPolicy: ICoverageInPolicyPayload;\n  updateCoverageInPolicy: ICoverageInPolicyPayload;\n  deleteCoverageInPolicy: IUUID;\n  createCoverage: ICoveragePayload;\n  updateCoverage: ICoveragePayload;\n  deleteCoverage: IUUID;\n  createCoveragePackage: ICoveragePackagePayload;\n  updateCoveragePackage: ICoveragePackagePayload;\n  deleteCoveragePackage: IUUID;\n  createCoverageSuminsured: ICoverageSuminsuredPayload;\n  updateCoverageSuminsured: ICoverageSuminsuredPayload;\n  deleteCoverageSuminsured: IUUID;\n  createCoverageTopecoinsurance: ICoverageTopecoinsurancePayload;\n  updateCoverageTopecoinsurance: ICoverageTopecoinsurancePayload;\n  deleteCoverageTopecoinsurance: IUUID;\n  createProcessDocument: IProcessDocumentPayload;\n  updateProcessDocument: IProcessDocumentPayload;\n  deleteProcessDocument: IUUID;\n  createProjectAgentProviderBranch: IProjectAgentProviderBranchPayload;\n  updateProjectAgentProviderBranch: IProjectAgentProviderBranchPayload;\n  deleteProjectAgentProviderBranch: IUUID;\n  createProjectAgentProvider: IProjectAgentProviderPayload;\n  updateProjectAgentProvider: IProjectAgentProviderPayload;\n  deleteProjectAgentProvider: IUUID;\n  createReferrerAccountState: IReferrerAccountStatePayload;\n  updateReferrerAccountState: IReferrerAccountStatePayload;\n  deleteReferrerAccountState: IUUID;\n  createReferrerBranch: IReferrerBranchPayload;\n  updateReferrerBranch: IReferrerBranchPayload;\n  deleteReferrerBranch: IUUID;\n  createReferrer: IReferrerPayload;\n  updateReferrer: IReferrerPayload;\n  deleteReferrer: IUUID;\n  createResponsableInvolved: IResponsableInvolvedPayload;\n  updateResponsableInvolved: IResponsableInvolvedPayload;\n  deleteResponsableInvolved: IUUID;\n  createSubBranch: ISubBranchPayload;\n  updateSubBranch: ISubBranchPayload;\n  deleteSubBranch: IUUID;\n  createProjectAgentProviderEmailReminder: IProjectAgentProviderEmailReminderPayload;\n  updateProjectAgentProviderEmailReminder: IProjectAgentProviderEmailReminderPayload;\n  deleteProjectAgentProviderEmailReminder: IUUID;\n  createEndorsement: IEndorsementPayload;\n  updateEndorsement: IEndorsementPayload;\n  deleteEndorsement: IUUID;\n  createEndorsementCert: IEndorsementCertPayload;\n  updateEndorsementCert: IEndorsementCertPayload;\n  deleteEndorsementCert: IUUID;\n  createSinister: ISinisterPayload;\n  updateSinister: ISinisterPayload;\n  deleteSinister: IUUID;\n  createSinisterAiling: ISinisterAilingPayload;\n  updateSinisterAiling: ISinisterAilingPayload;\n  deleteSinisterAiling: IUUID;\n  createSinisterCar: ISinisterCarPayload;\n  updateSinisterCar: ISinisterCarPayload;\n  deleteSinisterCar: IUUID;\n  createSinisterCarContact: ISinisterCarContactPayload;\n  updateSinisterCarContact: ISinisterCarContactPayload;\n  deleteSinisterCarContact: IUUID;\n  createSinisterDamage: ISinisterDamagePayload;\n  updateSinisterDamage: ISinisterDamagePayload;\n  deleteSinisterDamage: IUUID;\n  createSinisterDamageContact: ISinisterDamageContactPayload;\n  updateSinisterDamageContact: ISinisterDamageContactPayload;\n  deleteSinisterDamageContact: IUUID;\n  createSinisterLife: ISinisterLifePayload;\n  updateSinisterLife: ISinisterLifePayload;\n  deleteSinisterLife: IUUID;\n  createSinisterLifeContact: ISinisterLifeContactPayload;\n  updateSinisterLifeContact: ISinisterLifeContactPayload;\n  deleteSinisterLifeContact: IUUID;\n  createSinisterHospital: ISinisterHospitalPayload;\n  updateSinisterHospital: ISinisterHospitalPayload;\n  deleteSinisterHospital: IUUID;\n  createSinisterFactura: ISinisterFacturaPayload;\n  updateSinisterFactura: ISinisterFacturaPayload;\n  deleteSinisterFactura: IUUID;\n  createPoliceReceipt: IPoliceReceiptPayload;\n  updatePoliceReceipt: IPoliceReceiptPayload;\n  deletePoliceReceipt: IUUID;\n  createPoliceReceiptAccount: IPoliceReceiptAccountPayload;\n  updatePoliceReceiptAccount: IPoliceReceiptAccountPayload;\n  deletePoliceReceiptAccount: IUUID;\n  createPoliceReceiptAccountState: IPoliceReceiptAccountStatePayload;\n  updatePoliceReceiptAccountState: IPoliceReceiptAccountStatePayload;\n  deletePoliceReceiptAccountState: IUUID;\n  createPoliceReceiptFolio: IPoliceReceiptFolioPayload;\n  updatePoliceReceiptFolio: IPoliceReceiptFolioPayload;\n  deletePoliceReceiptFolio: IUUID;\n  createPoliceReceiptPayment: IPoliceReceiptPaymentPayload;\n  updatePoliceReceiptPayment: IPoliceReceiptPaymentPayload;\n  deletePoliceReceiptPayment: IUUID;\n  createPoliceFile: IPoliceFilePayload;\n  updatePoliceFile: IPoliceFilePayload;\n  deletePoliceFile: IUUID;\n  createInsurerComment: IInsurerCommentPayload;\n  updateInsurerComment: IInsurerCommentPayload;\n  deleteInsurerComment: IUUID;\n  createInsurerFileReading: IInsurerFileReadingPayload;\n  updateInsurerFileReading: IInsurerFileReadingPayload;\n  deleteInsurerFileReading: IUUID;\n  createInsurerFileReadingTag: IInsurerFileReadingTagPayload;\n  updateInsurerFileReadingTag: IInsurerFileReadingTagPayload;\n  deleteInsurerFileReadingTag: IUUID;\n  updateInsurerBailType: IInsurerBailTypePayload;\n  deleteInsurerBailType: IUUID;\n  createInsurerInvolved: IInsurerInvolvedPayload;\n  updateInsurerInvolved: IInsurerInvolvedPayload;\n  deleteInsurerInvolved: IUUID;\n  createInsurerLog: IInsurerLogPayload;\n  updateInsurerLog: IInsurerLogPayload;\n  deleteInsurerLog: IUUID;\n  createInsurerLogEmail: IInsurerLogEmailPayload;\n  updateInsurerLogEmail: IInsurerLogEmailPayload;\n  deleteInsurerLogEmail: IUUID;\n  createInsurerOrgInfo: IInsurerOrgInfoPayload;\n  updateInsurerOrgInfo: IInsurerOrgInfoPayload;\n  deleteInsurerOrgInfo: IUUID;\n  createInsurerTicket: IInsurerTicketPayload;\n  updateInsurerTicket: IInsurerTicketPayload;\n  deleteInsurerTicket: IUUID;\n  createInsurerSchedule: IInsurerSchedulePayload;\n  updateInsurerSchedule: IInsurerSchedulePayload;\n  deleteInsurerSchedule: IUUID;\n  createInsurerScheduleParticipant: IInsurerScheduleParticipantPayload;\n  updateInsurerScheduleParticipant: IInsurerScheduleParticipantPayload;\n  deleteInsurerScheduleParticipant: IUUID;\n  createInsurerNotification: IInsurerNotificationPayload;\n  updateInsurerNotification: IInsurerNotificationPayload;\n  deleteInsurerNotification: IUUID;\n  createInsurerReminder: IInsurerReminderPayload;\n  updateInsurerReminder: IInsurerReminderPayload;\n  deleteInsurerReminder: IUUID;\n  createInsurerReminderProjectAgentProvider: IInsurerReminderProjectAgentProviderPayload;\n  updateInsurerReminderProjectAgentProvider: IInsurerReminderProjectAgentProviderPayload;\n  deleteInsurerReminderProjectAgentProvider: IUUID;\n  createInsurerReminderRecord: IInsurerReminderRecordPayload;\n  updateInsurerReminderRecord: IInsurerReminderRecordPayload;\n  deleteInsurerReminderRecord: IUUID;\n  createInsurerReminderSubBranch: IInsurerReminderSubBranchPayload;\n  updateInsurerReminderSubBranch: IInsurerReminderSubBranchPayload;\n  deleteInsurerReminderSubBranch: IUUID;\n  createInsurerBailType: IInsurerBailTypePayload;\n  createInsurerBirthDateTemplate: IInsurerBirthDateTemplatePayload;\n  updateInsurerBirthDateTemplate: IInsurerBirthDateTemplatePayload;\n  deleteInsurerBirthDateTemplate: IUUID;\n  createInsurerDirectory: IInsurerDirectoryPayload;\n  updateInsurerDirectory: IInsurerDirectoryPayload;\n  deleteInsurerDirectory: IUUID;\n  createInsurerExpense: IInsurerExpensePayload;\n  updateInsurerExpense: IInsurerExpensePayload;\n  deleteInsurerExpense: IUUID;\n  createInsurerIbisForm: IInsurerIbisFormPayload;\n  updateInsurerIbisForm: IInsurerIbisFormPayload;\n  deleteInsurerIbisForm: IUUID;\n  createInsurerIbisProvider: IInsurerIbisProviderPayload;\n  updateInsurerIbisProvider: IInsurerIbisProviderPayload;\n  deleteInsurerIbisProvider: IUUID;\n  createInsurerSender: IInsurerSenderPayload;\n  updateInsurerSender: IInsurerSenderPayload;\n  deleteInsurerSender: IUUID;\n  createInsurerZipCodeSepomex: IInsurerZipCodeSepomexPayload;\n  updateInsurerZipCodeSepomex: IInsurerZipCodeSepomexPayload;\n  deleteInsurerZipCodeSepomex: IUUID;\n  createAgentProviderBono: IAgentProviderBonoPayload;\n  updateAgentProviderBono: IAgentProviderBonoPayload;\n  deleteAgentProviderBono: IUUID;\n  saam_sendNotification: ISendNotificationPayload;\n  createMultipleNotification: IMultipleNotificationPayload;\n  createMultipleMemberNotification: IMultipleMemberNotificationPayload;\n  createMemberNotification: IMemberNotificationPayload;\n  createNotification: INotificationPayload;\n  updateMultipleNotification: IMultipleNotificationPayload;\n  updateNotification: INotificationPayload;\n  deleteNotification: INotificationPayload;\n  createDevice: IDevicePayload;\n  updateDevice: IDevicePayload;\n  deleteDevice: IDevicePayload;\n  addDots: boolean;\n  setCodeAsUnavailable: ISetCodeAsUnavailablePayload;\n  createAdminCode: ICreateAdminCodePayload;\n  scanCode: IScanCodePayload;\n  sendMessage: ISendMessagePayload;\n  lookForCode: ILookForCodePayload;\n  createCode: ICreateCodePayload;\n  exchange_createProvider: ICreateProviderPayload;\n  createPrizeCategory: ICreatePrizeCategoryPayload;\n  createPrizeCode: ICreatePrizeCodePayload;\n  deleteCode: IDeleteCodePayload;\n  deletePrizeCode: IDeletePrizeCodePayload;\n  exchange_deleteProvider: IDeleteProviderPayload;\n  exchangeDots: IExchangeDotsPayload;\n  createAdverseEvent: ICreateAdverseEventPayload;\n  execCreateCodes: boolean;\n  setGlobalCode: boolean;\n  deleteAdverseEvent: IDeleteAdverseEventPayload;\n  createBrand: ICreateBrandPayload;\n}\n\nexport interface ISendQuizToEmailInput {\n  quiz: Array<IKeyValuePairOfStringAndStringInput>;\n  email: string;\n}\n\nexport interface IKeyValuePairOfStringAndStringInput {\n  key: string;\n  value: string;\n}\n\nexport interface ISendQuizToEmailPayload {\n  message: string;\n}\n\nexport interface IUpdateProfileWithIdInput {\n  memberId: IUUID;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  maritalStatus?: IMaritalStatus;\n  hospital?: string;\n  state?: string;\n  institution?: string;\n  gender?: IGender;\n  companyName?: string;\n  photo?: string;\n  phone?: string;\n  roleCode?: string;\n  bussinessName?: string;\n  countryCode?: string;\n  projectRoleCode?: string;\n  quatorProfileId?: string;\n  biography?: string;\n  siteUrl?: string;\n  siteLogo?: string;\n  cURP?: string;\n  rFC?: string;\n  nSS?: string;\n  infonavitCredit?: string;\n  nationality?: string;\n  age?: number;\n  dateOfBirth?: string;\n}\n\nexport interface IUpdateProfileWithIdPayload {\n  member: IMember;\n}\n\nexport interface INicheInput {\n  name?: string;\n  description?: string;\n}\n\nexport interface INichePayload {\n  niche: INiche;\n}\n\nexport interface INicheServiceInput {\n  microserviceId?: IUUID;\n  nicheId?: IUUID;\n  codeName?: string;\n}\n\nexport interface INicheServicePayload {\n  nicheService: INicheService;\n}\n\nexport interface ICreateBulkTutorInput {\n  projectId: IUUID;\n  cSVContent?: string;\n  isActive: boolean;\n  projectRoleCode?: string;\n  countryCode?: string;\n}\n\nexport interface ICreateBulkTutorPayload {\n  message: string;\n}\n\nexport interface IUpdateBillingDataInput {\n  memberId: IUUID;\n  person: IPerson;\n  businessName: string;\n  rFC?: string;\n  useCDFI?: IUseCDFI;\n  paymentMethod?: Iauth_PaymentMethod;\n  paymentTerm?: IPaymentTerm;\n  taxSituation?: string;\n}\n\nexport interface IUpdateBillingDataPayload {\n  billingData: IBillingData;\n}\n\nexport interface IUpdateCompanyDataInput {\n  memberId: IUUID;\n  companyName: string;\n  companyCategory?: string;\n  sucursal?: string;\n  phones?: string;\n  webSite?: string;\n}\n\nexport interface IUpdateCompanyDataPayload {\n  enterpriseData: IEnterpriseData;\n}\n\nexport interface ICreateBulkTeacherInput {\n  schoolId: IUUID;\n  projectId: IUUID;\n  cSVContent: string;\n  isActive: boolean;\n  projectRoleCode?: string;\n  countryCode?: string;\n}\n\nexport interface ICreateBulkTeacherPayload {\n  message: string;\n}\n\nexport interface IUpdateHealthInsuranceInput {\n  memberId: IUUID;\n  nSS?: string;\n  insuranceMajorMedicalExpenses?: string;\n  typeInsurance?: ITypeInsurance;\n  insuranceCarrier?: string;\n  policyNumber?: string;\n  dischargeDate?: IDateTime;\n  expirationDate?: IDateTime;\n}\n\nexport interface IUpdateHealthInsurancePayload {\n  healthInsurance: IHealthInsurance;\n}\n\nexport interface ICreateAttendanceExcelInput {\n  projectId: IUUID;\n}\n\nexport interface ICreateAttendanceExcelPayload {\n  url: string;\n}\n\nexport interface ICreateBulkUserInput {\n  projectId: IUUID;\n  cSVContent: string;\n  isActive: boolean;\n  projectRoleCode?: string;\n  countryCode?: string;\n}\n\nexport interface ICreateBulkUserPayload {\n  message: string;\n}\n\nexport interface ICreateAttendanceInput {\n  memberId: IUUID;\n  conferenceId: number;\n}\n\nexport interface ICreateAttendancePayload {\n  attendance: IAttendance;\n}\n\nexport interface ICreateCheisiUsersExcelInput {\n  projectId: IUUID;\n}\n\nexport interface ICreateCheisiUsersExcelPayload {\n  url: string;\n}\n\nexport interface INewContactFormInput {\n  message: string;\n  email: string;\n  projectId?: IUUID;\n  receiver: string;\n}\n\nexport interface INewContactFormPayload {\n  message: string;\n}\n\nexport interface INewExternalLoginInput {\n  memberId: IUUID;\n  token: string;\n  providerName: string;\n  email: string;\n}\n\nexport interface INewExternalLoginPayload {\n  externalLogin: IExternalLogin;\n}\n\nexport interface IExternalLogin {\n  memberId: IUUID;\n  token: string;\n  providerName: string;\n  email: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDeleteUserInput {\n  memberId: IUUID;\n}\n\nexport interface IDeleteUserPayload {\n  message: string;\n}\n\nexport interface ITestBulkInput {\n  test: string;\n}\n\nexport interface ITestBulkPayload {\n  message: string;\n}\n\nexport interface IUpdatePositionColumnsInput {\n  items: Array<IViewColumnPageInput>;\n}\n\nexport interface IViewColumnPageInput {\n  id: IUUID;\n  position: number;\n}\n\nexport interface IUpdatePositionColumnsPayload {\n  items: Array<IViewColumnPage>;\n}\n\nexport interface IViewColumnPage {\n  id: IUUID;\n  position: number;\n}\n\nexport interface IUpdatePositionBlockColumnsInput {\n  items: Array<IViewBlockColumnPageInput>;\n}\n\nexport interface IViewBlockColumnPageInput {\n  id: IUUID;\n  position: number;\n}\n\nexport interface IUpdatePositionBlockColumnsPayload {\n  items: Array<IViewBlockColumnPage>;\n}\n\nexport interface IViewBlockColumnPage {\n  id: IUUID;\n  position: number;\n}\n\nexport interface ILoginWithProviderInput {\n  token: string;\n  providerName: string;\n  email: string;\n}\n\nexport interface ILoginWithProviderPayload {\n  externalLogin: IExternalLogin;\n}\n\nexport interface ICreateProjectSocialNetworkInput {\n  projectId: IUUID;\n  socialNetworkType: ISocialNetworkType;\n  value: string;\n}\n\nexport interface ICreateProjectSocialNetworkPayload {\n  projectSocialNetwork: IProjectSocialNetwork;\n}\n\nexport interface IUpdateProjectSocialNetworkInput {\n  id: IUUID;\n  socialNetworkType?: ISocialNetworkType;\n  value?: string;\n}\n\nexport interface IUpdateProjectSocialNetworkPayload {\n  message: string;\n}\n\nexport interface IDeleteProjectSocialNetworkInput {\n  id: IUUID;\n}\n\nexport interface IDeleteProjectSocialNetworkPayload {\n  message: string;\n}\n\nexport interface ICreateRecommendedProjectInput {\n  projectId: IUUID;\n  position?: number;\n}\n\nexport interface ICreateRecommendedProjectPayload {\n  recommendedProject: IRecommendedProject;\n}\n\nexport interface IUpdateRecommendedProjectInput {\n  recommendedProjectId: IUUID;\n  projectId?: IUUID;\n  position?: number;\n}\n\nexport interface IUpdateRecommendedProjectPayload {\n  message: string;\n}\n\nexport interface IDeleteRecommendedProjectInput {\n  id: IUUID;\n}\n\nexport interface IDeleteRecommendedProjectPayload {\n  message: string;\n}\n\nexport interface ISetProjectToProductionInput {\n  projectId: IUUID;\n  status: boolean;\n}\n\nexport interface ISetProjectToProductionPayload {\n  message: string;\n}\n\nexport interface ICreateProjectTemplateInput {\n  projectId: IUUID;\n  templateId: IUUID;\n  serviceEmail: IServiceEmail;\n  templateService: ITemplateService;\n}\n\nexport interface ICreateProjectTemplatePayload {\n  projectTemplate: IProjectTemplate;\n}\n\nexport interface IUpdateProjectTemplateInput {\n  projectTemplateId: IUUID;\n  projectId?: IUUID;\n  templateId?: IUUID;\n  serviceEmail?: IServiceEmail;\n  templateService?: ITemplateService;\n}\n\nexport interface IUpdateProjectTemplatePayload {\n  message: string;\n}\n\nexport interface IDeleteProjectTemplateInput {\n  id: IUUID;\n}\n\nexport interface IDeleteProjectTemplatePayload {\n  message: string;\n}\n\nexport interface ICreateMemberInput {\n  email: string;\n  password: string;\n  planId?: IUUID;\n  useBilling?: boolean;\n  socialReason?: string;\n  firstName?: string;\n  lastName?: string;\n  phone?: string;\n  photo?: string;\n  isActive: boolean;\n  roleCode?: string;\n  countryCode?: string;\n  companyId?: string;\n}\n\nexport interface ICreateMemberPayload {\n  accessToken: string;\n  member: IMember;\n}\n\nexport interface ILoginMemberInput {\n  email: string;\n  password: string;\n  projectId?: string;\n}\n\nexport interface ILoginMemberPayload {\n  accessToken: string;\n  member: IMember;\n}\n\nexport interface ICreateCompanyInput {\n  name: string;\n}\n\nexport interface ICreateCompanyPayload {\n  company: ICompany;\n}\n\nexport interface ICreateProjectInput {\n  companyId: IUUID;\n  name: string;\n  description: string;\n  industryId: IUUID;\n  logo: string;\n  tagLine: string;\n  url?: string;\n}\n\nexport interface ICreateProjectPayload {\n  project: IProject;\n}\n\nexport interface ICreateNewRolesPayload {\n  message: string;\n}\n\nexport interface ICreateUserInput {\n  roleType?: string;\n  dialCode?: string;\n  city?: string;\n  town?: string;\n  houseNumber?: string;\n  colony?: string;\n  street?: string;\n  businessId?: IUUID;\n  businessIds?: Array<IUUID>;\n  branchOfficeIds?: Array<IUUID>;\n  projectId: IUUID;\n  email: string;\n  password: string;\n  accessToken?: string;\n  provider?: string;\n  adminCode?: string;\n  state?: string;\n  institution?: string;\n  hospital?: string;\n  maritalStatus?: IMaritalStatus;\n  gender?: IGender;\n  postalCode?: string;\n  address?: string;\n  periodInvoice?: IPeriodInvoice;\n  billingForm?: IBillingForm;\n  paymentTerm?: IPaymentTerm;\n  quatorProfileId?: string;\n  firstName?: string;\n  lastName?: string;\n  photo?: string;\n  phone?: string;\n  biography?: string;\n  siteUrl?: string;\n  siteLogo?: string;\n  cURP?: string;\n  url?: string;\n  rFC?: string;\n  nSS?: string;\n  infonavitCredit?: string;\n  nationality?: string;\n  age?: number;\n  dateOfBirth?: string;\n  isActive: boolean;\n  projectRoleCode?: string;\n  countryCode?: string;\n}\n\nexport interface ICreateUserPayload {\n  accessToken: string;\n  member: IMember;\n}\n\nexport interface ICreateOrFindUserInput {\n  projectId: IUUID;\n  email: string;\n  password: string;\n  state?: string;\n  institution?: string;\n  hospital?: string;\n  maritalStatus?: IMaritalStatus;\n  gender?: IGender;\n  quatorProfileId?: string;\n  firstName?: string;\n  lastName?: string;\n  photo?: string;\n  phone?: string;\n  biography?: string;\n  siteUrl?: string;\n  siteLogo?: string;\n  cURP?: string;\n  rFC?: string;\n  nSS?: string;\n  infonavitCredit?: string;\n  nationality?: string;\n  age?: number;\n  dateOfBirth?: IDateTime;\n  isActive?: boolean;\n  projectRoleCode?: string;\n  countryCode?: string;\n}\n\nexport interface ICreateOrFindUserPayload {\n  member: IMember;\n}\n\nexport interface ICreateOrdinaryUserInput {\n  businessIds?: Array<IUUID>;\n  projectId: IUUID;\n  email?: string;\n  password?: string;\n  state?: string;\n  institution?: string;\n  hospital?: string;\n  roleType?: string;\n  maritalStatus?: IMaritalStatus;\n  gender?: IGender;\n  quatorProfileId?: string;\n  firstName?: string;\n  lastName?: string;\n  photo?: string;\n  phone: string;\n  biography?: string;\n  siteUrl?: string;\n  siteLogo?: string;\n  cURP?: string;\n  rFC?: string;\n  nSS?: string;\n  infonavitCredit?: string;\n  nationality?: string;\n  age?: number;\n  dateOfBirth?: IDateTime;\n  isActive?: boolean;\n  projectRoleCode?: string;\n  dialCode?: string;\n  slugs?: Array<string>;\n  memberIndustry?: IUUID;\n  countryCode?: string;\n}\n\nexport interface ICreateOrdinaryUserPayload {\n  member: IMember;\n}\n\nexport interface ICreateUserWithoutMailInput {\n  projectId: IUUID;\n  email: string;\n  url?: string;\n  password: string;\n  roleCode?: string;\n  maritalStatus?: IMaritalStatus;\n  gender?: IGender;\n  quatorProfileId?: string;\n  firstName?: string;\n  lastName?: string;\n  photo?: string;\n  phone?: string;\n  biography?: string;\n  siteUrl?: string;\n  siteLogo?: string;\n  cURP?: string;\n  rFC?: string;\n  nSS?: string;\n  infonavitCredit?: string;\n  nationality?: string;\n  age?: number;\n  dateOfBirth?: string;\n  isActive: boolean;\n  projectRoleCode?: string;\n  countryCode?: string;\n}\n\nexport interface IUpdateProfileInput {\n  photo?: string;\n  email?: string;\n  businessId?: IUUID;\n  branchOfficeIds?: Array<IUUID>;\n  dialCode?: string;\n  firstName?: string;\n  lastName?: string;\n  maritalStatus?: IMaritalStatus;\n  hospital?: string;\n  state?: string;\n  institution?: string;\n  gender?: IGender;\n  companyName?: string;\n  phone?: string;\n  roleCode?: string;\n  bussinessName?: string;\n  countryCode?: string;\n  memberId?: string;\n  projectRoleCode?: string;\n  quatorProfileId?: string;\n  biography?: string;\n  siteUrl?: string;\n  siteLogo?: string;\n  cURP?: string;\n  rFC?: string;\n  nSS?: string;\n  infonavitCredit?: string;\n  nationality?: string;\n  age?: number;\n  dateOfBirth?: string;\n}\n\nexport interface IUpdateProfilePayload {\n  member: IMember;\n}\n\nexport interface IUpdatePasswordInput {\n  currentPassword: string;\n  newPassword: string;\n  memberId: string;\n}\n\nexport interface IUpdatePasswordPayload {\n  member: IMember;\n}\n\nexport interface IActiveMemberInput {\n  memberId: string;\n  active: boolean;\n}\n\nexport interface IActiveMemberPayload {\n  member: IMember;\n}\n\nexport interface ICreateProjectRoleInput {\n  projectId: IUUID;\n  name: string;\n  isActive?: boolean;\n  label?: string;\n  description?: string;\n}\n\nexport interface ICreateProjectRolePayload {\n  projectRole: IProjectRole;\n}\n\nexport interface IUploadPhotoProfileInput {\n  photo: string;\n  memberId: string;\n}\n\nexport interface IUploadPhotoProfilePayload {\n  member: IMember;\n}\n\nexport interface IDeleteProjectInput {\n  projectId: IUUID;\n}\n\nexport interface IDeleteProjectPayload {\n  project: IProject;\n}\n\nexport interface IUpdateCompanyInput {\n  companyId: IUUID;\n  name?: string;\n  industryId?: string;\n  photo?: string;\n  tagLine?: string;\n}\n\nexport interface IUpdateCompanyPayload {\n  company: ICompany;\n}\n\nexport interface IRestorePasswordInput {\n  newPassword: string;\n  memberId: string;\n}\n\nexport interface IRestorePasswordPayload {\n  member: IMember;\n}\n\nexport interface IRecoverPasswordInput {\n  email: string;\n  url: string;\n  projectId?: string;\n}\n\nexport interface IRecoverPasswordPayload {\n  member: IMember;\n}\n\nexport interface IVerifyTokenInput {\n  token: string;\n}\n\nexport interface IVerifyTokenPayload {\n  member: IMember;\n}\n\nexport interface ICreateGroupInput {\n  projectId: IUUID;\n  name: string;\n  description?: string;\n}\n\nexport interface ICreateGroupPayload {\n  group: IGroup;\n}\n\nexport interface IAddGroupToMemberInput {\n  groupId: IUUID;\n  memberId: IUUID;\n}\n\nexport interface IAddGroupToMemberPayload {\n  memberGroup: IMemberGroup;\n}\n\nexport interface IMemberGroup {\n  memberId: IUUID;\n  member: IMember;\n  groupId: IUUID;\n  group: IGroup;\n}\n\nexport interface IAddGroupToTaxonomyInput {\n  groupId: IUUID;\n  taxonomyId: IUUID;\n}\n\nexport interface IAddGroupToTaxonomyPayload {\n  groupTaxonomy: IGroupTaxonomy;\n}\n\nexport interface IAddTaxonomyToMemberInput {\n  memberId: IUUID;\n  taxonomyId: IUUID;\n}\n\nexport interface IAddTaxonomyToMemberPayload {\n  memberTaxonomy: IMemberTaxonomy;\n}\n\nexport interface IDeleteGroupInput {\n  groupId: IUUID;\n}\n\nexport interface IDeleteGroupPayload {\n  member: IGroup;\n}\n\nexport interface IDeleteGroupTaxonomyInput {\n  groupId: IUUID;\n  taxonomyId: IUUID;\n}\n\nexport interface IDeleteGroupTaxonomyPayload {\n  memberTaxonomy: IGroupTaxonomy;\n}\n\nexport interface IDeleteMemberGroupMutationInput {\n  memberId: IUUID;\n  groupId: IUUID;\n}\n\nexport interface IDeleteMemberGroupMutationPayload {\n  memberGroup: IMemberGroup;\n}\n\nexport interface IDeleteMemberTaxonomyInput {\n  memberId: IUUID;\n  taxonomyId: IUUID;\n}\n\nexport interface IDeleteMemberTaxonomyPayload {\n  memberTaxonomy: IMemberTaxonomy;\n}\n\nexport interface IDeleteProjectRoleInput {\n  id: IUUID;\n  projectId: IUUID;\n}\n\nexport interface IDeleteProjectRolePayload {\n  message: string;\n}\n\nexport interface ICreateUpdatePermissionInput {\n  projectId: IUUID;\n  projectRoleId: IUUID;\n  rules: string;\n}\n\nexport interface ICreateUpdatePermissionPayload {\n  permission: IPermission;\n}\n\nexport interface IUpdateProjectInput {\n  projectId: IUUID;\n  onProduction?: boolean;\n  isReady?: boolean;\n  name?: string;\n  description?: string;\n  logo?: string;\n  tagLine?: string;\n  url?: string;\n  industryId?: string;\n}\n\nexport interface IUpdateProjectPayload {\n  project: IProject;\n}\n\nexport interface IUpdateProjectRoleInput {\n  projectRoleId: IUUID;\n  isActive?: boolean;\n  name?: string;\n  label?: string;\n  description?: string;\n}\n\nexport interface IUpdateProjectRolePayload {\n  projectRole: IProjectRole;\n}\n\nexport interface IUpdateGroupInput {\n  groupId: IUUID;\n  name?: string;\n  description?: string;\n}\n\nexport interface IUpdateGroupPayload {\n  group: IGroup;\n}\n\nexport interface IAddMemberAsAdminInput {\n  memberId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface IAddMemberAsAdminPayload {\n  message: string;\n}\n\nexport interface ICreateMemberStreamInput {\n  memberId: IUUID;\n  isOnline?: boolean;\n  userName?: string;\n  firstName?: string;\n  lastName?: string;\n  image?: string;\n  description?: string;\n}\n\nexport interface ICreateMemberStreamPayload {\n  memberStream: IMemberStream;\n}\n\nexport interface IDeleteMemberFromMemberProjectsInput {\n  memberId: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IDeleteMemberFromMemberProjectsPayload {\n  message: string;\n}\n\nexport interface IAddMemberToCompanyInput {\n  memberId: IUUID;\n  companyId: IUUID;\n}\n\nexport interface IAddMemberToCompanyPayload {\n  message: string;\n}\n\nexport interface ICreatePageManagerInput {\n  pageName: string;\n  config?: string;\n  projectId: IUUID;\n}\n\nexport interface ICreatePageManagerPayload {\n  pageManager: IPageManager;\n}\n\nexport interface ICreateViewManagerInput {\n  pageManagerId: IUUID;\n  name: string;\n  default: boolean;\n  config?: string;\n  projectRoleCode?: string;\n  numColumns: number;\n}\n\nexport interface ICreateViewManagerPayload {\n  viewManager: IViewManager;\n}\n\nexport interface ICreateViewColumnInput {\n  viewManagerId: IUUID;\n  isDefault: boolean;\n  position?: number;\n  config: string;\n}\n\nexport interface ICreateViewColumnPayload {\n  viewColumn: IViewColumn;\n}\n\nexport interface ICreateViewBlockColumnInput {\n  viewColumnId: IUUID;\n  keyName: string;\n  name: string;\n  position: number;\n  config: string;\n  columnTabId?: IUUID;\n}\n\nexport interface ICreateViewBlockColumnPayload {\n  viewBlockColumn: IViewBlockColumn;\n}\n\nexport interface IUpdatePageManagerInput {\n  id: IUUID;\n  pageName?: string;\n  config?: string;\n  projectId?: IUUID;\n}\n\nexport interface IUpdatePageManagerPayload {\n  message: string;\n}\n\nexport interface IUpdateViewManagerInput {\n  id: IUUID;\n  name?: string;\n  default?: boolean;\n  config?: string;\n  projectRoleCode?: string;\n}\n\nexport interface IUpdateViewManagerPayload {\n  message: string;\n}\n\nexport interface IUpdateViewColumnInput {\n  id: IUUID;\n  isDefault?: boolean;\n  position?: number;\n  config?: string;\n}\n\nexport interface IUpdateViewColumnPayload {\n  message: string;\n}\n\nexport interface IUpdateViewBlockColumnInput {\n  id: IUUID;\n  keyName?: string;\n  name?: string;\n  position?: number;\n  config?: string;\n  columnTabId?: IUUID;\n}\n\nexport interface IUpdateViewBlockColumnPayload {\n  message: string;\n}\n\nexport interface IDeletePageManagerInput {\n  pageManagerId: IUUID;\n}\n\nexport interface IDeletePageManagerPayload {\n  message: string;\n}\n\nexport interface IDeleteViewManagerInput {\n  viewManagerId: IUUID;\n}\n\nexport interface IDeleteViewManagerPayload {\n  message: string;\n}\n\nexport interface IDeleteViewColumnInput {\n  viewColumnId: IUUID;\n}\n\nexport interface IDeleteViewColumnPayload {\n  message: string;\n}\n\nexport interface ILinkTransactionToSellInput {\n  transactionId: IUUID;\n  sellId: IUUID;\n}\n\nexport interface ILinkTransactionToSellPayload {\n  message: string;\n}\n\nexport interface IUpdateSellInput {\n  nominatorId?: IUUID;\n  prospectId?: IUUID;\n  sellerId?: IUUID;\n  concept?: string;\n  description?: string;\n  amount?: IDecimal;\n  status?: ISellStatus;\n  walletTransactionId?: IUUID;\n}\n\nexport interface IUpdateSellPayload {\n  sell: ISell;\n}\n\nexport interface IDeleteViewBlockColumnInput {\n  viewBlockColumnId: IUUID;\n}\n\nexport interface IDeleteViewBlockColumnPayload {\n  message: string;\n}\n\nexport interface IMultipleMemberRelationInput {\n  status?: IEnumMemberRelationStatus;\n  parentNodeId?: IUUID;\n  childNodesId: Array<IUUID>;\n  isActive?: boolean;\n  parentRelationId?: IUUID;\n}\n\nexport interface IMultipleMemberRelationPayload {\n  memberRelation: Array<IMemberRelation>;\n}\n\nexport interface IMemberRelationInput {\n  status?: IEnumMemberRelationStatus;\n  parentNodeId?: IUUID;\n  childNodeId?: IUUID;\n  isActive?: boolean;\n  parentRelationId?: IUUID;\n}\n\nexport interface IMemberRelationPayload {\n  memberRelation: IMemberRelation;\n}\n\nexport interface IUpdateProductSellInput {\n  id: IUUID;\n  folio?: string;\n  invoiceDate?: IDateTime;\n  expirationDate?: IDateTime;\n  iva?: IDecimal;\n  isActive?: boolean;\n  currencyId?: IUUID;\n  branchOfficeId?: IUUID;\n  storeId?: IUUID;\n  sellerId?: IUUID;\n  routeId?: IUUID;\n  customerId?: IUUID;\n  socialReason?: string;\n  rfc?: string;\n  automaticInvoicing?: boolean;\n  address?: string;\n  products?: Array<IProductSellItemDtoInput>;\n}\n\nexport interface IProductSellItemDtoInput {\n  productId: IUUID;\n  discount: IDecimal;\n  priceId?: IUUID;\n  quantity: number;\n}\n\nexport interface IUpdateProductSellPayload {\n  message: string;\n}\n\nexport interface ICreateTaxInput {\n  projectId: IUUID;\n  name: string;\n  rate: IDecimal;\n}\n\nexport interface ICreateTaxPayload {\n  tax: ITax;\n}\n\nexport interface IDeleteTaxInput {\n  id: IUUID;\n}\n\nexport interface IDeleteTaxPayload {\n  message: string;\n}\n\nexport interface IImportProductsFromExcelInput {\n  projectId: IUUID;\n  url?: string;\n  memberId: IUUID;\n}\n\nexport interface IImportProductsFromExcelPayload {\n  message: string;\n}\n\nexport interface ICreateRouteInput {\n  projectId: IUUID;\n  key: string;\n  title: string;\n  description: string;\n  branchOfficeId: IUUID;\n  routeType: string;\n  travelDays: number;\n  beginningDate: IDateTime;\n}\n\nexport interface ICreateRoutePayload {\n  route: IRoute;\n}\n\nexport interface IDeleteRouteInput {\n  id: IUUID;\n}\n\nexport interface IDeleteRoutePayload {\n  message: string;\n}\n\nexport interface ICreateProductSellInput {\n  folio?: string;\n  projectId: IUUID;\n  invoiceDate: IDateTime;\n  expirationDate: IDateTime;\n  iva: IDecimal;\n  currencyId: IUUID;\n  branchOfficeId: IUUID;\n  storeId: IUUID;\n  sellerId: IUUID;\n  routeId: IUUID;\n  customerId: IUUID;\n  socialReason: string;\n  rfc: string;\n  automaticInvoicing: boolean;\n  address: string;\n  products: Array<IProductSellItemDtoInput>;\n}\n\nexport interface ICreateProductSellPayload {\n  productSell: IProductSell;\n}\n\nexport interface IDeleteProductSellInput {\n  id: IUUID;\n}\n\nexport interface IDeleteProductSellPayload {\n  message: string;\n}\n\nexport interface ICreatePurchaseQuoteInput {\n  projectId: IUUID;\n  invoiceDate: IDateTime;\n  expirationDate: IDateTime;\n  reference: string;\n  branchOfficeId: IUUID;\n  storeId: IUUID;\n  sellerId: IUUID;\n  customerId: IUUID;\n  comment: string;\n  products: Array<IUUID>;\n  discount?: IDecimal;\n  subTotal?: IDecimal;\n  taxes?: IDecimal;\n  detained?: IDecimal;\n  total?: IDecimal;\n  purchaseQuoteStatus: IPurchaseQuoteStatus;\n}\n\nexport interface ICreatePurchaseQuotePayload {\n  purchaseQuote: IPurchaseQuote;\n}\n\nexport interface IDeletePurchaseQuoteInput {\n  id: IUUID;\n}\n\nexport interface IDeletePurchaseQuotePayload {\n  message: string;\n}\n\nexport interface ICreateStockAlertInput {\n  projectId: IUUID;\n  productId: IUUID;\n  lowestQuantity: number;\n  middleQuantity: number;\n  highestQuantity: number;\n}\n\nexport interface ICreateStockAlertPayload {\n  stockAlert: IStockAlert;\n}\n\nexport interface IDeleteStockAlertInput {\n  id: IUUID;\n}\n\nexport interface IDeleteStockAlertPayload {\n  message: string;\n}\n\nexport interface IUpdateStockAlertInput {\n  id: IUUID;\n  lowestQuantity?: number;\n  highestQuantity?: number;\n  middleQuantity?: number;\n}\n\nexport interface IUpdateStockAlertPayload {\n  message: string;\n}\n\nexport interface ICreateLegalTermInput {\n  projectId: IUUID;\n  keyName: string;\n  title: string;\n  description: string;\n}\n\nexport interface ICreateLegalTermPayload {\n  legalTerm: ILegalTerm;\n}\n\nexport interface ICreateInsuranceFormInput {\n  projectId: IUUID;\n  typeForm: ITypeForm;\n  name?: string;\n  email?: string;\n  phone?: string;\n  zipCode?: string;\n  birthDate?: string;\n  typeInsurance?: string;\n  message?: string;\n  hospitalLevel?: string;\n  gender: boolean;\n}\n\nexport interface ICreateInsuranceFormPayload {\n  insuranceForm: IInsuranceForm;\n}\n\nexport interface IUpdateInsuranceFormInput {\n  id: IUUID;\n  typeForm: ITypeForm;\n  gender: boolean;\n  name?: string;\n  email?: string;\n  phone?: string;\n  zipCode?: string;\n  birthDate?: IDateTime;\n  typeInsurance?: string;\n  message?: string;\n  hospitalLevel?: string;\n}\n\nexport interface IUpdateInsuranceFormPayload {\n  insuranceForm: IInsuranceForm;\n}\n\nexport interface IUpdateLegalTermInput {\n  legalTermId: IUUID;\n  keyName?: string;\n  title?: string;\n  description?: string;\n}\n\nexport interface IUpdateLegalTermPayload {\n  message: string;\n}\n\nexport interface IDeleteLegalTermInput {\n  id: IUUID;\n}\n\nexport interface IDeleteLegalTermPayload {\n  message: string;\n}\n\nexport interface ICreateArticleInput {\n  projectId: IUUID;\n  parentId?: IUUID;\n  groupId?: IUUID;\n  title: string;\n  typeContent?: ITypeContent;\n  categories?: Array<string>;\n  tags?: Array<string>;\n  photo?: string;\n  resume?: string;\n  content?: string;\n  slug?: string;\n  seoTitle?: string;\n  seoDescription?: string;\n  seoKeywords?: string;\n  structuredMarking?: string;\n  seoArticle?: string;\n  imageAlt?: string;\n  releaseDate?: string;\n  embedContent?: string;\n  status: IArticleStatus;\n  language: IArticleLanguage;\n}\n\nexport interface ICreateArticlePayload {\n  article: IArticle;\n}\n\nexport interface IUpdateStatusArticleInput {\n  articleId: IUUID;\n  status: IArticleStatus;\n}\n\nexport interface IUpdateStatusArticlePayload {\n  article: IArticle;\n}\n\nexport interface ICreateTaxonomyInput {\n  projectId: IUUID;\n  name: string;\n  isPublic?: boolean;\n  seoTaxonomy?: string;\n  slug?: string;\n  termGroup?: string;\n  parentId?: string;\n  photo: string;\n  tagLine?: string;\n  tagLine2?: string;\n  description?: string;\n}\n\nexport interface ICreateTaxonomyPayload {\n  taxonomy: ITaxonomy;\n}\n\nexport interface IUpdateArticleInput {\n  articleId: IUUID;\n  parentId?: IUUID;\n  groupId?: IUUID;\n  categories: Array<string>;\n  title: string;\n  tags?: Array<string>;\n  typeContent?: ITypeContent;\n  language?: IArticleLanguage;\n  status?: IArticleStatus;\n  photo?: string;\n  resume?: string;\n  content?: string;\n  slug?: string;\n  seoTitle?: string;\n  seoDescription?: string;\n  seoKeywords?: string;\n  structuredMarking?: string;\n  imageAlt?: string;\n  releaseDate?: string;\n  embedContent?: string;\n  seoArticle?: string;\n}\n\nexport interface IUpdateArticlePayload {\n  article: IArticle;\n}\n\nexport interface IUpdateTaxonomyInput {\n  taxonomyId: IUUID;\n  isPublic?: boolean;\n  seoTaxonomy?: string;\n  name?: string;\n  slug?: string;\n  parentId?: string;\n  photo?: string;\n  tagLine?: string;\n  tagLine2?: string;\n  description?: string;\n}\n\nexport interface IUpdateTaxonomyPayload {\n  taxonomy: ITaxonomy;\n}\n\nexport interface IDeleteArticleInput {\n  articleId: IUUID;\n}\n\nexport interface IDeleteArticlePayload {\n  article: IArticle;\n}\n\nexport interface IDeleteTaxonomyInput {\n  taxonomyId: IUUID;\n}\n\nexport interface IDeleteTaxonomyPayload {\n  taxonomy: ITaxonomy;\n}\n\nexport interface INewSurveyInput {\n  articleId: IUUID;\n}\n\nexport interface INewSurveyPayload {\n  survey: ISurvey;\n}\n\nexport interface IUpdateSurveyInput {\n  surveyId: IUUID;\n  isActive?: boolean;\n  title?: string;\n  description?: string;\n  thankYouMessage?: string;\n}\n\nexport interface IUpdateSurveyPayload {\n  survey: ISurvey;\n}\n\nexport interface IDeleteSurveyInput {\n  surveyId: IUUID;\n}\n\nexport interface IDeleteSurveyPayload {\n  survey: ISurvey;\n}\n\nexport interface INewQuestionInput {\n  surveyId: IUUID;\n  type: IQuestionType;\n}\n\nexport interface INewQuestionPayload {\n  question: IQuestion;\n}\n\nexport interface IDeleteQuestionInput {\n  questionId: IUUID;\n}\n\nexport interface IDeleteQuestionPayload {\n  question: IQuestion;\n}\n\nexport interface IUpdateQuestionInput {\n  questionId: IUUID;\n  position: number;\n  type: IQuestionType;\n  isRequired?: boolean;\n  allowsFileUpload?: boolean;\n  title?: string;\n  image?: string;\n}\n\nexport interface IUpdateQuestionPayload {\n  question: IQuestion;\n}\n\nexport interface INewOptionInput {\n  questionId: IUUID;\n}\n\nexport interface INewOptionPayload {\n  option: IOption;\n}\n\nexport interface IDeleteOptionInput {\n  optionId: IUUID;\n}\n\nexport interface IDeleteOptionPayload {\n  option: IOption;\n}\n\nexport interface IUpdateOptionInput {\n  optionId: IUUID;\n  position: number;\n  title?: string;\n}\n\nexport interface IUpdateOptionPayload {\n  option: IOption;\n}\n\nexport interface IAnswerQuestionInput {\n  memberId: IUUID;\n  answerings: Array<IAnsweringDTOInput>;\n}\n\nexport interface IAnsweringDTOInput {\n  questionId: IUUID;\n  options?: Array<string>;\n  responseText?: string;\n  uploadFile?: string;\n}\n\nexport interface IAnswerQuestionPayload {\n  message: string;\n}\n\nexport interface ICreateProductInput {\n  projectId: IUUID;\n  categories: Array<string>;\n  costType?: string;\n  dataSheet?: string;\n  ecommerceTitle?: string;\n  ecommerceDescription?: string;\n  ecommerceInstructions?: string;\n  title: string;\n  shopType?: IShopType;\n  providerIds?: Array<IUUID>;\n  partNumber?: string;\n  sellMeasure?: string;\n  purchaseMeasure?: string;\n  key?: string;\n  fee?: IDecimal;\n  discounts?: Array<IDecimal>;\n  taxes?: Array<IUUID>;\n  brand?: string;\n  onStore?: boolean;\n  onCatalog?: boolean;\n  prices?: Array<IProductPricesDTOInput>;\n  line?: string;\n  family?: string;\n  subFamily?: string;\n  barcode?: string;\n  sku?: string;\n  price?: IDecimal;\n  stock?: number;\n  code?: string;\n  sellPrice?: number;\n  purchasePrice?: number;\n  storeId?: IUUID;\n  utility?: number;\n  origin?: string;\n  shippingPrice?: IDecimal;\n  offerPrice?: IDecimal;\n  images?: Array<string>;\n  measure?: string;\n  measureType?: string;\n  productType?: IProductType;\n  planId?: IUUID;\n  shippingType?: string;\n  photo?: string;\n  description?: string;\n  slug?: string;\n  seoProduct?: string;\n  publishDate?: string;\n  status: IProductStatus;\n}\n\nexport interface IProductPricesDTOInput {\n  price: IDecimal;\n  utility: IDecimal;\n  setPrice: boolean;\n}\n\nexport interface ICreateProductPayload {\n  product: IProduct;\n}\n\nexport interface IUpdateProductInput {\n  productId: IUUID;\n  categories?: Array<string>;\n  costType?: string;\n  dataSheet?: string;\n  ecommerceTitle?: string;\n  ecommerceDescription?: string;\n  ecommerceInstructions?: string;\n  shopType?: IShopType;\n  status?: IProductStatus;\n  providerIds?: Array<IUUID>;\n  partNumber?: string;\n  prices?: Array<IProductPricesDTOInput>;\n  productType?: IProductType;\n  onStore?: boolean;\n  onCatalog?: boolean;\n  planId?: IUUID;\n  price?: IDecimal;\n  stock?: number;\n  shippingPrice?: IDecimal;\n  offerPrice?: IDecimal;\n  images?: Array<string>;\n  origin?: string;\n  measure?: string;\n  utility?: number;\n  sellPrice?: number;\n  purchasePrice?: number;\n  code?: string;\n  measureType?: string;\n  title?: string;\n  sku?: string;\n  shippingType?: string;\n  photo?: string;\n  description?: string;\n  slug?: string;\n  seoProduct?: string;\n  publishDate?: string;\n}\n\nexport interface IUpdateProductPayload {\n  product: IProduct;\n}\n\nexport interface IDeleteProductInput {\n  productId: IUUID;\n}\n\nexport interface IDeleteProductPayload {\n  product: IProduct;\n}\n\nexport interface ICreateAddressInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  firstName?: string;\n  number?: string;\n  municipality?: string;\n  lastName?: string;\n  countryName?: string;\n  state?: string;\n  city?: string;\n  subUrb?: string;\n  zipCode?: string;\n  addressLine1?: string;\n  addressLine2?: string;\n  phone?: string;\n  addressDetails?: string;\n  addressType?: string;\n  isPrincipal?: boolean;\n  businessName?: string;\n}\n\nexport interface ICreateAddressPayload {\n  address: IAddress;\n}\n\nexport interface IUpdateAddressInput {\n  addressId: IUUID;\n  isPrincipal?: boolean;\n  number?: string;\n  municipality?: string;\n  firstName?: string;\n  lastName?: string;\n  countryName?: string;\n  state?: string;\n  city?: string;\n  subUrb?: string;\n  zipCode?: string;\n  addressLine1?: string;\n  addressLine2?: string;\n  phone?: string;\n  addressDetails?: string;\n  addressType?: string;\n  businessName?: string;\n}\n\nexport interface IUpdateAddressPayload {\n  address: IAddress;\n}\n\nexport interface IDeleteAddressInput {\n  addressId: IUUID;\n}\n\nexport interface IDeleteAddressPayload {\n  address: IAddress;\n}\n\nexport interface ICreateUpdateShopInput {\n  projectId: IUUID;\n  shopType: IShopType;\n  profileUrl?: string;\n}\n\nexport interface ICreateUpdateShopPayload {\n  shop: IShop;\n}\n\nexport interface ICreateDiseaseInput {\n  projectId: IUUID;\n  topicDiseaseId: IUUID;\n  title: string;\n  iconImage?: string;\n  image?: string;\n  position: number;\n}\n\nexport interface ICreateDiseasePayload {\n  disease: IDisease;\n}\n\nexport interface IUpdateDiseaseInput {\n  diseaseId: IUUID;\n  title: string;\n  iconImage?: string;\n  image?: string;\n  position: number;\n}\n\nexport interface IUpdateDiseasePayload {\n  disease: IDisease;\n}\n\nexport interface IDeleteDiseaseInput {\n  diseaseId: IUUID;\n}\n\nexport interface IDeleteDiseasePayload {\n  message: string;\n}\n\nexport interface ICreateTopicDiseaseInput {\n  projectId: IUUID;\n  month: number;\n  title: string;\n  backgroundImage?: string;\n}\n\nexport interface ICreateTopicDiseasePayload {\n  topicDisease: ITopicDisease;\n}\n\nexport interface IUpdateTopicDiseaseInput {\n  topicDiseaseId: IUUID;\n  month?: number;\n  title?: string;\n  backgroundImage?: string;\n}\n\nexport interface IUpdateTopicDiseasePayload {\n  topicDisease: ITopicDisease;\n}\n\nexport interface IDeleteTopicDiseaseInput {\n  topicDiseaseId: IUUID;\n}\n\nexport interface IDeleteTopicDiseasePayload {\n  message: string;\n}\n\nexport interface ICreateFAQInput {\n  projectId: IUUID;\n  question: string;\n  answer: string;\n  image?: string;\n  position: number;\n}\n\nexport interface ICreateFAQPayload {\n  faq: IFAQ;\n}\n\nexport interface IUpdateFAQInput {\n  fAQId: IUUID;\n  question?: string;\n  answer?: string;\n  image?: string;\n  position?: number;\n}\n\nexport interface IUpdateFAQPayload {\n  faq: IFAQ;\n}\n\nexport interface IDeleteFAQInput {\n  fAQId: IUUID;\n}\n\nexport interface IDeleteFAQPayload {\n  message: string;\n}\n\nexport interface IRunJobShopInput {\n  url: string;\n  projectId: IUUID;\n  profileUrl?: string;\n}\n\nexport interface IRunJobShopPayload {\n  message: string;\n}\n\nexport interface ICreateCourseInput {\n  projectId: IUUID;\n  title: string;\n  school: string;\n  modality: ICourseModality;\n  courseLevel: ICourseLevel;\n  price: number;\n  discount: number;\n  description: string;\n  endDate: IDateTime;\n  startDate: IDateTime;\n  addressId: IUUID;\n  categories: Array<IUUID>;\n  beginType: IBeginType;\n  courseType: ICourseType;\n  schedule: Array<IScheduleDayDtoInput>;\n  duration: number;\n}\n\nexport interface IScheduleDayDtoInput {\n  time?: ITimeSpan;\n  day: string;\n}\n\nexport interface ICreateCoursePayload {\n  course: ICourse;\n}\n\nexport interface ICreateBeginCourseInput {\n  courseId: IUUID;\n  startDate: IDateTime;\n  limitDate: IDateTime;\n  endDate: IDateTime;\n  name: string;\n  price: number;\n}\n\nexport interface ICreateBeginCoursePayload {\n  beginCourse: IBeginCourse;\n}\n\nexport interface IBeginCourse {\n  courseId: IUUID;\n  startDate: IDateTime;\n  limitDate: IDateTime;\n  endDate: IDateTime;\n  name: string;\n  price: number;\n  course?: ICourse;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICreateCourseFormInput {\n  formId: IUUID;\n  courseId: IUUID;\n  position: number;\n}\n\nexport interface ICreateCourseFormPayload {\n  courseForm: ICourseForm;\n}\n\nexport interface ICourseForm {\n  courseId: IUUID;\n  formId: IUUID;\n  position: number;\n  course?: ICourse;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IUpdateCourseInput {\n  courseId: IUUID;\n  title?: string;\n  modality?: ICourseModality;\n  description?: string;\n  endDate?: IDateTime;\n  startDate?: IDateTime;\n  addressId?: IUUID;\n  price?: number;\n  discount?: number;\n  school?: string;\n  courseLevel?: ICourseLevel;\n  duration?: number;\n  schedule: Array<IScheduleDayDtoInput>;\n}\n\nexport interface IUpdateCoursePayload {\n  message: string;\n}\n\nexport interface IUpdateBeginCourseInput {\n  beginCourseId: IUUID;\n  courseId?: IUUID;\n  startDate?: IDateTime;\n  limitDate?: IDateTime;\n  endDate?: IDateTime;\n  name?: string;\n  price?: number;\n}\n\nexport interface IUpdateBeginCoursePayload {\n  message: string;\n}\n\nexport interface IUpdateCourseFormInput {\n  courseFormId: IUUID;\n  formId?: IUUID;\n  courseId?: IUUID;\n  position?: number;\n}\n\nexport interface IUpdateCourseFormPayload {\n  message: string;\n}\n\nexport interface IDeleteCourseInput {\n  id: IUUID;\n}\n\nexport interface IDeleteCoursePayload {\n  message: string;\n}\n\nexport interface IDeleteBeginCourseInput {\n  id: IUUID;\n}\n\nexport interface IDeleteBeginCoursePayload {\n  message: string;\n}\n\nexport interface IDeleteCourseFormInput {\n  id: IUUID;\n}\n\nexport interface IDeleteCourseFormPayload {\n  message: string;\n}\n\nexport interface IFixProductInput {\n  projectId: IUUID;\n}\n\nexport interface IFixProductPayload {\n  message: string;\n}\n\nexport interface IDeleteCourseScheduleInput {\n  id: IUUID;\n}\n\nexport interface IDeleteCourseSchedulePayload {\n  message: string;\n}\n\nexport interface IUpdateCourseScheduleInput {\n  id: IUUID;\n  time: ITimeSpan;\n}\n\nexport interface IUpdateCourseSchedulePayload {\n  message: string;\n}\n\nexport interface ICreateBranchOfficeInput {\n  projectId: IUUID;\n  name: string;\n  isActive: boolean;\n  countryId: IUUID;\n  state: string;\n  municipality: string;\n  email: string;\n  phone: string;\n  postalCode: string;\n  street: string;\n  number: string;\n  managerId?: IUUID;\n}\n\nexport interface ICreateBranchOfficePayload {\n  branchOffice: IBranchOffice;\n}\n\nexport interface ICreateManagerInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  branchOfficeId: IUUID;\n}\n\nexport interface ICreateManagerPayload {\n  manager: IManager;\n}\n\nexport interface ICreateProductPurchaseInput {\n  projectId: IUUID;\n  purchaseId: IUUID;\n  products: Array<IProductDtoInput>;\n}\n\nexport interface IProductDtoInput {\n  id: IUUID;\n  quantity: number;\n  price: number;\n  taxes: number;\n  discount: number;\n}\n\nexport interface ICreateProductPurchasePayload {\n  message: string;\n}\n\nexport interface ICreatePurchaseInput {\n  projectId: IUUID;\n  invoice: string;\n  invoiceDate: IDateTime;\n  expirationDate: IDateTime;\n  branchOfficeId: IUUID;\n  storeId: IUUID;\n  providerId: IUUID;\n  total?: number;\n  active: boolean;\n  currencyId: IUUID;\n  hasBuyer?: boolean;\n  discount?: number;\n  subTotal?: number;\n  buyerId?: IUUID;\n  globalDiscount: IDecimal;\n}\n\nexport interface ICreatePurchasePayload {\n  purchase: IPurchase;\n}\n\nexport interface ICreateStoreInput {\n  projectId: IUUID;\n  name: string;\n  branchOfficeId: IUUID;\n  code: string;\n  storeType?: IStoreType;\n  sellerId?: IUUID;\n}\n\nexport interface ICreateStorePayload {\n  store: IStore;\n}\n\nexport interface INewStoreTransferInput {\n  projectId: IUUID;\n  storeOriginId: IUUID;\n  storeDestinyId: IUUID;\n  currencyId: IUUID;\n  products: Array<IUUID>;\n  quantities: Array<number>;\n  folio: string;\n}\n\nexport interface INewStoreTransferPayload {\n  storeTransfer: IStoreTransfer;\n}\n\nexport interface ICreateProviderInput {\n  projectId: IUUID;\n  city: string;\n  creditDays: number;\n  balance: IDecimal;\n  credit: IDecimal;\n  afectaDiot: boolean;\n  providerType: IProviderType;\n  name: string;\n  rfc: string;\n  socialReason: string;\n  address: string;\n}\n\nexport interface ICreateProviderPayload {\n  provider: IProductProvider;\n}\n\nexport interface IUpdateBranchOfficeInput {\n  branchOfficeId: IUUID;\n  name?: string;\n  isActive?: boolean;\n  countryId?: IUUID;\n  municipality?: string;\n  state?: string;\n  email?: string;\n  phone?: string;\n  postalCode?: string;\n  street?: string;\n  number?: string;\n  managerId?: IUUID;\n}\n\nexport interface IUpdateBranchOfficePayload {\n  message: string;\n}\n\nexport interface IUpdateManagerInput {\n  id: IUUID;\n  memberId?: IUUID;\n  branchOfficeId?: IUUID;\n}\n\nexport interface IUpdateManagerPayload {\n  message: string;\n}\n\nexport interface IUpdatePurchaseInput {\n  purchaseId: IUUID;\n  folio?: string;\n  invoice?: string;\n  invoiceDate?: IDateTime;\n  expirationDate?: IDateTime;\n  branchOfficeId?: IUUID;\n  storeId?: IUUID;\n  providerId?: IUUID;\n  total?: number;\n  active?: boolean;\n  currencyId?: IUUID;\n  hasBuyer?: boolean;\n  discount?: number;\n  subTotal?: number;\n}\n\nexport interface IUpdatePurchasePayload {\n  message: string;\n}\n\nexport interface IUpdateStoreInput {\n  id: IUUID;\n  name?: string;\n  code?: string;\n  storeType?: IStoreType;\n  branchOfficeId?: IUUID;\n  sellerId?: IUUID;\n}\n\nexport interface IUpdateStorePayload {\n  message: string;\n}\n\nexport interface IDeleteStoreInput {\n  id: IUUID;\n}\n\nexport interface IDeleteStorePayload {\n  message: string;\n}\n\nexport interface IDeleteManagerInput {\n  id: IUUID;\n}\n\nexport interface IDeleteManagerPayload {\n  message: string;\n}\n\nexport interface IUpdateProviderInput {\n  providerId: IUUID;\n  name?: string;\n  city?: string;\n  providerType?: IProviderType;\n  rfc?: string;\n  creditDays?: number;\n  balance?: IDecimal;\n  credit?: IDecimal;\n  afectaDiot?: boolean;\n  socialReason?: string;\n  address?: string;\n}\n\nexport interface IUpdateProviderPayload {\n  message: string;\n}\n\nexport interface IDeleteProviderInput {\n  id: IUUID;\n}\n\nexport interface IDeleteProviderPayload {\n  message: string;\n}\n\nexport interface IDeletePurchaseInput {\n  id: IUUID;\n}\n\nexport interface IDeletePurchasePayload {\n  message: string;\n}\n\nexport interface IDeleteProductPurchaseInput {\n  id: IUUID;\n}\n\nexport interface IDeleteProductPurchasePayload {\n  message: string;\n}\n\nexport interface IDeleteBranchOfficeInput {\n  id: IUUID;\n}\n\nexport interface IDeleteBranchOfficePayload {\n  message: string;\n}\n\nexport interface IAssociationServiceToProjectInput {\n  projectId: IUUID;\n  codeNames: Array<string>;\n}\n\nexport interface IAssociationServiceToProjectPayload {\n  projectMicroservice: IProjectMicroservice;\n}\n\nexport interface ICreateArrayFunctionInput {\n  service: string;\n  functions: Array<IFunctionArrayInput>;\n}\n\nexport interface IFunctionArrayInput {\n  name: string;\n  codeName: string;\n  functionType: IFunctionType;\n}\n\nexport interface ICreateArrayFunctionPayload {\n  service: IMicroservice;\n}\n\nexport interface IDeleteArrayFunctionInput {\n  service: string;\n  functions: Array<IFunctionArrayInput>;\n}\n\nexport interface IDeleteArrayFunctionPayload {\n  service: IMicroservice;\n}\n\nexport interface IUpdateServiceProjectInput {\n  projectId: IUUID;\n  codeName: string;\n  isActive?: boolean;\n  label?: string;\n}\n\nexport interface IUpdateServiceProjectPayload {\n  message: string;\n}\n\nexport interface IDeleteServiceProjectInput {\n  projectId: IUUID;\n  codeName: string;\n}\n\nexport interface IDeleteServiceProjectPayload {\n  message: string;\n}\n\nexport interface ICancelEventInput {\n  id: IUUID;\n}\n\nexport interface ICancelEventPayload {\n  message: string;\n}\n\nexport interface ICreateEventTypeInput {\n  projectId: IUUID;\n  subEventTypes?: Array<IUUID>;\n  image?: string;\n  name: string;\n  description: string;\n  price: IDecimal;\n}\n\nexport interface ICreateEventTypePayload {\n  message: string;\n}\n\nexport interface ICreateSubEventTypeInput {\n  name: string;\n  price: IDecimal;\n}\n\nexport interface ICreateSubEventTypePayload {\n  subEventType: ISubEventType;\n}\n\nexport interface IDeleteSubEventTypeInput {\n  subEventTypeId: IUUID;\n}\n\nexport interface IDeleteSubEventTypePayload {\n  message: string;\n}\n\nexport interface IUpdateSubEventTypeInput {\n  subEventTypeId: IUUID;\n  name?: string;\n  price?: IDecimal;\n}\n\nexport interface IUpdateSubEventTypePayload {\n  message: string;\n}\n\nexport interface IAddSubTypeToEventTypeInput {\n  eventTypeId: IUUID;\n  subEventTypes: Array<IUUID>;\n}\n\nexport interface IAddSubTypeToEventTypePayload {\n  message: string;\n}\n\nexport interface IDeleteEventTypePayload {\n  message: string;\n}\n\nexport interface IUpdateEventTypeInput {\n  eventTypeId: IUUID;\n  projectId?: IUUID;\n  name?: string;\n  image?: string;\n  price?: IDecimal;\n  description?: string;\n}\n\nexport interface IUpdateEventTypePayload {\n  message: string;\n}\n\nexport interface ICreateEventInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  description: string;\n  eventDate: string;\n  totalPrice?: IDecimal;\n  discount?: IDecimal;\n  sendDetails?: boolean;\n  sendRemember?: boolean;\n  members?: Array<string>;\n  eventTypeId?: IUUID;\n  eventMode: IEventMode;\n  title?: string;\n  roomId?: string;\n  file?: string;\n  location?: string;\n  eventSessionId?: string;\n  color?: string;\n  finishDate?: string;\n  charges?: Array<IEventChargeInput>;\n  visibility: IEventVisibility;\n}\n\nexport interface IEventChargeInput {\n  price: IDecimal;\n  description?: string;\n}\n\nexport interface ICreateEventPayload {\n  eventCalendar: IEvent;\n}\n\nexport interface ICreateEventMemberInput {\n  memberId: IUUID;\n  eventId: IUUID;\n}\n\nexport interface ICreateEventMemberPayload {\n  message: string;\n}\n\nexport interface IUpdateEventInput {\n  eventId: IUUID;\n  description?: string;\n  eventTypeId?: IUUID;\n  sendDetails?: boolean;\n  visibility?: IEventVisibility;\n  charges?: Array<IEventChargeInput>;\n  sendRemember?: boolean;\n  members?: Array<string>;\n  eventMode: IEventMode;\n  title?: string;\n  eventDate?: string;\n  roomId?: string;\n  file?: string;\n  location?: string;\n  eventSessionId?: string;\n  color?: string;\n  totalPrice?: IDecimal;\n  discount?: IDecimal;\n}\n\nexport interface IUpdateEventPayload {\n  eventCalendar: IEvent;\n}\n\nexport interface IDeleteEventInput {\n  eventId: IUUID;\n}\n\nexport interface IDeleteEventPayload {\n  message: string;\n}\n\nexport interface ICreateEventSessionInput {\n  projectId: IUUID;\n  price: IDecimal;\n  title?: string;\n  image?: string;\n  description?: string;\n  duration: number;\n  eventMode: IEventMode;\n}\n\nexport interface ICreateEventSessionPayload {\n  eventSession: IEventSession;\n}\n\nexport interface IUpdateEventSessionInput {\n  eventSessionId: IUUID;\n  price: IDecimal;\n  title?: string;\n  image?: string;\n  description?: string;\n  duration: number;\n  eventMode: IEventMode;\n}\n\nexport interface IUpdateEventSessionPayload {\n  eventSession: IEventSession;\n}\n\nexport interface IDeleteEventSessionInput {\n  eventSessionId: IUUID;\n}\n\nexport interface IDeleteEventSessionPayload {\n  message: string;\n}\n\nexport interface ICreateScheduleInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventTypeId: IUUID;\n  schedule: Array<IScheduleDtoInput>;\n}\n\nexport interface IScheduleDtoInput {\n  turns: Array<ITurnsDtoInput>;\n  monday: boolean;\n  tuesday: boolean;\n  thursday: boolean;\n  wednesday: boolean;\n  friday: boolean;\n  saturday: boolean;\n  sunday: boolean;\n}\n\nexport interface ITurnsDtoInput {\n  timeStart?: string;\n  timeEnd?: string;\n}\n\nexport interface ICreateSchedulePayload {\n  message: string;\n}\n\nexport interface IAssociationMemberToConsultInput {\n  memberId: IUUID;\n  eventId: IUUID;\n}\n\nexport interface IAssociationMemberToConsultPayload {\n  message: string;\n}\n\nexport interface ICancellationMemberToConsultInput {\n  memberId: IUUID;\n  eventId: IUUID;\n}\n\nexport interface ICancellationMemberToConsultPayload {\n  message: string;\n}\n\nexport interface IChangeStatusEventInput {\n  eventId: IUUID;\n  status: IEventStatus;\n}\n\nexport interface IChangeStatusEventPayload {\n  message: string;\n}\n\nexport interface IDeleteScheduleInput {\n  scheduleManagerId: IUUID;\n}\n\nexport interface IDeleteSchedulePayload {\n  message: string;\n}\n\nexport interface IDeleteTurnInput {\n  turnId: IUUID;\n}\n\nexport interface IDeleteTurnPayload {\n  message: string;\n}\n\nexport interface IResourceQuoteInput {\n  title?: string;\n  memberId?: IUUID;\n  projectId?: IUUID;\n  status?: IEnumResourceQuoteStatus;\n  areaId?: IUUID;\n  approvedDate?: IDateTime;\n}\n\nexport interface IResourceQuotePayload {\n  resourceQuote: IResourceQuote;\n}\n\nexport interface IResourceQuoteDetailInput {\n  serviceId?: IUUID;\n  resourceQuoteId?: IUUID;\n  description?: string;\n  nomenclature?: string;\n  resourceQuoteDetailBoardRowInput?: IResourceQuoteDetailBoardRowInput;\n  projectId?: IUUID;\n  memberConsecutive?: number;\n  earningPercentage?: IDecimal;\n}\n\nexport interface IResourceQuoteDetailBoardRowInput {\n  boardRowId: IUUID;\n}\n\nexport interface IResourceQuoteDetailPayload {\n  resourceQuoteDetail: IResourceQuoteDetail;\n}\n\nexport interface IProposalInput {\n  title?: string;\n  state?: string;\n  city?: string;\n  pDF?: string;\n  introduction?: string;\n  summary?: string;\n  methodology?: string;\n  timeEstimate?: string;\n  finishDate?: IDateTime;\n  discount?: IDecimal;\n  discountType?: IEnumDiscount;\n  tax?: IDecimal;\n  taxType?: IEnumDiscount;\n  resourceQuoteId?: IUUID;\n  total?: IDecimal;\n  status?: IEnumResourceQuoteStatus;\n  urlOnClick?: string;\n}\n\nexport interface IProposalPayload {\n  proposal: IProposal;\n}\n\nexport interface ICollaboratorInput {\n  hours?: number;\n  costByHour?: IDecimal;\n  role?: string;\n  projectRoleId?: IUUID;\n  timeEstimated?: string;\n  amount?: IDecimal;\n  memberId?: IUUID;\n  resourceQuoteDetailId?: IUUID;\n  hiringId?: IUUID;\n}\n\nexport interface ICollaboratorPayload {\n  collaborator: ICollaborator;\n}\n\nexport interface ICollaboratorHoursInput {\n  date?: IDateTime;\n  initialHour?: string;\n  finalHour?: string;\n  collaboratorId?: IUUID;\n}\n\nexport interface ICollaboratorHoursPayload {\n  collaboratorHours: ICollaboratorHours;\n}\n\nexport interface IHiringInput {\n  projectRoleId?: IUUID;\n  memberId?: IUUID;\n  dateStart?: IDateTime;\n  dateEnd?: IDateTime;\n  description?: string;\n  amount?: IDecimal;\n  amountWritted?: string;\n  amountPerHour?: IDecimal;\n  hiringTypeId?: IUUID;\n  benefits?: IEnumBenefits;\n  enumHiringType?: IEnumHiringType;\n  job?: string;\n  vacationDays?: number;\n  professionalLicense?: string;\n  cURP?: string;\n  iNE?: string;\n  infonavit?: string;\n  nationality?: string;\n  birthNationality?: string;\n  civilState?: IEnumCivilState;\n}\n\nexport interface IHiringPayload {\n  hiring: IHiring;\n}\n\nexport interface IHiringServiceInput {\n  hiringId: IUUID;\n  serviceId: IUUID;\n}\n\nexport interface IHiringServicePayload {\n  hiringService: IHiringService;\n}\n\nexport interface IHiringTypeInput {\n  name?: string;\n  projectId?: IUUID;\n}\n\nexport interface IHiringTypePayload {\n  hiringType: IHiringType;\n}\n\nexport interface IShiftInput {\n  projectId?: IUUID;\n  memberId?: IUUID;\n  timeStart: string;\n  timeEnd: string;\n  codeDay: string;\n}\n\nexport interface IShiftPayload {\n  shift: IShift;\n}\n\nexport interface ICreateBusinessTypeInput {\n  projectId: IUUID;\n  image?: string;\n  name: string;\n  description: string;\n}\n\nexport interface ICreateBusinessTypePayload {\n  businessType: IBusinessType;\n}\n\nexport interface IUpdateBusinessTypeInput {\n  id: IUUID;\n  image?: string;\n  name?: string;\n  description?: string;\n}\n\nexport interface IUpdateBusinessTypePayload {\n  message: string;\n}\n\nexport interface IDeleteBusinessTypeInput {\n  id: IUUID;\n}\n\nexport interface IDeleteBusinessPayload {\n  message: string;\n}\n\nexport interface ICreateBusinessRuleInput {\n  projectId: IUUID;\n  title: string;\n  commissionNominator: string;\n  potentialProspectLimit: number;\n  allowExtraBonus: boolean;\n  minimumBalance: number;\n  idealBalance: number;\n}\n\nexport interface ICreateBusinessRulePayload {\n  businessRule: IBusinessRule;\n}\n\nexport interface IUpdateBusinessRuleInput {\n  id: IUUID;\n  title?: string;\n  commissionNominator?: string;\n  potentialProspectLimit?: number;\n  allowExtraBonus?: boolean;\n  minimumBalance?: number;\n  idealBalance?: number;\n}\n\nexport interface IUpdateBusinessRulePayload {\n  message: string;\n}\n\nexport interface IDeleteBusinessRuleInput {\n  id: IUUID;\n}\n\nexport interface IDeleteBusinessRulePayload {\n  message: string;\n}\n\nexport interface IDeleteCouponFromTemplateInput {\n  templateId: IUUID;\n  couponId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface IDeleteCouponFromTemplatePayload {\n  message: string;\n}\n\nexport interface IAddCouponsToTemplateInput {\n  templateId: IUUID;\n  projectId: IUUID;\n  coupons: Array<IUUID>;\n}\n\nexport interface IAddCouponsToTemplatePayload {\n  message: string;\n}\n\nexport interface ICreateUpdateConfigurationTemplateInput {\n  projectId: IUUID;\n  templateType: ITemplateType;\n  config: string;\n}\n\nexport interface ICreateUpdateConfigurationTemplatePayload {\n  configurationTemplate: IConfigurationTemplate;\n}\n\nexport interface ISendTemplateInput {\n  templateId: IUUID;\n}\n\nexport interface ISendTemplatePayload {\n  template: ITemplate;\n}\n\nexport interface IPutFirebaseDeviceInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  deviceToken: string;\n  deviceTopic: string;\n}\n\nexport interface IPutFirebaseDevicePayload {\n  message: string;\n}\n\nexport interface ICreateCouponInput {\n  title: string;\n  code: string;\n  itemToApplyTo: IUUID;\n  roleType: IRoleType;\n  ruleAppliesOn: IRuleAppliesOn;\n  projectId: IUUID;\n  beginingDate: IDateTime;\n  endDate: IDateTime;\n  couponRuleType: ICouponRuleType;\n  percentage: number;\n}\n\nexport interface ICreateCouponPayload {\n  coupon: ICoupon;\n}\n\nexport interface IUpdateCouponInput {\n  couponId: IUUID;\n  title?: string;\n  code?: string;\n  itemToApplyTo?: IUUID;\n  roleType?: IRoleType;\n  ruleAppliesOn?: IRuleAppliesOn;\n  beginingDate?: IDateTime;\n  endDate?: IDateTime;\n  couponRuleType?: ICouponRuleType;\n  percentage?: number;\n}\n\nexport interface IUpdateCouponPayload {\n  message: string;\n}\n\nexport interface IDeleteCouponInput {\n  couponId: IUUID;\n}\n\nexport interface IDeleteCouponPayload {\n  message: string;\n}\n\nexport interface ICreateTemplateInput {\n  projectId: IUUID;\n  couponId?: IUUID;\n  title: string;\n  message?: string;\n  serviceName?: string;\n  projectRoleId?: IUUID;\n  templateType: ITemplateType;\n  releaseDate: IDateTime;\n}\n\nexport interface ICreateTemplatePayload {\n  template: ITemplate;\n}\n\nexport interface IUpdateTemplateInput {\n  templateId: IUUID;\n  couponId?: IUUID;\n  title?: string;\n  message?: string;\n  serviceName?: string;\n  projectRoleId?: IUUID;\n  templateType: ITemplateType;\n  campaignBeginingDate?: IDateTime;\n  campaignEndDate?: IDateTime;\n  campaignRuleType?: ICouponRuleType;\n  percentage?: number;\n  ruleAppliesOn?: IRuleAppliesOn;\n  releaseDate?: IDateTime;\n}\n\nexport interface IUpdateTemplatePayload {\n  message: string;\n}\n\nexport interface IDeleteTemplateInput {\n  id: IUUID;\n}\n\nexport interface IDeleteTemplatePayload {\n  message: string;\n}\n\nexport interface ICreateErrorPageInput {\n  projectId: IUUID;\n  page: string;\n  description?: string;\n}\n\nexport interface ICreateErrorPagePayload {\n  errorPage: IErrorPage;\n}\n\nexport interface IUpdateErrorPageInput {\n  errorPageId: IUUID;\n  page?: string;\n  description?: string;\n}\n\nexport interface IUpdateErrorPagePayload {\n  message: string;\n}\n\nexport interface IDeleteErrorPageInput {\n  id: IUUID;\n}\n\nexport interface IDeleteErrorPagePayload {\n  message: string;\n}\n\nexport interface ICreateErrorPageValidationInput {\n  errorPageId: IUUID;\n  keyName: string;\n  title?: string;\n  textMessage?: string;\n  textAccept?: string;\n  textCancel?: string;\n}\n\nexport interface ICreateErrorPageValidationPayload {\n  errorPageValidation: IErrorPageValidation;\n}\n\nexport interface IUpdateErrorPageValidationInput {\n  errorPageValidationId: IUUID;\n  errorPageId?: IUUID;\n  keyName?: string;\n  title?: string;\n  textMessage?: string;\n  textAccept?: string;\n  textCancel?: string;\n}\n\nexport interface IUpdateErrorPageValidationPayload {\n  message: string;\n}\n\nexport interface IDeleteErrorPageValidationInput {\n  id: IUUID;\n}\n\nexport interface IDeleteErrorPageValidationPayload {\n  message: string;\n}\n\nexport interface ICreateBusinessInput {\n  projectId: IUUID;\n  name: string;\n  description?: string;\n  slogan?: string;\n  image?: string;\n  businessTypeId: IUUID;\n  businessRuleId?: IUUID;\n}\n\nexport interface ICreateBusinessPayload {\n  business: IBusiness;\n}\n\nexport interface IUpdateBusinessInput {\n  id: IUUID;\n  name?: string;\n  description?: string;\n  slogan?: string;\n  image?: string;\n  businessTypeId?: IUUID;\n  businesssRuleId?: IUUID;\n}\n\nexport interface IUpdateBusinessPayload {\n  business: IBusiness;\n}\n\nexport interface IDeleteBusinessInput {\n  businessId: IUUID;\n}\n\nexport interface IAssociateBusinessRulesInput {\n  businessId: IUUID;\n  businessRules: Array<IBusinessRuleDtoInput>;\n}\n\nexport interface IBusinessRuleDtoInput {\n  id?: IUUID;\n  keyName?: string;\n  commissionNominator?: string;\n  businessRuleProjectPlans: Array<IBusinessRuleProjectPlanDtoInput>;\n}\n\nexport interface IBusinessRuleProjectPlanDtoInput {\n  id?: IUUID;\n  projectPlanId: IUUID;\n  commission?: string;\n  commissionSell?: string;\n  commissionProspect?: string;\n  commissionInterested?: string;\n}\n\nexport interface IAssociateBusinessRulesPayload {\n  business: IBusiness;\n}\n\nexport interface IAssociateProjectPlanSubscriptionInput {\n  projectPlanId: IUUID;\n  projectId: IUUID;\n  memberId: IUUID;\n  active?: boolean;\n}\n\nexport interface IAssociateProjectPlanSubscriptionPayload {\n  projectPlanSubscription: IProjectPlanSubscription;\n}\n\nexport interface ICreateProjectPlanInput {\n  projectId: IUUID;\n  title: string;\n  description?: string;\n  frequencyPayment: IFrequencyPayment;\n  availableNominators: number;\n  cost: number;\n  default?: boolean;\n  rateBase?: boolean;\n  currency: string;\n  serviceProductId?: string;\n  changeNominators: string;\n  accessExternalNominators?: boolean;\n  accessExternalProspects?: boolean;\n  vendorRakingDisplay?: boolean;\n  accessConnectionProspectsWhatsapp?: boolean;\n  serviceSupport?: boolean;\n  fee?: number;\n}\n\nexport interface ICreateProjectPlanPayload {\n  projectPlan: IProjectPlan;\n}\n\nexport interface IUpdateProjectPlanInput {\n  id: IUUID;\n  title?: string;\n  description?: string;\n  cost?: number;\n  currency?: string;\n  default?: boolean;\n  rateBase?: boolean;\n  changeNominators?: string;\n  serviceProductId?: string;\n  availableNominators?: number;\n  frequencyPayment?: IFrequencyPayment;\n  accessExternalNominators?: boolean;\n  accessExternalProspects?: boolean;\n  vendorRakingDisplay?: boolean;\n  accessConnectionProspectsWhatsapp?: boolean;\n  serviceSupport?: boolean;\n  fee?: number;\n}\n\nexport interface IUpdateProjectPlanPayload {\n  projectPlan: IProjectPlan;\n}\n\nexport interface IDeleteProjectPlanInput {\n  projectPlanId: IUUID;\n}\n\nexport interface IDeleteProjectPlanPayload {\n  message: string;\n}\n\nexport interface IDeleteProjectPlanSubscriptionInput {\n  projectPlanSubscriptionId: IUUID;\n}\n\nexport interface IDeleteProjectPlanSubscriptionPayload {\n  message: string;\n}\n\nexport interface IPutConfigInput {\n  projectId: IUUID;\n  key: string;\n  value?: string;\n}\n\nexport interface IPutConfigPayload {\n  configuration: IConfiguration;\n}\n\nexport interface IDeleteConfigInput {\n  projectId: IUUID;\n  key: string;\n}\n\nexport interface IDeleteConfigPayload {\n  configuration: IConfiguration;\n}\n\nexport interface IUpdateOrderPageInput {\n  items: Array<IPagesDtoInput>;\n}\n\nexport interface IPagesDtoInput {\n  pageId: IUUID;\n  position: number;\n}\n\nexport interface IUpdateOrderPagesPayload {\n  items: Array<IPagesDto>;\n}\n\nexport interface IPagesDto {\n  pageId: IUUID;\n  position: number;\n}\n\nexport interface IUpdateBatchWewbsiteComponentInput {\n  items: Array<IComponentDtoInput>;\n}\n\nexport interface IComponentDtoInput {\n  webSitePageComponentId: IUUID;\n  position: number;\n}\n\nexport interface IUpdateBatchWewbsiteComponentPayload {\n  items: Array<IComponentDto>;\n}\n\nexport interface IComponentDto {\n  webSitePageComponentId: IUUID;\n  position: number;\n}\n\nexport interface ICreateComponentInput {\n  keyName: string;\n  service: string;\n  type: string;\n  description: string;\n}\n\nexport interface ICreateComponentPayload {\n  message: string;\n}\n\nexport interface ICreateWebsiteComponentInput {\n  websitePageId: IUUID;\n  keyName?: string;\n  props?: string;\n  position: number;\n  parentId?: IUUID;\n  subComponents: string;\n}\n\nexport interface ICreateWebsiteComponentPayload {\n  message: string;\n}\n\nexport interface ICreateWebsitePageInput {\n  projectId: IUUID;\n  position: number;\n  name?: string;\n  url?: string;\n  description?: string;\n  isActive?: boolean;\n  scriptHead?: string;\n  scriptFooter?: string;\n  seoWebsitePage?: string;\n}\n\nexport interface ICreateWebsitePagePayload {\n  message: string;\n}\n\nexport interface ICreateWebsiteSeoInput {\n  websitePageId: IUUID;\n  title?: string;\n  description?: string;\n  keywords?: string;\n  canonicaUrl?: string;\n  robots?: string;\n  googlebot?: string;\n  author?: string;\n  language?: string;\n  twitterCard?: string;\n  twitterSite?: string;\n  twitterCreator?: string;\n  twitterTitle?: string;\n  twitterDescription?: string;\n  twitterUrl?: string;\n  twitterImageAlt?: string;\n  twitterImageTitle?: string;\n  twitterImageWidth?: string;\n  twitterImageHeight?: string;\n  twitterImage?: string;\n  openGraphTitle?: string;\n  openGraphDescription?: string;\n  openGraphUrl?: string;\n  openGraphImageAlt?: string;\n  openGraphImageTitle?: string;\n  openGraphImageWidth?: string;\n  openGraphImageHeight?: string;\n  openGraphImage?: string;\n  openGraphType?: string;\n  openGraphSiteName?: string;\n  openGraphFacebookAppId?: string;\n}\n\nexport interface ICreateWebsiteSeoPayload {\n  message: string;\n}\n\nexport interface IUpdateComponentInput {\n  componentId: IUUID;\n  keyName?: string;\n  services?: string;\n  description?: string;\n  type?: string;\n}\n\nexport interface IUpdateComponentPayload {\n  message: string;\n}\n\nexport interface IUpdateWebsiteComponentInput {\n  websitesComponents: Array<IUpdateWebsiteComponentDtoInput>;\n}\n\nexport interface IUpdateWebsiteComponentDtoInput {\n  id: IUUID;\n  props?: string;\n  position?: number;\n}\n\nexport interface IUpdateWebsiteComponentPayload {\n  message: string;\n}\n\nexport interface IUpdateWebsitePageInput {\n  websitePageId: IUUID;\n  name?: string;\n  url?: string;\n  description?: string;\n  isActive?: boolean;\n  scriptHead?: string;\n  scriptFooter?: string;\n  position?: number;\n  seoWebsitePage?: string;\n}\n\nexport interface IUpdateWebsitePagePayload {\n  message: string;\n}\n\nexport interface IUpdateWebsiteSeoInput {\n  websiteSeoId: IUUID;\n  webSitePageId?: IUUID;\n  title?: string;\n  description?: string;\n  keywords?: string;\n  canonicaUrl?: string;\n  robots?: string;\n  googlebot?: string;\n  author?: string;\n  language?: string;\n  twitterCard?: string;\n  twitterSite?: string;\n  twitterCreator?: string;\n  twitterTitle?: string;\n  twitterDescription?: string;\n  twitterUrl?: string;\n  twitterImageAlt?: string;\n  twitterImageTitle?: string;\n  twitterImageWidth?: string;\n  twitterImageHeight?: string;\n  twitterImage?: string;\n  openGraphTitle?: string;\n  openGraphDescription?: string;\n  openGraphUrl?: string;\n  openGraphImageAlt?: string;\n  openGraphImageTitle?: string;\n  openGraphImageWidth?: string;\n  openGraphImageHeight?: string;\n  openGraphImage?: string;\n  openGraphType?: string;\n  openGraphSiteName?: string;\n  openGraphFacebookAppId?: string;\n}\n\nexport interface IUpdateWebsiteSeoPayload {\n  message: string;\n}\n\nexport interface IDeleteComponentInput {\n  componentId: IUUID;\n}\n\nexport interface IDeleteComponentPayload {\n  message: string;\n}\n\nexport interface IDeleteWebsiteComponentInput {\n  websiteComponentId: IUUID;\n}\n\nexport interface IDeleteWebsiteComponentPayload {\n  message: string;\n}\n\nexport interface IDeleteWebsitePageInput {\n  websitePageId: IUUID;\n}\n\nexport interface IDeleteWebsitePagePayload {\n  message: string;\n}\n\nexport interface IDeleteWebsiteSeoInput {\n  websiteSeoId: IUUID;\n}\n\nexport interface IDeleteWebsiteSeoPayload {\n  message: string;\n}\n\nexport interface IDocumentCategoryInput {\n  name?: string;\n  description?: string;\n  projectId?: IUUID;\n}\n\nexport interface IDocumentCategoryPayload {\n  documentCategory: IDocumentCategory;\n}\n\nexport interface IDocumentCategoryDetailInput {\n  documentCategoryId?: IUUID;\n  documentId?: IUUID;\n}\n\nexport interface IDocumentCategoryDetailPayload {\n  document: IDocumentCategoryDetail;\n}\n\nexport interface IDocumentInput {\n  name?: string;\n  url?: string;\n  projectId?: IUUID;\n}\n\nexport interface IDocumentPayload {\n  document: IDocument;\n}\n\nexport interface IDocumentTemplateInput {\n  name?: string;\n  documentId?: IUUID;\n}\n\nexport interface IDocumentTemplatePayload {\n  document: IDocumentTemplate;\n}\n\nexport interface ITemplatePageInput {\n  page?: number;\n  url?: string;\n  templateId?: IUUID;\n}\n\nexport interface ITemplatePagePayload {\n  templatePage: ITemplatePage;\n}\n\nexport interface IDocumentTagInput {\n  name?: string;\n  height?: IDecimal;\n  width?: IDecimal;\n  verticalAxis?: IDecimal;\n  horizontalAxis?: IDecimal;\n  templatePageId?: IUUID;\n}\n\nexport interface IDocumentTagPayload {\n  documentTag: IDocumentTag;\n}\n\nexport interface IDocumentScanInput {\n  value?: string;\n  documentTagId?: IUUID;\n  documentReadId?: IUUID;\n}\n\nexport interface IDocumentScanPayload {\n  documentScan: IDocumentScan;\n}\n\nexport interface IDocumentReadInput {\n  url?: string;\n  memberId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IDocumentReadPayload {\n  documentRead: IDocumentRead;\n}\n\nexport interface ICreateVideoCallInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  participantName: string;\n  members?: Array<IMemberInput>;\n  services?: Array<IServiceInput>;\n  url?: string;\n  roomName?: string;\n}\n\nexport interface IMemberInput {\n  id: string;\n  fullName: string;\n  email: string;\n}\n\nexport interface IServiceInput {\n  serviceCode: string;\n  viewAdmin: boolean;\n  viewUser: boolean;\n}\n\nexport interface ICreateVideoCallPayload {\n  videoCall: IVideoCall;\n  roomAccessToken: IRoomAccessToken;\n}\n\nexport interface IRoomAccessToken {\n  createdAt: string;\n  roomName: string;\n  token: string;\n  participantIdentity: string;\n}\n\nexport interface IUpdateVideoCallInput {\n  videoCallId: IUUID;\n  members: Array<string>;\n  url?: string;\n}\n\nexport interface IUpdateVideoCallPayload {\n  videoCall: IVideoCall;\n}\n\nexport interface IDeleteVideoCallInput {\n  videoCallId: IUUID;\n}\n\nexport interface IDeleteVideoCallPayload {\n  videoCall: IVideoCall;\n}\n\nexport interface ICreateAccessTokenInput {\n  participantName: string;\n  roomName?: string;\n}\n\nexport interface ICreateVideoRoomInput {\n  projectId: IUUID;\n  url: string;\n  creatorName: string;\n  creatorEmail: string;\n  title?: string;\n  dateScheduled?: IDateTime;\n  memberId?: IUUID;\n  typeVideo?: ITypeVideo;\n}\n\nexport interface ICreateVideoRoomPayload {\n  videoCall: IVideoRoom;\n  roomAccessToken: IRoomAccessToken;\n}\n\nexport interface ISendNotificationUsersInput {\n  videoRoomId?: IUUID;\n  membersList: Array<IMemberDtoInput>;\n}\n\nexport interface IMemberDtoInput {\n  fullName: string;\n  email: string;\n}\n\nexport interface ISendNotificationUsersPayload {\n  message: string;\n}\n\nexport interface ISendEmailDownloadInput {\n  email: string;\n  url: string;\n  videoName: string;\n}\n\nexport interface ISendEmailDownloadPayload {\n  message: string;\n}\n\nexport interface ISendEmailNotificationInput {\n  senderName: string;\n  senderEmail: string;\n  link: string;\n  subject: string;\n  date: string;\n  guests: Array<IMemberDTOInput>;\n}\n\nexport interface IMemberDTOInput {\n  email: string;\n  name: string;\n}\n\nexport interface ISendEmailNotificationPayload {\n  message: string;\n}\n\nexport interface IMuteParticipantInput {\n  identity: string;\n  roomName: string;\n  track: string;\n  mute: boolean;\n}\n\nexport interface IRemoveParticipantRoomInput {\n  identity: string;\n  roomName: string;\n}\n\nexport interface IUpdateParticipantRoomInput {\n  roomName: string;\n  identity: string;\n  metadata: string;\n}\n\nexport interface IStartRecordRoomInput {\n  memberId: IUUID;\n  name: string;\n  roomName?: string;\n}\n\nexport interface IEndRecordRoomInput {\n  roomName?: string;\n}\n\nexport interface IRecordingPath {\n  url: string;\n  signedUrl: string;\n  size: string;\n  name: string;\n}\n\nexport interface ICreateUpdateContactEmailInput {\n  projectId: IUUID;\n  contactEmail: string;\n  fullName: string;\n  fromEmail?: string;\n  fromName?: string;\n  sendGridKey?: string;\n  sendGridTemplateId?: string;\n  description?: string;\n}\n\nexport interface ICreateUpdateContactEmailPayload {\n  contactEmail: IContactEmail;\n}\n\nexport interface ISendEmailInput {\n  projectId: IUUID;\n  contactEmail: string;\n  name: string;\n  email: string;\n  subject: string;\n  content: string;\n}\n\nexport interface ISendEmailPayload {\n  responseEmail: IResponseEmail;\n}\n\nexport interface IResponseEmail {\n  message: string;\n}\n\nexport interface IDeleteContactEmailInput {\n  projectId: IUUID;\n  contactEmail: string;\n}\n\nexport interface IDeleteContactEmailPayload {\n  message: string;\n}\n\nexport interface ISendMailBotInput {\n  apiKey: string;\n  email: string;\n  name: string;\n  subject: string;\n  content: string;\n  templateId?: string;\n}\n\nexport interface ISendMailBotPayload {\n  responseEmail: IResponseEmail;\n}\n\nexport interface ISendQuizInput {\n  destinataries: Array<IQuizDestinaratiesInput>;\n  copyTo?: Array<IQuizDestinaratiesInput>;\n  from?: string;\n  subject: string;\n  content: string;\n  banner: string;\n  redirectTo: Array<IQuizRedirectButtonsInput>;\n}\n\nexport interface IQuizDestinaratiesInput {\n  fullName?: string;\n  email: string;\n}\n\nexport interface IQuizRedirectButtonsInput {\n  url: string;\n  name: string;\n}\n\nexport const enum IHttpStatusCode {\n  CONTINUE = 'CONTINUE',\n  SWITCHING_PROTOCOLS = 'SWITCHING_PROTOCOLS',\n  PROCESSING = 'PROCESSING',\n  EARLY_HINTS = 'EARLY_HINTS',\n  OK = 'OK',\n  CREATED = 'CREATED',\n  ACCEPTED = 'ACCEPTED',\n  NON_AUTHORITATIVE_INFORMATION = 'NON_AUTHORITATIVE_INFORMATION',\n  NO_CONTENT = 'NO_CONTENT',\n  RESET_CONTENT = 'RESET_CONTENT',\n  PARTIAL_CONTENT = 'PARTIAL_CONTENT',\n  MULTI_STATUS = 'MULTI_STATUS',\n  ALREADY_REPORTED = 'ALREADY_REPORTED',\n  IM_USED = 'IM_USED',\n  AMBIGUOUS = 'AMBIGUOUS',\n  MOVED = 'MOVED',\n  REDIRECT = 'REDIRECT',\n  REDIRECT_METHOD = 'REDIRECT_METHOD',\n  NOT_MODIFIED = 'NOT_MODIFIED',\n  USE_PROXY = 'USE_PROXY',\n  UNUSED = 'UNUSED',\n  TEMPORARY_REDIRECT = 'TEMPORARY_REDIRECT',\n  PERMANENT_REDIRECT = 'PERMANENT_REDIRECT',\n  BAD_REQUEST = 'BAD_REQUEST',\n  UNAUTHORIZED = 'UNAUTHORIZED',\n  PAYMENT_REQUIRED = 'PAYMENT_REQUIRED',\n  FORBIDDEN = 'FORBIDDEN',\n  NOT_FOUND = 'NOT_FOUND',\n  METHOD_NOT_ALLOWED = 'METHOD_NOT_ALLOWED',\n  NOT_ACCEPTABLE = 'NOT_ACCEPTABLE',\n  PROXY_AUTHENTICATION_REQUIRED = 'PROXY_AUTHENTICATION_REQUIRED',\n  REQUEST_TIMEOUT = 'REQUEST_TIMEOUT',\n  CONFLICT = 'CONFLICT',\n  GONE = 'GONE',\n  LENGTH_REQUIRED = 'LENGTH_REQUIRED',\n  PRECONDITION_FAILED = 'PRECONDITION_FAILED',\n  REQUEST_ENTITY_TOO_LARGE = 'REQUEST_ENTITY_TOO_LARGE',\n  REQUEST_URI_TOO_LONG = 'REQUEST_URI_TOO_LONG',\n  UNSUPPORTED_MEDIA_TYPE = 'UNSUPPORTED_MEDIA_TYPE',\n  REQUESTED_RANGE_NOT_SATISFIABLE = 'REQUESTED_RANGE_NOT_SATISFIABLE',\n  EXPECTATION_FAILED = 'EXPECTATION_FAILED',\n  MISDIRECTED_REQUEST = 'MISDIRECTED_REQUEST',\n  UNPROCESSABLE_ENTITY = 'UNPROCESSABLE_ENTITY',\n  LOCKED = 'LOCKED',\n  FAILED_DEPENDENCY = 'FAILED_DEPENDENCY',\n  UPGRADE_REQUIRED = 'UPGRADE_REQUIRED',\n  PRECONDITION_REQUIRED = 'PRECONDITION_REQUIRED',\n  TOO_MANY_REQUESTS = 'TOO_MANY_REQUESTS',\n  REQUEST_HEADER_FIELDS_TOO_LARGE = 'REQUEST_HEADER_FIELDS_TOO_LARGE',\n  UNAVAILABLE_FOR_LEGAL_REASONS = 'UNAVAILABLE_FOR_LEGAL_REASONS',\n  INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',\n  NOT_IMPLEMENTED = 'NOT_IMPLEMENTED',\n  BAD_GATEWAY = 'BAD_GATEWAY',\n  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',\n  GATEWAY_TIMEOUT = 'GATEWAY_TIMEOUT',\n  HTTP_VERSION_NOT_SUPPORTED = 'HTTP_VERSION_NOT_SUPPORTED',\n  VARIANT_ALSO_NEGOTIATES = 'VARIANT_ALSO_NEGOTIATES',\n  INSUFFICIENT_STORAGE = 'INSUFFICIENT_STORAGE',\n  LOOP_DETECTED = 'LOOP_DETECTED',\n  NOT_EXTENDED = 'NOT_EXTENDED',\n  NETWORK_AUTHENTICATION_REQUIRED = 'NETWORK_AUTHENTICATION_REQUIRED'\n}\n\nexport interface ISendQuizGratitudeInput {\n  quizMemberId: IUUID;\n  from?: string;\n  subject?: string;\n  copyTo?: Array<IQuizDestinaratiesInput>;\n}\n\nexport interface IServiceAreaInput {\n  name?: string;\n  description?: string;\n  code?: string;\n  active?: boolean;\n  areaId?: IUUID;\n}\n\nexport interface IServiceAreaPayload {\n  serviceArea: IServiceArea;\n}\n\nexport interface IAreaInput {\n  name?: string;\n  description?: string;\n  code: string;\n  active?: boolean;\n  projectId?: IUUID;\n}\n\nexport interface IAreaPayload {\n  area: IArea;\n}\n\nexport interface IUpdateBatchServiceMemberInput {\n  new?: Array<IServiceMemberInput>;\n  zippedData?: Array<IServiceMemberZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IServiceMemberInput {\n  memberId: IUUID;\n  serviceId: IUUID;\n}\n\nexport interface IServiceMemberZippedInput {\n  id: IUUID;\n  serviceMember: IServiceMemberInput;\n}\n\nexport interface IServiceMemberPayload {\n  serviceMember: IServiceMember;\n}\n\nexport interface IServiceQuizInput {\n  quizId: IUUID;\n  serviceId: IUUID;\n}\n\nexport interface IServiceQuizPayload {\n  serviceQuiz: IServiceQuiz;\n}\n\nexport interface IQuizInput {\n  name?: string;\n  description?: string;\n  projectId?: IUUID;\n  answerableOnlyOnce?: boolean;\n  maxTimesAnswerable?: number;\n  mailInterviewed?: boolean;\n  mailCreator?: boolean;\n  saveSend?: boolean;\n  note?: string;\n  tagPosition?: IEnumTagPosition;\n  quizStatus?: IEnumOnlineQuizStatus;\n}\n\nexport interface IQuizPayload {\n  quiz: IQuiz;\n}\n\nexport interface IQuizSectionInput {\n  name?: string;\n  description?: string;\n  quizId?: IUUID;\n  order?: number;\n}\n\nexport interface IQuizSectionPayload {\n  quizSection: IQuizSection;\n}\n\nexport interface IQuizQuestionPayload {\n  quizQuestion: IQuizQuestion;\n}\n\nexport interface IQuizQuestionInput {\n  question?: string;\n  type?: IQuiz_QuestionType;\n  quizSectionId?: IUUID;\n  active?: boolean;\n  required?: boolean;\n  order?: number;\n}\n\nexport interface IQuizQuestionNestedInput {\n  name?: string;\n  description?: string;\n  url?: string;\n  show?: boolean;\n  order?: number;\n  quizQuestionId?: IUUID;\n}\n\nexport interface IQuizQuestionNestedPayload {\n  quizQuestionNested: IQuizQuestionNested;\n}\n\nexport interface IUpdateBatchQuizQuestionInput {\n  new?: Array<IQuizQuestionInput>;\n  zippedData?: Array<IQuizQuestionZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IQuizQuestionZippedInput {\n  id: IUUID;\n  question: IQuizQuestionInput;\n}\n\nexport interface IQuizQuestionAnswerInput {\n  quizQuestionId: IUUID;\n  quizAnswerId: IUUID;\n  order?: number;\n}\n\nexport interface IQuizQuestionAnswerPayload {\n  questionAnswer: IQuizQuestionAnswer;\n}\n\nexport interface IUpdateBatchQuizQuestionAnswerInput {\n  new?: Array<IQuizQuestionAnswerInput>;\n  zippedData?: Array<IQuizQuestionAnswerZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IQuizQuestionAnswerZippedInput {\n  id: IUUID;\n  question: IQuizQuestionAnswerInput;\n}\n\nexport interface IQuizAnswerInput {\n  description?: string;\n  active?: boolean;\n  projectId?: IUUID;\n  quizQuestionId?: IUUID;\n}\n\nexport interface IQuizAnswerPayload {\n  quizAnswer: IQuizAnswer;\n}\n\nexport interface IQuizMemberInput {\n  quizId?: IUUID;\n  memberId?: IUUID;\n  projectId?: IUUID;\n  email?: string;\n  active?: boolean;\n  status?: IEnumQuizStatus;\n}\n\nexport interface IQuizMemberPayload {\n  quizMember: IQuizMember;\n}\n\nexport interface IQuizQuestionMemberInput {\n  quizQuestionId?: IUUID;\n  quizMemberId?: IUUID;\n  active?: boolean;\n  quizMemberAnswerInput?: Array<IQuizMemberAnswerInput>;\n  quizMemberDescriptionInput?: IQuizMemberDescriptionInput;\n}\n\nexport interface IQuizMemberAnswerInput {\n  quizQuestionMemberId?: IUUID;\n  quizAnswerId?: IUUID;\n  active?: boolean;\n}\n\nexport interface IQuizMemberDescriptionInput {\n  quizQuestionMemberId?: IUUID;\n  description?: string;\n  active?: boolean;\n}\n\nexport interface IQuizQuestionMemberPayload {\n  quizQuestionMember: IQuizQuestionMember;\n}\n\nexport interface IUpdateBatchQuizQuestionMemberInput {\n  new?: Array<IQuizQuestionMemberInput>;\n  zippedData?: Array<IQuizQuestionMemberZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IQuizQuestionMemberZippedInput {\n  id: IUUID;\n  member: IQuizQuestionMemberInput;\n}\n\nexport interface IQuizMemberAnswerPayload {\n  memberAnswer: IQuizMemberAnswer;\n}\n\nexport interface IUpdateBatchQuizMemberAnswerInput {\n  new?: Array<IQuizMemberAnswerInput>;\n  zippedData?: Array<IQuizMemberAnswerZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IQuizMemberAnswerZippedInput {\n  id: IUUID;\n  member: IQuizMemberAnswerInput;\n}\n\nexport interface IQuizMemberDescriptionPayload {\n  memberDescription: IQuizMemberDescription;\n}\n\nexport interface IUpdateBatchQuizMemberDescriptionInput {\n  new?: Array<IQuizMemberDescriptionInput>;\n  zippedData?: Array<IQuizMemberDescriptionZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IQuizMemberDescriptionZippedInput {\n  id: IUUID;\n  member: IQuizMemberDescriptionInput;\n}\n\nexport interface IKeyInput {\n  user: string;\n  device: string;\n  origin: string;\n  idAplication: number;\n  projectId: IUUID;\n}\n\nexport interface IKeyPayload {\n  key: IKey;\n}\n\nexport interface IKey {\n  user?: string;\n  device?: string;\n  origin?: string;\n  idAplication?: number;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IQuotationInput {\n  projectId: IUUID;\n  token: string;\n  idUbicacion: number;\n  codigoPostal: string;\n  idMunicipio: number;\n  idEstado: number;\n  rfc: string;\n  edad: number;\n  sexo: number;\n  email: string;\n  telefono: string;\n  idDescripcionModelo: number;\n  idAseguradora?: number;\n}\n\nexport interface IQuotationPayload {\n  idPeticionCotizacion?: number;\n  error?: string;\n}\n\nexport interface ILoginInput {\n  projectId: IUUID;\n}\n\nexport interface ILoginPayload {\n  name?: string;\n  idCredential?: number;\n  token?: string;\n  aplicaciones?: string;\n  error?: IErrorData;\n}\n\nexport interface IErrorData {\n  numero?: number;\n  descripcion?: string;\n}\n\nexport interface IPolicyInput {\n  projectId: IUUID;\n  token: string;\n  numeroPoliza: string;\n  idCotizacion: number;\n  idAseguradoraSubRamo: number;\n  idSubramo: number;\n}\n\nexport interface IPolicyPayload {\n  error?: IErrorData;\n  poliza?: IPolicy;\n  condiciones?: string;\n  siniestro?: string;\n  polizaGR?: string;\n}\n\nexport interface IQuotationDownloadPDFInput {\n  projectId: IUUID;\n  token: string;\n  idCotizacion: number;\n  formasPago: Array<IEnumFormsPayment>;\n  idProducto: number;\n  productos: Array<number>;\n}\n\nexport interface IQuotationDownloadPDFPayload {\n  error?: IErrorData;\n  pdf64?: IPdf64Data;\n}\n\nexport interface IPdf64Data {\n  amplia?: string;\n  ampliaPlus?: string;\n  limitada?: string;\n}\n\nexport interface IQuotationEmitInput {\n  projectId: IUUID;\n  token: string;\n  idCotizacion: number;\n  fechaInicioVigencia: IDateTime;\n  calle: string;\n  numExt: string;\n  numInt: string;\n  nombre: string;\n  apellidoPaterno: string;\n  apellidoMaterno: string;\n  fechaNacimiento: IDateTime;\n  rfc: string;\n  edad: number;\n  sexo: IEnumGender;\n  email: string;\n  telefono: string;\n  idOcupacion: number;\n  idAseguradora: IEnumInsurerSubBranch;\n  idProduct: IEnumIdProduct;\n  medioPago: IEnumMethodPayment;\n  nombreTarjetaHabiente: string;\n  paternoTarjetaHabiente: string;\n  maternoTarjetaHabiente: string;\n  idBanco: number;\n  nombreBanco: string;\n  codigoSeguridad: string;\n  numTarjeta: string;\n  anioVigenciaTarjeta: number;\n  mesVigenciaTarjeta: number;\n  numSerie: string;\n  placa: string;\n  numMotor: string;\n  tipoPersona: IEnumTypePerson;\n  nombreBeneficiario: string;\n  apellidoPaternoBeneficiario: string;\n  apellidoMaternoBeneficiario: string;\n  rfcBeneficiario: string;\n  razonSocial: string;\n  formaPago: IEnumFormsPayment;\n  regimenFiscal: string;\n  usoCfdi: string;\n}\n\nexport const enum IEnumGender {\n  MASCULINE = 'MASCULINE',\n  FEMININE = 'FEMININE'\n}\n\nexport const enum IEnumInsurerSubBranch {\n  AXA = 'AXA',\n  CHUBB = 'CHUBB',\n  SURA = 'SURA',\n  ZURICH = 'ZURICH',\n  MAPFRE = 'MAPFRE',\n  QUALITAS = 'QUALITAS',\n  BANORTE = 'BANORTE',\n  ANA_SEGUROS = 'ANA_SEGUROS',\n  AFIRME = 'AFIRME',\n  HDI = 'HDI'\n}\n\nexport const enum IEnumIdProduct {\n  AMPLIA = 'AMPLIA',\n  AMPLIA_PLUS = 'AMPLIA_PLUS',\n  LIMITADA = 'LIMITADA'\n}\n\nexport const enum IEnumMethodPayment {\n  CASH = 'CASH',\n  CREDIT_CARD = 'CREDIT_CARD'\n}\n\nexport const enum IEnumTypePerson {\n  FISICA = 'FISICA',\n  MORAL = 'MORAL'\n}\n\nexport interface IQuotationEmitPayload {\n  numeroPoliza?: string;\n  error?: IErrorData;\n}\n\nexport interface ISendQuotationInput {\n  projectId: IUUID;\n  token: string;\n  idCotizacion: number;\n  formasPago: Array<IEnumFormsPayment>;\n  idProducto: number;\n  producto: string;\n  correos: Array<string>;\n}\n\nexport interface ISendQuotationPayload {\n  error?: string;\n}\n\nexport interface IAttachPaymentMethodToCustomerInput {\n  paymentMethodId: IUUID;\n  memberId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreatePaymentMethodPayload {\n  paymentMethod: IPaymentMethod;\n}\n\nexport interface ISetupIntentStripeInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  customerData?: ICustomerDataInput;\n}\n\nexport interface ICustomerDataInput {\n  name: string;\n  mail: string;\n}\n\nexport interface ISetupIntentStripePayload {\n  setupIntentClientSecret: string;\n  customerId: string;\n  publicKey: string;\n}\n\nexport interface ISetDefaultPaymentMethodOnCustomerInput {\n  memberId: IUUID;\n  projectId: IUUID;\n  paymentMethodId: IUUID;\n}\n\nexport interface ISetDefaultPaymentMethodOnCustomerPayload {\n  message: string;\n}\n\nexport interface IUpdatePriceStripeInput {\n  productId: IUUID;\n  newPrice: number;\n  currency: string;\n  interval: string;\n}\n\nexport interface IUpdatePriceStripePayload {\n  message: string;\n}\n\nexport interface INewPaymentsAnyTypeInput {\n  products: Array<IUUID>;\n  stripeToken: string;\n  stripeEmail: string;\n  memberId: IUUID;\n  projectId: IUUID;\n  numbers: string;\n  expiration: string;\n  cvc: string;\n}\n\nexport interface INewPaymentsAnyTypePayload {\n  message: string;\n}\n\nexport interface ICreateProductStripeInput {\n  name: string;\n  productId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateProductStripePayload {\n  productId: string;\n}\n\nexport interface IPlanInput {\n  projectId?: IUUID;\n  description?: string;\n  code?: string;\n  status?: boolean;\n  amount?: IDecimal;\n  interval?: IEnumInterval;\n  intervalCount?: number;\n  productId?: IUUID;\n}\n\nexport const enum IEnumInterval {\n  DAY = 'DAY',\n  WEEK = 'WEEK',\n  MONTH = 'MONTH',\n  YEAR = 'YEAR'\n}\n\nexport interface IPlanPayload {\n  plan: Ipayment_Plan;\n}\n\nexport interface ICreateStripePriceInput {\n  unitAmount: ILong;\n  currency: string;\n  interval: string;\n  stripeProductId: string;\n  projectId: IUUID;\n  productId: IUUID;\n}\n\nexport interface ICreateStripePricePayload {\n  plan: Ipayment_Plan;\n}\n\nexport interface ICreateMethodPaymentInput {\n  projectId?: IUUID;\n  companyId?: IUUID;\n  memberId: IUUID;\n  alias?: string;\n  privateKey: string;\n  publicKey: string;\n  active?: boolean;\n  servicePayment: IServicePayment;\n}\n\nexport interface ICreateMethodPaymentPayload {\n  methodPayment: IMethodPayment;\n}\n\nexport interface IUpdateMethodPaymentInput {\n  methodPaymentId: IUUID;\n  servicePayment?: IServicePayment;\n  active?: boolean;\n  alias?: string;\n  privateKey?: string;\n  publicKey?: string;\n}\n\nexport interface IUpdateMethodPaymentPayload {\n  methodPayment: IMethodPayment;\n}\n\nexport interface IDeleteMethodPaymentInput {\n  methodPaymentId: IUUID;\n}\n\nexport interface IDeleteMethodPaymentPayload {\n  methodPayment: IMethodPayment;\n}\n\nexport interface ICreatePaymentStripeInput {\n  invoiceId?: IUUID;\n  projectId?: IUUID;\n  companyId?: IUUID;\n  paymentStripeCharge: IPaymentStripeChargeInput;\n}\n\nexport interface IPaymentStripeChargeInput {\n  amount: number;\n  receiptEmail: string;\n  currency: string;\n  transactionNumber: string;\n}\n\nexport interface ICreatePaymentStripePayload {\n  transaction: Ipayment_Transaction;\n}\n\nexport interface ICreatePaymentStripeToAccountInput {\n  memberId: IUUID;\n  invoiceId?: IUUID;\n  projectId: IUUID;\n  paymentStripeCharge: IPaymentStripeChargeInput;\n}\n\nexport interface ICreateSuscriptionStripeInput {\n  projectId: IUUID;\n  invoiceId: IUUID;\n  planId: IUUID;\n  name: string;\n  mail: string;\n  numbers: string;\n  expiration: string;\n  cvc: string;\n  count: number;\n}\n\nexport interface ICreateSuscriptionStripePayload {\n  userKey: IAccountKey;\n  trans: Ipayment_Transaction;\n}\n\nexport interface ICreateSuscriptionExternalStripeInput {\n  projectId: IUUID;\n  planCode: string;\n  amount: IDecimal;\n  name: string;\n  mail: string;\n  numbers: string;\n  expiration: string;\n  cvc: string;\n  count: number;\n}\n\nexport interface ICreateSuscriptionExternalStripePayload {\n  userKey: IAccountKey;\n  trans: Ipayment_Transaction;\n}\n\nexport interface IDeleteSuscriptionExternalStripeInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  planCode: string;\n}\n\nexport interface IDeleteSuscriptionExternalStripePayload {\n  userKey: IAccountKey;\n}\n\nexport interface ICreateStripeAccountInput {\n  projectId: IUUID;\n  memberId?: IUUID;\n  url?: string;\n}\n\nexport interface ICreateStripeAccountPayload {\n  userKey: IAccountKey;\n  url: string;\n}\n\nexport interface IDeletePaymentInput {\n  paymentId: IUUID;\n}\n\nexport interface IDeletePaymentPayload {\n  transaction: Ipayment_Transaction;\n}\n\nexport interface IUpdatePaymentInput {\n  transactionNumber: string;\n  transactionStatus: ITransactionStatus;\n  responseText: string;\n}\n\nexport interface IUpdatePaymentPayload {\n  transaction: Ipayment_Transaction;\n}\n\nexport interface ICreateInvoiceInput {\n  projectId: IUUID;\n  addressId: IUUID;\n  memberId: IUUID;\n  products?: Array<IProductInvoiceDetailInput>;\n  invoiceNumber: string;\n  invoiceStatus: IInvoiceStatus;\n  shippingSale: IDecimal;\n  observations?: string;\n  invoiceDate?: string;\n}\n\nexport interface IProductInvoiceDetailInput {\n  id: IUUID;\n  quantity: number;\n  unitPrice: IDecimal;\n}\n\nexport interface ICreateInvoicePayload {\n  invoice: IInvoice;\n}\n\nexport interface IUpdateStatusInvoiceInput {\n  invoiceId: IUUID;\n  status: IInvoiceStatus;\n}\n\nexport interface IUpdateStatusInvoicePayload {\n  invoice: IInvoice;\n}\n\nexport interface ICreatePaymentMethodInput {\n  memberId: IUUID;\n  projectId: IUUID;\n  default?: boolean;\n  numbers: string;\n  expiration: string;\n  cvc: string;\n}\n\nexport interface IDeletePaymentMethodInput {\n  id: IUUID;\n}\n\nexport interface IDeletePaymentMethodPayload {\n  message: string;\n}\n\nexport interface ICreateBatchInsurerCoveragesInput {\n  coverages: Array<IInsurerCoverageDTOInput>;\n  projectId: IUUID;\n}\n\nexport interface IInsurerCoverageDTOInput {\n  code: string;\n  name: string;\n  description?: string;\n  insurerServiceId: IUUID;\n}\n\nexport interface ICreateBatchInsurerCoveragesPayload {\n  message: string;\n}\n\nexport interface ICreateQuoteInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  firstName: string;\n  lastName: string;\n  rfc?: string;\n  phone: string;\n  frecuency: number;\n  packageName: string;\n  email: string;\n  colony: string;\n  town: string;\n  state: string;\n  stateId: string;\n  brand: string;\n  subBrand: string;\n  description: string;\n  gender?: IQuoteGender;\n  zipCode: string;\n  carId: number;\n  carCode: string;\n  year: number;\n  dateOfBirth: string;\n  startValidity?: string;\n  endValidity?: string;\n}\n\nexport interface ICreateQuotePayload {\n  quoteId: IUUID;\n}\n\nexport interface ICreateNewOfficesPayload {\n  message: string;\n}\n\nexport interface ICreateNewProfilesPayload {\n  message: string;\n}\n\nexport interface ICreateInsurerInput {\n  insurerServiceId: IUUID;\n  projectId: IUUID;\n  name: string;\n  percentageMax?: IDecimal;\n}\n\nexport interface ICreateInsurerPayload {\n  message: string;\n}\n\nexport interface ICreateOfficeInput {\n  projectId: IUUID;\n  name: string;\n}\n\nexport interface ICreateOfficePayload {\n  message: string;\n}\n\nexport interface ICreateRegistrationInput {\n  projectId: IUUID;\n  name: string;\n  email: string;\n  state?: string;\n  city?: string;\n  tradename?: string;\n  interests?: Array<boolean>;\n  company?: string;\n}\n\nexport interface ICreateRegistrationPayload {\n  message: string;\n}\n\nexport interface ICreateQuatorProfileInput {\n  projectId: IUUID;\n  name: string;\n  officeId: IUUID;\n  insurers?: Array<IQuoterProfileInsurerInsertInput>;\n}\n\nexport interface IQuoterProfileInsurerInsertInput {\n  percentageBase: IDecimal;\n  percentageMax: IDecimal;\n  insurerId: IUUID;\n  portalAgentQuote: boolean;\n  portalAgentEmits: boolean;\n  portalPublicQuote: boolean;\n  portalPublicEmits: boolean;\n}\n\nexport interface ICreateQuatorProfilePayload {\n  message: string;\n}\n\nexport interface IDeleteInsurerInput {\n  insurerId: IUUID;\n}\n\nexport interface IDeleteInsurerPayload {\n  message: string;\n}\n\nexport interface IDeleteOfficeInput {\n  officeId: IUUID;\n}\n\nexport interface IDeleteOfficePayload {\n  message: string;\n}\n\nexport interface IDeleteQuoterProfileInput {\n  quoterProfileId: IUUID;\n}\n\nexport interface IDeleteQuoterProfilePayload {\n  message: string;\n}\n\nexport interface IUpdateInsurerInput {\n  insurerId: IUUID;\n  name: string;\n  percentageMax: IDecimal;\n}\n\nexport interface IUpdateInsurerPayload {\n  message: string;\n}\n\nexport interface IUpdateOfficeInput {\n  officeId: IUUID;\n  name: string;\n}\n\nexport interface IUpdateOfficePayload {\n  message: string;\n}\n\nexport interface IUpdateQuoterProfileInput {\n  quoterProfileId: IUUID;\n  name: string;\n  officeId: IUUID;\n  insurers?: Array<IQuoterProfileInsurerUpdateInput>;\n}\n\nexport interface IQuoterProfileInsurerUpdateInput {\n  id?: IUUID;\n  insurerId: IUUID;\n  percentageBase: IDecimal;\n  percentageMax: IDecimal;\n  portalAgentQuote: boolean;\n  portalAgentEmits: boolean;\n  portalPublicQuote: boolean;\n  portalPublicEmits: boolean;\n}\n\nexport interface IUpdateQuoterProfilePayload {\n  message: string;\n}\n\nexport interface ICreateCatalogInput {\n  brand: string;\n  years: Array<ICatalogoByYearInsertInput>;\n  subBrand: string;\n  description: string;\n  occupants: number;\n  catalogType?: string;\n}\n\nexport interface ICatalogoByYearInsertInput {\n  year: number;\n  cveveh: string;\n}\n\nexport interface ICreateCatalogPayload {\n  message: string;\n}\n\nexport interface IPopulateCredentialsInput {\n  projectId: IUUID;\n}\n\nexport interface IPopulateCredentialsPayload {\n  message: string;\n}\n\nexport interface IPopulateServicesInput {\n  projectId: IUUID;\n  services: Array<string>;\n}\n\nexport interface IPopulateServicesPayload {\n  message: string;\n}\n\nexport interface IEmitionRequestInput {\n  serie: string;\n  quoteId: IUUID;\n  serviceId: IUUID;\n  makeCoverages?: boolean;\n}\n\nexport interface IEmissionCarPayload {\n  message: string;\n}\n\nexport interface IPrintEmitionRequestInput {\n  quoteId: IUUID;\n  serviceId: IUUID;\n}\n\nexport interface IPrintEmissionPayload {\n  message: string;\n}\n\nexport interface ICreateQuoteCoverageInput {\n  name?: string;\n  code?: string;\n  sumAssured?: string;\n  sumType?: string;\n  deductible?: string;\n  total?: string;\n  neto?: string;\n  priority: number;\n  quoteId: IUUID;\n}\n\nexport interface ICreateQuoteCoveragePayload {\n  quoteCoverage: IQuotationCoverage;\n}\n\nexport interface IUpdateQuoteCoverageInput {\n  quoteCoverageId: IUUID;\n  name?: string;\n  code?: string;\n  sumAssured?: string;\n  sumType?: string;\n  deductible?: string;\n  total?: string;\n  neto?: string;\n  priority?: number;\n  quoteId?: IUUID;\n}\n\nexport interface IUpdateQuoteCoveragePayload {\n  message: string;\n}\n\nexport interface IDeleteQuoteCoverageInput {\n  id: IUUID;\n}\n\nexport interface IDeleteQuoteCoveragePayload {\n  message: string;\n}\n\nexport interface IAssociationWithQuoterProfileInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  quoterProfileId: IUUID;\n}\n\nexport interface IAssociationWithQuoterProfilePayload {\n  message: string;\n}\n\nexport interface IUpdateQuoteInput {\n  quoteId: IUUID;\n  hiredSame?: boolean;\n  status?: IQuoteStatus;\n  firstName?: string;\n  lastName?: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  discount?: number;\n  coverage?: string;\n  primalTotal?: string;\n  deductible?: string;\n  typeFrecuency?: string;\n  firstPay?: string;\n  secondPay?: string;\n  plaque?: string;\n  compensationValue?: string;\n  serialNumber?: string;\n  hiredFirstName?: string;\n  hiredLastName?: string;\n  hiredPhone?: string;\n  hiredEmail?: string;\n  hiredAddress?: string;\n}\n\nexport interface IUpdateQuotePayload {\n  message: string;\n}\n\nexport interface ICreateInsurerCredentialInput {\n  insurerServiceId: IUUID;\n  projectId: IUUID;\n  conduit?: string;\n  username?: string;\n  password?: string;\n  rate?: string;\n  agent?: string;\n  group?: string;\n  deal?: string;\n  office?: string;\n  cprogram?: string;\n  default?: boolean;\n  active?: boolean;\n  extra?: string;\n  discount?: number;\n  owner?: string;\n  environment?: IServiceEnvironment;\n}\n\nexport interface ICreateInsurerCredentialPayload {\n  message: string;\n}\n\nexport interface IUpdateInsurerCredentialInput {\n  insurerServiceCredentialId: IUUID;\n  insurerServiceId: IUUID;\n  projectId: IUUID;\n  conduit?: string;\n  username?: string;\n  password?: string;\n  rate?: string;\n  agent?: string;\n  group?: string;\n  deal?: string;\n  office?: string;\n  cprogram?: string;\n  default?: boolean;\n  active?: boolean;\n  extra?: string;\n  discount?: number;\n  owner?: string;\n  environment?: IServiceEnvironment;\n}\n\nexport interface IUpdateInsurerCredentialPayload {\n  message: string;\n}\n\nexport interface IAssociationRelationCarInput {\n  qualitasCode: string;\n  forAssociationId: string;\n  insurer: IEnumInsurer;\n}\n\nexport const enum IEnumInsurer {\n  CHUBB = 'CHUBB',\n  ANA = 'ANA',\n  QUALITAS = 'QUALITAS',\n  GNP = 'GNP',\n  HDI = 'HDI',\n  POTOSI = 'POTOSI',\n  MAPFRE = 'MAPFRE',\n  ZURICH = 'ZURICH'\n}\n\nexport interface IAssociationRelationCarPayload {\n  message: string;\n}\n\nexport interface ICreateCoverageProjectInput {\n  projectId: IUUID;\n  insurerServiceCode: string;\n  insurerCoverageCode: string;\n  insurerPackages?: Array<IInsurerPackageStatus>;\n  sumAssured?: string;\n  sumType?: string;\n  deductible?: string;\n  prima?: string;\n  deductibleOptions?: Array<string>;\n  sumAssuredOptions?: Array<string>;\n  isActive: boolean;\n  visible?: boolean;\n  priority: number;\n}\n\nexport interface ICreateCoverageProjectPayload {\n  message: string;\n}\n\nexport interface IUpdateCoverageProjectInput {\n  projectId?: IUUID;\n  insurerServiceCode?: string;\n  insurerCoverageCode?: string;\n  insurerPackages?: Array<IInsurerPackageStatus>;\n  sumAssured?: string;\n  sumType?: string;\n  deductible?: string;\n  deductibleOptions?: Array<string>;\n  sumAssuredOptions?: Array<string>;\n  isActive?: boolean;\n  priority?: number;\n  ampliaAvailable?: boolean;\n  limitadaAvailable?: boolean;\n  rCAvailable?: boolean;\n}\n\nexport interface IUpdateCoverageProjectPayload {\n  message: string;\n}\n\nexport interface IUpdateBatchCoverageProjectInput {\n  newCoverage?: Array<ICreateCoverageProjectInput>;\n  zippedCoverage?: Array<IZippedCoverageProjectInput>;\n}\n\nexport interface IZippedCoverageProjectInput {\n  id: IUUID;\n  data?: IUpdateCoverageProjectInput;\n}\n\nexport interface IUpdateBatchCoverageProjectPayload {\n  message: string;\n}\n\nexport interface ICreateApiServiceInput {\n  projectId: IUUID;\n  label: string;\n  serviceCode: string;\n}\n\nexport interface ICreateApiServicePayload {\n  apiService: IApiService;\n}\n\nexport interface IUpdateApiServiceInput {\n  apiServiceId: IUUID;\n  label?: string;\n  serviceCode?: string;\n  expiration?: string;\n}\n\nexport interface IUpdateApiServicePayload {\n  message: string;\n}\n\nexport interface IDynamicCustomMetaInput {\n  dynamicSectionBlockId?: IUUID;\n  metaKey?: string;\n  metaType?: IMetaType;\n  label?: string;\n  description?: string;\n  position?: number;\n}\n\nexport interface IDynamicCustomMetaPayload {\n  dynamicCustomMeta: IDynamicCustomMeta;\n}\n\nexport interface IUpdateBatchDynamicCustomMetaInput {\n  new?: Array<IDynamicCustomMetaInput>;\n  zippedData?: Array<IDynamicCustomMetaZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IDynamicCustomMetaZippedInput {\n  id: IUUID;\n  customMeta: IDynamicCustomMetaInput;\n}\n\nexport interface IDynamicCustomValueInput {\n  memberId?: IUUID;\n  dynamicCustomMetaId?: IUUID;\n  value?: string;\n}\n\nexport interface IDynamicCustomValuePayload {\n  dynamicCustomValue: IDynamicCustomValue;\n}\n\nexport interface IUpdateBatchDynamicCustomValueInput {\n  new?: Array<IDynamicCustomValueInput>;\n  zippedData?: Array<IDynamicCustomValueZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IDynamicCustomValueZippedInput {\n  id: IUUID;\n  customValue: IDynamicCustomValueInput;\n}\n\nexport interface IDynamicPageInput {\n  label?: string;\n  name?: string;\n  projectId?: IUUID;\n}\n\nexport interface IDynamicPagePayload {\n  dynamicPage: IDynamicPage;\n}\n\nexport interface IDynamicBlockInput {\n  codeName?: string;\n  description?: string;\n  services?: string;\n  components?: string;\n  style?: string;\n}\n\nexport interface IDynamicBlockPayload {\n  dynamicBlock: IDynamicBlock;\n}\n\nexport interface IDynamicSectionInput {\n  position?: number;\n  isPrimary?: boolean;\n  dynamicPageId?: IUUID;\n}\n\nexport interface IDynamicSectionPayload {\n  dynamicSection: IDynamicSection;\n}\n\nexport interface IDynamicSectionBlockInput {\n  label?: string;\n  position?: number;\n  style?: string;\n  dynamicTabId?: IUUID;\n  dynamicBlockId?: IUUID;\n}\n\nexport interface IDynamicSectionBlockPayload {\n  dynamicSectionBlock: IDynamicSectionBlock;\n}\n\nexport interface IDynamicTabInput {\n  name?: string;\n  position?: number;\n  dynamicSectionId?: IUUID;\n}\n\nexport interface IDynamicTabPayload {\n  dynamicTab: IDynamicTab;\n}\n\nexport interface ICreateChargeInput {\n  projectId: IUUID;\n  eventId: IUUID;\n  memberId: IUUID;\n  total: IDecimal;\n}\n\nexport interface ICreateChargePayload {\n  message: string;\n}\n\nexport interface ICreateClinicHistoryInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventId: IUUID;\n  notes: string;\n  isVisible?: boolean;\n  position?: number;\n}\n\nexport interface ICreateClinicHistoryPayload {\n  message: string;\n}\n\nexport interface ICreateClinicHistoryMedicalBackgroundDetailInput {\n  projectId: IUUID;\n  medicalBackgrounDetailId: IUUID;\n  isYes: boolean;\n}\n\nexport interface ICreateClinicHistoryMedicalBackgroundDetailPayload {\n  message: string;\n}\n\nexport interface ICreateEventDetailInput {\n  memberId: IUUID;\n  projectId: IUUID;\n  eventId: IUUID;\n  subTotal: IDecimal;\n  descuento: IDecimal;\n  tax: IDecimal;\n  total: IDecimal;\n}\n\nexport interface ICreateEventDetailPayload {\n  message: string;\n}\n\nexport interface ICreateFisicExamInput {\n  projectId: IUUID;\n  eventId: IUUID;\n  memberId: IUUID;\n  isVisible?: boolean;\n  position?: number;\n  title?: string;\n  content: string;\n}\n\nexport interface ICreateFisicExamPayload {\n  message: string;\n}\n\nexport interface ICreateFormatInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventTypeId: IUUID;\n  nameFormat?: string;\n}\n\nexport interface ICreateFormatPayload {\n  format: IFormat;\n}\n\nexport interface ICreateMedicalBackgroundDetailInput {\n  medicalBackgroundId: IUUID;\n  label: string;\n  isOPtion: boolean;\n  isVisible: boolean;\n  backgroundTypesOption: IBackgroundTypesOptions;\n  position: number;\n}\n\nexport interface ICreateMedicalBackgroundDetailPayload {\n  message: string;\n}\n\nexport interface ICreateMedicalBackgroundInput {\n  projectId: IUUID;\n  formatId?: IUUID;\n  label: string;\n  position: number;\n  isVisible: boolean;\n}\n\nexport interface ICreateMedicalBackgroundPayload {\n  message: string;\n}\n\nexport interface ICreateMedicalConfigInput {\n  projectId: IUUID;\n  patologis: boolean;\n}\n\nexport interface ICreateMedicalConfigPayload {\n  message: string;\n}\n\nexport interface ICreateMedicalServiceInput {\n  projectId: IUUID;\n  state: boolean;\n  name: string;\n  serviceOption: IServiceOption;\n  cost: IDecimal;\n  imgroute: string;\n  description: string;\n}\n\nexport interface ICreateMedicalServicePaylod {\n  message: string;\n}\n\nexport interface ICreateMedicineInput {\n  projectId: IUUID;\n  eventId: IUUID;\n  memberId: IUUID;\n  medicineName: string;\n  take: string;\n  frecuency: string;\n  duration: string;\n}\n\nexport interface ICreateMedicinePayload {\n  message: string;\n}\n\nexport interface ICreateVaccineInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  nameVac: string;\n  position?: number;\n  dateAplicaction: string;\n  nextVac?: string;\n  notesVac?: string;\n}\n\nexport interface ICreateVaccinePayload {\n  message: string;\n}\n\nexport interface ICreateVitalSignsInput {\n  projectId: IUUID;\n  label: string;\n  position: number;\n  isVisible: boolean;\n}\n\nexport interface ICreateVitalSignsPayload {\n  message: string;\n}\n\nexport interface ICreateMedicRecipeInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  profesionalCell: string;\n  speciality: string;\n  institute: string;\n  electronicsign: string;\n  isCorrect: boolean;\n}\n\nexport interface ICreateMedicRecipePayload {\n  message: string;\n}\n\nexport interface ICreateRecipeConfigInput {\n  projectId: IUUID;\n  medicRecipeId: IUUID;\n  isActiveAllPacients: boolean;\n  isAccessDataPacient: boolean;\n}\n\nexport interface ICreateRecipeConfigPaylod {\n  message: string;\n}\n\nexport interface ICreateRegistSesionInput {\n  projectId: IUUID;\n  therapyId: IUUID;\n  namePacient: string;\n  terapist: string;\n  dateSesion: string;\n  comments: string;\n  title: string;\n  electronicsign: string;\n  legalType: boolean;\n}\n\nexport interface ICreateRegistSesionPayload {\n  message: string;\n}\n\nexport interface ICreatePacientNoteInput {\n  memberId: IUUID;\n  projectId: IUUID;\n  eventId: IUUID;\n  note?: string;\n}\n\nexport interface ICreatePacientNotePayload {\n  message: string;\n}\n\nexport interface ICreateTherapyInput {\n  projectId: IUUID;\n  eventId: IUUID;\n  memberId: IUUID;\n  content: string;\n  isVisible?: boolean;\n  position: number;\n  numSesion: IDecimal;\n}\n\nexport interface ICreateDiagnosticInput {\n  memberId: IUUID;\n  projectId: IUUID;\n  eventId: IUUID;\n  isVisible: boolean;\n  content: string;\n}\n\nexport interface ICreateDiagnosticPayload {\n  message: string;\n}\n\nexport interface ICreateConsultNoteInput {\n  memberId: IUUID;\n  projectId: IUUID;\n  eventId: IUUID;\n  isVisible: boolean;\n  note?: string;\n}\n\nexport interface ICreateConsultNotePayload {\n  message: string;\n}\n\nexport interface ICreateMedicalBackgroundSetInput {\n  medicalBackground?: IMedicalBackgroundInput;\n  medicalBackgroundDetail?: IMedicalBackgroundDetailInput;\n  clinicHistoryMedicalBackgroundDetail?: IClinicHistoryMedicalBackgroundDetailInput;\n}\n\nexport interface IMedicalBackgroundInput {\n  projectId: IUUID;\n  formatId?: IUUID;\n  format?: IFormatInput;\n  label?: string;\n  isVisible: boolean;\n  position: number;\n  pacientMedicalBackground?: IPacientMedicalBackgroundInput;\n  medicalBackgroundDetails: Array<IMedicalBackgroundDetailInput>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IFormatInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventTypeId: IUUID;\n  nameFormat?: string;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IPacientMedicalBackgroundInput {\n  medicalBackgroundDetailId: IUUID;\n  medicalBackgroundDetail: IMedicalBackgroundDetailInput;\n  projectId: IUUID;\n  memberId: IUUID;\n  eventId: IUUID;\n  text?: string;\n  isResponse?: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IMedicalBackgroundDetailInput {\n  projectId: IUUID;\n  medicalBackgroundId: IUUID;\n  medicalBackground: IMedicalBackgroundInput;\n  label: string;\n  backgroundTypeOption?: IBackgroundTypesOptions;\n  isOption?: boolean;\n  isVisible?: boolean;\n  position: number;\n  clinicHistoryMedicalBackgroundDetails?: Array<IClinicHistoryMedicalBackgroundDetailInput>;\n  pacientMedicalBackgrounds?: Array<IPacientMedicalBackgroundInput>;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IClinicHistoryMedicalBackgroundDetailInput {\n  medicalBackgroundDetailId: IUUID;\n  medicalBackgroundDetail: IMedicalBackgroundDetailInput;\n  backgroundType: IBackgroundTypesOptions;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICreateMedicalBackgroundSetPayload {\n  id: IUUID;\n}\n\nexport interface ICreateVitalSignsTemplateInput {\n  projectId: IUUID;\n}\n\nexport interface ICreatePacientMedicalBackgroundInput {\n  medicalBackgroundDetailId: IUUID;\n  projectId: IUUID;\n  memberId: IUUID;\n  eventId: IUUID;\n  text?: string;\n  isResponse?: boolean;\n}\n\nexport interface ICreatePacientMedicalBackgroundPaylod {\n  message: string;\n}\n\nexport interface ICreatePatientVitalSignsResponseInput {\n  vitalSignId: IUUID;\n  eventId: IUUID;\n  memberId: IUUID;\n  value?: IDecimal;\n}\n\nexport interface ICreatePatientVitalSignsResponsePayload {\n  message: string;\n}\n\nexport interface IUpdateChargeInput {\n  chargeId: IUUID;\n  total: IDecimal;\n}\n\nexport interface IUpdateChargePayload {\n  message: string;\n}\n\nexport interface IUpdateClinicHistoryInput {\n  clinicHistoryId: IUUID;\n  notes: string;\n  isVisible?: boolean;\n  position?: number;\n}\n\nexport interface IUpdateClinicHistoryPayloads {\n  message: string;\n}\n\nexport interface IUpdateClinicHistoryMedicalBackgroundDetailInput {\n  clinicHistoryMedicalBackgrounId: IUUID;\n  isYes: boolean;\n}\n\nexport interface IUpdateClinicHistoryMedicalBackgroundDetailPayload {\n  message: string;\n}\n\nexport interface IUpdateEventDetailInput {\n  eventId: IUUID;\n  subtotal: IDecimal;\n  descuento: IDecimal;\n  tax: IDecimal;\n  total: IDecimal;\n}\n\nexport interface IUpdateEventDetailtPayload {\n  message: string;\n}\n\nexport interface IUpdateFisicExamInput {\n  fisicalExamId: IUUID;\n  isVisible?: boolean;\n  title?: string;\n  content?: string;\n  position?: number;\n}\n\nexport interface IUpdateFisicExamPayload {\n  message: string;\n}\n\nexport interface IUpdateFormatInput {\n  formatId: IUUID;\n  eventTypeId: IUUID;\n  formatName?: string;\n}\n\nexport interface IUpdateFormatPayload {\n  message: string;\n}\n\nexport interface IUpdateMedicalBackgroundDetailInput {\n  medicalBackgroundDetailId: IUUID;\n  backgroundTypeOption: IBackgroundTypesOptions;\n  isOptional?: boolean;\n  isVisible?: boolean;\n  label: string;\n}\n\nexport interface IUpdateMedicalBackgroundDetailPayload {\n  message: string;\n}\n\nexport interface IUpdateMedicalBackgroundInput {\n  medicalBackgroundId: IUUID;\n  formatId?: IUUID;\n  isVisible?: boolean;\n  label?: string;\n}\n\nexport interface IUpdateMedicalBackgroundPayload {\n  message: string;\n}\n\nexport interface IUpdateMedicalConfigInput {\n  medicalConfigId: IUUID;\n  patologis?: boolean;\n}\n\nexport interface IUpdateMedicalConfigPayload {\n  message: string;\n}\n\nexport interface IUpdateMedicalServiceInput {\n  medicalServiceId: IUUID;\n  name?: string;\n  serviceOption?: IServiceOption;\n  state?: boolean;\n  cost: IDecimal;\n  imgRoute?: string;\n  description?: string;\n}\n\nexport interface IUpdateMedicalServicePayload {\n  message: string;\n}\n\nexport interface IUpdateMedicineInput {\n  medicineId: IUUID;\n  medicine?: string;\n  take?: string;\n  frecuency?: string;\n  duration?: string;\n}\n\nexport interface IUpdateMedicinePayload {\n  message: string;\n}\n\nexport interface IUpdateVaccineInput {\n  vaccineId: IUUID;\n  dateAplicationVac?: string;\n  nextVac?: string;\n  position?: number;\n  nameVac?: string;\n  notesVac?: string;\n}\n\nexport interface IUpdateVaccinePayload {\n  message: string;\n}\n\nexport interface IUpdateVitalSingsInput {\n  vitalSingsId: IUUID;\n  label?: string;\n  position?: number;\n  isVisible?: boolean;\n}\n\nexport interface IUpdateVitalSingsPayloads {\n  message: string;\n}\n\nexport interface IUpdateMedicRecipeInput {\n  medicRecipeId: IUUID;\n  isCorrect?: boolean;\n  profesionalCell: string;\n  speciality: string;\n  institute: string;\n  electronicSing: string;\n}\n\nexport interface IUpdateMedicRecipePayload {\n  message: string;\n}\n\nexport interface IUpdateRecipeConfigInput {\n  recipeConfigId: IUUID;\n  isActiveAllPacients: boolean;\n  isAccessDataPacient: boolean;\n}\n\nexport interface IUpdateRecipeConfigPayload {\n  message: string;\n}\n\nexport interface IUpdateRegistSesionInput {\n  registSesionId: IUUID;\n  title: string;\n  electronicSing: string;\n  legalType: boolean;\n  dateSesion: string;\n  namePacient: string;\n  terapist: string;\n  comments: string;\n}\n\nexport interface IUpdateRegistSesionPayload {\n  message: string;\n}\n\nexport interface IUpdatePacientNoteInput {\n  pacientNoteId: IUUID;\n  note?: string;\n}\n\nexport interface IUpdatePacientNotePayload {\n  message: string;\n}\n\nexport interface IUpdateTherapyInput {\n  therapyId: IUUID;\n  numSesion: IDecimal;\n  content: string;\n  isVisible?: boolean;\n  position: number;\n}\n\nexport interface IUpdateTherapyPayload {\n  message: string;\n}\n\nexport interface IUpdateDiagnosticInput {\n  diagnosticId: IUUID;\n  content?: string;\n}\n\nexport interface IUpdateDiagnosticPayload {\n  message: string;\n}\n\nexport interface IUpdateConsultNoteInput {\n  consultNoteId: IUUID;\n  isVisible?: boolean;\n  note?: string;\n}\n\nexport interface IUpdateConsultNotePayload {\n  message: string;\n}\n\nexport interface IUpdatePacientMedicalBackgroundInput {\n  pacientMedicalBackgroundId: IUUID;\n  isResponse?: boolean;\n  text?: string;\n}\n\nexport interface IUpdatePacientMedicalBackgroundPayload {\n  message: string;\n}\n\nexport interface IUpdateBillingRequestInput {\n  billingRequestId: IUUID;\n  status: boolean;\n  billingUrl: string;\n  emailContent: string;\n  cP?: string;\n  socialReason?: string;\n  rfc?: string;\n  cFDI?: string;\n  socialRegiment?: string;\n  email?: string;\n}\n\nexport interface IUpdateBillingRequestPayload {\n  message: string;\n}\n\nexport interface IUpdateSortFormatInput {\n  formatId: IUUID;\n  positions: Array<IPositionsDtoInput>;\n}\n\nexport interface IPositionsDtoInput {\n  medicalBackgroundId: IUUID;\n  position: number;\n}\n\nexport interface IUpdateSortFormatPayload {\n  message: string;\n}\n\nexport interface IUpdatePatientVitalSignsResponseInput {\n  patientVitalSingResponseId: IUUID;\n  value?: IDecimal;\n}\n\nexport interface IUpdatePatientVitalSignsResponsePayloads {\n  message: string;\n}\n\nexport interface IDeleteChargeInput {\n  chargeId: IUUID;\n}\n\nexport interface IDeleteChargePayload {\n  message: string;\n}\n\nexport interface IDeleteClinicHistoryInput {\n  clinicHistoryId: IUUID;\n}\n\nexport interface IDeleteClinicHistoryPayload {\n  message: string;\n}\n\nexport interface IDeleteClinicHistoryMedicalBackgroundDetailInput {\n  clinicMedicalBackgroundId: IUUID;\n}\n\nexport interface IDeleteClinicHistoryMedicalBackgroundDetailPayload {\n  message: string;\n}\n\nexport interface IDeleteConsultInput {\n  eventId: IUUID;\n}\n\nexport interface IDeleteConsultPayload {\n  message: string;\n}\n\nexport interface IDeleteFisicalExamInput {\n  fisicalExamId: IUUID;\n}\n\nexport interface IDeleteFisicalExamPayload {\n  message: string;\n}\n\nexport interface IDeleteMedicalBackgroundDetailInput {\n  medicalBackgroundDetailId: IUUID;\n}\n\nexport interface IDeleteMedicalBackgroundDetailPayload {\n  message: string;\n}\n\nexport interface IDeleteMedicalBackgroundInput {\n  medicalBackgroundId: IUUID;\n}\n\nexport interface IDeleteMedicalBackgroundPayload {\n  message: string;\n}\n\nexport interface IDeleteMedicalConfigInput {\n  medicalConfigId: IUUID;\n}\n\nexport interface IDeleteMedicalConfigPayload {\n  message: string;\n}\n\nexport interface IDeleteMedicalServiceinputInput {\n  medicalServiceId: IUUID;\n}\n\nexport interface IDeleteMedicalServicePayload {\n  message: string;\n}\n\nexport interface IDeleteMedicineinputInput {\n  medicineId: IUUID;\n}\n\nexport interface IDeleteMedicinePayload {\n  message: string;\n}\n\nexport interface IDeleteVaccineinputInput {\n  vaccineId: IUUID;\n}\n\nexport interface IDeleteVaccinePayload {\n  message: string;\n}\n\nexport interface IDeleteVitalSignInput {\n  vitalSignId: IUUID;\n}\n\nexport interface IDeleteVitalSignPayload {\n  message: string;\n}\n\nexport interface IDeleteMedicRecipeinputInput {\n  medicRecipeId: IUUID;\n}\n\nexport interface IDeleteMedicRecipePayload {\n  message: string;\n}\n\nexport interface IDeleteRecipeConfiginputInput {\n  recipeConfigId: IUUID;\n}\n\nexport interface IDeleteRecipeConfigPayload {\n  message: string;\n}\n\nexport interface IDeleteRegisSesioninputInput {\n  recipeSesionId: IUUID;\n}\n\nexport interface IDeleteRegistSesionPayload {\n  message: string;\n}\n\nexport interface IDeleteTherapyinputInput {\n  therapyId: IUUID;\n}\n\nexport interface IDeleteTherapyPayload {\n  message: string;\n}\n\nexport interface IDeleteDiagnosticInput {\n  diagnosticId: IUUID;\n}\n\nexport interface IDeleteDiagnosticPayload {\n  message: string;\n}\n\nexport interface IDeleteConsultNoteInput {\n  consultNoteId: IUUID;\n}\n\nexport interface IDeleteConsultNotePayload {\n  message: string;\n}\n\nexport interface IDeletePacientNoteInput {\n  pacientNoteId: IUUID;\n}\n\nexport interface IDeletePacientNotePayload {\n  message: string;\n}\n\nexport interface IDeletePacientMedicalBackgroundInput {\n  pacientMedicalBackgroundId: IUUID;\n}\n\nexport interface IDeletePacientMedicalBackgroundPayload {\n  message: string;\n}\n\nexport interface IDeleteBillingRequestinputInput {\n  billingRequestId: IUUID;\n}\n\nexport interface IDeleteBillingRequestPayload {\n  message: string;\n}\n\nexport interface IDeleteFormatInput {\n  formatId: IUUID;\n}\n\nexport interface IDeleteFormatPayload {\n  message: string;\n}\n\nexport interface ICreatePdfInput {\n  pdfName: string;\n  pdfType: IPdfType;\n  eventId: IUUID;\n  patientId: IUUID;\n  doctorId: IUUID;\n}\n\nexport const enum IPdfType {\n  MEDICRECIPE = 'MEDICRECIPE',\n  PRESCRIPTION_THERAPY = 'PRESCRIPTION_THERAPY',\n  CONSULT = 'CONSULT',\n  BACKGROUND = 'BACKGROUND'\n}\n\nexport interface ICreatePDFPayload {\n  base64: string;\n}\n\nexport interface IBulkWorkSpaceInput {\n  spaceId: IUUID;\n  url: string;\n}\n\nexport interface IOrderingMemberBoardInput {\n  memberId: IUUID;\n  boardId: IUUID;\n  relatable?: boolean;\n}\n\nexport interface IOrderingMemberBoardPayload {\n  memberBoard: Array<IMemberBoard>;\n}\n\nexport interface ISpaceInput {\n  name?: string;\n  description?: string;\n  image?: string;\n  projectId?: IUUID;\n  active?: boolean;\n  visibility?: IEnumVisibility;\n  areaId?: IUUID;\n}\n\nexport interface ISpacePayload {\n  space: ISpace;\n}\n\nexport interface IUpdateBatchMemberSpaceInput {\n  new?: Array<IMemberSpaceInput>;\n  zippedData?: Array<IMemberSpaceZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IMemberSpaceInput {\n  memberId: IUUID;\n  spaceId: IUUID;\n  outstading?: boolean;\n  active?: boolean;\n  order?: number;\n  access?: IEnumSpaceAccess;\n  sendDetails?: boolean;\n}\n\nexport interface IMemberSpaceZippedInput {\n  id: IUUID;\n  memberSpace: IMemberSpaceInput;\n}\n\nexport interface IMemberSpacePayload {\n  memberSpace: IMemberSpace;\n}\n\nexport interface IBoardStatusInput {\n  name: string;\n  description?: string;\n  color?: string;\n  code?: string;\n  active?: boolean;\n  projectId?: IUUID;\n  boardId?: IUUID;\n}\n\nexport interface IBoardStatusPayload {\n  boardStatus: IBoardStatus;\n}\n\nexport interface IUpdateBatchMemberBoardInput {\n  new?: Array<IMemberBoardInput>;\n  zippedData?: Array<IMemberBoardZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IMemberBoardInput {\n  memberId: IUUID;\n  boardId: IUUID;\n  outstading?: boolean;\n  active?: boolean;\n  sendDetails?: boolean;\n  order?: number;\n}\n\nexport interface IMemberBoardZippedInput {\n  id: IUUID;\n  memberBoard: IMemberBoardInput;\n}\n\nexport interface IBoardInput {\n  name?: string;\n  description?: string;\n  active?: boolean;\n  spaceId?: IUUID;\n  serviceId?: IUUID;\n  order?: number;\n  color?: string;\n  cascadeCreate?: boolean;\n}\n\nexport interface IBoardPayload {\n  board: IBoard;\n}\n\nexport interface IBoardListInput {\n  name?: string;\n  description?: string;\n  order?: number;\n  color?: string;\n  active?: boolean;\n  boardId?: IUUID;\n  cascadeCreate?: boolean;\n}\n\nexport interface IBoardListPayload {\n  board: IBoardList;\n}\n\nexport interface IUpdateBatchBoardListInput {\n  new?: Array<IBoardListInput>;\n  zippedData?: Array<IBoardListZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IBoardListZippedInput {\n  id: IUUID;\n  boardListInput: IBoardListInput;\n}\n\nexport interface IBoardGroupColumnInput {\n  name?: string;\n  order?: number;\n  boardListId?: IUUID;\n  boardColumnTypeId?: IUUID;\n  cascadeCreate?: boolean;\n}\n\nexport interface IBoardGroupColumnPayload {\n  boardGroupColumn: IBoardGroupColumn;\n}\n\nexport interface IUpdateBatchBoardGroupColumnInput {\n  new?: Array<IBoardGroupColumnInput>;\n  zippedData?: Array<IBoardGroupColumnZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IBoardGroupColumnZippedInput {\n  id: IUUID;\n  boardGroupInput: IBoardGroupColumnInput;\n}\n\nexport interface IBoardColumnTypeInput {\n  name?: string;\n  description?: string;\n  active?: boolean;\n  dataType?: string;\n  projectId?: IUUID;\n  insideType?: IEnumInsideType;\n}\n\nexport interface IBoardColumnTypePayload {\n  boardColumnType: IBoardColumnType;\n}\n\nexport interface IBoardColumnValueInput {\n  value?: string;\n  boardGroupColumnId?: IUUID;\n  boardRowId?: IUUID;\n  boardMemberReferenceInput?: Array<IBoardMemberReferenceInput>;\n  cascadeCreate?: boolean;\n}\n\nexport interface IBoardMemberReferenceInput {\n  memberId?: IUUID;\n  description?: string;\n  active?: boolean;\n  boardColumnValueId?: IUUID;\n}\n\nexport interface IBoardColumnValuePayload {\n  boardColumnValue: IBoardColumnValue;\n}\n\nexport interface ICardColumnValueInput {\n  cardId: IUUID;\n  boardColumnValueId: IUUID;\n}\n\nexport interface ICardColumnValuePayload {\n  cardColumnValue: ICardColumnValue;\n}\n\nexport interface IBoardMemberReferencePayload {\n  boardMemberReference: IBoardMemberReference;\n}\n\nexport interface IBoardRowForResourceQuoteInput {\n  title: string;\n  areaId: IUUID;\n  serviceId: IUUID;\n  password: string;\n}\n\nexport interface IBoardRowPayload {\n  boardRow: IBoardRow;\n}\n\nexport interface IBoardRowInput {\n  title?: string;\n  description?: string;\n  order?: number;\n  active?: boolean;\n  boardListId?: IUUID;\n  cascadeCreate?: boolean;\n}\n\nexport interface IUpdateBatchBoardRowInput {\n  new?: Array<IBoardRowInput>;\n  zippedData?: Array<IBoardRowZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface IBoardRowZippedInput {\n  id: IUUID;\n  boardRowInput: IBoardRowInput;\n}\n\nexport interface ICardInput {\n  name?: string;\n  description?: string;\n  active?: boolean;\n  progress?: IProgress;\n  priority?: IPriority;\n  boardListId?: IUUID;\n  projectId?: IUUID;\n  startDate?: IDateTime;\n  endDate?: IDateTime;\n  boardStatusId?: IUUID;\n}\n\nexport interface ICardPayload {\n  card: ICard;\n}\n\nexport interface ICardChecklistInput {\n  name?: string;\n  cardId?: IUUID;\n}\n\nexport interface ICardChecklistPayload {\n  cardChecklist: ICardChecklist;\n}\n\nexport interface IUpdateBatchCardCheckComponentInput {\n  new?: Array<ICardCheckComponentInput>;\n  zippedData?: Array<ICardCheckComponentZippedInput>;\n  deleteable?: Array<IUUID>;\n}\n\nexport interface ICardCheckComponentInput {\n  description?: string;\n  cardChecklistId?: IUUID;\n  order?: number;\n  selected?: boolean;\n}\n\nexport interface ICardCheckComponentZippedInput {\n  id: IUUID;\n  cardCheckComponentInput: ICardCheckComponentInput;\n}\n\nexport interface ICardCheckComponentPayload {\n  cardCheckComponent: ICardCheckComponent;\n}\n\nexport interface ICardReplyInput {\n  description?: string;\n  active?: boolean;\n  cardId?: IUUID;\n}\n\nexport interface ICardReplyPayload {\n  cardReply: ICardReply;\n}\n\nexport interface INestedFilesInput {\n  name?: string;\n  show?: boolean;\n  url?: string;\n  cardId?: IUUID;\n}\n\nexport interface INestedFilesPayload {\n  nestedFile: INestedFile;\n}\n\nexport interface IMemberCardInput {\n  cardId: IUUID;\n  memberId: IUUID;\n  active?: boolean;\n}\n\nexport interface IMemberCardPayload {\n  memberCard: IMemberCard;\n}\n\nexport interface IMemberBoardPayload {\n  memberBoard: IMemberBoard;\n}\n\nexport interface IDeleteMeasureInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMeasurePayload {\n  message: string;\n}\n\nexport interface IUpdateMeasureInput {\n  id: IUUID;\n  name?: string;\n  abbreviation?: string;\n}\n\nexport interface IUpdateMeasurePayload {\n  message: string;\n}\n\nexport interface IDeleteMaterialCategoryInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMaterialCategoryPayload {\n  message: string;\n}\n\nexport interface ICreateMeasureValueInput {\n  measureId: IUUID;\n  materialId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateMeasureValuePayload {\n  measureValue: IMeasureValue;\n}\n\nexport interface IUpdateMeasureValueInput {\n  measureValueId: IUUID;\n  materialId?: IUUID;\n  measureId?: IUUID;\n}\n\nexport interface IUpdateMeasureValuePayload {\n  message: string;\n}\n\nexport interface IDeleteMeasureValueInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMeasureValuePayload {\n  message: string;\n}\n\nexport interface IDeleteMeasureUnityTwoInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMeasureUnityTwoPayload {\n  message: string;\n}\n\nexport interface IUpdateModuleInput {\n  id: IUUID;\n  moduleName?: string;\n  descModule?: string;\n  moduleCategoryId?: IUUID;\n}\n\nexport interface IUpdateModulePayload {\n  message: string;\n}\n\nexport interface ICreateMaterialQuotationInput {\n  moduleQuotationId: IUUID;\n  materialId: IUUID;\n  materialModuleId: IUUID;\n  materialCombinationId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateMaterialQuotationPayload {\n  materialQuotation: IMaterialQuotation;\n}\n\nexport interface IUpdateMaterialQuotationInput {\n  id: IUUID;\n  moduleQuotationId?: IUUID;\n  materialId?: IUUID;\n  materialModuleId?: IUUID;\n  materialCombinationId?: IUUID;\n}\n\nexport interface IUpdateMaterialQuotationPayload {\n  message: string;\n}\n\nexport interface IDeleteMaterialQuotationInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMaterialQuotationPayload {\n  message: string;\n}\n\nexport interface ICreateMaterialModuleInput {\n  moduleId: IUUID;\n  materialCategoryId: IUUID;\n  projectId: IUUID;\n  materialId: IUUID;\n  formule: string;\n  formuleOpe: string;\n  variables?: string;\n}\n\nexport interface ICreateMaterialModulePayload {\n  materialModule: IMaterialModule;\n}\n\nexport interface IUpdateMaterialModuleInput {\n  id: IUUID;\n  moduleId?: IUUID;\n  materialCategoryId?: IUUID;\n  materialId?: IUUID;\n  formule?: string;\n  formuleOpe?: string;\n  variables?: string;\n}\n\nexport interface IUpdateMaterialModulePayload {\n  message: string;\n}\n\nexport interface IDeleteMaterialModuleInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMaterialModulePayload {\n  message: string;\n}\n\nexport interface ICreateUserCustomerInput {\n  memberId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateUserCustomerPayload {\n  userCustomer: IUserCustomer;\n}\n\nexport interface ICreateMeasureUnityInput {\n  name: string;\n  abbreviation: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateMeasureUnityPayload {\n  measureUnity: IMeasureUnity;\n}\n\nexport interface IUpdateMeasureUnityInput {\n  id: IUUID;\n  name?: string;\n  abbreviation: string;\n}\n\nexport interface IUpdateMeasureUnityPayload {\n  message: string;\n}\n\nexport interface IDeleteMeasureUnityInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMeasureUnityPayload {\n  message: string;\n}\n\nexport interface ICreateAttributeInput {\n  value: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateAttributePayload {\n  attribute: IAttribute;\n}\n\nexport interface ICreateAttributeValueInput {\n  value: string;\n  attributeId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateAttributeValuePayload {\n  attributeValue: IAttributeValue;\n}\n\nexport interface ICreateBuildingSiteAddressInput {\n  quotationId: IUUID;\n  countryId: IUUID;\n  stateId: IUUID;\n  street: string;\n  externalNumber: string;\n  internalNumber: string;\n  colony: string;\n  municipality: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateBuildingSiteAddressPayload {\n  buildingSiteAddress: IBuildingSiteAddress;\n}\n\nexport interface ICreateMadreQuotationInput {\n  memberId: IUUID;\n  userCustomerId: IUUID;\n  folio: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateMadreQuotationPayload {\n  madreQuotation: IMadreQuotation;\n}\n\nexport interface ICreateMaterialCategoryInput {\n  name: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateMaterialCategoryPayload {\n  materialCategory: IMaterialCategory;\n}\n\nexport interface ICreateMaterialCombinationInput {\n  materialId: IUUID;\n  provCode: string;\n  intCode: string;\n  price: number;\n  projectId: IUUID;\n}\n\nexport interface ICreateMaterialCombinationPayload {\n  materialCombination: IMaterialCombination;\n}\n\nexport interface ICreateMaterialInput {\n  measureUnityId: IUUID;\n  materialCategoryId: IUUID;\n  name: string;\n  provCode: string;\n  intCode: string;\n  descMaterial: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateMaterialPayload {\n  material: IMaterial;\n}\n\nexport interface ICreateMaterialStockMeasureInput {\n  materialStockId: IUUID;\n  quotationId: IUUID;\n  value: number;\n  formule: string;\n  isActive: boolean;\n  quotationIdUsed: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateMaterialStockMeasurePayload {\n  materialStockMeasure: IMaterialStockMeasure;\n}\n\nexport interface ICreateMaterialStockInput {\n  materialId: IUUID;\n  materialCombinationId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateMaterialStockPayload {\n  materialStock: IMaterialStock;\n}\n\nexport interface ICreateMaterialVariableQuotationInput {\n  materialQuotationId: IUUID;\n  variableId: IUUID;\n  value: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateMaterialVariableQuotationPayload {\n  materialVariableQuotation: IMaterialVariableQuotation;\n}\n\nexport interface ICreateMeasureInput {\n  name: string;\n  abbreviation: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateMeasurePayload {\n  measure: IMeasure;\n}\n\nexport interface ICreateMeasureTwoInput {\n  measureUnityId: IUUID;\n  measureId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateMeasureTwoPayload {\n  measureUnityTwo: IMeasureUnityTwo;\n}\n\nexport interface ICreateModuleCategoryInput {\n  name: string;\n  descCategory: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateModuleCategoryPayload {\n  moduleCategory: IModuleCategory;\n}\n\nexport interface ICreateModuleInput {\n  moduleName: string;\n  descModule: string;\n  moduleCategoryId: IUUID;\n  materialIds: Array<IUUID>;\n  materialCategories: Array<IUUID>;\n  formulas: Array<string>;\n  formulasOpe: Array<string>;\n  variables: Array<string>;\n  projectId: IUUID;\n}\n\nexport interface ICreateModulePayload {\n  module: IModule;\n}\n\nexport interface ICreateQuotationInput {\n  madreQuotationId: IUUID;\n  buildingSiteName: string;\n  folio: string;\n  isOptimized: boolean;\n  memberId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateQuotationPayload {\n  quotation: IQuotation;\n}\n\nexport interface ICreateQuotationModuleInput {\n  quotationId: IUUID;\n  moduleCategoryId: IUUID;\n  moduleId: IUUID;\n  quantity: number;\n  price: number;\n  image: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateQuotationModulePayload {\n  quotationModule: IQuotationModule;\n}\n\nexport interface ICreateVariableInput {\n  value: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateVariablePayload {\n  variable: IVariable;\n}\n\nexport interface IDeleteAttributeInput {\n  id: IUUID;\n}\n\nexport interface IDeleteAttributePayload {\n  message: string;\n}\n\nexport interface IDeleteAttributeValueInput {\n  id: IUUID;\n}\n\nexport interface IDeleteAttributeValuePayload {\n  message: string;\n}\n\nexport interface IDeleteBuildingSiteAddresInput {\n  id: IUUID;\n}\n\nexport interface IDeleteBuildingSiteAddressPayload {\n  message: string;\n}\n\nexport interface IDeleteMaterialCombinationInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMaterialCombinationPayload {\n  message: string;\n}\n\nexport interface IDeleteMaterialInput {\n  materialId: IUUID;\n}\n\nexport interface IDeleteMaterialPayload {\n  message: string;\n}\n\nexport interface IDeleteMaterialStockInput {\n  materialStockId: IUUID;\n}\n\nexport interface IDeleteMaterialStockPayload {\n  message: string;\n}\n\nexport interface IDeleteMaterialStockMeasureInput {\n  materialStockMeasureId: IUUID;\n}\n\nexport interface IDeleteMaterialStockMeasurePayload {\n  message: string;\n}\n\nexport interface IDeleteMaterialVariableQuotationInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMaterialVariableQuotationPayload {\n  message: string;\n}\n\nexport interface IDeleteModuleCategoryInput {\n  id: IUUID;\n}\n\nexport interface IDeleteModuleCategoryPayload {\n  message: string;\n}\n\nexport interface IDeleteModuleInput {\n  id: IUUID;\n}\n\nexport interface IDeleteModulePayload {\n  message: string;\n}\n\nexport interface IDeleteQuotationModuleInput {\n  id: IUUID;\n}\n\nexport interface IDeleteQuotationModulePayload {\n  message: string;\n}\n\nexport interface IDeleteQuotationInput {\n  quotationId: IUUID;\n}\n\nexport interface IDeleteQuotationPayload {\n  message: string;\n}\n\nexport interface IDeleteVariableInput {\n  variableId: IUUID;\n}\n\nexport interface IDeleteVariablePayload {\n  message: string;\n}\n\nexport interface IUpdateAttributeInput {\n  attributeId: IUUID;\n  value: string;\n}\n\nexport interface IUpdateAttributePayload {\n  message: string;\n}\n\nexport interface IUpdateAttributeValueInput {\n  id: IUUID;\n  value: string;\n}\n\nexport interface IUpdateAttributeValuePayload {\n  message: string;\n}\n\nexport interface IUpdateBuildingSiteAddressInput {\n  buildingSiteAddressId: IUUID;\n  quotationId?: IUUID;\n  countryId?: IUUID;\n  stateId?: IUUID;\n  street?: string;\n  externalNumber?: string;\n  internalNumber?: string;\n  colony?: string;\n  municipality?: string;\n}\n\nexport interface IUpdateBuildingSiteAddressPayload {\n  message: string;\n}\n\nexport interface IUpdateMaterialCategoryInput {\n  id: IUUID;\n  name: string;\n}\n\nexport interface IUpdateMaterialCategoryPayload {\n  message: string;\n}\n\nexport interface IUpdateMaterialCombinationInput {\n  materialCombinationId: IUUID;\n  materialId?: IUUID;\n  provCode?: string;\n  intCode?: string;\n  price?: number;\n}\n\nexport interface IUpdateMaterialCombinationPayload {\n  message: string;\n}\n\nexport interface IUpdateMaterialInput {\n  materialId: IUUID;\n  measureUnityId?: IUUID;\n  materialCategoryId?: IUUID;\n  name?: string;\n  provCode?: string;\n  intCode?: string;\n  descMaterial?: string;\n}\n\nexport interface IUpdateMaterialPayload {\n  message: string;\n}\n\nexport interface IUpdateMaterialStockMeasureInput {\n  materialStockMeasureId: IUUID;\n  materialStockId?: IUUID;\n  quotationId?: IUUID;\n  value?: number;\n  formule?: string;\n  isActive?: boolean;\n  quotationIdUsed?: IUUID;\n}\n\nexport interface IUpdateMaterialStockMeasurePayload {\n  message: string;\n}\n\nexport interface IUpdateMaterialStockInput {\n  materialStockId: IUUID;\n  materialId?: IUUID;\n  materialCombinationId?: IUUID;\n}\n\nexport interface IUpdateMaterialStockPayload {\n  message: string;\n}\n\nexport interface IUpdateMadreQuotationInput {\n  id: IUUID;\n  memberId?: IUUID;\n  folio?: string;\n}\n\nexport interface IUpdateMadreQuotationPayload {\n  message: string;\n}\n\nexport interface IDeleteMadreQuotationInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMadreQuotationPayload {\n  message: string;\n}\n\nexport interface IUpdateMaterialVariableQuotationInput {\n  materialVariableQuoationId: IUUID;\n  materialQuotationId?: IUUID;\n  variableId?: IUUID;\n  value?: string;\n}\n\nexport interface IUpdateMaterialVariableQuotationPayload {\n  message: string;\n}\n\nexport interface IUpdateMeasureUnityTwoInput {\n  measureUnityTwoId: IUUID;\n  measureUnityId?: IUUID;\n  measureId?: IUUID;\n}\n\nexport interface IUpdateMeasureUnityTwoPayload {\n  message: string;\n}\n\nexport interface IUpdateModuleCategoryInput {\n  id: IUUID;\n  name?: string;\n  descCategory?: string;\n}\n\nexport interface IUpdateModuleCategoryPayload {\n  message: string;\n}\n\nexport interface IUpdateQuotationModuleInput {\n  quotationModuleId: IUUID;\n  quotationId?: IUUID;\n  moduleCategoryId?: IUUID;\n  moduleId?: IUUID;\n  quantity?: number;\n  price?: number;\n  image?: string;\n}\n\nexport interface IUpdateQuotationModulePayload {\n  message: string;\n}\n\nexport interface IUpdateQuotationInput {\n  quotationId: IUUID;\n  madreQuotationId?: IUUID;\n  buildingSiteName?: string;\n  folio?: string;\n  isOptimized?: boolean;\n}\n\nexport interface IUpdateQuotationPayload {\n  message: string;\n}\n\nexport interface IUpdateVariableInput {\n  variableId: IUUID;\n  value: string;\n}\n\nexport interface IUpdateVariablePayload {\n  message: string;\n}\n\nexport interface IUpdateAnalysisInput {\n  id: number;\n  advisedSalePriceWithKm?: number;\n  advisedBuyingPriceWithKm?: number;\n  damage?: number;\n}\n\nexport interface IUpdateAnalysisPayload {\n  analysis: IAnalysisCarMercadoHermer;\n}\n\nexport interface ICreateClientInput {\n  firstName?: string;\n  lastName?: string;\n  phone?: string;\n  email?: string;\n}\n\nexport interface ICreateClientPayload {\n  client: IClientHermer;\n}\n\nexport interface IUpdateClientInput {\n  id: number;\n  firstName: string;\n  lastName: string;\n  phone: string;\n  email: string;\n}\n\nexport interface IUpdateClientPayload {\n  client: IClientHermer;\n}\n\nexport interface ICreateConsultInput {\n  clientId: number;\n  vinNum: string;\n  milage: number;\n  valuador: string;\n  brand: string;\n  model: string;\n  year: number;\n  properties: Array<string>;\n  lobatoId: number;\n  appraisal?: string;\n}\n\nexport interface ICreateConsultPayload {\n  consult: IConsultHermer;\n}\n\nexport interface IUpdateConsultInput {\n  id: number;\n  properties: Array<string>;\n}\n\nexport interface IUpdateConsultPayload {\n  consult: IConsultHermer;\n}\n\nexport interface ICreateComparedInput {\n  consultId: number;\n  brand: string;\n  model: string;\n  year: number;\n  properties: Array<string>;\n  lobatoId: number;\n}\n\nexport interface ICreateComparedPayload {\n  compared: IComparedHermer;\n}\n\nexport interface IUpdateComparedInput {\n  id: number;\n  properties: Array<string>;\n}\n\nexport interface IUpdateComparedPayload {\n  compared: IComparedHermer;\n}\n\nexport interface IDeleteComparedInput {\n  id: number;\n}\n\nexport interface IDeleteComparedPayload {\n  message: string;\n}\n\nexport interface ICreateCarMercadoInput {\n  consultId?: number;\n  comparedId?: number;\n  manualDevaluation: number;\n  mercadolibreIds: Array<string>;\n}\n\nexport interface ICreateCarMercadoPayload {\n  carMercado: ICarMercadoHermer;\n}\n\nexport interface ICreateCarMercadoMassiveInput {\n  consultId: number;\n  manualDevaluation: number;\n  mercadolibreIds: Array<string>;\n  compareds: Array<IComparedMassiveInput>;\n}\n\nexport interface IComparedMassiveInput {\n  comparedId: number;\n  manualDevaluation: number;\n  mercadolibreIds: Array<string>;\n}\n\nexport interface ICreateCarMercadoMassivePayload {\n  carMercado: Array<ICarMercadoHermer>;\n}\n\nexport interface IDeleteCarMercadoInput {\n  id: number;\n}\n\nexport interface IDeleteCarMercadoPayload {\n  message: string;\n}\n\nexport interface IZipFolderContentInput {\n  folderId: IUUID;\n}\n\nexport interface IZipFolderContentPayload {\n  fileUrl: string;\n}\n\nexport interface IFolderInput {\n  parentId?: IUUID;\n  projectId: IUUID;\n  memberId: IUUID;\n  isOutstanding?: boolean;\n  folderType?: string;\n  path?: string;\n  label: string;\n  background?: string;\n}\n\nexport interface IFolderPayload {\n  message: string;\n}\n\nexport interface IDeleteFolderMutationInput {\n  folderId: IUUID;\n}\n\nexport interface IDeleteFolderPayLoad {\n  message: string;\n}\n\nexport interface ICreateFileInput {\n  folderId?: IUUID;\n  projectId?: IUUID;\n  memberId?: IUUID;\n  name?: string;\n  url: string;\n  description?: string;\n}\n\nexport interface ICreateFilePayload {\n  message: string;\n}\n\nexport interface IUpdateFilesInput {\n  fileId: IUUID;\n  isOutstanding?: boolean;\n  name?: string;\n  url?: string;\n  description?: string;\n}\n\nexport interface IUpdateFilesPayload {\n  message: string;\n}\n\nexport interface IDeleteFileMutationInput {\n  fileId: IUUID;\n}\n\nexport interface IDeleteFilePayLoad {\n  message: string;\n}\n\nexport interface IShareFileInput {\n  memberIds: Array<IUUID>;\n  fileId: IUUID;\n}\n\nexport interface IShareFilePayload {\n  sharedFile: Array<ISharedFile>;\n}\n\nexport interface IShareFolderInput {\n  memberIds: Array<IUUID>;\n  folderId: IUUID;\n}\n\nexport interface IShareFolderPayload {\n  sharedFolders: Array<ISharedFolder>;\n}\n\nexport interface IStopSharingFolderInput {\n  memberIds: Array<IUUID>;\n  folderId?: IUUID;\n}\n\nexport interface IStopSharingFolderPayload {\n  message: string;\n}\n\nexport interface IStopSharingFileInput {\n  memberIds: Array<IUUID>;\n  fileId: IUUID;\n}\n\nexport interface IStopSharingFilePayload {\n  message: string;\n}\n\nexport interface IUploadFilePrivateInput {\n  projectId: IUUID;\n  folderId?: IUUID;\n  memberId?: IUUID;\n  name?: string;\n  fileName: string;\n  description?: string;\n  isProfile: boolean;\n}\n\nexport interface IUploadFilePrivatePayload {\n  fileId: IUUID;\n  url: string;\n  message: string;\n  token: string;\n  partialUrl: string;\n}\n\nexport interface IAddChatMemberInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  toMemberId: IUUID;\n  message: string;\n}\n\nexport interface IAddChatMemberPayload {\n  conversationReplies: Array<IConversationReply>;\n}\n\nexport interface IAddChatMemberWsInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  toMemberId: IUUID;\n  message: string;\n}\n\nexport interface IAddChatMemberWsPayload {\n  conversationReplies: Array<IConversationReply>;\n}\n\nexport interface IGetConversationIdInput {\n  projectId: IUUID;\n  memberId: IUUID;\n  toMemberId: IUUID;\n}\n\nexport interface IGetConversationIdPayload {\n  conversationId: IUUID;\n}\n\nexport interface IDeleteReplyInput {\n  replyId: IUUID;\n}\n\nexport interface IDeleteReplyPayload {\n  message: string;\n}\n\nexport interface ICreateWalletInput {\n  walletInput: IWalletInput;\n  memberId?: IUUID;\n}\n\nexport interface IWalletInput {\n  projectId?: IUUID;\n  principal?: boolean;\n  automaticPayment?: boolean;\n  detainedManual?: IDecimal;\n}\n\nexport interface IWalletPayload {\n  eWallet: IEWallet;\n}\n\nexport interface IWalletTransactionInput {\n  amount: IDecimal;\n  detainedAmount?: IDecimal;\n  concept: string;\n  description: string;\n  walletId?: IUUID;\n  receptorId?: IUUID;\n  memberId?: IUUID;\n  transactionStatus?: IEnumTransactionStatus;\n  type: IEnumTransactionType;\n  service?: IEnumTransactionService;\n  projectWalletKeyId?: IUUID;\n  transactionDepositInput?: ITransactionDepositInput;\n  walletTransactionMemberInput?: IIncludedWalletTransactionMemberRelationInput;\n}\n\nexport interface ITransactionDepositInput {\n  manualDeposit: boolean;\n}\n\nexport interface IIncludedWalletTransactionMemberRelationInput {\n  memberRelationId: IUUID;\n}\n\nexport interface IWalletTransactionPayload {\n  walletTransaction: IWalletTransaction;\n  publicKey: string;\n}\n\nexport interface IMultipleWalletTransactionInput {\n  transactions: Array<IWalletTransactionInput>;\n}\n\nexport interface IMultipleWalletTransactionPayload {\n  transactions: Array<IWalletTransaction>;\n}\n\nexport interface IWalletTransactionStatusInput {\n  description: string;\n  walletTransactionId: IUUID;\n  status: IEnumTransactionStatus;\n}\n\nexport interface IWalletTransactionStatusPayload {\n  walletTransactionStatus: IWalletTransactionStatus;\n}\n\nexport interface IWalletTransactionMemberRelationInput {\n  memberRelationId?: IUUID;\n  walletTransactionId?: IUUID;\n  walletTransactionMemberDetails?: Array<IWalletTransactionMemberDetailInput>;\n}\n\nexport interface IWalletTransactionMemberDetailInput {\n  amount: IDecimal;\n  description: string;\n}\n\nexport interface IWalletTransactionMemberRelationPayload {\n  walletTransactionMember: IWalletTransactionMemberRelation;\n}\n\nexport interface IMemberWalletInput {\n  memberId: IUUID;\n  walletId: IUUID;\n}\n\nexport interface IMemberWalletPayload {\n  memberWallet: IMemberWallet;\n}\n\nexport interface IProjectWalletKeyInput {\n  projectId?: IUUID;\n  publicKey?: string;\n  privateKey?: string;\n  service?: IEnumTransactionService;\n}\n\nexport interface IProjectWalletKeyPayload {\n  projectWalletKey: IProjectWalletKey;\n}\n\nexport interface IProjectWalletKey {\n  projectId: IUUID;\n  publicKey: string;\n  service: IEnumTransactionService;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICreateCertificateMovementInput {\n  certificateId: IUUID;\n  reasons?: Array<IKeyValuePairOfStringAndStringInput>;\n  memberId: IUUID;\n  certificateMovementType: ICertificateMovementType;\n}\n\nexport interface ICreateCertificateMovementPayload {\n  certificateMovement: ICertificateMovement;\n}\n\nexport interface IDeleteCertificateInput {\n  id: IUUID;\n}\n\nexport interface IDeleteCertificatePayload {\n  message: string;\n}\n\nexport interface IUpdateInsurerModuleInput {\n  id: IUUID;\n  originCountry?: IUUID;\n  merchandiseLegalTermsHTML?: string;\n  merchandiseLegalTermsJSON?: string;\n  containerLegalTermsHTML?: string;\n  containerLegalTermsJSON?: string;\n  content?: string;\n  logo?: string;\n  descriptionCoverages?: string;\n  certificateType?: ICertificateType;\n  name?: string;\n  placeInsurer?: string;\n  insurerType?: IInsurerType;\n  moduleValuesByKey?: IInsurerModuleValuesByKeyInput;\n  insurerAdjusterContact?: IInsurerAdjusterContactDtoInput;\n  insurerSinisterContact?: IInsurerSinisterContactDtoInput;\n  insurerState?: boolean;\n}\n\nexport interface IInsurerModuleValuesByKeyInput {\n  contacts?: Array<IInsurerContactDTOInput>;\n  modules?: Array<IInsurerCompanyModuleDTOInput>;\n  countries?: Array<IUUID>;\n  branches?: IInsurerBranchDTOInput;\n  addresses?: Array<IInsurerAddressDTOInput>;\n  servicesToShow: Array<string>;\n}\n\nexport interface IInsurerContactDTOInput {\n  name: string;\n  email: string;\n  department: string;\n  phone: string;\n}\n\nexport interface IInsurerCompanyModuleDTOInput {\n  key: string;\n  name: string;\n  typeValue: string;\n}\n\nexport interface IInsurerBranchDTOInput {\n  life: boolean;\n  accidentAndDiseases: boolean;\n  cars: boolean;\n  damages: boolean;\n}\n\nexport interface IInsurerAddressDTOInput {\n  stateName: string;\n  municipality: string;\n  streetName: string;\n}\n\nexport interface IInsurerAdjusterContactDtoInput {\n  name: string;\n  emailOne: string;\n  emailTwo: string;\n  phoneNumber: string;\n}\n\nexport interface IInsurerSinisterContactDtoInput {\n  contactName: string;\n  officePhoneNumber: string;\n  afterHoursPhoneNumber: string;\n  emailOne: string;\n  emailTwo: string;\n}\n\nexport interface IUpdateInsurerModulePayload {\n  message: string;\n}\n\nexport interface ICreateInsurerModuleInput {\n  content: string;\n  merchandiseLegalTermsHTML: string;\n  merchandiseLegalTermsJSON: string;\n  containerLegalTermsHTML: string;\n  containerLegalTermsJSON: string;\n  logo: string;\n  descriptionCoverages: string;\n  certificateType: ICertificateType;\n  projectId: IUUID;\n  originCountry: IUUID;\n  name: string;\n  placeInsurer: string;\n  insurerType: IInsurerType;\n  moduleValuesByKey?: IInsurerModuleValuesByKeyInput;\n  insurerSinisterContact: IInsurerSinisterContactDtoInput;\n  insurerAdjusterContact: IInsurerAdjusterContactDtoInput;\n  insurerState: boolean;\n}\n\nexport interface ICreateInsurerModulePayload {\n  insurerModule: IInsurerModule;\n}\n\nexport interface ICreatePolicyModuleInput {\n  insurerId?: IUUID;\n  projectId: IUUID;\n  policyType: IPolicyType;\n  policyNumber: string;\n  paymentResponsable: IPaymentResponsable;\n  address: string;\n  phoneNumber: string;\n  startDateVigency: IDateTime;\n  endDateVigency: IDateTime;\n  moneySymbols?: Array<IMoneySymbolDtoInput>;\n  dateLimitVigency: IDateTime;\n  description: string;\n  modules?: Array<IModuleDTOInput>;\n  moduleValues?: IModuleValuesDtoInput;\n}\n\nexport interface IMoneySymbolDtoInput {\n  keyName: string;\n  value: string;\n  label: string;\n}\n\nexport interface IModuleDTOInput {\n  key: string;\n  typeValue: string;\n  name: string;\n}\n\nexport interface IModuleValuesDtoInput {\n  products?: Array<IPolicyProductDTOInput>;\n  coverages?: ICoveragesDTOInput;\n  hasRateByPolicy?: boolean;\n  contracts: Array<IUUID>;\n  files?: Array<IPolicyFileDTOInput>;\n  declarations?: Array<IPolicyDeclarationDTOInput>;\n  policyDeductible?: IPolicyDeductibleDTOInput;\n  primas?: IPolicyPrimaDTOInput;\n  policyFrequencyPayment?: IPolicyFrequencyPaymentDTOInput;\n}\n\nexport interface IPolicyProductDTOInput {\n  productId: IUUID;\n  name: string;\n  category: string;\n  insurerBuy: IDecimal;\n  insurerMinimum: IDecimal;\n  policySell: IDecimal;\n  policyMinimumSell: IDecimal;\n}\n\nexport interface ICoveragesDTOInput {\n  originCountries: Array<IUUID>;\n  destinyCountries: Array<IUUID>;\n}\n\nexport interface IPolicyFileDTOInput {\n  fileId: IUUID;\n  url: string;\n  message: string;\n  token: string;\n  partialUrl: string;\n  name: string;\n  fileName: string;\n  size: string;\n  type: string;\n}\n\nexport interface IPolicyDeclarationDTOInput {\n  email: string;\n  name: string;\n}\n\nexport interface IPolicyDeductibleDTOInput {\n  deductibleTheft: IDecimal;\n  deductibleMerchandiseSensibility: IDecimal;\n  deductibleRefrigeratedMerchandise: IDecimal;\n  minimumDeductible: IDecimal;\n  damageDeductible: IDecimal;\n  minimumPurchase: IDecimal;\n  purchaseRate: IDecimal;\n}\n\nexport interface IPolicyPrimaDTOInput {\n  primaNeta: IDecimal;\n  discounts: IDecimal;\n  surchargerPayments: string;\n  policyRights: string;\n  subtotal: IDecimal;\n  iva: IDecimal;\n  primaTotal: IDecimal;\n}\n\nexport interface IPolicyFrequencyPaymentDTOInput {\n  monthly: boolean;\n  biMonthly: boolean;\n  quarterly: boolean;\n  halfYearly: boolean;\n  annual: boolean;\n  cash: boolean;\n  buyRate: IDecimal;\n  minimumBuy: IDecimal;\n}\n\nexport interface ICreatePolicyModulePayload {\n  policyModule: IPolicyModule;\n}\n\nexport interface IUpdatePolicyModuleInput {\n  policyModuleId: IUUID;\n  projectId?: IUUID;\n  policyType?: IPolicyType;\n  insurerId?: IUUID;\n  policyNumber?: string;\n  paymentResponsable?: IPaymentResponsable;\n  address?: string;\n  phoneNumber?: string;\n  startDateVigency?: IDateTime;\n  endDateVigency?: IDateTime;\n  moneySymbols?: Array<IMoneySymbolDtoInput>;\n  dateLimitVigency?: IDateTime;\n  description?: string;\n  modules?: Array<IModuleDTOInput>;\n  moduleValues?: IModuleValuesDtoInput;\n}\n\nexport interface IUpdatePolicyModulePayload {\n  message: string;\n}\n\nexport interface IDeletePolicyModuleInput {\n  id: IUUID;\n}\n\nexport interface IDeletePolicyModulePayload {\n  message: string;\n}\n\nexport interface ICreateInsurerFeeInput {\n  insurerModuleId: IUUID;\n  policyModuleId?: IUUID;\n  originCountries?: Array<IUUID>;\n  contractorId: IUUID;\n  vigencyLimit: IDateTime;\n  startVigency: IDateTime;\n  destinyCountries?: Array<IUUID>;\n  minimumSell: number;\n  purchaseRate: number;\n  minimumPurchase: number;\n  sellRate: number;\n  maximumSell: number;\n  projectId: IUUID;\n  files: Array<IUUID>;\n  merchandises: Array<IUUID>;\n}\n\nexport interface ICreateInsurerFeePayload {\n  insurerFee: IInsurerFee;\n}\n\nexport interface IDeleteInsurerFeeInput {\n  id: IUUID;\n}\n\nexport interface IDeleteInsurerFeePayload {\n  message: string;\n}\n\nexport interface IUpdateInsurerFeeInput {\n  insurerFeeId: IUUID;\n  policyModuleId?: IUUID;\n  originCountries?: Array<IUUID>;\n  contractorId?: IUUID;\n  vigencyLimit?: IDateTime;\n  startVigency?: IDateTime;\n  isActive?: boolean;\n  destinyCountries?: Array<IUUID>;\n  purchaseRate?: number;\n  minimumPurchase?: number;\n  sellRate?: number;\n  maximumSell?: number;\n  minimumSell?: number;\n  files?: Array<IUUID>;\n  merchandises?: Array<IUUID>;\n}\n\nexport interface IUpdateInsurerFeePayload {\n  message: string;\n}\n\nexport interface ICreatePolicyInput {\n  countryId: IUUID;\n  insurerId: IUUID;\n  document: string;\n  number: string;\n  policyType: IPolicyType;\n  description: string;\n  startValidityDate: IDateTime;\n  expirationDate: IDateTime;\n  limitDeclarationDate: IDateTime;\n  damageDeductible: string;\n  robberyDeductible: string;\n  crackDeductible: string;\n  merchandiseDeductible: string;\n  declarationResponsible: string;\n  projectId: IUUID;\n  clientPaysItus: boolean;\n  insurerPaysItus: boolean;\n  currencies: Array<IUUID>;\n  contractorType: IContractorType;\n}\n\nexport interface ICreatePolicyPayload {\n  policy: Iitus_Policy;\n}\n\nexport interface ICancelCertificateInput {\n  certificateId: IUUID;\n  cancellationReason: string;\n}\n\nexport interface ICancelCertificatePayload {\n  message: string;\n}\n\nexport interface ICreateBeneficiaryInput {\n  name: string;\n  rfc: string;\n  countryId: IUUID;\n  isActive: boolean;\n  projectId: IUUID;\n  contractorId: IUUID;\n}\n\nexport interface ICreateBeneficiaryPayload {\n  beneficiary: IBeneficiary;\n}\n\nexport interface ICreateCertificateInput {\n  insurerId: IUUID;\n  merchandiseCategoryId: IUUID;\n  contractorId: IUUID;\n  officeId: IUUID;\n  feeId: IUUID;\n  policyModuleId: IUUID;\n  statusFrom: ICertificateStatusFrom;\n  beneficiaries: Array<IUUID>;\n  merchandiseId: IUUID;\n  countryOriginId: IUUID;\n  countryDestinyId: IUUID;\n  activityDescriptions: string;\n  cityOrigin: string;\n  currencyId: IUUID;\n  minimumSell?: IDecimal;\n  branchOfficeId?: IUUID;\n  shipmentDate?: IDateTime;\n  estimatedArrivingDate?: IDateTime;\n  shippingTransport?: string;\n  externalIdentifier?: string;\n  cityDestiny: string;\n  sumAssured: number;\n  transportMode: ITransportMode;\n  number: string;\n  coverageType: ICoverageType;\n  showPrice: boolean;\n  projectId: IUUID;\n  additionalComments?: string;\n  createdBy: IUUID;\n  files: Array<IUUID>;\n}\n\nexport interface ICreateCertificatePayload {\n  certificate: ICertificate;\n}\n\nexport interface ICreateCertificateFileInput {\n  certificateId: IUUID;\n  fileIds: Array<IUUID>;\n}\n\nexport interface ICreateCertificateFilePayload {\n  message: string;\n}\n\nexport interface ICreateContactInput {\n  fullName: string;\n  jobPosition: string;\n  email: string;\n  phone: string;\n  contactType: IContactType;\n  projectId: IUUID;\n  contractorId: IUUID;\n}\n\nexport interface ICreateContactPayload {\n  contact: IContact;\n}\n\nexport interface ICreateContractorBranchOfficeInput {\n  contractorId: IUUID;\n  officeId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateContractorBranchOfficePayload {\n  contractorBranchOffice: IContractorOffice;\n}\n\nexport interface ICreateContractorContactInput {\n  contractorId: IUUID;\n  contactId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateContractorContactPayload {\n  contractorContact: IContractorContact;\n}\n\nexport interface ICreateContractorInput {\n  officeId: IUUID;\n  isActive: boolean;\n  name: string;\n  countryId: IUUID;\n  company: string;\n  postalCode: string;\n  location: string;\n  city: string;\n  colony: string;\n  extNumber: string;\n  phone: string;\n  typeOfBusiness: string;\n  webSite: string;\n  rfc: string;\n  auxiliaryCode: string;\n  paymentMethod: string;\n  usesCFDI: boolean;\n  paymentTerm: Iitus_PaymentTerm;\n  invoicingMethod: IInvoicingMethod;\n  companysRfc: IUUID;\n  registration: IUUID;\n  constitutiveAct: IUUID;\n  powerOfAttorney: IUUID;\n  idCopy: IUUID;\n  proofOfAddress: IUUID;\n  positiveOpinionSat: IUUID;\n  creditDays: number;\n  creditAmount: number;\n  taxSituationCertificate: IUUID;\n  status: IStatus;\n  invoicingPeriod: IInvoicingPeriod;\n  projectId: IUUID;\n}\n\nexport const enum IStatus {\n  ACTIVE = 'ACTIVE',\n  PENDING = 'PENDING',\n  INACTIVE = 'INACTIVE'\n}\n\nexport interface ICreateContractorPayload {\n  contractor: IContractor;\n}\n\nexport interface ICreateContractorPolicyInput {\n  contractorId: IUUID;\n  policyId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateContractorPolicyPayload {\n  contractorPolicy: IContractorPolicy;\n}\n\nexport interface ICreateCountryRequestInput {\n  countryId: IUUID;\n  insurerCompanyId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateCountryRequestPayload {\n  countryRequest: ICountryRequest;\n}\n\nexport interface ICreateFeeInput {\n  insurerId: IUUID;\n  purchaseRate: number;\n  minimumPurchase: number;\n  sellRate: number;\n  maximumSell: number;\n  projectId: IUUID;\n}\n\nexport interface ICreateFeePayload {\n  fee: IFee;\n}\n\nexport interface ICreateInsurerCompanyInput {\n  name: string;\n  socialReason: string;\n  isActive: boolean;\n  contractorId: IUUID;\n  projectId: IUUID;\n  countryIds: Array<IUUID>;\n}\n\nexport interface ICreateInsurerCompanyPayload {\n  insurerCompany: IInsurerCompany;\n}\n\nexport interface ICreateIssuedReportInput {\n  name: string;\n  url: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateIssuedReportPayload {\n  issuedReport: IIssuedReport;\n}\n\nexport interface IIssuedReport {\n  name: string;\n  url: string;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface ICreateMerchandiseDetailInput {\n  contractorId: IUUID;\n  officeId: IUUID;\n  merchandiseCategoryId: IUUID;\n  merchandiseId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateMerchandiseDetailPayload {\n  merchandiseDetail: IMerchandiseDetail;\n}\n\nexport interface ICreateMerchandiseInput {\n  merchandiseType: string;\n  insurerId: IUUID;\n  name: string;\n  merchandiseStatus: IMerchandiseStatus;\n  categoryId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateMerchandisePayload {\n  merchandise: IMerchandise;\n}\n\nexport interface ICreateMoneyInput {\n  name: string;\n  code: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateMoneyPayload {\n  money: IMoney;\n}\n\nexport interface ICreateMoneyPolicyInput {\n  moneyId: IUUID;\n  policyId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateMoneyPolicyPayload {\n  moneyPolicy: IMoneyPolicy;\n}\n\nexport interface IMoneyPolicy {\n  moneyId: IUUID;\n  policyId: IUUID;\n  money?: IMoney;\n  policy?: Iitus_Policy;\n  projectId: IUUID;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IDeleteBeneficiaryInput {\n  id: IUUID;\n}\n\nexport interface IDeleteBeneficiaryPayload {\n  message: string;\n}\n\nexport interface IDeleteContactInput {\n  id: IUUID;\n}\n\nexport interface IDeleteContactPayload {\n  message: string;\n}\n\nexport interface IDeleteContractorInput {\n  id: IUUID;\n}\n\nexport interface IDeleteContractorPayload {\n  message: string;\n}\n\nexport interface IDeleteContractorOfficeInput {\n  id: IUUID;\n}\n\nexport interface IDeleteContractorOfficePayload {\n  message: string;\n}\n\nexport interface IDeleteContractorPolicyInput {\n  id: IUUID;\n}\n\nexport interface IDeleteContractorPolicyPayload {\n  message: string;\n}\n\nexport interface IDeleteInsurerModuleInput {\n  id: IUUID;\n}\n\nexport interface IDeleteInsurerModulePayload {\n  message: string;\n}\n\nexport interface IDeleteFeeInput {\n  id: IUUID;\n}\n\nexport interface IDeleteFeePayload {\n  message: string;\n}\n\nexport interface IDeleteMerchandiseInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMerchandisePayload {\n  message: string;\n}\n\nexport interface IDeleteInsurerCompanyInput {\n  id: IUUID;\n}\n\nexport interface IDeleteInsurerCompanyPayload {\n  message: string;\n}\n\nexport interface IDeleteMoneyInput {\n  id: IUUID;\n}\n\nexport interface IDeleteMoneyPayload {\n  message: string;\n}\n\nexport interface IDeletePolicyInput {\n  id: IUUID;\n}\n\nexport interface IDeletePolicyPayload {\n  message: string;\n}\n\nexport interface IUpdateBeneficiaryInput {\n  beneficiaryId: IUUID;\n  name?: string;\n  rfc?: string;\n  countryId?: IUUID;\n  isActive?: boolean;\n  contractorId?: IUUID;\n}\n\nexport interface IUpdateBeneficiaryPayload {\n  message: string;\n}\n\nexport interface IUpdateCertificateInput {\n  certificateId: IUUID;\n  contractorId?: IUUID;\n  officeId?: IUUID;\n  beneficiaries?: Array<IUUID>;\n  policyModuleId?: IUUID;\n  feeId?: IUUID;\n  statusFrom?: ICertificateStatusFrom;\n  countryOriginId?: IUUID;\n  countryDestinyId?: IUUID;\n  activityDescriptions?: string;\n  cityOrigin?: string;\n  issueStatus?: IIssueStatus;\n  memberId?: IUUID;\n  shipmentDate?: IDateTime;\n  estimatedArrivingDate?: IDateTime;\n  shippingTransport?: string;\n  externalIdentifier?: string;\n  cityDestiny?: string;\n  currencyId?: IUUID;\n  sumAssured?: number;\n  transportMode?: ITransportMode;\n  number?: string;\n  coverageType?: ICoverageType;\n  showPrice?: boolean;\n  additionalComments?: string;\n  files?: Array<IUUID>;\n}\n\nexport interface IUpdateCertificatePayload {\n  message: string;\n}\n\nexport interface IUpdateContactInput {\n  contactId: IUUID;\n  fullName?: string;\n  jobPosition?: string;\n  email?: string;\n  phone?: string;\n  contactType?: IContactType;\n  contractorId?: IUUID;\n}\n\nexport interface IUpdateContactPayload {\n  message: string;\n}\n\nexport interface IUpdateContractorInput {\n  contractorId: IUUID;\n  name?: string;\n  countryId?: IUUID;\n  company?: string;\n  postalCode?: string;\n  location?: string;\n  city?: string;\n  colony?: string;\n  extNumber?: string;\n  phone?: string;\n  typeOfBusiness?: string;\n  webSite?: string;\n  rfc?: string;\n  auxiliaryCode?: string;\n  paymentMethod?: string;\n  usesCFDI?: boolean;\n  paymentTerm?: Iitus_PaymentTerm;\n  invoicingMethod?: IInvoicingMethod;\n  companysRfc?: IUUID;\n  registration?: IUUID;\n  constitutiveAct?: IUUID;\n  powerOfAttorney?: IUUID;\n  idCopy?: IUUID;\n  proofOfAddress?: IUUID;\n  positiveOpinionSat?: IUUID;\n  creditDays?: number;\n  creditAmount?: number;\n  taxSituationCertificate?: IUUID;\n  isActive?: boolean;\n  invoicingPeriod?: IInvoicingPeriod;\n}\n\nexport interface IUpdateContractorPayload {\n  message: string;\n}\n\nexport interface IUpdateFeeInput {\n  feeId: IUUID;\n  purchaseRate?: number;\n  minimumPurchase?: number;\n  sellRate?: number;\n  maximumSell?: number;\n}\n\nexport interface IUpdateFeePayload {\n  message: string;\n}\n\nexport interface IUpdateInsurerCompanyInput {\n  insurerCompanyId: IUUID;\n  name?: string;\n  socialReason?: string;\n  isActive?: boolean;\n  countryIds?: Array<IUUID>;\n}\n\nexport interface IUpdateInsurerCompanyPayload {\n  message: string;\n}\n\nexport interface IUpdateMerchandiseInput {\n  merchandiseId: IUUID;\n  insurerId?: IUUID;\n  name?: string;\n  merchandiseType?: string;\n  merchandiseStatus?: IMerchandiseStatus;\n  categoryId?: IUUID;\n}\n\nexport interface IUpdateMerchandisePayload {\n  message: string;\n}\n\nexport interface IUpdateMoneyInput {\n  moneyId: IUUID;\n  name?: string;\n  code?: string;\n}\n\nexport interface IUpdateMoneyPayload {\n  message: string;\n}\n\nexport interface IUpdatePolicyInput {\n  policyId: IUUID;\n  countryId?: IUUID;\n  insurerId?: IUUID;\n  document?: string;\n  number?: string;\n  policyType?: IPolicyType;\n  description?: string;\n  startValidityDate?: IDateTime;\n  expirationDate?: IDateTime;\n  limitDeclarationDate?: IDateTime;\n  damageDeductible?: string;\n  robberyDeductible?: string;\n  crackDeductible?: string;\n  merchandiseDeductible?: string;\n  declarationResponsible?: string;\n  policyStatus?: IPolicyStatus;\n  contractorType?: IContractorType;\n}\n\nexport interface IUpdatePolicyPayload {\n  message: string;\n}\n\nexport interface IAttendanceInput {\n  projectId: IUUID;\n  status: IEnumAttendanceStatus;\n  studentId: IUUID;\n}\n\nexport interface IAttendancePayload {\n  attendance: Ischool_Attendance;\n}\n\nexport interface IClassroomInput {\n  projectId: IUUID;\n  schoolId: IUUID;\n  levelId: IUUID;\n  gradeId: IUUID;\n  teacherMemberId?: IUUID;\n  group?: string;\n  isActive?: boolean;\n}\n\nexport interface IClassroomPayload {\n  classroom: IClassroom;\n}\n\nexport interface ICreateDayServiceInput {\n  projectId: IUUID;\n  day?: string;\n  isActive?: boolean;\n  schoolId: IUUID;\n}\n\nexport interface IDayServicePayload {\n  dayService: IDayService;\n}\n\nexport interface IGradeInput {\n  projectId: IUUID;\n  name: string;\n  isActive?: boolean;\n  levelId?: IUUID;\n}\n\nexport interface IGradePayload {\n  grade: IGrade;\n}\n\nexport interface ILevelInput {\n  name: string;\n  isActive?: boolean;\n  schoolId?: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ILevelPayload {\n  level: ILevel;\n}\n\nexport interface ICreateSchoolInput {\n  photo?: string;\n  name: string;\n  email?: string;\n  phone?: string;\n  projectId: IUUID;\n}\n\nexport interface ISchoolPayload {\n  school: ISchool;\n}\n\nexport interface IStudentInput {\n  projectId: IUUID;\n  classroomId: IUUID;\n  name: string;\n  lastName: string;\n  photo?: string;\n  isActive?: boolean;\n  tutors?: Array<IStudentTutorDTOInput>;\n}\n\nexport interface IStudentTutorDTOInput {\n  studentTutorId?: IUUID;\n  tutorMemberId: IUUID;\n}\n\nexport interface IStudentPayload {\n  student: IStudent;\n}\n\nexport interface ICreateBulkStudentInput {\n  projectId: IUUID;\n  cSVContent: string;\n}\n\nexport interface ICreateBulkStudentPayload {\n  message: string;\n}\n\nexport interface IUpdateAttendanceInput {\n  status?: IEnumAttendanceStatus;\n  studentId?: IUUID;\n}\n\nexport interface IUpdateClassroomInput {\n  schoolId?: IUUID;\n  levelId?: IUUID;\n  gradeId?: IUUID;\n  teacherMemberId?: IUUID;\n  group?: string;\n  isActive?: boolean;\n}\n\nexport interface IUpdateDayServiceInput {\n  day?: string;\n  isActive?: boolean;\n  schoolId?: IUUID;\n}\n\nexport interface IUpdateGradeInput {\n  name?: string;\n  isActive?: boolean;\n  levelId?: IUUID;\n}\n\nexport interface IUpdateLevelInput {\n  name?: string;\n  isActive?: boolean;\n  schoolId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IUpdateSchoolInput {\n  photo?: string;\n  name?: string;\n  email?: string;\n  phone?: string;\n  projectId?: IUUID;\n}\n\nexport interface IUpdateStudentInput {\n  classroomId?: IUUID;\n  name?: string;\n  lastName?: string;\n  photo?: string;\n  isActive?: boolean;\n  verify?: IEnumStudenteVerify;\n}\n\nexport interface IBeneficiarieInput {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  birthDate?: IDateTime;\n  sex?: string;\n  percentage?: number;\n  optionalRelation?: string;\n  lifeId?: IUUID;\n  ownerId?: IUUID;\n  fullName?: string;\n  iSR?: IDecimal;\n  procedente?: string;\n  clause?: string;\n  jName?: string;\n  rFC?: string;\n  active?: boolean;\n  endorsementId?: IUUID;\n  projectId?: IUUID;\n  chargeDate?: IDateTime;\n  dishargeDate?: IDateTime;\n  antiquity?: IDateTime;\n}\n\nexport interface IBeneficiariePayload {\n  beneficiarie: IBeneficiarie;\n}\n\nexport interface IFormAccidentDiseaseInput {\n  diseaseType?: number;\n  coinsurance?: string;\n  documentType?: IEnumPoliceDocumentType;\n  ownerId?: IUUID;\n  personalId?: IUUID;\n  policyId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IFormAccidentDiseasePayload {\n  formAccidentDisease: IFormAccidentDisease;\n}\n\nexport interface IFormAutomobileDamageInput {\n  brand?: string;\n  model?: string;\n  year?: number;\n  version?: string;\n  serial?: string;\n  engine?: string;\n  color?: string;\n  licensePlates?: string;\n  documentType?: IEnumPoliceDocumentType;\n  ownerId?: IUUID;\n  policyId?: IUUID;\n  usage?: string;\n  email?: string;\n  beneficiaryAddress?: string;\n  beneficiaryName?: string;\n  beneficiaryRFC?: string;\n  adjusment?: string;\n  drive?: string;\n  montAdjustment?: string;\n  montSpecialTeam?: string;\n  specialTeam?: string;\n  service?: string;\n  policyType?: IEnumAutoType;\n  chargeType?: IEnumChargeType;\n  procedencia?: IEnumProcedent;\n  personalId?: IUUID;\n  preferencialBeneficiary?: string;\n  sumInsured?: string;\n  carOwner?: string;\n  noEmployee?: string;\n  projectId?: IUUID;\n}\n\nexport interface IFormAutomobileDamagePayload {\n  formAutomobileDamage: IFormAutomobileDamage;\n}\n\nexport interface IFormCarCatalogInput {\n  carModel?: string;\n  carBrand?: string;\n  carYear?: number;\n  description?: string;\n  carSubbrand?: string;\n  shortDescription?: string;\n  carType?: string;\n  carOccupants?: number;\n  carClass?: number;\n  carSearch?: string;\n}\n\nexport interface IFormCarCatalogPayload {\n  formCarCatalog: IFormCarCatalog;\n}\n\nexport interface IFormDamageInput {\n  damageType?: IEnumFormDamageType;\n  insuredItem?: string;\n  itemAddress?: string;\n  itemDetails?: string;\n  coinsurance?: string;\n  documentType?: IEnumPoliceDocumentType;\n  ownerId?: IUUID;\n  policyId?: IUUID;\n  personalId?: IUUID;\n  brand?: string;\n  color?: string;\n  constructionYear?: number;\n  damOwner?: string;\n  email?: string;\n  engine?: string;\n  fHMZone?: string;\n  girp?: string;\n  matricula?: string;\n  model?: string;\n  noEmployee?: string;\n  noLevels?: number;\n  permiso?: string;\n  purchaseValue?: string;\n  reconstructionYear?: number;\n  serial?: string;\n  sucursal?: string;\n  tYEVZone?: string;\n  typeConstruction?: IEnumConstructionType;\n  usage?: string;\n  version?: string;\n  projectId?: IUUID;\n}\n\nexport interface IFormDamagePayload {\n  formDamage: IFormDamage;\n}\n\nexport interface IFormLifeInput {\n  smoker?: boolean;\n  documentType?: IEnumPoliceDocumentType;\n  ownerId?: IUUID;\n  personalId?: IUUID;\n  policyId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IFormLifePayload {\n  formLife: IFormLife;\n}\n\nexport interface IInvolvedReferrerInput {\n  comisionVendedor?: IDecimal;\n  ownerId?: IUUID;\n  policyId?: IUUID;\n  referenciadorId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IInvolvedReferrerPayload {\n  involvedReferrer: IInvolvedReferrer;\n}\n\nexport interface IOldPoliceInput {\n  basePolicyId?: IUUID;\n  ownerId?: IUUID;\n  newPolicyId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IOldPolicePayload {\n  oldPolice: IOldPolice;\n}\n\nexport interface IPersonalInformationInput {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  birthDate?: IDateTime;\n  sex?: string;\n  ownerId?: string;\n  fullName?: string;\n  email?: string;\n  salary?: IDecimal;\n  sumAssured?: IDecimal;\n  memberId?: IUUID;\n  antiquity?: IDateTime;\n  policyType?: number;\n  typeSA?: IEnumSAType;\n  certificate?: string;\n  comision?: IDecimal;\n  rigth?: IDecimal;\n  iVA?: IDecimal;\n  projectId?: IUUID;\n  pNeta?: IDecimal;\n  pTotal?: IDecimal;\n  rPF?: IDecimal;\n  discount?: IDecimal;\n  gastosInvestigacion?: IDecimal;\n  subTotal?: IDecimal;\n  chargeDate?: IDateTime;\n  comisionEarned?: IDecimal;\n  comisionPercentEarned?: IDecimal;\n  rigthEarned?: IDecimal;\n  discountEarned?: IDecimal;\n  dischargeDate?: IDateTime;\n  iVAEarned?: IDecimal;\n  pNetaEarned?: IDecimal;\n  pTotalEarned?: IDecimal;\n  rPFEarned?: IDecimal;\n  subTotalEarned?: IDecimal;\n  endDate?: IDateTime;\n  initDate?: IDateTime;\n  comisionPaymentDate?: IDateTime;\n  exchangeRate?: IDecimal;\n  maquila?: IDecimal;\n  bonoDdate?: IDateTime;\n  maquilaDate?: IDateTime;\n  facturaYear?: number;\n}\n\nexport interface IPersonalInformationPayload {\n  personalInformation: IPersonalInformation;\n}\n\nexport interface IPoliceInput {\n  number?: string;\n  startValidity?: IDateTime;\n  endValidity?: IDateTime;\n  formaDePago?: IEnumPolicePaymentType;\n  status?: IEnumPoliceStatus;\n  observations?: string;\n  folio?: string;\n  internalNumber?: string;\n  documentType?: IEnumPoliceDocumentType;\n  addressId?: number;\n  aseguradoraId?: number;\n  claveId?: IUUID;\n  ownerId?: IUUID;\n  packageId?: number;\n  projectAgentProviderBranchId?: IUUID;\n  fCurrency?: IEnumFCurrency;\n  identifier?: string;\n  rigth?: IDecimal;\n  iVA?: IDecimal;\n  pNeta?: IDecimal;\n  pTotal?: IDecimal;\n  rPF?: IDecimal;\n  comision?: IDecimal;\n  administrationType?: IEnumPoliceAdministrationType;\n  caratule?: string;\n  certificadoIncisoActivo?: boolean;\n  certificateNumber?: string;\n  comisionPercent?: number;\n  hospitalLevel?: string;\n  name?: string;\n  parentId?: IUUID;\n  discount?: IDecimal;\n  isRenewable?: IEnumPoliceRenew;\n  reasonRen?: string;\n  renewedStatus?: IEnumPoliceRenewalStatus;\n  contact?: string;\n  fechaBajaInciso?: IDateTime;\n  reasonCancel?: string;\n  receiptsBy?: IEnumPoliceReceipts;\n  responsableId?: IUUID;\n  giveComision?: IDecimal;\n  recAntiguedad?: IDateTime;\n  collectionExecutiveId?: number;\n  sucursalId?: IUUID;\n  subTotal?: IDecimal;\n  trackBitacora?: boolean;\n  accidentRate?: IDecimal;\n  scheme?: IEnumPayScheme;\n  steps?: string;\n  totalReceipts?: number;\n  conceptAnnulment?: IEnumPoliceConcept;\n  deductible?: string;\n  emisionDate?: IDateTime;\n  emisionStatus?: IEnumPoliceEmisionStatus;\n  fechaAnuencia?: IDateTime;\n  fianzaTypeId?: number;\n  gastoInvestigacion?: IDecimal;\n  reasonRehabbilitate?: string;\n  bussinessLine?: IEnumPoliceBussinessLine;\n  contratanteSubGroup?: number;\n  celulaId?: number;\n  groupingLevelId?: number;\n  typePolicy?: IEnumPolicyType;\n  conductoDePago?: IEnumConductChoise;\n  tabulator?: string;\n  bonoVariable?: IDecimal;\n  hasProgramaDeProveedores?: boolean;\n  contractorId?: IUUID;\n  programaDeProveedoresContractorId?: number;\n  chargeDate?: IDateTime;\n  comisionEarned?: IDecimal;\n  comisionPercentEarned?: IDecimal;\n  rigthEarned?: IDecimal;\n  discountEarned?: IDecimal;\n  ivaEarned?: IDecimal;\n  pNetaEarned?: IDecimal;\n  pTotalEarned?: IDecimal;\n  rPFEarned?: IDecimal;\n  subTotalEarned?: IDecimal;\n  dateCancel?: IDateTime;\n  amountCanceled?: IDecimal;\n  stateCirculation?: string;\n  fechaPagoComision?: IDateTime;\n  dateEmitionFactura?: IDateTime;\n  folioFactura?: string;\n  monthFactura?: number;\n  exchangeRate?: IDecimal;\n}\n\nexport interface IPolicePayload {\n  police: IPolice;\n}\n\nexport interface IPoliceAssignInput {\n  isOwner?: boolean;\n  active?: boolean;\n  policeId?: IUUID;\n  memberId?: IUUID;\n}\n\nexport interface IPoliceAssignPayload {\n  policeAssign: IPoliceAssign;\n}\n\nexport interface IPolicePendientInput {\n  email?: string;\n  isOwner?: boolean;\n  active?: boolean;\n  policeId?: IUUID;\n}\n\nexport interface IPolicePendientPayload {\n  policePendient: IPolicePendient;\n}\n\nexport interface IPoliceQuoteInput {\n  ramoCode?: string;\n  subRamoCode?: string;\n  projectAgentProviderBranchId?: IUUID;\n  status?: IEnumPoliceQuoteStatus;\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  email?: string;\n  phone?: string;\n  car?: string;\n  observations?: string;\n  accidents?: string;\n  damages?: string;\n  life?: string;\n  isComplete?: boolean;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n  mainParent?: number;\n  contractorId?: IUUID;\n  active?: boolean;\n  prospectId?: IUUID;\n  type?: string;\n  agentProviders?: Array<IUUID>;\n  selectedAgentProvider?: Array<IUUID>;\n}\n\nexport interface IPoliceQuotePayload {\n  policeQuote: IPoliceQuote;\n}\n\nexport interface IPoliceQuotePrimaInput {\n  aseguradora?: string;\n  prima?: string;\n  checked?: boolean;\n  projectId?: IUUID;\n  policeQuoteId?: IUUID;\n}\n\nexport interface IPoliceQuotePrimaPayload {\n  policeQuotePrima: IPoliceQuotePrima;\n}\n\nexport interface IRelationShipInput {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  birthDate?: IDateTime;\n  sex?: string;\n  relationship?: number;\n  accidentId?: IUUID;\n  ownerId?: IUUID;\n  fullName?: string;\n  isActive?: boolean;\n  endorsementId?: IUUID;\n  antiquity?: IDateTime;\n  certificate?: string;\n  comision?: IDecimal;\n  rigth?: IDecimal;\n  iVA?: IDecimal;\n  pNeta?: IDecimal;\n  pTotal?: IDecimal;\n  rPF?: IDecimal;\n  discount?: IDecimal;\n  gastosInvestigacion?: IDecimal;\n  subTotal?: IDecimal;\n  projectId?: IUUID;\n  chargeDate?: IDateTime;\n  comisionEarned?: IDecimal;\n  comisionPercentEarned?: IDecimal;\n  rigthEarned?: IDecimal;\n  discountEarned?: IDecimal;\n  dischangeDate?: IDateTime;\n  iVAEarned?: IDecimal;\n  pNetaEarned?: IDecimal;\n  pTotalEarned?: IDecimal;\n  rPFEarned?: IDecimal;\n  subTotalEarned?: IDecimal;\n  comisionPaymentDate?: IDateTime;\n  exchangeRate?: IDecimal;\n  maquila?: IDecimal;\n  bonoDate?: IDateTime;\n  maquilaDate?: IDateTime;\n  facturaYear?: number;\n}\n\nexport interface IRelationShipPayload {\n  relationShip: IRelationShip;\n}\n\nexport interface ISucursalInput {\n  name?: string;\n  details?: string;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface ISucursalPayload {\n  sucursal: ISucursal;\n}\n\nexport interface IAgentKeyInput {\n  ownerId?: IUUID;\n  name?: string;\n  key?: string;\n  isActive?: boolean;\n  projectAgentProviderId?: IUUID;\n}\n\nexport interface IAgentKeyPayload {\n  agentKey: IAgentKey;\n}\n\nexport interface IAgentProviderContactInput {\n  projectAgentProviderId?: IUUID;\n  name?: string;\n  email?: string;\n  phone?: string;\n  department?: string;\n  ownerId?: IUUID;\n  contractorGroupId?: IUUID;\n  projectAgentProviderBranchId?: IUUID;\n  contractorId?: IUUID;\n}\n\nexport interface IAgentProviderContactPayload {\n  agentProviderContact: IAgentProviderContact;\n}\n\nexport interface IAgentProviderInput {\n  companyName?: string;\n  alias?: string;\n  rFC?: string;\n  phone?: string;\n  website?: string;\n  ownerId?: IUUID;\n  typeAgentProvider?: ITypeAgentProvider;\n}\n\nexport interface IAgentProviderPayload {\n  agentProvider: IAgentProvider;\n}\n\nexport interface IBranchInput {\n  branchName?: string;\n  branchCode?: number;\n  typeAgentProvider: Array<ITypeAgentProvider>;\n}\n\nexport interface IBranchPayload {\n  branch: IBranch;\n}\n\nexport interface IComissionInput {\n  name?: string;\n  amount?: IDecimal;\n  uDI?: IDecimal;\n  other?: IDecimal;\n  observations?: string;\n  efectiveDate?: IDateTime;\n  expireDate?: IDateTime;\n  commisionRPF?: IDecimal;\n  otherRPF?: IDecimal;\n  rigth?: IDecimal;\n  otherRigths?: IDecimal;\n  initialPeriod?: number;\n  subSequentPeriod?: number;\n  anualRPF?: IDecimal;\n  bimestralRPF?: IDecimal;\n  mensualRPF?: IDecimal;\n  trimestralRPF?: IDecimal;\n  rigthUDI?: IDecimal;\n  rigthComission?: IDecimal;\n  keyId?: IUUID;\n  projectAgentProviderBranchId?: IUUID;\n}\n\nexport interface IComissionPayload {\n  comission: IComission;\n}\n\nexport interface IContractorCelulaInput {\n  celulaName?: string;\n  description?: string;\n  active?: boolean;\n}\n\nexport interface IContractorCelulaPayload {\n  contractorCelula: IContractorCelula;\n}\n\nexport interface IContractorClassificationInput {\n  name?: string;\n  description?: string;\n  projectId?: IUUID;\n  ownerId?: IUUID;\n}\n\nexport interface IContractorClassificationPayload {\n  contractorClassification: IContractorClassification;\n}\n\nexport interface IContractorGroupingLevelInput {\n  levelGrouping?: number;\n  description?: string;\n  ownerId?: IUUID;\n  responsableId?: IUUID;\n  projectId?: IUUID;\n  parentId?: IUUID;\n  groupingType?: IEnumContractorGroupingType;\n}\n\nexport interface IContractorGroupingLevelPayload {\n  contractorGroupingLevel: IContractorGroupingLevel;\n}\n\nexport interface IContractorInput {\n  projectId?: IUUID;\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  socialReason?: string;\n  gender?: Isaam_EnumGender;\n  birthDate?: IDateTime;\n  phoneNumber?: string;\n  rFC?: string;\n  description?: string;\n  email?: string;\n  active?: boolean;\n  sucursalId?: IUUID;\n  contractorType?: IEnumContractorType;\n}\n\nexport interface IContractorPayload {\n  contractor: Isaam_Contractor;\n}\n\nexport interface IContractorProcessDocumentInput {\n  delivered?: boolean;\n  validated?: boolean;\n  processDocumentId?: IUUID;\n  contractorId?: IUUID;\n}\n\nexport interface IContractorProcessDocumentPayload {\n  contractorProcessDocument: IContractorProcessDocument;\n}\n\nexport interface ICoverageCoinsuranceInput {\n  coinsurance?: string;\n  coinsuranceId?: number;\n  projectId?: IUUID;\n}\n\nexport interface ICoverageCoinsurancePayload {\n  coverageCoinsurance: ICoverageCoinsurance;\n}\n\nexport interface ICoverageDeductibleInput {\n  deductible?: string;\n  deductibleId?: number;\n  default?: boolean;\n  projectId?: IUUID;\n}\n\nexport interface ICoverageDeductiblePayload {\n  coverageDeductible: ICoverageDeductible;\n}\n\nexport interface ICoverageInPolicyInput {\n  name?: string;\n  sumInsured?: string;\n  deductible?: string;\n  prima?: string;\n  coinsurance?: string;\n  topecoinsurance?: string;\n  priority?: number;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n  packageId?: IUUID;\n}\n\nexport interface ICoverageInPolicyPayload {\n  coverageInPolicy: ICoverageInPolicy;\n}\n\nexport interface ICoverageInput {\n  name?: string;\n  default?: boolean;\n  ownerId?: IUUID;\n  packageId?: IUUID;\n  priority?: number;\n  projectAgentProviderId?: IUUID;\n}\n\nexport interface ICoveragePayload {\n  coverage: Isaam_Coverage;\n}\n\nexport interface ICoveragePackageInput {\n  name?: string;\n  description?: string;\n  projectAgentProviderBranchId?: IUUID;\n  ownerId?: IUUID;\n  projectAgentProviderId?: IUUID;\n  typePackage?: number;\n  policy?: number;\n}\n\nexport interface ICoveragePackagePayload {\n  coveragePackage: ICoveragePackage;\n}\n\nexport interface ICoverageSuminsuredInput {\n  sumInsured?: string;\n  sumId?: number;\n  default?: boolean;\n  projectId?: IUUID;\n}\n\nexport interface ICoverageSuminsuredPayload {\n  coverageSuminsured: ICoverageSuminsured;\n}\n\nexport interface ICoverageTopecoinsuranceInput {\n  topecinsurance?: string;\n  topecinsuranceId?: number;\n  projectId?: IUUID;\n}\n\nexport interface ICoverageTopecoinsurancePayload {\n  coverageTopecoinsurance: ICoverageTopecoinsurance;\n}\n\nexport interface IProcessDocumentInput {\n  name?: string;\n  slug?: string;\n  projectId?: IUUID;\n  typeAgentProvider?: Array<ITypeAgentProvider>;\n  active?: boolean;\n}\n\nexport interface IProcessDocumentPayload {\n  processDocument: IProcessDocument;\n}\n\nexport interface IProjectAgentProviderBranchInput {\n  branchId: IUUID;\n  agentProviderId: IUUID;\n  subBranchId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface IProjectAgentProviderBranchPayload {\n  projectAgentProviderBranch: IProjectAgentProviderBranch;\n}\n\nexport interface IProjectAgentProviderInput {\n  projectId?: IUUID;\n  agentProviderId?: IUUID;\n  observations?: string;\n}\n\nexport interface IProjectAgentProviderPayload {\n  projectAgentProvider: IProjectAgentProvider;\n}\n\nexport interface IReferrerAccountStateInput {\n  folio?: string;\n  total?: IDecimal;\n  printDate?: IDateTime;\n  status?: IEnumReferrerAccountState;\n  transactionNumber?: string;\n  reasonReject?: string;\n  observation?: string;\n  referrerId?: IUUID;\n  projectId?: IUUID;\n  ownerId?: IUUID;\n}\n\nexport interface IReferrerAccountStatePayload {\n  referrerAccountState: IReferrerAccountState;\n}\n\nexport interface IReferrerBranchInput {\n  projectAgentProviderId?: IUUID;\n  projectAgentProviderBranchId?: IUUID;\n  referrerId?: IUUID;\n  comition?: IDecimal;\n}\n\nexport interface IReferrerBranchPayload {\n  referrerBranch: IReferrerBranch;\n}\n\nexport interface IReferrerInput {\n  hiredDate?: IDateTime;\n  email?: string;\n  address?: string;\n  operationFactures?: string;\n  paymentType?: IEnumReferrerPaymentType;\n  paymentFrequency?: IEnumReferrerFrequency;\n  referenceNumber?: string;\n  bank?: IEnumBank;\n  memberId?: IUUID;\n  projectId?: IUUID;\n  phones?: Array<string>;\n}\n\nexport interface IReferrerPayload {\n  referrer: IReferrer;\n}\n\nexport interface IResponsableInvolvedInput {\n  projectId?: IUUID;\n  responsableId?: IUUID;\n  ownerId?: IUUID;\n  area?: IEnumResponsableArea;\n  name?: string;\n  contractorId?: IUUID;\n}\n\nexport interface IResponsableInvolvedPayload {\n  responsableInvolved: IResponsableInvolved;\n}\n\nexport interface ISubBranchInput {\n  subBranchName?: string;\n  subBranchCode?: number;\n  branchId?: IUUID;\n}\n\nexport interface ISubBranchPayload {\n  subbranch: ISubBranch;\n}\n\nexport interface IProjectAgentProviderEmailReminderInput {\n  model?: IEnumEmaiModel;\n  text?: string;\n  footer?: string;\n  memberId?: IUUID;\n  frequency?: IEnumEmailFrequency;\n  ramoCode?: IEnumEmailRamo;\n  policyType?: IEnumEmailType;\n  chargeType?: IEnumEmailChargeType;\n  dateType?: IEnumEmailDateType;\n  projectAgentProviderId?: IUUID;\n}\n\nexport interface IProjectAgentProviderEmailReminderPayload {\n  projectAgentProviderEmailReminder: IProjectAgentProviderEmailReminder;\n}\n\nexport interface IEndorsementInput {\n  type?: IEnumEntorsementType;\n  status?: number;\n  initDate?: IDateTime;\n  endDate?: IDateTime;\n  numberEndorsement?: string;\n  internalNumber?: string;\n  concept?: number;\n  otherDesc?: string;\n  original?: string;\n  change?: string;\n  observations?: string;\n  pNeta?: IDecimal;\n  rPF?: IDecimal;\n  rigth?: IDecimal;\n  iVA?: IDecimal;\n  pTotal?: IDecimal;\n  comision?: IDecimal;\n  ownerId?: IUUID;\n  policeId?: IUUID;\n  comisionPercent?: IDecimal;\n  anuency?: IDateTime;\n  projectId?: IUUID;\n  discount?: IDecimal;\n  researchCost?: IDecimal;\n  comisionPercentEarned?: IDecimal;\n  discoutnEarned?: IDecimal;\n  iVaEarned?: IDecimal;\n  pNETAEarned?: IDecimal;\n  pTotalEarned?: IDecimal;\n  rPFEarned?: IDecimal;\n  subTotalEarned?: IDecimal;\n  insuranceFolio?: string;\n  comitionPatmentDate?: IDateTime;\n  exchangeRate?: IDecimal;\n  maquila?: IDecimal;\n  bonoDate?: IDateTime;\n  variableBono?: IDecimal;\n  emisionFacturaDate?: IDateTime;\n  maquilaDate?: IDateTime;\n  folioFactura?: string;\n  monthFactura?: number;\n  fechaEntrega?: IDateTime;\n}\n\nexport interface IEndorsementPayload {\n  endorsement: IEndorsement;\n}\n\nexport interface IEndorsementCertInput {\n  proceed?: boolean;\n  certificate?: string;\n  endorsementId?: IUUID;\n  projectId?: IUUID;\n  beneficiarieId?: IUUID;\n  relationShipId?: IUUID;\n}\n\nexport interface IEndorsementCertPayload {\n  endorsementCert: IEndorsementCert;\n}\n\nexport interface ISinisterInput {\n  companyFolio?: string;\n  internFolio?: string;\n  status?: IEnumSinisterStatus;\n  promiseDate?: IDateTime;\n  affectedItem?: string;\n  sinisterNumber?: string;\n  sinisterDate?: IDateTime;\n  typeSinisterGeneral?: IEnumTypeSinisterGeneral;\n  reason?: string;\n  observations?: string;\n  ownerId?: IUUID;\n  policeId?: IUUID;\n  ingressDate?: IDateTime;\n  affectedAux?: string;\n  compromiseDate?: IDateTime;\n  affectedAuxRelationShip?: IEnumSinisterRelation;\n  insurerZipCodeSepomexId?: IUUID;\n  date?: IDateTime;\n  projectId?: IUUID;\n  terminationDate?: IDateTime;\n  fileLoadedDate?: IDateTime;\n}\n\nexport interface ISinisterPayload {\n  sinister: ISinister;\n}\n\nexport interface ISinisterAilingInput {\n  code?: string;\n  description?: string;\n}\n\nexport interface ISinisterAilingPayload {\n  sinisterAiling: ISinisterAiling;\n}\n\nexport interface ISinisterCarInput {\n  typeSinister?: IEnumSinisterCarType;\n  explication?: string;\n  third?: string;\n  imdemnization?: IDecimal;\n  sinisterId?: IUUID;\n  driver?: string;\n  coaseguro?: IDecimal;\n  deductible?: IDecimal;\n  projectId?: IUUID;\n  firstSubTypeSinister?: IEnumSinisterCarSubType;\n  secondSubTypeSinister?: IEnumSinisterCarSubSubType;\n}\n\nexport interface ISinisterCarPayload {\n  sinisterCar: ISinisterCar;\n}\n\nexport interface ISinisterCarContactInput {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  phone?: string;\n  email?: string;\n  references?: string;\n  sinisterCarId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface ISinisterCarContactPayload {\n  sinisterCarContact: ISinisterCarContact;\n}\n\nexport interface ISinisterDamageInput {\n  insuredProperty?: string;\n  lossEstimate?: string;\n  claimCause?: string;\n  affectedCoverage?: string;\n  indemnization?: IDecimal;\n  totalClaim?: IDecimal;\n  sinisterId?: IUUID;\n  currency?: IEnumFCurrency;\n  exchangeRate?: IEnumFCurrency;\n  totalCoaseguro?: IDecimal;\n  totalDeductible?: IDecimal;\n  projectId?: IUUID;\n}\n\nexport interface ISinisterDamagePayload {\n  sinisterDamage: ISinisterDamage;\n}\n\nexport interface ISinisterDamageContactInput {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  phone?: string;\n  email?: string;\n  references?: string;\n  sinisterDamageId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface ISinisterDamageContactPayload {\n  sinisterDamageContact: ISinisterDamageContact;\n}\n\nexport interface ISinisterLifeInput {\n  sinisterReason?: IEnumSinisterLifeReason;\n  paymentType?: IEnumSinisterPaymentType;\n  sinisterId?: IUUID;\n  affectedName?: string;\n  relationAffected?: IEnumSinisterRelation;\n  projectId?: IUUID;\n}\n\nexport interface ISinisterLifePayload {\n  sinisterLife: ISinisterLife;\n}\n\nexport interface ISinisterLifeContactInput {\n  firstName?: string;\n  lastName?: string;\n  secondLastName?: string;\n  phone?: string;\n  email?: string;\n  references?: string;\n  sinisterLifeId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface ISinisterLifeContactPayload {\n  sinisterLifeContact: ISinisterLifeContact;\n}\n\nexport interface ISinisterHospitalInput {\n  description?: string;\n}\n\nexport interface ISinisterHospitalPayload {\n  sinisterHospital: ISinisterHospital;\n}\n\nexport interface ISinisterFacturaInput {\n  facturaNumber?: string;\n  provider?: string;\n  facturaDate?: IDateTime;\n  import?: IDecimal;\n  iVA?: IDecimal;\n  total?: IDecimal;\n  procedent?: IDecimal;\n  observations?: string;\n  sinisterId?: IUUID;\n  concept?: string;\n  serie?: string;\n  projectId?: IUUID;\n}\n\nexport interface ISinisterFacturaPayload {\n  sinisterFactura: ISinisterFactura;\n}\n\nexport interface IPoliceReceiptInput {\n  number?: number;\n  primaNeta?: IDecimal;\n  rPF?: IDecimal;\n  right?: IDecimal;\n  iVA?: IDecimal;\n  subTotal?: IDecimal;\n  primaTotal?: IDecimal;\n  status?: IEnumPoliceReceiptStatus;\n  startDate?: IDateTime;\n  endDate?: IDateTime;\n  description?: string;\n  folio?: string;\n  type?: IEnumPoliceReceiptType;\n  payForm?: number;\n  paymentDocument?: string;\n  isCopy?: boolean;\n  isActive?: boolean;\n  bank?: IEnumBank;\n  ownerId?: IUUID;\n  policeId?: IUUID;\n  comision?: IDecimal;\n  validityDate?: IDateTime;\n  reconciledComision?: string;\n  reconciledDate?: IDateTime;\n  reconciledObservation?: string;\n  settlementFolio?: string;\n  reconciledFolio?: string;\n  settlementDate?: IDateTime;\n  reconcilationAccountId?: IUUID;\n  paymentDate?: IDateTime;\n  endorsementId?: IUUID;\n  delivered?: boolean;\n  paymentFolio?: string;\n  settlementBank?: IEnumBank;\n  settlementCurrRate?: number;\n  settlementDoc?: string;\n  settlementForm?: number;\n  excedent?: IDecimal;\n  bonoId?: IUUID;\n  changeReferrerComision?: boolean;\n  referrerComosion?: IDecimal;\n  binnacleTrack?: boolean;\n  emailTrack?: boolean;\n  phoneTrack?: boolean;\n  referrerClosedNew?: IEnumReferrerClosed;\n  memberPaymentId?: IUUID;\n  paymentPromise?: IDateTime;\n  researchCost?: IDecimal;\n  projectId?: IUUID;\n  conductPayment?: IEnumConductChoise;\n  exchangeRate?: IDecimal;\n  manualSerie?: number;\n  settlementMethod?: string;\n  memberSettlementId?: number;\n}\n\nexport interface IPoliceReceiptPayload {\n  policeReceipt: IPoliceReceipt;\n}\n\nexport interface IPoliceReceiptAccountInput {\n  name?: string;\n  account?: string;\n  observations?: string;\n  bank?: IEnumBank;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IPoliceReceiptAccountPayload {\n  policeReceiptAccount: IPoliceReceiptAccount;\n}\n\nexport interface IPoliceReceiptAccountStateInput {\n  policeReceiptAccountId?: IUUID;\n  policeReceiptId?: IUUID;\n}\n\nexport interface IPoliceReceiptAccountStatePayload {\n  policeReceiptAccountState: IPoliceReceiptAccountState;\n}\n\nexport interface IPoliceReceiptFolioInput {\n  paymentMethod?: IEnumPoliceReceiptFolioPaymentMethod;\n  paymentDocument?: string;\n  currentRate?: number;\n  paymentDate?: IDateTime;\n  folio?: string;\n  bank?: IEnumBank;\n  projectId?: IUUID;\n}\n\nexport interface IPoliceReceiptFolioPayload {\n  policeReceiptFolio: IPoliceReceiptFolio;\n}\n\nexport interface IPoliceReceiptPaymentInput {\n  paymentMethod?: IEnumPoliceReceiptPaymentMethod;\n  paymentDocument?: string;\n  amount?: IDecimal;\n  paymentDate?: IDateTime;\n  ownerId?: IUUID;\n  policeReceiptId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IPoliceReceiptPaymentPayload {\n  policeReceiptPayment: IPoliceReceiptPayment;\n}\n\nexport interface IPoliceFileInput {\n  url?: string;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n  name?: string;\n  sensible?: boolean;\n  shared?: boolean;\n  documentType?: boolean;\n  checked?: boolean;\n  active?: boolean;\n  folio?: string;\n  baseModel?: string;\n  height?: string;\n  width?: string;\n  policeId?: IUUID;\n}\n\nexport interface IPoliceFilePayload {\n  policeFile: IPoliceFile;\n}\n\nexport interface IInsurerCommentInput {\n  moldel?: IEnumInsurerCommentModel;\n  modelId?: IUUID;\n  content?: string;\n  isChild?: boolean;\n  memberId?: IUUID;\n  hasReminder?: boolean;\n  reminderDate?: IDateTime;\n  taskModel?: string;\n  projectId?: IUUID;\n  parentId?: IUUID;\n}\n\nexport interface IInsurerCommentPayload {\n  insurerComment: IInsurerComment;\n}\n\nexport interface IInsurerFileReadingInput {\n  projectId?: IUUID;\n  name?: string;\n  policeType?: string;\n  insurer?: string;\n  branch?: string;\n  subBranch?: string;\n  ownerId?: IUUID;\n}\n\nexport interface IInsurerFileReadingPayload {\n  insurerFileReading: IInsurerFileReading;\n}\n\nexport interface IInsurerFileReadingTagInput {\n  area?: string;\n  cssClass?: string;\n  height?: string;\n  width?: string;\n  name?: string;\n  pageNumber?: string;\n  tag?: string;\n  x?: string;\n  y?: string;\n  z?: string;\n  projectId?: IUUID;\n  ownerId?: IUUID;\n}\n\nexport interface IInsurerFileReadingTagPayload {\n  insurerFileReadingTag: IInsurerFileReadingTag;\n}\n\nexport interface IInsurerBailTypeInput {\n  name?: string;\n  code?: number;\n  ownerId?: IUUID;\n  projectId?: IUUID;\n  subBranchId?: IUUID;\n}\n\nexport interface IInsurerBailTypePayload {\n  insurerBailType: IInsurerBailType;\n}\n\nexport interface IInsurerInvolvedInput {\n  involvedId?: IUUID;\n  ownerId?: IUUID;\n  personId?: IUUID;\n  projetId?: IUUID;\n}\n\nexport interface IInsurerInvolvedPayload {\n  insurerInvolved: IInsurerInvolved;\n}\n\nexport interface IInsurerLogInput {\n  moldel?: IEnumInsurerCommentModel;\n  event?: IEnumInsurerLogEvent;\n  associatedId?: string;\n  identifier?: string;\n  memberId?: IUUID;\n  projectId?: IUUID;\n  original?: string;\n  change?: string;\n}\n\nexport interface IInsurerLogPayload {\n  insurerLog: IInsurerLog;\n}\n\nexport interface IInsurerLogEmailInput {\n  moldel?: IEnumInsurerCommentModel;\n  associatedId?: string;\n  to?: Array<string>;\n  cC?: Array<string>;\n  cCO?: Array<string>;\n  subject?: string;\n  body?: string;\n  file?: string;\n  insurerCommentId?: IUUID;\n  insurerLogId?: IUUID;\n}\n\nexport interface IInsurerLogEmailPayload {\n  insurerLogEmail: IInsurerLogEmail;\n}\n\nexport interface IInsurerOrgInfoInput {\n  policeRequest?: boolean;\n  endosoRequest?: boolean;\n  renewal?: boolean;\n  policeRecord?: boolean;\n  endosoRecord?: boolean;\n  sinisterRequest?: boolean;\n  sinisterEnd?: boolean;\n  coberageReminder?: boolean;\n  renReminder?: boolean;\n  collectionRemider?: boolean;\n  noteCreated?: boolean;\n  noteApplied?: boolean;\n  sinisterCancel?: boolean;\n  sinisterReject?: boolean;\n  sinisterOnHold?: boolean;\n  sinisterInProcess?: boolean;\n  cumReminder?: boolean;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerOrgInfoPayload {\n  insurerOrgInfo: IInsurerOrgInfo;\n}\n\nexport interface IInsurerTicketInput {\n  title?: string;\n  description?: string;\n  date?: IDateTime;\n  priority?: IEnumInsurerTicketPriority;\n  closeDay?: IDateTime;\n  closed?: boolean;\n  identifier?: string;\n  assignedId?: IUUID;\n  ownerId?: IUUID;\n  archived?: boolean;\n  associated?: string;\n  moldel?: number;\n  route?: string;\n  concept?: IEnumInsurerTicketConcept;\n  insurerCommentId?: IUUID;\n  closedBy?: IUUID;\n  projectId?: IUUID;\n  reassingBy?: IUUID;\n  reassignDate?: IDateTime;\n}\n\nexport interface IInsurerTicketPayload {\n  insurerTicket: IInsurerTicket;\n}\n\nexport interface IInsurerScheduleInput {\n  title?: string;\n  color?: string;\n  startsAt?: IDateTime;\n  endsAt?: IDateTime;\n  resizable?: boolean;\n  draggable?: boolean;\n  ownerId?: IUUID;\n  observations?: string;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerSchedulePayload {\n  insurerSchedule: IInsurerSchedule;\n}\n\nexport interface IInsurerScheduleParticipantInput {\n  insurerScheduleId?: IUUID;\n  memberId?: IUUID;\n}\n\nexport interface IInsurerScheduleParticipantPayload {\n  insurerScheduleParticipant: IInsurerScheduleParticipant;\n}\n\nexport interface IInsurerNotificationInput {\n  model?: IEnumInsurerCommentModel;\n  modelId?: IUUID;\n  title?: string;\n  description?: string;\n  seen?: boolean;\n  involved?: boolean;\n  assignedId?: IUUID;\n  ownerId?: IUUID;\n  areaInvolved?: boolean;\n  projectId?: IUUID;\n  contractorPolice?: Array<IUUID>;\n  policeBranch?: Array<IUUID>;\n  policeGroupongLevel?: IUUID;\n  policeProvider?: Array<IUUID>;\n  site?: string;\n  startsAt?: IDateTime;\n  type?: IEnumNotificationType;\n  reminderRecordId?: IUUID;\n}\n\nexport interface IInsurerNotificationPayload {\n  insurerNotification: IInsurerNotification;\n}\n\nexport interface IInsurerReminderInput {\n  name?: string;\n  description?: string;\n  sended?: boolean;\n  type?: IEnumInsurerReminderType;\n  instanceType?: IEnumInsurerReminderInstanceType;\n  reminderDate?: IDateTime;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerReminderPayload {\n  insurerReminder: IInsurerReminder;\n}\n\nexport interface IInsurerReminderProjectAgentProviderInput {\n  insurerReminderId?: IUUID;\n  projectAgentProviderId?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerReminderProjectAgentProviderPayload {\n  insurerReminderProjectAgentProvider: IInsurerReminderProjectAgentProvider;\n}\n\nexport interface IInsurerReminderRecordInput {\n  insurerReminderId?: IUUID;\n  seen?: boolean;\n  projectId?: IUUID;\n  recordId?: IUUID;\n  recordModel?: IEnumInsurerCommentModel;\n}\n\nexport interface IInsurerReminderRecordPayload {\n  insurerReminderRecord: IInsurerReminderRecord;\n}\n\nexport interface IInsurerReminderSubBranchInput {\n  insurerReminderId?: IUUID;\n  subBranch?: number;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerReminderSubBranchPayload {\n  insurerReminderSubBranch: IInsurerReminderSubBranch;\n}\n\nexport interface IInsurerBirthDateTemplateInput {\n  subject?: string;\n  text?: string;\n  enabled?: boolean;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerBirthDateTemplatePayload {\n  insurerBirthDateTemplate: IInsurerBirthDateTemplate;\n}\n\nexport interface IInsurerDirectoryInput {\n  name?: string;\n  phone?: string;\n  area?: string;\n  employment?: string;\n  branch?: IUUID;\n  gender?: Isaam_EnumGender;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerDirectoryPayload {\n  insurerDirectory: IInsurerDirectory;\n}\n\nexport interface IInsurerExpenseInput {\n  quantity?: number;\n  concept?: string;\n  month?: IEnumMonth;\n  porjectId?: IUUID;\n}\n\nexport interface IInsurerExpensePayload {\n  insurerExpense: IInsurerExpense;\n}\n\nexport interface IInsurerIbisFormInput {\n  file?: string;\n  name?: string;\n  branch?: IUUID;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerIbisFormPayload {\n  insurerIbisForm: IInsurerIbisForm;\n}\n\nexport interface IInsurerIbisProviderInput {\n  name?: string;\n  street?: string;\n  number?: string;\n  colony?: string;\n  city?: string;\n  zipCode?: number;\n  state?: string;\n  phone?: string;\n  latitude?: number;\n  length?: number;\n  branch?: IUUID;\n  type?: number;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerIbisProviderPayload {\n  insurerIbisProvider: IInsurerIbisProvider;\n}\n\nexport interface IInsurerSenderInput {\n  email?: string;\n  passApp?: string;\n  area?: number;\n  active?: boolean;\n  projectId?: IUUID;\n}\n\nexport interface IInsurerSenderPayload {\n  insurerSender: IInsurerSender;\n}\n\nexport interface IInsurerZipCodeSepomexInput {\n  zipCode?: number;\n  colony?: string;\n  city?: string;\n  state?: string;\n  code?: string;\n  cityId?: string;\n}\n\nexport interface IInsurerZipCodeSepomexPayload {\n  insurerZipCodeSepomex: IInsurerZipCodeSepomex;\n}\n\nexport interface IAgentProviderBonoInput {\n  agentKeyId?: IUUID;\n  startValidity?: IDateTime;\n  endValidity?: IDateTime;\n  quantity?: number;\n  exchangeRate?: IEnumFCurrency;\n  bono?: IEnumBonoType;\n  projectId?: IUUID;\n  factureNumber?: string;\n  ownerId?: IUUID;\n  referrerId?: IUUID;\n}\n\nexport interface IAgentProviderBonoPayload {\n  agentProviderBono: IAgentProviderBono;\n}\n\nexport interface ISendNotificationInput {\n  insurerNotificationId: IUUID;\n  insurerTicketId: IUUID;\n}\n\nexport interface ISendNotificationPayload {\n  sended: boolean;\n}\n\nexport interface ICreateMultipleNotificationInput {\n  title?: string;\n  description?: string;\n  data?: string;\n  enabled?: boolean;\n  view?: boolean;\n  devicesId: Array<IUUID>;\n  date?: IDateTime;\n}\n\nexport interface IMultipleNotificationPayload {\n  notifications: Array<INotification>;\n}\n\nexport interface ICreateMultipleMemberNotificationInput {\n  notifications: Array<ICreateMemberNotificationInput>;\n}\n\nexport interface ICreateMemberNotificationInput {\n  title?: string;\n  description?: string;\n  data?: string;\n  enabled?: boolean;\n  view?: boolean;\n  memberId: IUUID;\n  date?: IDateTime;\n}\n\nexport interface IMultipleMemberNotificationPayload {\n  notifications: Array<INotification>;\n}\n\nexport interface IMemberNotificationPayload {\n  notifications: Array<INotification>;\n}\n\nexport interface INotificationInput {\n  title?: string;\n  description?: string;\n  data?: string;\n  enabled?: boolean;\n  view?: boolean;\n  deviceId: IUUID;\n  date?: IDateTime;\n}\n\nexport interface INotificationPayload {\n  notification: INotification;\n}\n\nexport interface IMultipleNotificationInput {\n  notifications: Array<INotificationZippedInput>;\n}\n\nexport interface INotificationZippedInput {\n  id: IUUID;\n  notification: IUpdateNotificationInput;\n}\n\nexport interface IUpdateNotificationInput {\n  title?: string;\n  description?: string;\n  data?: string;\n  enabled?: boolean;\n  view?: boolean;\n  deviceId?: IUUID;\n  date?: IDateTime;\n}\n\nexport interface IDeviceInput {\n  memberId?: IUUID;\n  projectId?: IUUID;\n  token?: string;\n  unique?: boolean;\n  avalible?: boolean;\n}\n\nexport interface IDevicePayload {\n  device: IDevice;\n}\n\nexport interface ISetCodeAsUnavailableInput {\n  code: string;\n}\n\nexport interface ISetCodeAsUnavailablePayload {\n  success: boolean;\n}\n\nexport interface ICreateAdminCodeInput {\n  code: string;\n}\n\nexport interface ICreateAdminCodePayload {\n  adminCode: IAdminCode;\n}\n\nexport interface IAdminCode {\n  code: string;\n  isAvailable: boolean;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IScanCodeInput {\n  code: string;\n  image: string;\n  memberId: IUUID;\n  providerId: IUUID;\n}\n\nexport interface IScanCodePayload {\n  code: ICode;\n}\n\nexport interface ISendMessageInput {\n  phone: string;\n  lada: string;\n}\n\nexport interface ISendMessagePayload {\n  code: string;\n}\n\nexport interface ILookForCodeInput {\n  code: string;\n}\n\nexport interface ILookForCodePayload {\n  success: boolean;\n}\n\nexport interface ICreateCodeInput {\n  uniqueCode: string;\n  expiration: IDateTime;\n  batch: string;\n  providerId: IUUID;\n  brandId: IUUID;\n  orderId?: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateCodePayload {\n  code: ICode;\n}\n\nexport interface ICreatePrizeCategoryInput {\n  name: string;\n  image: string;\n  projectId: IUUID;\n  dots: number;\n}\n\nexport interface ICreatePrizeCategoryPayload {\n  prizeCategory: IPrizeCategory;\n}\n\nexport interface ICreatePrizeCodeInput {\n  prizeCategoryId: IUUID;\n  status: IPrizeCodeStatus;\n  code: string;\n  value?: number;\n  projectId: IUUID;\n  description: string;\n}\n\nexport interface ICreatePrizeCodePayload {\n  prizeCode: IPrizeCode;\n}\n\nexport interface IDeleteCodeInput {\n  id: IUUID;\n}\n\nexport interface IDeleteCodePayload {\n  message: string;\n}\n\nexport interface IDeletePrizeCodeInput {\n  prizeCodeId: IUUID;\n}\n\nexport interface IDeletePrizeCodePayload {\n  message: string;\n}\n\nexport interface IExchangeDotsInput {\n  prizeCategoryId: IUUID;\n  memberId: IUUID;\n  name: string;\n  email: string;\n  phone: string;\n}\n\nexport interface IExchangeDotsPayload {\n  dotMovement: IDotMovement;\n}\n\nexport interface ICreateAdverseEventInput {\n  memberId: IUUID;\n  name: string;\n  email: string;\n  problem: string;\n  description: string;\n  projectId: IUUID;\n}\n\nexport interface ICreateAdverseEventPayload {\n  adverseEvent: IAdverseEvent;\n}\n\nexport interface IAdverseEvent {\n  projectId?: IUUID;\n  memberId: IUUID;\n  name: string;\n  email: string;\n  problem: string;\n  description: string;\n  problemStatus: IProblemStatus;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport const enum IProblemStatus {\n  OPEN = 'OPEN',\n  PENDING = 'PENDING',\n  CLOSED = 'CLOSED'\n}\n\nexport interface IDeleteAdverseEventInput {\n  id: IUUID;\n}\n\nexport interface IDeleteAdverseEventPayload {\n  message: string;\n}\n\nexport interface ICreateBrandInput {\n  projectId: IUUID;\n  name: string;\n  image?: string;\n}\n\nexport interface ICreateBrandPayload {\n  brand: IBrand;\n}\n\nexport interface ISubscription {\n  conversationPublished: Array<IConversationReply>;\n}\n\nexport const enum IApplyPolicy {\n  BEFORE_RESOLVER = 'BEFORE_RESOLVER',\n  AFTER_RESOLVER = 'AFTER_RESOLVER'\n}\n\nexport interface Iexchange_CreateProviderPayload {\n  provider: IProvider;\n}\n\nexport interface IUpdatePurchaseQuoteMutation {\n  updatePurchaseQuote: IUpdatePurchaseQuotePayload;\n}\n\nexport interface IUpdatePurchaseQuoteInput {\n  id: IUUID;\n  invoiceDate?: IDateTime;\n  expirationDate?: IDateTime;\n  reference?: string;\n  branchOfficeId?: IUUID;\n  storeId?: IUUID;\n  sellerId?: IUUID;\n  customerId?: IUUID;\n  comment?: string;\n  products?: Array<IUUID>;\n  discount?: IDecimal;\n  subTotal?: IDecimal;\n  taxes?: IDecimal;\n  detained?: IDecimal;\n  total?: IDecimal;\n  purchaseQuoteStatus?: IPurchaseQuoteStatus;\n}\n\nexport interface IUpdatePurchaseQuotePayload {\n  message: string;\n}\n\nexport interface IUpdateRouteMutation {\n  updateRoute: IUpdateRoutePayload;\n}\n\nexport interface IUpdateRouteInput {\n  routeId: IUUID;\n  title?: string;\n  description?: string;\n  branchOfficeId?: IUUID;\n  routeType?: string;\n  travelDays?: number;\n  beginningDate?: IDateTime;\n  sellers?: Array<IRouteSellerDtoInput>;\n  customers?: Array<IRouteCustomerDtoInput>;\n  itineraries: Array<IRouteItineraryDtoInput>;\n}\n\nexport interface IRouteSellerDtoInput {\n  key: string;\n  branchOfficeId: IUUID;\n  storeId: IUUID;\n  sellerId: IUUID;\n}\n\nexport interface IRouteCustomerDtoInput {\n  customerId: IUUID;\n  address: string;\n}\n\nexport interface IRouteItineraryDtoInput {\n  customerId: IUUID;\n  description: string;\n  address: string;\n}\n\nexport interface IUpdateRoutePayload {\n  message: string;\n}\n\nexport interface Iexchange_CreateProviderInput {\n  name: string;\n  projectId: IUUID;\n}\n\nexport interface Imultiquoter_CollaboratorSortInput {\n  memberId?: ISortEnumType;\n  projectRoleId?: ISortEnumType;\n  staffQuoteId?: ISortEnumType;\n  estimatedTime?: ISortEnumType;\n  amount?: ISortEnumType;\n  staffQuote?: IStaffQuoteSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface Imultiquoter_ProposalSortInput {\n  staffQuoteId?: ISortEnumType;\n  methodology?: ISortEnumType;\n  status?: ISortEnumType;\n  staffQuote?: IStaffQuoteSortInput;\n  id?: ISortEnumType;\n  createdAt?: ISortEnumType;\n  updatedAt?: ISortEnumType;\n}\n\nexport interface Idocsreader_CreateTemplatePayload {\n  scans?: Array<IDocumentScan>;\n}\n\nexport interface Idocsreader_CreateTemplateInput {\n  documentReadId: IUUID;\n}\n\nexport interface ICreateDettachedStripeSuscriptionMutation {\n  createDettachedStripeSuscription: ICreateDettachedStripeSuscriptionPayload;\n}\n\nexport interface ICreateDettachedStripeSuscriptionInput {\n  projectId: IUUID;\n  invoiceId: IUUID;\n  planId: IUUID;\n  memberId: IUUID;\n  paymentMethodId: IUUID;\n}\n\nexport interface ICreateDettachedStripeSuscriptionPayload {\n  message: string;\n}\n\nexport interface ICreateStripeCustomerMutation {\n  createStripeCustomer: ICreateStripeCustomerPayload;\n}\n\nexport interface ICreateStripeCustomerInput {\n  memberId: IUUID;\n  projectId: IUUID;\n}\n\nexport interface ICreateStripeCustomerPayload {\n  customer: IStripeCustomer;\n}\n\nexport interface IStripeCustomer {\n  memberId: IUUID;\n  projectId: IUUID;\n  stripeId: string;\n  paymentMethodId?: IUUID;\n  paymentMethod?: IPaymentMethod;\n  id: IUUID;\n  createdAt: IDateTime;\n  updatedAt: IDateTime;\n}\n\nexport interface IAuthorizeDirective {\n  policy?: string;\n  roles?: Array<string>;\n  apply: IApplyPolicy;\n}\n\nexport interface Iitus_CreateOfficePayload {\n  office: Iitus_Office;\n}\n\nexport interface Iitus_CreateOfficeInput {\n  name: string;\n  contractorId: IUUID;\n  countryId: IUUID;\n  state: string;\n  projectId: IUUID;\n}\n\nexport interface Icalculator_DeleteConsultInput {\n  id: number;\n}\n\n/**\n * The name scalar represents a valid GraphQL name as specified in the spec and can be used to refer to fields or types.\n */\nexport type IName = any;\n\n/*********************************\n *                               *\n *         TYPE RESOLVERS        *\n *                               *\n *********************************/\n/**\n * This interface define the shape of your resolver\n * Note that this type is designed to be compatible with graphql-tools resolvers\n * However, you can still use other generated interfaces to make your resolver type-safed\n */\nexport interface IResolver {\n  Query?: IQueryTypeResolver;\n  UUID?: GraphQLScalarType;\n  DateTime?: GraphQLScalarType;\n  Decimal?: GraphQLScalarType;\n  GroupCollectionSegment?: IGroupCollectionSegmentTypeResolver;\n  Group?: IGroupTypeResolver;\n  Project?: IProjectTypeResolver;\n  Industry?: IIndustryTypeResolver;\n  Company?: ICompanyTypeResolver;\n  Country?: ICountryTypeResolver;\n  Currency?: ICurrencyTypeResolver;\n  Profile?: IProfileTypeResolver;\n  Member?: IMemberTypeResolver;\n  MemberCompany?: IMemberCompanyTypeResolver;\n  MemberRole?: IMemberRoleTypeResolver;\n  Role?: IRoleTypeResolver;\n  MemberProject?: IMemberProjectTypeResolver;\n  MemberProjectRoleProject?: IMemberProjectRoleProjectTypeResolver;\n  ProjectRole?: IProjectRoleTypeResolver;\n  Permission?: IPermissionTypeResolver;\n  ViewManager?: IViewManagerTypeResolver;\n  PageManager?: IPageManagerTypeResolver;\n  ViewColumn?: IViewColumnTypeResolver;\n  ViewBlockColumn?: IViewBlockColumnTypeResolver;\n  ColumnTab?: IColumnTabTypeResolver;\n  MemberStream?: IMemberStreamTypeResolver;\n  MemberTaxonomy?: IMemberTaxonomyTypeResolver;\n  HealthInsurance?: IHealthInsuranceTypeResolver;\n  EnterpriseData?: IEnterpriseDataTypeResolver;\n  BillingData?: IBillingDataTypeResolver;\n  Sell?: ISellTypeResolver;\n  MemberRelation?: IMemberRelationTypeResolver;\n  WalletTransaction?: IWalletTransactionTypeResolver;\n  WalletTransactionStatus?: IWalletTransactionStatusTypeResolver;\n  EWallet?: IEWalletTypeResolver;\n  MemberWallet?: IMemberWalletTypeResolver;\n  WalletTransactionMemberRelation?: IWalletTransactionMemberRelationTypeResolver;\n  WalletTransactionMemberDetail?: IWalletTransactionMemberDetailTypeResolver;\n  MemberBusiness?: IMemberBusinessTypeResolver;\n  MemberIndustry?: IMemberIndustryTypeResolver;\n  Address?: IAddressTypeResolver;\n  Invoice?: IInvoiceTypeResolver;\n  InvoiceDetail?: IInvoiceDetailTypeResolver;\n  Product?: IProductTypeResolver;\n  Taxonomy?: ITaxonomyTypeResolver;\n  Article?: IArticleTypeResolver;\n  Survey?: ISurveyTypeResolver;\n  Question?: IQuestionTypeResolver;\n  Option?: IOptionTypeResolver;\n  Answer?: IAnswerTypeResolver;\n  ProductDetail?: IProductDetailTypeResolver;\n  Image?: IImageTypeResolver;\n  Store?: IStoreTypeResolver;\n  BranchOffice?: IBranchOfficeTypeResolver;\n  Manager?: IManagerTypeResolver;\n  StoreStock?: IStoreStockTypeResolver;\n  StockAlert?: IStockAlertTypeResolver;\n  ProductProv?: IProductProvTypeResolver;\n  ProductProvider?: IProductProviderTypeResolver;\n  Purchase?: IPurchaseTypeResolver;\n  ProductPurchase?: IProductPurchaseTypeResolver;\n  PurchaseFile?: IPurchaseFileTypeResolver;\n  ProductPrice?: IProductPriceTypeResolver;\n  Hiring?: IHiringTypeResolver;\n  HiringType?: IHiringTypeTypeResolver;\n  Collaborator?: ICollaboratorTypeResolver;\n  ResourceQuoteDetail?: IResourceQuoteDetailTypeResolver;\n  ResourceQuote?: IResourceQuoteTypeResolver;\n  Proposal?: IProposalTypeResolver;\n  Area?: IAreaTypeResolver;\n  ServiceArea?: IServiceAreaTypeResolver;\n  ServiceQuiz?: IServiceQuizTypeResolver;\n  Quiz?: IQuizTypeResolver;\n  QuizSection?: IQuizSectionTypeResolver;\n  QuizQuestion?: IQuizQuestionTypeResolver;\n  QuizQuestionAnswer?: IQuizQuestionAnswerTypeResolver;\n  QuizAnswer?: IQuizAnswerTypeResolver;\n  QuizQuestionMember?: IQuizQuestionMemberTypeResolver;\n  QuizMember?: IQuizMemberTypeResolver;\n  QuizMemberDescription?: IQuizMemberDescriptionTypeResolver;\n  QuizMemberAnswer?: IQuizMemberAnswerTypeResolver;\n  QuizQuestionNested?: IQuizQuestionNestedTypeResolver;\n  QuizQuestionPrefab?: IQuizQuestionPrefabTypeResolver;\n  QuizQuestionPrefabGroup?: IQuizQuestionPrefabGroupTypeResolver;\n  QuizQuestionPrefabFeatured?: IQuizQuestionPrefabFeaturedTypeResolver;\n  ServiceMember?: IServiceMemberTypeResolver;\n  HiringService?: IHiringServiceTypeResolver;\n  ResourceQuoteDetailBoardRow?: IResourceQuoteDetailBoardRowTypeResolver;\n  CollaboratorHours?: ICollaboratorHoursTypeResolver;\n  Shift?: IShiftTypeResolver;\n  Day?: IDayTypeResolver;\n  TimeSpan?: GraphQLScalarType;\n  Business?: IBusinessTypeResolver;\n  BusinessType?: IBusinessTypeTypeResolver;\n  BusinessRuleProjectPlan?: IBusinessRuleProjectPlanTypeResolver;\n  BusinessRule?: IBusinessRuleTypeResolver;\n  ProjectPlan?: IProjectPlanTypeResolver;\n  ProjectPlanSubscription?: IProjectPlanSubscriptionTypeResolver;\n  AccountKey?: IAccountKeyTypeResolver;\n  PaymentMethod?: IPaymentMethodTypeResolver;\n  EventDetail?: IEventDetailTypeResolver;\n  FisicExam?: IFisicExamTypeResolver;\n  MedicalBackground?: IMedicalBackgroundTypeResolver;\n  Format?: IFormatTypeResolver;\n  PacientMedicalBackground?: IPacientMedicalBackgroundTypeResolver;\n  MedicalBackgroundDetail?: IMedicalBackgroundDetailTypeResolver;\n  ClinicHistoryMedicalBackgroundDetail?: IClinicHistoryMedicalBackgroundDetailTypeResolver;\n  MedicRecipe?: IMedicRecipeTypeResolver;\n  PacientNote?: IPacientNoteTypeResolver;\n  VitalSign?: IVitalSignTypeResolver;\n  PatientVitalSignsResponse?: IPatientVitalSignsResponseTypeResolver;\n  Vaccine?: IVaccineTypeResolver;\n  MemberBoard?: IMemberBoardTypeResolver;\n  Board?: IBoardTypeResolver;\n  BoardList?: IBoardListTypeResolver;\n  Card?: ICardTypeResolver;\n  CardReply?: ICardReplyTypeResolver;\n  NestedFile?: INestedFileTypeResolver;\n  MemberCard?: IMemberCardTypeResolver;\n  CardColumnValue?: ICardColumnValueTypeResolver;\n  BoardColumnValue?: IBoardColumnValueTypeResolver;\n  BoardGroupColumn?: IBoardGroupColumnTypeResolver;\n  BoardColumnType?: IBoardColumnTypeTypeResolver;\n  BoardRow?: IBoardRowTypeResolver;\n  BoardMemberReference?: IBoardMemberReferenceTypeResolver;\n  CardChecklist?: ICardChecklistTypeResolver;\n  CardCheckComponent?: ICardCheckComponentTypeResolver;\n  BoardStatus?: IBoardStatusTypeResolver;\n  Space?: ISpaceTypeResolver;\n  MemberSpace?: IMemberSpaceTypeResolver;\n  File?: IFileTypeResolver;\n  Folder?: IFolderTypeResolver;\n  SharedFile?: ISharedFileTypeResolver;\n  SharedFolder?: ISharedFolderTypeResolver;\n  Device?: IDeviceTypeResolver;\n  DeviceNotification?: IDeviceNotificationTypeResolver;\n  Notification?: INotificationTypeResolver;\n  ProjectSocialNetwork?: IProjectSocialNetworkTypeResolver;\n  Niche?: INicheTypeResolver;\n  NicheService?: INicheServiceTypeResolver;\n  Microservice?: IMicroserviceTypeResolver;\n  ProjectMicroservice?: IProjectMicroserviceTypeResolver;\n  Function?: IFunctionTypeResolver;\n  Shop?: IShopTypeResolver;\n  ServiceHelper?: IServiceHelperTypeResolver;\n  Configuration?: IConfigurationTypeResolver;\n  GroupTaxonomy?: IGroupTaxonomyTypeResolver;\n  CollectionSegmentInfo?: ICollectionSegmentInfoTypeResolver;\n  NicheCollectionSegment?: INicheCollectionSegmentTypeResolver;\n  NicheServiceCollectionSegment?: INicheServiceCollectionSegmentTypeResolver;\n  MyUrl?: IMyUrlTypeResolver;\n  CountryCollectionSegment?: ICountryCollectionSegmentTypeResolver;\n  MemberProjectCollectionSegment?: IMemberProjectCollectionSegmentTypeResolver;\n  MemberCollectionSegment?: IMemberCollectionSegmentTypeResolver;\n  MemberInSpaceCollectionSegment?: IMemberInSpaceCollectionSegmentTypeResolver;\n  MemberInSpace?: IMemberInSpaceTypeResolver;\n  MemberInBoardCollectionSegment?: IMemberInBoardCollectionSegmentTypeResolver;\n  MemberInBoard?: IMemberInBoardTypeResolver;\n  ListUsersLazyLoadConnection?: IListUsersLazyLoadConnectionTypeResolver;\n  PageInfo?: IPageInfoTypeResolver;\n  ListUsersLazyLoadEdge?: IListUsersLazyLoadEdgeTypeResolver;\n  ProjectsInfiniteConnection?: IProjectsInfiniteConnectionTypeResolver;\n  ProjectsInfiniteEdge?: IProjectsInfiniteEdgeTypeResolver;\n  MemberChat?: IMemberChatTypeResolver;\n  MemberFullName?: IMemberFullNameTypeResolver;\n  CustomMemberDto?: ICustomMemberDtoTypeResolver;\n  Plan?: IPlanTypeResolver;\n  PlanFunctionality?: IPlanFunctionalityTypeResolver;\n  PlanLimitation?: IPlanLimitationTypeResolver;\n  RecommendedProject?: IRecommendedProjectTypeResolver;\n  ProjectCollectionSegment?: IProjectCollectionSegmentTypeResolver;\n  MemberRelationCollectionSegment?: IMemberRelationCollectionSegmentTypeResolver;\n  ProjectTemplate?: IProjectTemplateTypeResolver;\n  RankingDTOCollectionSegment?: IRankingDTOCollectionSegmentTypeResolver;\n  RankingDTO?: IRankingDTOTypeResolver;\n  SellCollectionSegment?: ISellCollectionSegmentTypeResolver;\n  MemberStats?: IMemberStatsTypeResolver;\n  SellStats?: ISellStatsTypeResolver;\n  MemberCompanyDtoCollectionSegment?: IMemberCompanyDtoCollectionSegmentTypeResolver;\n  MemberCompanyDto?: IMemberCompanyDtoTypeResolver;\n  FAQ?: IFAQTypeResolver;\n  TopicDisease?: ITopicDiseaseTypeResolver;\n  Disease?: IDiseaseTypeResolver;\n  InsuranceFormCollectionSegment?: IInsuranceFormCollectionSegmentTypeResolver;\n  InsuranceForm?: IInsuranceFormTypeResolver;\n  QuestionDTO?: IQuestionDTOTypeResolver;\n  ArticlesConnection?: IArticlesConnectionTypeResolver;\n  ArticlesEdge?: IArticlesEdgeTypeResolver;\n  ArticleCollectionSegment?: IArticleCollectionSegmentTypeResolver;\n  ProductCollectionSegment?: IProductCollectionSegmentTypeResolver;\n  TaxonomyCollectionSegment?: ITaxonomyCollectionSegmentTypeResolver;\n  SeoDTO?: ISeoDTOTypeResolver;\n  Course?: ICourseTypeResolver;\n  CourseSchedule?: ICourseScheduleTypeResolver;\n  CoursesByProjectIdConnection?: ICoursesByProjectIdConnectionTypeResolver;\n  CoursesByProjectIdEdge?: ICoursesByProjectIdEdgeTypeResolver;\n  CourseTaxonomy?: ICourseTaxonomyTypeResolver;\n  StoreTransfersByStoreIdConnection?: IStoreTransfersByStoreIdConnectionTypeResolver;\n  StoreTransfersByStoreIdEdge?: IStoreTransfersByStoreIdEdgeTypeResolver;\n  StoreTransfer?: IStoreTransferTypeResolver;\n  ProductTransferred?: IProductTransferredTypeResolver;\n  CoursesByTaxonomyAndModalityConnection?: ICoursesByTaxonomyAndModalityConnectionTypeResolver;\n  CoursesByTaxonomyAndModalityEdge?: ICoursesByTaxonomyAndModalityEdgeTypeResolver;\n  BranchOfficesConnection?: IBranchOfficesConnectionTypeResolver;\n  BranchOfficesEdge?: IBranchOfficesEdgeTypeResolver;\n  ManagersConnection?: IManagersConnectionTypeResolver;\n  ManagersEdge?: IManagersEdgeTypeResolver;\n  PurchaseCollectionSegment?: IPurchaseCollectionSegmentTypeResolver;\n  StoresConnection?: IStoresConnectionTypeResolver;\n  StoresEdge?: IStoresEdgeTypeResolver;\n  StoreTransfersConnection?: IStoreTransfersConnectionTypeResolver;\n  StoreTransfersEdge?: IStoreTransfersEdgeTypeResolver;\n  DrugCollectionSegment?: IDrugCollectionSegmentTypeResolver;\n  Drug?: IDrugTypeResolver;\n  Carrier?: ICarrierTypeResolver;\n  GroupResponse?: IGroupResponseTypeResolver;\n  GroupItem?: IGroupItemTypeResolver;\n  Employer?: IEmployerTypeResolver;\n  PharmacyRadiusResponse?: IPharmacyRadiusResponseTypeResolver;\n  Pharmacy?: IPharmacyTypeResolver;\n  Pricing?: IPricingTypeResolver;\n  PharmacyResponse?: IPharmacyResponseTypeResolver;\n  SearchMemberResponse?: ISearchMemberResponseTypeResolver;\n  CardHolder?: ICardHolderTypeResolver;\n  MemberInfo?: IMemberInfoTypeResolver;\n  blog_Group?: Iblog_GroupTypeResolver;\n  BenefitSpending?: IBenefitSpendingTypeResolver;\n  PricingDrug?: IPricingDrugTypeResolver;\n  PharmacyRadiusPricing?: IPharmacyRadiusPricingTypeResolver;\n  Transaction?: ITransactionTypeResolver;\n  Menu?: IMenuTypeResolver;\n  MenuHeading?: IMenuHeadingTypeResolver;\n  MenuItem?: IMenuItemTypeResolver;\n  Restaurant?: IRestaurantTypeResolver;\n  LegalTermCollectionSegment?: ILegalTermCollectionSegmentTypeResolver;\n  LegalTerm?: ILegalTermTypeResolver;\n  StockAlertCollectionSegment?: IStockAlertCollectionSegmentTypeResolver;\n  PurchaseQuote?: IPurchaseQuoteTypeResolver;\n  PurchaseQuoteProduct?: IPurchaseQuoteProductTypeResolver;\n  PurchaseQuoteCollectionSegment?: IPurchaseQuoteCollectionSegmentTypeResolver;\n  Tax?: ITaxTypeResolver;\n  ProductSellCollectionSegment?: IProductSellCollectionSegmentTypeResolver;\n  ProductSell?: IProductSellTypeResolver;\n  ProductSellItem?: IProductSellItemTypeResolver;\n  RouteCollectionSegment?: IRouteCollectionSegmentTypeResolver;\n  Route?: IRouteTypeResolver;\n  RouteSeller?: IRouteSellerTypeResolver;\n  RouteCustomer?: IRouteCustomerTypeResolver;\n  RouteItinerary?: IRouteItineraryTypeResolver;\n  MessageFix?: IMessageFixTypeResolver;\n  ScheduleManagerDto?: IScheduleManagerDtoTypeResolver;\n  ScheduleManager?: IScheduleManagerTypeResolver;\n  EventType?: IEventTypeTypeResolver;\n  SubEventType?: ISubEventTypeTypeResolver;\n  Schedule?: IScheduleTypeResolver;\n  Turn?: ITurnTypeResolver;\n  Event?: IEventTypeResolver;\n  EventSession?: IEventSessionTypeResolver;\n  EventMember?: IEventMemberTypeResolver;\n  EventCharge?: IEventChargeTypeResolver;\n  Diagnostic?: IDiagnosticTypeResolver;\n  Medicine?: IMedicineTypeResolver;\n  EventCollectionSegment?: IEventCollectionSegmentTypeResolver;\n  ResourceQuoteCollectionSegment?: IResourceQuoteCollectionSegmentTypeResolver;\n  ResourceQuoteDetailCollectionSegment?: IResourceQuoteDetailCollectionSegmentTypeResolver;\n  ProposalCollectionSegment?: IProposalCollectionSegmentTypeResolver;\n  CollaboratorCollectionSegment?: ICollaboratorCollectionSegmentTypeResolver;\n  CollaboratorHoursCollectionSegment?: ICollaboratorHoursCollectionSegmentTypeResolver;\n  HoursReportedDTO?: IHoursReportedDTOTypeResolver;\n  ConfigurationTemplate?: IConfigurationTemplateTypeResolver;\n  Component?: IComponentTypeResolver;\n  WebsitePage?: IWebsitePageTypeResolver;\n  WebsitePageComponent?: IWebsitePageComponentTypeResolver;\n  WebsitePageSeo?: IWebsitePageSeoTypeResolver;\n  ProjectPlanSubscriptionCollectionSegment?: IProjectPlanSubscriptionCollectionSegmentTypeResolver;\n  BusinessCollectionSegment?: IBusinessCollectionSegmentTypeResolver;\n  BusinessTypeCollectionSegment?: IBusinessTypeCollectionSegmentTypeResolver;\n  BusinessRuleCollectionSegment?: IBusinessRuleCollectionSegmentTypeResolver;\n  ProjectPlanCollectionSegment?: IProjectPlanCollectionSegmentTypeResolver;\n  Template?: ITemplateTypeResolver;\n  Coupon?: ICouponTypeResolver;\n  ErrorPage?: IErrorPageTypeResolver;\n  ErrorPageValidation?: IErrorPageValidationTypeResolver;\n  CouponTemplate?: ICouponTemplateTypeResolver;\n  DocumentCategoryCollectionSegment?: IDocumentCategoryCollectionSegmentTypeResolver;\n  DocumentCategory?: IDocumentCategoryTypeResolver;\n  DocumentCategoryDetail?: IDocumentCategoryDetailTypeResolver;\n  Document?: IDocumentTypeResolver;\n  DocumentTemplate?: IDocumentTemplateTypeResolver;\n  TemplatePage?: ITemplatePageTypeResolver;\n  DocumentTag?: IDocumentTagTypeResolver;\n  DocumentScan?: IDocumentScanTypeResolver;\n  DocumentRead?: IDocumentReadTypeResolver;\n  DocumentCollectionSegment?: IDocumentCollectionSegmentTypeResolver;\n  DocumentTemplateCollectionSegment?: IDocumentTemplateCollectionSegmentTypeResolver;\n  TemplatePageCollectionSegment?: ITemplatePageCollectionSegmentTypeResolver;\n  DocumentReadCollectionSegment?: IDocumentReadCollectionSegmentTypeResolver;\n  VideoRoom?: IVideoRoomTypeResolver;\n  VideoRoomMember?: IVideoRoomMemberTypeResolver;\n  VideoRoomRecord?: IVideoRoomRecordTypeResolver;\n  RoomTokenLiveKit2?: IRoomTokenLiveKit2TypeResolver;\n  VideoCall?: IVideoCallTypeResolver;\n  VideoCallMember?: IVideoCallMemberTypeResolver;\n  VideoCallService?: IVideoCallServiceTypeResolver;\n  Video?: IVideoTypeResolver;\n  ContactEmail?: IContactEmailTypeResolver;\n  ServiceCollectionSegment?: IServiceCollectionSegmentTypeResolver;\n  AreaCollectionSegment?: IAreaCollectionSegmentTypeResolver;\n  ServiceQuizCollectionSegment?: IServiceQuizCollectionSegmentTypeResolver;\n  QuizCollectionSegment?: IQuizCollectionSegmentTypeResolver;\n  QuizSectionCollectionSegment?: IQuizSectionCollectionSegmentTypeResolver;\n  QuizQuestionCollectionSegment?: IQuizQuestionCollectionSegmentTypeResolver;\n  QuizQuestionAnswerCollectionSegment?: IQuizQuestionAnswerCollectionSegmentTypeResolver;\n  QuizAnswerCollectionSegment?: IQuizAnswerCollectionSegmentTypeResolver;\n  QuizMemberCollectionSegment?: IQuizMemberCollectionSegmentTypeResolver;\n  QuizMemberGroupedCollectionSegment?: IQuizMemberGroupedCollectionSegmentTypeResolver;\n  QuizMemberGrouped?: IQuizMemberGroupedTypeResolver;\n  QuizQuestionMemberCollectionSegment?: IQuizQuestionMemberCollectionSegmentTypeResolver;\n  QuizMemberAnswerCollectionSegment?: IQuizMemberAnswerCollectionSegmentTypeResolver;\n  QuizMemberDescriptionCollectionSegment?: IQuizMemberDescriptionCollectionSegmentTypeResolver;\n  Catalog?: ICatalogTypeResolver;\n  Errors?: IErrorsTypeResolver;\n  QuotationResponse?: IQuotationResponseTypeResolver;\n  Coverage?: ICoverageTypeResolver;\n  DetailsInsurer?: IDetailsInsurerTypeResolver;\n  DetailsProduct?: IDetailsProductTypeResolver;\n  ConditionsProduct?: IConditionsProductTypeResolver;\n  Specs?: ISpecsTypeResolver;\n  DetailsCoverage?: IDetailsCoverageTypeResolver;\n  Details?: IDetailsTypeResolver;\n  TransactionCollectionSegment?: ITransactionCollectionSegmentTypeResolver;\n  payment_Transaction?: Ipayment_TransactionTypeResolver;\n  MethodPayment?: IMethodPaymentTypeResolver;\n  MethodPaymentCollectionSegment?: IMethodPaymentCollectionSegmentTypeResolver;\n  PlanCollectionSegment?: IPlanCollectionSegmentTypeResolver;\n  payment_Plan?: Ipayment_PlanTypeResolver;\n  InvoiceCollectionSegment?: IInvoiceCollectionSegmentTypeResolver;\n  CustomerSuscription?: ICustomerSuscriptionTypeResolver;\n  ProductStripe?: IProductStripeTypeResolver;\n  AccountKeyCollectionSegment?: IAccountKeyCollectionSegmentTypeResolver;\n  CardMethodDTO?: ICardMethodDTOTypeResolver;\n  Long?: GraphQLScalarType;\n  VehiclesCarCatalogHdiCodeYear?: IVehiclesCarCatalogHdiCodeYearTypeResolver;\n  VehiclesCarCatalogHdi?: IVehiclesCarCatalogHdiTypeResolver;\n  VehiclesCarCodeRelation?: IVehiclesCarCodeRelationTypeResolver;\n  VehiclesCarCatalogAba?: IVehiclesCarCatalogAbaTypeResolver;\n  VehiclesCarCatalogAbaCodeYear?: IVehiclesCarCatalogAbaCodeYearTypeResolver;\n  VehiclesCarCatalogAfirme?: IVehiclesCarCatalogAfirmeTypeResolver;\n  VehiclesCarCatalogAfirmeCodeYear?: IVehiclesCarCatalogAfirmeCodeYearTypeResolver;\n  VehiclesCarCatalogAig?: IVehiclesCarCatalogAigTypeResolver;\n  VehiclesCarCatalogAna?: IVehiclesCarCatalogAnaTypeResolver;\n  VehiclesCarCatalogAnaCodeYear?: IVehiclesCarCatalogAnaCodeYearTypeResolver;\n  VehiclesCarCatalogAtla?: IVehiclesCarCatalogAtlaTypeResolver;\n  VehiclesCarCatalogAtlasCodeYear?: IVehiclesCarCatalogAtlasCodeYearTypeResolver;\n  VehiclesCarCatalogAxa?: IVehiclesCarCatalogAxaTypeResolver;\n  VehiclesCarCatalogAxaCodeYear?: IVehiclesCarCatalogAxaCodeYearTypeResolver;\n  VehiclesCarCatalogBanorte?: IVehiclesCarCatalogBanorteTypeResolver;\n  VehiclesCarCatalogBanorteCodeYear?: IVehiclesCarCatalogBanorteCodeYearTypeResolver;\n  VehiclesCarCatalogGnp?: IVehiclesCarCatalogGnpTypeResolver;\n  VehiclesCarCatalogGnpCodeYear?: IVehiclesCarCatalogGnpCodeYearTypeResolver;\n  VehiclesCarCatalogMapfre?: IVehiclesCarCatalogMapfreTypeResolver;\n  VehiclesCarCatalogMapfreCodeYear?: IVehiclesCarCatalogMapfreCodeYearTypeResolver;\n  VehiclesCarCatalogPotosi?: IVehiclesCarCatalogPotosiTypeResolver;\n  VehiclesCarCatalogP?: IVehiclesCarCatalogPTypeResolver;\n  VehiclesCarCatalogQualita?: IVehiclesCarCatalogQualitaTypeResolver;\n  VehiclesCarCatalogQualitasCodeYear?: IVehiclesCarCatalogQualitasCodeYearTypeResolver;\n  VehiclesCarCatalogZurich?: IVehiclesCarCatalogZurichTypeResolver;\n  VehiclesCarCatalogZurichCodeYear?: IVehiclesCarCatalogZurichCodeYearTypeResolver;\n  QuotationCoverage?: IQuotationCoverageTypeResolver;\n  Quote?: IQuoteTypeResolver;\n  CarQuotation?: ICarQuotationTypeResolver;\n  InsurerService?: IInsurerServiceTypeResolver;\n  InsurerServiceCredential?: IInsurerServiceCredentialTypeResolver;\n  InsurerServiceEnvironment?: IInsurerServiceEnvironmentTypeResolver;\n  Insurer?: IInsurerTypeResolver;\n  QuoteService?: IQuoteServiceTypeResolver;\n  StaffQuote?: IStaffQuoteTypeResolver;\n  multiquoter_Proposal?: Imultiquoter_ProposalTypeResolver;\n  multiquoter_Collaborator?: Imultiquoter_CollaboratorTypeResolver;\n  InsurerCoverageProject?: IInsurerCoverageProjectTypeResolver;\n  InsurerCoverage?: IInsurerCoverageTypeResolver;\n  CotizacionPackage?: ICotizacionPackageTypeResolver;\n  CoveragesCoverage?: ICoveragesCoverageTypeResolver;\n  GenericsService?: IGenericsServiceTypeResolver;\n  ServiceProcessPayload?: IServiceProcessPayloadTypeResolver;\n  CotizacionCredential?: ICotizacionCredentialTypeResolver;\n  CotizacionQuote?: ICotizacionQuoteTypeResolver;\n  Date?: GraphQLScalarType;\n  CotizacionCarForm?: ICotizacionCarFormTypeResolver;\n  ClientsClient?: IClientsClientTypeResolver;\n  ClientsAddress?: IClientsAddressTypeResolver;\n  CotizacionQuoteCoverage?: ICotizacionQuoteCoverageTypeResolver;\n  CotizacionQuotePayForm?: ICotizacionQuotePayFormTypeResolver;\n  CoveragesPackagesList?: ICoveragesPackagesListTypeResolver;\n  RunServicePayload?: IRunServicePayloadTypeResolver;\n  QuoterResponse?: IQuoterResponseTypeResolver;\n  CoverageService?: ICoverageServiceTypeResolver;\n  ResponseApiInsurer?: IResponseApiInsurerTypeResolver;\n  Service?: IServiceTypeResolver;\n  QuoteCoverage?: IQuoteCoverageTypeResolver;\n  QuotePayFrecuency?: IQuotePayFrecuencyTypeResolver;\n  DiscountService?: IDiscountServiceTypeResolver;\n  StadisticsResult?: IStadisticsResultTypeResolver;\n  ListRQuoterProfilesByProjectIdConnection?: IListRQuoterProfilesByProjectIdConnectionTypeResolver;\n  ListRQuoterProfilesByProjectIdEdge?: IListRQuoterProfilesByProjectIdEdgeTypeResolver;\n  QuoterProfile?: IQuoterProfileTypeResolver;\n  Office?: IOfficeTypeResolver;\n  QuoterProfileInsurer?: IQuoterProfileInsurerTypeResolver;\n  ListRQuoterProfilesInsurerByProjectIdConnection?: IListRQuoterProfilesInsurerByProjectIdConnectionTypeResolver;\n  ListRQuoterProfilesInsurerByProjectIdEdge?: IListRQuoterProfilesInsurerByProjectIdEdgeTypeResolver;\n  Homologator?: IHomologatorTypeResolver;\n  QuoteCollectionSegment?: IQuoteCollectionSegmentTypeResolver;\n  QuoteCount?: IQuoteCountTypeResolver;\n  Registration?: IRegistrationTypeResolver;\n  Quoter?: IQuoterTypeResolver;\n  GenderDTO?: IGenderDTOTypeResolver;\n  CarTypeDTO?: ICarTypeDTOTypeResolver;\n  ListBrandDTO?: IListBrandDTOTypeResolver;\n  ListSubBrandDTO?: IListSubBrandDTOTypeResolver;\n  ListYearDTO?: IListYearDTOTypeResolver;\n  ListVersionDTO?: IListVersionDTOTypeResolver;\n  HomologationService?: IHomologationServiceTypeResolver;\n  ColoniaDTO?: IColoniaDTOTypeResolver;\n  EstadoDTO?: IEstadoDTOTypeResolver;\n  CoverageDTO?: ICoverageDTOTypeResolver;\n  CatalogCollectionSegment?: ICatalogCollectionSegmentTypeResolver;\n  multiquoter_Catalog?: Imultiquoter_CatalogTypeResolver;\n  CatalogByYear?: ICatalogByYearTypeResolver;\n  InsurerCollectionSegment?: IInsurerCollectionSegmentTypeResolver;\n  OfficeCollectionSegment?: IOfficeCollectionSegmentTypeResolver;\n  QuoterProfileCollectionSegment?: IQuoterProfileCollectionSegmentTypeResolver;\n  ApiService?: IApiServiceTypeResolver;\n  DynamicPage?: IDynamicPageTypeResolver;\n  DynamicSection?: IDynamicSectionTypeResolver;\n  DynamicTab?: IDynamicTabTypeResolver;\n  DynamicSectionBlock?: IDynamicSectionBlockTypeResolver;\n  DynamicBlock?: IDynamicBlockTypeResolver;\n  DynamicCustomMeta?: IDynamicCustomMetaTypeResolver;\n  DynamicCustomValue?: IDynamicCustomValueTypeResolver;\n  DynamicBlockCollectionSegment?: IDynamicBlockCollectionSegmentTypeResolver;\n  DynamicSectionCollectionSegment?: IDynamicSectionCollectionSegmentTypeResolver;\n  DynamicTabCollectionSegment?: IDynamicTabCollectionSegmentTypeResolver;\n  DynamicSectionBlockCollectionSegment?: IDynamicSectionBlockCollectionSegmentTypeResolver;\n  DynamicCustomMetaCollectionSegment?: IDynamicCustomMetaCollectionSegmentTypeResolver;\n  DynamicCustomValueCollectionSegment?: IDynamicCustomValueCollectionSegmentTypeResolver;\n  ChargeCollectionSegment?: IChargeCollectionSegmentTypeResolver;\n  Charge?: IChargeTypeResolver;\n  ClinicHistory?: IClinicHistoryTypeResolver;\n  EventDetailCollectionSegment?: IEventDetailCollectionSegmentTypeResolver;\n  MedicalService?: IMedicalServiceTypeResolver;\n  MedicalConfig?: IMedicalConfigTypeResolver;\n  RegistSesion?: IRegistSesionTypeResolver;\n  Therapy?: ITherapyTypeResolver;\n  TherapyCollectionSegment?: ITherapyCollectionSegmentTypeResolver;\n  RecipeConfig?: IRecipeConfigTypeResolver;\n  ConsultNote?: IConsultNoteTypeResolver;\n  BillingRequest?: IBillingRequestTypeResolver;\n  ConsultDto?: IConsultDtoTypeResolver;\n  SpaceCollectionSegment?: ISpaceCollectionSegmentTypeResolver;\n  BoardStatusCollectionSegment?: IBoardStatusCollectionSegmentTypeResolver;\n  BoardCollectionSegment?: IBoardCollectionSegmentTypeResolver;\n  BoardListCollectionSegment?: IBoardListCollectionSegmentTypeResolver;\n  CardReplyCollectionSegment?: ICardReplyCollectionSegmentTypeResolver;\n  CardCollectionSegment?: ICardCollectionSegmentTypeResolver;\n  NestedFileCollectionSegment?: INestedFileCollectionSegmentTypeResolver;\n  MemberCardCollectionSegment?: IMemberCardCollectionSegmentTypeResolver;\n  MemberBoardCollectionSegment?: IMemberBoardCollectionSegmentTypeResolver;\n  MemberSpaceCollectionSegment?: IMemberSpaceCollectionSegmentTypeResolver;\n  ListMemberSpaceOnValueConnection?: IListMemberSpaceOnValueConnectionTypeResolver;\n  ListMemberSpaceOnValueEdge?: IListMemberSpaceOnValueEdgeTypeResolver;\n  ListMemberSpaceOnCardConnection?: IListMemberSpaceOnCardConnectionTypeResolver;\n  ListMemberSpaceOnCardEdge?: IListMemberSpaceOnCardEdgeTypeResolver;\n  ListMemberBoardOnValueConnection?: IListMemberBoardOnValueConnectionTypeResolver;\n  ListMemberBoardOnValueEdge?: IListMemberBoardOnValueEdgeTypeResolver;\n  ListMemberBoardOnCardConnection?: IListMemberBoardOnCardConnectionTypeResolver;\n  ListMemberBoardOnCardEdge?: IListMemberBoardOnCardEdgeTypeResolver;\n  BoardColumnTypeCollectionSegment?: IBoardColumnTypeCollectionSegmentTypeResolver;\n  MemberBoardDTO?: IMemberBoardDTOTypeResolver;\n  CardColumnValueCollectionSegment?: ICardColumnValueCollectionSegmentTypeResolver;\n  BoardMemberReferenceCollectionSegment?: IBoardMemberReferenceCollectionSegmentTypeResolver;\n  Attribute?: IAttributeTypeResolver;\n  AttributeValue?: IAttributeValueTypeResolver;\n  MaterialCombinationAttribute?: IMaterialCombinationAttributeTypeResolver;\n  MaterialCombination?: IMaterialCombinationTypeResolver;\n  Material?: IMaterialTypeResolver;\n  MaterialCategory?: IMaterialCategoryTypeResolver;\n  MeasureUnity?: IMeasureUnityTypeResolver;\n  MeasureUnityTwo?: IMeasureUnityTwoTypeResolver;\n  Measure?: IMeasureTypeResolver;\n  MeasureValue?: IMeasureValueTypeResolver;\n  MaterialModule?: IMaterialModuleTypeResolver;\n  Module?: IModuleTypeResolver;\n  QuotationModule?: IQuotationModuleTypeResolver;\n  MaterialQuotation?: IMaterialQuotationTypeResolver;\n  MaterialVariableQuotation?: IMaterialVariableQuotationTypeResolver;\n  Variable?: IVariableTypeResolver;\n  MaterialVariableModule?: IMaterialVariableModuleTypeResolver;\n  Quotation?: IQuotationTypeResolver;\n  MadreQuotation?: IMadreQuotationTypeResolver;\n  UserCustomer?: IUserCustomerTypeResolver;\n  Customer?: ICustomerTypeResolver;\n  BuildingSiteAddress?: IBuildingSiteAddressTypeResolver;\n  ModuleCategory?: IModuleCategoryTypeResolver;\n  MaterialStock?: IMaterialStockTypeResolver;\n  MaterialStockMeasure?: IMaterialStockMeasureTypeResolver;\n  MaterialCategoriesConnection?: IMaterialCategoriesConnectionTypeResolver;\n  MaterialCategoriesEdge?: IMaterialCategoriesEdgeTypeResolver;\n  BrandsHermer?: IBrandsHermerTypeResolver;\n  ModelsHermer?: IModelsHermerTypeResolver;\n  YearsHermer?: IYearsHermerTypeResolver;\n  ModelLobatoHermer?: IModelLobatoHermerTypeResolver;\n  ModelMercadoLibreResultHermer?: IModelMercadoLibreResultHermerTypeResolver;\n  ModelMercadoLibreHermer?: IModelMercadoLibreHermerTypeResolver;\n  ComparedMercadoLibreHermer?: IComparedMercadoLibreHermerTypeResolver;\n  ResultConsultHermer?: IResultConsultHermerTypeResolver;\n  ConsultShortHermer?: IConsultShortHermerTypeResolver;\n  CarMercadoHermerShort?: ICarMercadoHermerShortTypeResolver;\n  AnalysisCarMercadoHermerShort?: IAnalysisCarMercadoHermerShortTypeResolver;\n  ResultConsultAllHermer?: IResultConsultAllHermerTypeResolver;\n  ConsultHermer?: IConsultHermerTypeResolver;\n  lobatoHermerData?: IlobatoHermerDataTypeResolver;\n  ClientHermer?: IClientHermerTypeResolver;\n  ComparedHermer?: IComparedHermerTypeResolver;\n  CarMercadoHermer?: ICarMercadoHermerTypeResolver;\n  AnalysisCarMercadoHermer?: IAnalysisCarMercadoHermerTypeResolver;\n  ResultConsultLastAnalysisHermer?: IResultConsultLastAnalysisHermerTypeResolver;\n  ConsultLastAnalysisHermer?: IConsultLastAnalysisHermerTypeResolver;\n  LastAnalysisCarMercadoHermer?: ILastAnalysisCarMercadoHermerTypeResolver;\n  LastCarMercadoHermer?: ILastCarMercadoHermerTypeResolver;\n  DownloadFile?: IDownloadFileTypeResolver;\n  ListFoldersConnection?: IListFoldersConnectionTypeResolver;\n  ListFoldersEdge?: IListFoldersEdgeTypeResolver;\n  FoldersListConnection?: IFoldersListConnectionTypeResolver;\n  FoldersListEdge?: IFoldersListEdgeTypeResolver;\n  SharedFilesFromFolderDto?: ISharedFilesFromFolderDtoTypeResolver;\n  FileCollectionSegment?: IFileCollectionSegmentTypeResolver;\n  FolderCollectionSegment?: IFolderCollectionSegmentTypeResolver;\n  OutstandingFiles?: IOutstandingFilesTypeResolver;\n  ConversationReply?: IConversationReplyTypeResolver;\n  Conversation?: IConversationTypeResolver;\n  MemberConversation?: IMemberConversationTypeResolver;\n  EWalletCollectionSegment?: IEWalletCollectionSegmentTypeResolver;\n  MemberWalletCollectionSegment?: IMemberWalletCollectionSegmentTypeResolver;\n  WalletTransactionCollectionSegment?: IWalletTransactionCollectionSegmentTypeResolver;\n  WalletTransactionStatusCollectionSegment?: IWalletTransactionStatusCollectionSegmentTypeResolver;\n  WalletTransactionMemberRelationCollectionSegment?: IWalletTransactionMemberRelationCollectionSegmentTypeResolver;\n  WalletTransactionMemberDetailCollectionSegment?: IWalletTransactionMemberDetailCollectionSegmentTypeResolver;\n  WalletTransactionSummary?: IWalletTransactionSummaryTypeResolver;\n  WalletTransactionSummaryMemberRelation?: IWalletTransactionSummaryMemberRelationTypeResolver;\n  WalletTransactionSumaryPrincipal?: IWalletTransactionSumaryPrincipalTypeResolver;\n  CertificateMovement?: ICertificateMovementTypeResolver;\n  Certificate?: ICertificateTypeResolver;\n  InsurerModule?: IInsurerModuleTypeResolver;\n  InsurerSinisterContact?: IInsurerSinisterContactTypeResolver;\n  InsurerAdjusterContact?: IInsurerAdjusterContactTypeResolver;\n  InsurerCompanyModule?: IInsurerCompanyModuleTypeResolver;\n  InsurerContact?: IInsurerContactTypeResolver;\n  InsurerBranch?: IInsurerBranchTypeResolver;\n  InsurerAddress?: IInsurerAddressTypeResolver;\n  MerchandiseDetail?: IMerchandiseDetailTypeResolver;\n  Merchandise?: IMerchandiseTypeResolver;\n  TrafficDetail?: ITrafficDetailTypeResolver;\n  InsurerFee?: IInsurerFeeTypeResolver;\n  PolicyModule?: IPolicyModuleTypeResolver;\n  MoneySymbol?: IMoneySymbolTypeResolver;\n  PolicyDeductible?: IPolicyDeductibleTypeResolver;\n  PolicyDeclaration?: IPolicyDeclarationTypeResolver;\n  PolicyPrima?: IPolicyPrimaTypeResolver;\n  PolicyFrequencyPayment?: IPolicyFrequencyPaymentTypeResolver;\n  PolicyProduct?: IPolicyProductTypeResolver;\n  itus_Module?: Iitus_ModuleTypeResolver;\n  PolicyFile?: IPolicyFileTypeResolver;\n  PolicyCoverage?: IPolicyCoverageTypeResolver;\n  Fee?: IFeeTypeResolver;\n  InsurerFeeFile?: IInsurerFeeFileTypeResolver;\n  CertificateFile?: ICertificateFileTypeResolver;\n  CertificateBeneficiary?: ICertificateBeneficiaryTypeResolver;\n  Beneficiary?: IBeneficiaryTypeResolver;\n  CertificateMovementReason?: ICertificateMovementReasonTypeResolver;\n  CountryRequest?: ICountryRequestTypeResolver;\n  InsurerCompany?: IInsurerCompanyTypeResolver;\n  Contractor?: IContractorTypeResolver;\n  itus_Office?: Iitus_OfficeTypeResolver;\n  ContractorPolicy?: IContractorPolicyTypeResolver;\n  itus_Policy?: Iitus_PolicyTypeResolver;\n  CertificateCollectionSegment?: ICertificateCollectionSegmentTypeResolver;\n  BeneficiaryCollectionSegment?: IBeneficiaryCollectionSegmentTypeResolver;\n  InsurerCompanyCollectionSegment?: IInsurerCompanyCollectionSegmentTypeResolver;\n  MerchandiseCollectionSegment?: IMerchandiseCollectionSegmentTypeResolver;\n  MerchandiseCategory?: IMerchandiseCategoryTypeResolver;\n  Contact?: IContactTypeResolver;\n  Money?: IMoneyTypeResolver;\n  Policy?: IPolicyTypeResolver;\n  ContractorOffice?: IContractorOfficeTypeResolver;\n  ContractorContact?: IContractorContactTypeResolver;\n  PolicyModuleCollectionSegment?: IPolicyModuleCollectionSegmentTypeResolver;\n  InsurerModuleCollectionSegment?: IInsurerModuleCollectionSegmentTypeResolver;\n  InsurerFeeCollectionSegment?: IInsurerFeeCollectionSegmentTypeResolver;\n  SchoolCollectionSegment?: ISchoolCollectionSegmentTypeResolver;\n  School?: ISchoolTypeResolver;\n  DayService?: IDayServiceTypeResolver;\n  Level?: ILevelTypeResolver;\n  Grade?: IGradeTypeResolver;\n  ClassroomCollectionSegment?: IClassroomCollectionSegmentTypeResolver;\n  Classroom?: IClassroomTypeResolver;\n  Student?: IStudentTypeResolver;\n  school_Attendance?: Ischool_AttendanceTypeResolver;\n  StudentTutor?: IStudentTutorTypeResolver;\n  LevelCollectionSegment?: ILevelCollectionSegmentTypeResolver;\n  GradeCollectionSegment?: IGradeCollectionSegmentTypeResolver;\n  StudentCollectionSegment?: IStudentCollectionSegmentTypeResolver;\n  AttendanceCollectionSegment?: IAttendanceCollectionSegmentTypeResolver;\n  Attendance?: IAttendanceTypeResolver;\n  MyConversationCollectionSegment?: IMyConversationCollectionSegmentTypeResolver;\n  MyConversation?: IMyConversationTypeResolver;\n  MyMessage?: IMyMessageTypeResolver;\n  AgentProviderBonoCollectionSegment?: IAgentProviderBonoCollectionSegmentTypeResolver;\n  AgentProviderBono?: IAgentProviderBonoTypeResolver;\n  AgentKey?: IAgentKeyTypeResolver;\n  ProjectAgentProvider?: IProjectAgentProviderTypeResolver;\n  AgentProvider?: IAgentProviderTypeResolver;\n  CoveragePackage?: ICoveragePackageTypeResolver;\n  ProjectAgentProviderBranch?: IProjectAgentProviderBranchTypeResolver;\n  Branch?: IBranchTypeResolver;\n  SubBranch?: ISubBranchTypeResolver;\n  InsurerBailType?: IInsurerBailTypeTypeResolver;\n  Police?: IPoliceTypeResolver;\n  Sucursal?: ISucursalTypeResolver;\n  saam_Contractor?: Isaam_ContractorTypeResolver;\n  ContractorClassification?: IContractorClassificationTypeResolver;\n  ContractorGroup?: IContractorGroupTypeResolver;\n  AgentProviderContact?: IAgentProviderContactTypeResolver;\n  SinisterAccident?: ISinisterAccidentTypeResolver;\n  Sinister?: ISinisterTypeResolver;\n  SinisterCar?: ISinisterCarTypeResolver;\n  SinisterCarContact?: ISinisterCarContactTypeResolver;\n  SinisterDamage?: ISinisterDamageTypeResolver;\n  SinisterDamageContact?: ISinisterDamageContactTypeResolver;\n  SinisterFactura?: ISinisterFacturaTypeResolver;\n  SinisterLife?: ISinisterLifeTypeResolver;\n  InsurerZipCodeSepomex?: IInsurerZipCodeSepomexTypeResolver;\n  PersonalInformation?: IPersonalInformationTypeResolver;\n  FormAccidentDisease?: IFormAccidentDiseaseTypeResolver;\n  RelationShip?: IRelationShipTypeResolver;\n  Endorsement?: IEndorsementTypeResolver;\n  Beneficiarie?: IBeneficiarieTypeResolver;\n  FormLife?: IFormLifeTypeResolver;\n  EndorsementCert?: IEndorsementCertTypeResolver;\n  PoliceReceipt?: IPoliceReceiptTypeResolver;\n  PoliceReceiptAccount?: IPoliceReceiptAccountTypeResolver;\n  PoliceReceiptAccountState?: IPoliceReceiptAccountStateTypeResolver;\n  PoliceReceiptPayment?: IPoliceReceiptPaymentTypeResolver;\n  FormAutomobileDamage?: IFormAutomobileDamageTypeResolver;\n  FormDamage?: IFormDamageTypeResolver;\n  SinisterAiling?: ISinisterAilingTypeResolver;\n  ContractorGroupingLevel?: IContractorGroupingLevelTypeResolver;\n  ContractorCelula?: IContractorCelulaTypeResolver;\n  Referrer?: IReferrerTypeResolver;\n  ReferrerAccountState?: IReferrerAccountStateTypeResolver;\n  ReferrerBranch?: IReferrerBranchTypeResolver;\n  InvolvedReferrer?: IInvolvedReferrerTypeResolver;\n  ContractorProcessDocument?: IContractorProcessDocumentTypeResolver;\n  ProcessDocument?: IProcessDocumentTypeResolver;\n  PoliceQuote?: IPoliceQuoteTypeResolver;\n  PoliceQuotePrima?: IPoliceQuotePrimaTypeResolver;\n  PoliceAssign?: IPoliceAssignTypeResolver;\n  PolicePendient?: IPolicePendientTypeResolver;\n  OldPolice?: IOldPoliceTypeResolver;\n  CoverageInPolicy?: ICoverageInPolicyTypeResolver;\n  PoliceFile?: IPoliceFileTypeResolver;\n  Comission?: IComissionTypeResolver;\n  InsurerReminderProjectAgentProvider?: IInsurerReminderProjectAgentProviderTypeResolver;\n  InsurerReminder?: IInsurerReminderTypeResolver;\n  InsurerReminderRecord?: IInsurerReminderRecordTypeResolver;\n  InsurerReminderSubBranch?: IInsurerReminderSubBranchTypeResolver;\n  ProjectAgentProviderEmailReminder?: IProjectAgentProviderEmailReminderTypeResolver;\n  BeneficiarieCollectionSegment?: IBeneficiarieCollectionSegmentTypeResolver;\n  FormAccidentDiseaseCollectionSegment?: IFormAccidentDiseaseCollectionSegmentTypeResolver;\n  FormAutomobileDamageCollectionSegment?: IFormAutomobileDamageCollectionSegmentTypeResolver;\n  FormCarCatalogCollectionSegment?: IFormCarCatalogCollectionSegmentTypeResolver;\n  FormCarCatalog?: IFormCarCatalogTypeResolver;\n  FormDamageCollectionSegment?: IFormDamageCollectionSegmentTypeResolver;\n  FormLifeCollectionSegment?: IFormLifeCollectionSegmentTypeResolver;\n  InvolvedReferrerCollectionSegment?: IInvolvedReferrerCollectionSegmentTypeResolver;\n  OldPoliceCollectionSegment?: IOldPoliceCollectionSegmentTypeResolver;\n  PersonalInformationCollectionSegment?: IPersonalInformationCollectionSegmentTypeResolver;\n  PoliceCollectionSegment?: IPoliceCollectionSegmentTypeResolver;\n  PoliceAssignCollectionSegment?: IPoliceAssignCollectionSegmentTypeResolver;\n  PolicePendientCollectionSegment?: IPolicePendientCollectionSegmentTypeResolver;\n  PoliceQuoteCollectionSegment?: IPoliceQuoteCollectionSegmentTypeResolver;\n  PoliceQuotePrimaCollectionSegment?: IPoliceQuotePrimaCollectionSegmentTypeResolver;\n  RelationShipCollectionSegment?: IRelationShipCollectionSegmentTypeResolver;\n  SucursalCollectionSegment?: ISucursalCollectionSegmentTypeResolver;\n  EndorsementCollectionSegment?: IEndorsementCollectionSegmentTypeResolver;\n  EndorsementCertCollectionSegment?: IEndorsementCertCollectionSegmentTypeResolver;\n  SinisterCollectionSegment?: ISinisterCollectionSegmentTypeResolver;\n  SinisterAccidentCollectionSegment?: ISinisterAccidentCollectionSegmentTypeResolver;\n  SinisterAilingCollectionSegment?: ISinisterAilingCollectionSegmentTypeResolver;\n  SinisterCarCollectionSegment?: ISinisterCarCollectionSegmentTypeResolver;\n  SinisterCarContactCollectionSegment?: ISinisterCarContactCollectionSegmentTypeResolver;\n  SinisterDamageCollectionSegment?: ISinisterDamageCollectionSegmentTypeResolver;\n  SinisterDamageContactCollectionSegment?: ISinisterDamageContactCollectionSegmentTypeResolver;\n  SinisterFacturaCollectionSegment?: ISinisterFacturaCollectionSegmentTypeResolver;\n  SinisterHospitalCollectionSegment?: ISinisterHospitalCollectionSegmentTypeResolver;\n  SinisterHospital?: ISinisterHospitalTypeResolver;\n  SinisterLifeCollectionSegment?: ISinisterLifeCollectionSegmentTypeResolver;\n  SinisterLifeContactCollectionSegment?: ISinisterLifeContactCollectionSegmentTypeResolver;\n  SinisterLifeContact?: ISinisterLifeContactTypeResolver;\n  PoliceReceiptCollectionSegment?: IPoliceReceiptCollectionSegmentTypeResolver;\n  PoliceReceiptAccountCollectionSegment?: IPoliceReceiptAccountCollectionSegmentTypeResolver;\n  PoliceReceiptAccountStateCollectionSegment?: IPoliceReceiptAccountStateCollectionSegmentTypeResolver;\n  PoliceReceiptFolioCollectionSegment?: IPoliceReceiptFolioCollectionSegmentTypeResolver;\n  PoliceReceiptFolio?: IPoliceReceiptFolioTypeResolver;\n  PoliceReceiptPaymentCollectionSegment?: IPoliceReceiptPaymentCollectionSegmentTypeResolver;\n  PoliceFileCollectionSegment?: IPoliceFileCollectionSegmentTypeResolver;\n  InsurerCommentCollectionSegment?: IInsurerCommentCollectionSegmentTypeResolver;\n  InsurerComment?: IInsurerCommentTypeResolver;\n  InsurerLogEmail?: IInsurerLogEmailTypeResolver;\n  InsurerLog?: IInsurerLogTypeResolver;\n  InsurerTicket?: IInsurerTicketTypeResolver;\n  InsurerInvolved?: IInsurerInvolvedTypeResolver;\n  InsurerFileReadingCollectionSegment?: IInsurerFileReadingCollectionSegmentTypeResolver;\n  InsurerFileReading?: IInsurerFileReadingTypeResolver;\n  InsurerFileReadingTagCollectionSegment?: IInsurerFileReadingTagCollectionSegmentTypeResolver;\n  InsurerFileReadingTag?: IInsurerFileReadingTagTypeResolver;\n  InsurerInvolvedCollectionSegment?: IInsurerInvolvedCollectionSegmentTypeResolver;\n  InsurerLogCollectionSegment?: IInsurerLogCollectionSegmentTypeResolver;\n  InsurerLogEmailCollectionSegment?: IInsurerLogEmailCollectionSegmentTypeResolver;\n  InsurerOrgInfoCollectionSegment?: IInsurerOrgInfoCollectionSegmentTypeResolver;\n  InsurerOrgInfo?: IInsurerOrgInfoTypeResolver;\n  InsurerTicketCollectionSegment?: IInsurerTicketCollectionSegmentTypeResolver;\n  InsurerScheduleCollectionSegment?: IInsurerScheduleCollectionSegmentTypeResolver;\n  InsurerSchedule?: IInsurerScheduleTypeResolver;\n  InsurerScheduleParticipant?: IInsurerScheduleParticipantTypeResolver;\n  InsurerScheduleParticipantCollectionSegment?: IInsurerScheduleParticipantCollectionSegmentTypeResolver;\n  InsurerNotificationCollectionSegment?: IInsurerNotificationCollectionSegmentTypeResolver;\n  InsurerNotification?: IInsurerNotificationTypeResolver;\n  InsurerReminderCollectionSegment?: IInsurerReminderCollectionSegmentTypeResolver;\n  InsurerReminderProjectAgentProviderCollectionSegment?: IInsurerReminderProjectAgentProviderCollectionSegmentTypeResolver;\n  InsurerReminderRecordCollectionSegment?: IInsurerReminderRecordCollectionSegmentTypeResolver;\n  InsurerReminderSubBranchCollectionSegment?: IInsurerReminderSubBranchCollectionSegmentTypeResolver;\n  InsurerBailTypeCollectionSegment?: IInsurerBailTypeCollectionSegmentTypeResolver;\n  InsurerBirthDateTemplateCollectionSegment?: IInsurerBirthDateTemplateCollectionSegmentTypeResolver;\n  InsurerBirthDateTemplate?: IInsurerBirthDateTemplateTypeResolver;\n  InsurerDirectoryCollectionSegment?: IInsurerDirectoryCollectionSegmentTypeResolver;\n  InsurerDirectory?: IInsurerDirectoryTypeResolver;\n  InsurerExpenseCollectionSegment?: IInsurerExpenseCollectionSegmentTypeResolver;\n  InsurerExpense?: IInsurerExpenseTypeResolver;\n  InsurerIbisFormCollectionSegment?: IInsurerIbisFormCollectionSegmentTypeResolver;\n  InsurerIbisForm?: IInsurerIbisFormTypeResolver;\n  InsurerIbisProviderCollectionSegment?: IInsurerIbisProviderCollectionSegmentTypeResolver;\n  InsurerIbisProvider?: IInsurerIbisProviderTypeResolver;\n  InsurerSenderCollectionSegment?: IInsurerSenderCollectionSegmentTypeResolver;\n  InsurerSender?: IInsurerSenderTypeResolver;\n  InsurerZipCodeSepomexCollectionSegment?: IInsurerZipCodeSepomexCollectionSegmentTypeResolver;\n  ComissionCollectionSegment?: IComissionCollectionSegmentTypeResolver;\n  CoverageTopecoinsuranceCollectionSegment?: ICoverageTopecoinsuranceCollectionSegmentTypeResolver;\n  CoverageTopecoinsurance?: ICoverageTopecoinsuranceTypeResolver;\n  CoverageSuminsuredCollectionSegment?: ICoverageSuminsuredCollectionSegmentTypeResolver;\n  CoverageSuminsured?: ICoverageSuminsuredTypeResolver;\n  CoveragePackageCollectionSegment?: ICoveragePackageCollectionSegmentTypeResolver;\n  CoverageCollectionSegment?: ICoverageCollectionSegmentTypeResolver;\n  saam_Coverage?: Isaam_CoverageTypeResolver;\n  CoverageInPolicyCollectionSegment?: ICoverageInPolicyCollectionSegmentTypeResolver;\n  CoverageDeductibleCollectionSegment?: ICoverageDeductibleCollectionSegmentTypeResolver;\n  CoverageDeductible?: ICoverageDeductibleTypeResolver;\n  CoverageCoinsuranceCollectionSegment?: ICoverageCoinsuranceCollectionSegmentTypeResolver;\n  CoverageCoinsurance?: ICoverageCoinsuranceTypeResolver;\n  ResponsableInvolvedCollectionSegment?: IResponsableInvolvedCollectionSegmentTypeResolver;\n  ResponsableInvolved?: IResponsableInvolvedTypeResolver;\n  ProjectAgentProviderEmailReminderCollectionSegment?: IProjectAgentProviderEmailReminderCollectionSegmentTypeResolver;\n  ProjectAgentProviderCollectionSegment?: IProjectAgentProviderCollectionSegmentTypeResolver;\n  AgentProviderContactCollectionSegment?: IAgentProviderContactCollectionSegmentTypeResolver;\n  AgentProviderCollectionSegment?: IAgentProviderCollectionSegmentTypeResolver;\n  AgentKeyCollectionSegment?: IAgentKeyCollectionSegmentTypeResolver;\n  ReferrerCollectionSegment?: IReferrerCollectionSegmentTypeResolver;\n  ReferrerBranchCollectionSegment?: IReferrerBranchCollectionSegmentTypeResolver;\n  ReferrerAccountStateCollectionSegment?: IReferrerAccountStateCollectionSegmentTypeResolver;\n  ContractorCollectionSegment?: IContractorCollectionSegmentTypeResolver;\n  ContractorCelulaCollectionSegment?: IContractorCelulaCollectionSegmentTypeResolver;\n  ContractorGroupCollectionSegment?: IContractorGroupCollectionSegmentTypeResolver;\n  ContractorGroupingLevelCollectionSegment?: IContractorGroupingLevelCollectionSegmentTypeResolver;\n  ContractorClassificationCollectionSegment?: IContractorClassificationCollectionSegmentTypeResolver;\n  ContractorProcessDocumentCollectionSegment?: IContractorProcessDocumentCollectionSegmentTypeResolver;\n  ProcessDocumentCollectionSegment?: IProcessDocumentCollectionSegmentTypeResolver;\n  BranchCollectionSegment?: IBranchCollectionSegmentTypeResolver;\n  SubBranchCollectionSegment?: ISubBranchCollectionSegmentTypeResolver;\n  ProjectAgentProviderBranchCollectionSegment?: IProjectAgentProviderBranchCollectionSegmentTypeResolver;\n  DeviceCollectionSegment?: IDeviceCollectionSegmentTypeResolver;\n  NotificationCollectionSegment?: INotificationCollectionSegmentTypeResolver;\n  Code?: ICodeTypeResolver;\n  Brand?: IBrandTypeResolver;\n  Provider?: IProviderTypeResolver;\n  DotMovement?: IDotMovementTypeResolver;\n  PrizeCategory?: IPrizeCategoryTypeResolver;\n  PrizeCode?: IPrizeCodeTypeResolver;\n  Mutation?: IMutationTypeResolver;\n  SendQuizToEmailPayload?: ISendQuizToEmailPayloadTypeResolver;\n  UpdateProfileWithIdPayload?: IUpdateProfileWithIdPayloadTypeResolver;\n  NichePayload?: INichePayloadTypeResolver;\n  NicheServicePayload?: INicheServicePayloadTypeResolver;\n  CreateBulkTutorPayload?: ICreateBulkTutorPayloadTypeResolver;\n  UpdateBillingDataPayload?: IUpdateBillingDataPayloadTypeResolver;\n  UpdateCompanyDataPayload?: IUpdateCompanyDataPayloadTypeResolver;\n  CreateBulkTeacherPayload?: ICreateBulkTeacherPayloadTypeResolver;\n  UpdateHealthInsurancePayload?: IUpdateHealthInsurancePayloadTypeResolver;\n  CreateAttendanceExcelPayload?: ICreateAttendanceExcelPayloadTypeResolver;\n  CreateBulkUserPayload?: ICreateBulkUserPayloadTypeResolver;\n  CreateAttendancePayload?: ICreateAttendancePayloadTypeResolver;\n  CreateCheisiUsersExcelPayload?: ICreateCheisiUsersExcelPayloadTypeResolver;\n  NewContactFormPayload?: INewContactFormPayloadTypeResolver;\n  NewExternalLoginPayload?: INewExternalLoginPayloadTypeResolver;\n  ExternalLogin?: IExternalLoginTypeResolver;\n  DeleteUserPayload?: IDeleteUserPayloadTypeResolver;\n  TestBulkPayload?: ITestBulkPayloadTypeResolver;\n  UpdatePositionColumnsPayload?: IUpdatePositionColumnsPayloadTypeResolver;\n  ViewColumnPage?: IViewColumnPageTypeResolver;\n  UpdatePositionBlockColumnsPayload?: IUpdatePositionBlockColumnsPayloadTypeResolver;\n  ViewBlockColumnPage?: IViewBlockColumnPageTypeResolver;\n  LoginWithProviderPayload?: ILoginWithProviderPayloadTypeResolver;\n  CreateProjectSocialNetworkPayload?: ICreateProjectSocialNetworkPayloadTypeResolver;\n  UpdateProjectSocialNetworkPayload?: IUpdateProjectSocialNetworkPayloadTypeResolver;\n  DeleteProjectSocialNetworkPayload?: IDeleteProjectSocialNetworkPayloadTypeResolver;\n  CreateRecommendedProjectPayload?: ICreateRecommendedProjectPayloadTypeResolver;\n  UpdateRecommendedProjectPayload?: IUpdateRecommendedProjectPayloadTypeResolver;\n  DeleteRecommendedProjectPayload?: IDeleteRecommendedProjectPayloadTypeResolver;\n  SetProjectToProductionPayload?: ISetProjectToProductionPayloadTypeResolver;\n  CreateProjectTemplatePayload?: ICreateProjectTemplatePayloadTypeResolver;\n  UpdateProjectTemplatePayload?: IUpdateProjectTemplatePayloadTypeResolver;\n  DeleteProjectTemplatePayload?: IDeleteProjectTemplatePayloadTypeResolver;\n  CreateMemberPayload?: ICreateMemberPayloadTypeResolver;\n  LoginMemberPayload?: ILoginMemberPayloadTypeResolver;\n  CreateCompanyPayload?: ICreateCompanyPayloadTypeResolver;\n  CreateProjectPayload?: ICreateProjectPayloadTypeResolver;\n  CreateNewRolesPayload?: ICreateNewRolesPayloadTypeResolver;\n  CreateUserPayload?: ICreateUserPayloadTypeResolver;\n  CreateOrFindUserPayload?: ICreateOrFindUserPayloadTypeResolver;\n  CreateOrdinaryUserPayload?: ICreateOrdinaryUserPayloadTypeResolver;\n  UpdateProfilePayload?: IUpdateProfilePayloadTypeResolver;\n  UpdatePasswordPayload?: IUpdatePasswordPayloadTypeResolver;\n  ActiveMemberPayload?: IActiveMemberPayloadTypeResolver;\n  CreateProjectRolePayload?: ICreateProjectRolePayloadTypeResolver;\n  UploadPhotoProfilePayload?: IUploadPhotoProfilePayloadTypeResolver;\n  DeleteProjectPayload?: IDeleteProjectPayloadTypeResolver;\n  UpdateCompanyPayload?: IUpdateCompanyPayloadTypeResolver;\n  RestorePasswordPayload?: IRestorePasswordPayloadTypeResolver;\n  RecoverPasswordPayload?: IRecoverPasswordPayloadTypeResolver;\n  VerifyTokenPayload?: IVerifyTokenPayloadTypeResolver;\n  CreateGroupPayload?: ICreateGroupPayloadTypeResolver;\n  AddGroupToMemberPayload?: IAddGroupToMemberPayloadTypeResolver;\n  MemberGroup?: IMemberGroupTypeResolver;\n  AddGroupToTaxonomyPayload?: IAddGroupToTaxonomyPayloadTypeResolver;\n  AddTaxonomyToMemberPayload?: IAddTaxonomyToMemberPayloadTypeResolver;\n  DeleteGroupPayload?: IDeleteGroupPayloadTypeResolver;\n  DeleteGroupTaxonomyPayload?: IDeleteGroupTaxonomyPayloadTypeResolver;\n  DeleteMemberGroupMutationPayload?: IDeleteMemberGroupMutationPayloadTypeResolver;\n  DeleteMemberTaxonomyPayload?: IDeleteMemberTaxonomyPayloadTypeResolver;\n  DeleteProjectRolePayload?: IDeleteProjectRolePayloadTypeResolver;\n  CreateUpdatePermissionPayload?: ICreateUpdatePermissionPayloadTypeResolver;\n  UpdateProjectPayload?: IUpdateProjectPayloadTypeResolver;\n  UpdateProjectRolePayload?: IUpdateProjectRolePayloadTypeResolver;\n  UpdateGroupPayload?: IUpdateGroupPayloadTypeResolver;\n  AddMemberAsAdminPayload?: IAddMemberAsAdminPayloadTypeResolver;\n  CreateMemberStreamPayload?: ICreateMemberStreamPayloadTypeResolver;\n  DeleteMemberFromMemberProjectsPayload?: IDeleteMemberFromMemberProjectsPayloadTypeResolver;\n  AddMemberToCompanyPayload?: IAddMemberToCompanyPayloadTypeResolver;\n  CreatePageManagerPayload?: ICreatePageManagerPayloadTypeResolver;\n  CreateViewManagerPayload?: ICreateViewManagerPayloadTypeResolver;\n  CreateViewColumnPayload?: ICreateViewColumnPayloadTypeResolver;\n  CreateViewBlockColumnPayload?: ICreateViewBlockColumnPayloadTypeResolver;\n  UpdatePageManagerPayload?: IUpdatePageManagerPayloadTypeResolver;\n  UpdateViewManagerPayload?: IUpdateViewManagerPayloadTypeResolver;\n  UpdateViewColumnPayload?: IUpdateViewColumnPayloadTypeResolver;\n  UpdateViewBlockColumnPayload?: IUpdateViewBlockColumnPayloadTypeResolver;\n  DeletePageManagerPayload?: IDeletePageManagerPayloadTypeResolver;\n  DeleteViewManagerPayload?: IDeleteViewManagerPayloadTypeResolver;\n  DeleteViewColumnPayload?: IDeleteViewColumnPayloadTypeResolver;\n  LinkTransactionToSellPayload?: ILinkTransactionToSellPayloadTypeResolver;\n  UpdateSellPayload?: IUpdateSellPayloadTypeResolver;\n  DeleteViewBlockColumnPayload?: IDeleteViewBlockColumnPayloadTypeResolver;\n  MultipleMemberRelationPayload?: IMultipleMemberRelationPayloadTypeResolver;\n  MemberRelationPayload?: IMemberRelationPayloadTypeResolver;\n  UpdateProductSellPayload?: IUpdateProductSellPayloadTypeResolver;\n  CreateTaxPayload?: ICreateTaxPayloadTypeResolver;\n  DeleteTaxPayload?: IDeleteTaxPayloadTypeResolver;\n  ImportProductsFromExcelPayload?: IImportProductsFromExcelPayloadTypeResolver;\n  CreateRoutePayload?: ICreateRoutePayloadTypeResolver;\n  DeleteRoutePayload?: IDeleteRoutePayloadTypeResolver;\n  CreateProductSellPayload?: ICreateProductSellPayloadTypeResolver;\n  DeleteProductSellPayload?: IDeleteProductSellPayloadTypeResolver;\n  CreatePurchaseQuotePayload?: ICreatePurchaseQuotePayloadTypeResolver;\n  DeletePurchaseQuotePayload?: IDeletePurchaseQuotePayloadTypeResolver;\n  CreateStockAlertPayload?: ICreateStockAlertPayloadTypeResolver;\n  DeleteStockAlertPayload?: IDeleteStockAlertPayloadTypeResolver;\n  UpdateStockAlertPayload?: IUpdateStockAlertPayloadTypeResolver;\n  CreateLegalTermPayload?: ICreateLegalTermPayloadTypeResolver;\n  CreateInsuranceFormPayload?: ICreateInsuranceFormPayloadTypeResolver;\n  UpdateInsuranceFormPayload?: IUpdateInsuranceFormPayloadTypeResolver;\n  UpdateLegalTermPayload?: IUpdateLegalTermPayloadTypeResolver;\n  DeleteLegalTermPayload?: IDeleteLegalTermPayloadTypeResolver;\n  CreateArticlePayload?: ICreateArticlePayloadTypeResolver;\n  UpdateStatusArticlePayload?: IUpdateStatusArticlePayloadTypeResolver;\n  CreateTaxonomyPayload?: ICreateTaxonomyPayloadTypeResolver;\n  UpdateArticlePayload?: IUpdateArticlePayloadTypeResolver;\n  UpdateTaxonomyPayload?: IUpdateTaxonomyPayloadTypeResolver;\n  DeleteArticlePayload?: IDeleteArticlePayloadTypeResolver;\n  DeleteTaxonomyPayload?: IDeleteTaxonomyPayloadTypeResolver;\n  NewSurveyPayload?: INewSurveyPayloadTypeResolver;\n  UpdateSurveyPayload?: IUpdateSurveyPayloadTypeResolver;\n  DeleteSurveyPayload?: IDeleteSurveyPayloadTypeResolver;\n  NewQuestionPayload?: INewQuestionPayloadTypeResolver;\n  DeleteQuestionPayload?: IDeleteQuestionPayloadTypeResolver;\n  UpdateQuestionPayload?: IUpdateQuestionPayloadTypeResolver;\n  NewOptionPayload?: INewOptionPayloadTypeResolver;\n  DeleteOptionPayload?: IDeleteOptionPayloadTypeResolver;\n  UpdateOptionPayload?: IUpdateOptionPayloadTypeResolver;\n  AnswerQuestionPayload?: IAnswerQuestionPayloadTypeResolver;\n  CreateProductPayload?: ICreateProductPayloadTypeResolver;\n  UpdateProductPayload?: IUpdateProductPayloadTypeResolver;\n  DeleteProductPayload?: IDeleteProductPayloadTypeResolver;\n  CreateAddressPayload?: ICreateAddressPayloadTypeResolver;\n  UpdateAddressPayload?: IUpdateAddressPayloadTypeResolver;\n  DeleteAddressPayload?: IDeleteAddressPayloadTypeResolver;\n  CreateUpdateShopPayload?: ICreateUpdateShopPayloadTypeResolver;\n  CreateDiseasePayload?: ICreateDiseasePayloadTypeResolver;\n  UpdateDiseasePayload?: IUpdateDiseasePayloadTypeResolver;\n  DeleteDiseasePayload?: IDeleteDiseasePayloadTypeResolver;\n  CreateTopicDiseasePayload?: ICreateTopicDiseasePayloadTypeResolver;\n  UpdateTopicDiseasePayload?: IUpdateTopicDiseasePayloadTypeResolver;\n  DeleteTopicDiseasePayload?: IDeleteTopicDiseasePayloadTypeResolver;\n  CreateFAQPayload?: ICreateFAQPayloadTypeResolver;\n  UpdateFAQPayload?: IUpdateFAQPayloadTypeResolver;\n  DeleteFAQPayload?: IDeleteFAQPayloadTypeResolver;\n  RunJobShopPayload?: IRunJobShopPayloadTypeResolver;\n  CreateCoursePayload?: ICreateCoursePayloadTypeResolver;\n  CreateBeginCoursePayload?: ICreateBeginCoursePayloadTypeResolver;\n  BeginCourse?: IBeginCourseTypeResolver;\n  CreateCourseFormPayload?: ICreateCourseFormPayloadTypeResolver;\n  CourseForm?: ICourseFormTypeResolver;\n  UpdateCoursePayload?: IUpdateCoursePayloadTypeResolver;\n  UpdateBeginCoursePayload?: IUpdateBeginCoursePayloadTypeResolver;\n  UpdateCourseFormPayload?: IUpdateCourseFormPayloadTypeResolver;\n  DeleteCoursePayload?: IDeleteCoursePayloadTypeResolver;\n  DeleteBeginCoursePayload?: IDeleteBeginCoursePayloadTypeResolver;\n  DeleteCourseFormPayload?: IDeleteCourseFormPayloadTypeResolver;\n  FixProductPayload?: IFixProductPayloadTypeResolver;\n  DeleteCourseSchedulePayload?: IDeleteCourseSchedulePayloadTypeResolver;\n  UpdateCourseSchedulePayload?: IUpdateCourseSchedulePayloadTypeResolver;\n  CreateBranchOfficePayload?: ICreateBranchOfficePayloadTypeResolver;\n  CreateManagerPayload?: ICreateManagerPayloadTypeResolver;\n  CreateProductPurchasePayload?: ICreateProductPurchasePayloadTypeResolver;\n  CreatePurchasePayload?: ICreatePurchasePayloadTypeResolver;\n  CreateStorePayload?: ICreateStorePayloadTypeResolver;\n  NewStoreTransferPayload?: INewStoreTransferPayloadTypeResolver;\n  CreateProviderPayload?: ICreateProviderPayloadTypeResolver;\n  UpdateBranchOfficePayload?: IUpdateBranchOfficePayloadTypeResolver;\n  UpdateManagerPayload?: IUpdateManagerPayloadTypeResolver;\n  UpdatePurchasePayload?: IUpdatePurchasePayloadTypeResolver;\n  UpdateStorePayload?: IUpdateStorePayloadTypeResolver;\n  DeleteStorePayload?: IDeleteStorePayloadTypeResolver;\n  DeleteManagerPayload?: IDeleteManagerPayloadTypeResolver;\n  UpdateProviderPayload?: IUpdateProviderPayloadTypeResolver;\n  DeleteProviderPayload?: IDeleteProviderPayloadTypeResolver;\n  DeletePurchasePayload?: IDeletePurchasePayloadTypeResolver;\n  DeleteProductPurchasePayload?: IDeleteProductPurchasePayloadTypeResolver;\n  DeleteBranchOfficePayload?: IDeleteBranchOfficePayloadTypeResolver;\n  AssociationServiceToProjectPayload?: IAssociationServiceToProjectPayloadTypeResolver;\n  CreateArrayFunctionPayload?: ICreateArrayFunctionPayloadTypeResolver;\n  DeleteArrayFunctionPayload?: IDeleteArrayFunctionPayloadTypeResolver;\n  UpdateServiceProjectPayload?: IUpdateServiceProjectPayloadTypeResolver;\n  DeleteServiceProjectPayload?: IDeleteServiceProjectPayloadTypeResolver;\n  CancelEventPayload?: ICancelEventPayloadTypeResolver;\n  CreateEventTypePayload?: ICreateEventTypePayloadTypeResolver;\n  CreateSubEventTypePayload?: ICreateSubEventTypePayloadTypeResolver;\n  DeleteSubEventTypePayload?: IDeleteSubEventTypePayloadTypeResolver;\n  UpdateSubEventTypePayload?: IUpdateSubEventTypePayloadTypeResolver;\n  AddSubTypeToEventTypePayload?: IAddSubTypeToEventTypePayloadTypeResolver;\n  DeleteEventTypePayload?: IDeleteEventTypePayloadTypeResolver;\n  UpdateEventTypePayload?: IUpdateEventTypePayloadTypeResolver;\n  CreateEventPayload?: ICreateEventPayloadTypeResolver;\n  CreateEventMemberPayload?: ICreateEventMemberPayloadTypeResolver;\n  UpdateEventPayload?: IUpdateEventPayloadTypeResolver;\n  DeleteEventPayload?: IDeleteEventPayloadTypeResolver;\n  CreateEventSessionPayload?: ICreateEventSessionPayloadTypeResolver;\n  UpdateEventSessionPayload?: IUpdateEventSessionPayloadTypeResolver;\n  DeleteEventSessionPayload?: IDeleteEventSessionPayloadTypeResolver;\n  CreateSchedulePayload?: ICreateSchedulePayloadTypeResolver;\n  AssociationMemberToConsultPayload?: IAssociationMemberToConsultPayloadTypeResolver;\n  CancellationMemberToConsultPayload?: ICancellationMemberToConsultPayloadTypeResolver;\n  ChangeStatusEventPayload?: IChangeStatusEventPayloadTypeResolver;\n  DeleteSchedulePayload?: IDeleteSchedulePayloadTypeResolver;\n  DeleteTurnPayload?: IDeleteTurnPayloadTypeResolver;\n  ResourceQuotePayload?: IResourceQuotePayloadTypeResolver;\n  ResourceQuoteDetailPayload?: IResourceQuoteDetailPayloadTypeResolver;\n  ProposalPayload?: IProposalPayloadTypeResolver;\n  CollaboratorPayload?: ICollaboratorPayloadTypeResolver;\n  CollaboratorHoursPayload?: ICollaboratorHoursPayloadTypeResolver;\n  HiringPayload?: IHiringPayloadTypeResolver;\n  HiringServicePayload?: IHiringServicePayloadTypeResolver;\n  HiringTypePayload?: IHiringTypePayloadTypeResolver;\n  ShiftPayload?: IShiftPayloadTypeResolver;\n  CreateBusinessTypePayload?: ICreateBusinessTypePayloadTypeResolver;\n  UpdateBusinessTypePayload?: IUpdateBusinessTypePayloadTypeResolver;\n  DeleteBusinessPayload?: IDeleteBusinessPayloadTypeResolver;\n  CreateBusinessRulePayload?: ICreateBusinessRulePayloadTypeResolver;\n  UpdateBusinessRulePayload?: IUpdateBusinessRulePayloadTypeResolver;\n  DeleteBusinessRulePayload?: IDeleteBusinessRulePayloadTypeResolver;\n  DeleteCouponFromTemplatePayload?: IDeleteCouponFromTemplatePayloadTypeResolver;\n  AddCouponsToTemplatePayload?: IAddCouponsToTemplatePayloadTypeResolver;\n  CreateUpdateConfigurationTemplatePayload?: ICreateUpdateConfigurationTemplatePayloadTypeResolver;\n  SendTemplatePayload?: ISendTemplatePayloadTypeResolver;\n  PutFirebaseDevicePayload?: IPutFirebaseDevicePayloadTypeResolver;\n  CreateCouponPayload?: ICreateCouponPayloadTypeResolver;\n  UpdateCouponPayload?: IUpdateCouponPayloadTypeResolver;\n  DeleteCouponPayload?: IDeleteCouponPayloadTypeResolver;\n  CreateTemplatePayload?: ICreateTemplatePayloadTypeResolver;\n  UpdateTemplatePayload?: IUpdateTemplatePayloadTypeResolver;\n  DeleteTemplatePayload?: IDeleteTemplatePayloadTypeResolver;\n  CreateErrorPagePayload?: ICreateErrorPagePayloadTypeResolver;\n  UpdateErrorPagePayload?: IUpdateErrorPagePayloadTypeResolver;\n  DeleteErrorPagePayload?: IDeleteErrorPagePayloadTypeResolver;\n  CreateErrorPageValidationPayload?: ICreateErrorPageValidationPayloadTypeResolver;\n  UpdateErrorPageValidationPayload?: IUpdateErrorPageValidationPayloadTypeResolver;\n  DeleteErrorPageValidationPayload?: IDeleteErrorPageValidationPayloadTypeResolver;\n  CreateBusinessPayload?: ICreateBusinessPayloadTypeResolver;\n  UpdateBusinessPayload?: IUpdateBusinessPayloadTypeResolver;\n  AssociateBusinessRulesPayload?: IAssociateBusinessRulesPayloadTypeResolver;\n  AssociateProjectPlanSubscriptionPayload?: IAssociateProjectPlanSubscriptionPayloadTypeResolver;\n  CreateProjectPlanPayload?: ICreateProjectPlanPayloadTypeResolver;\n  UpdateProjectPlanPayload?: IUpdateProjectPlanPayloadTypeResolver;\n  DeleteProjectPlanPayload?: IDeleteProjectPlanPayloadTypeResolver;\n  DeleteProjectPlanSubscriptionPayload?: IDeleteProjectPlanSubscriptionPayloadTypeResolver;\n  PutConfigPayload?: IPutConfigPayloadTypeResolver;\n  DeleteConfigPayload?: IDeleteConfigPayloadTypeResolver;\n  UpdateOrderPagesPayload?: IUpdateOrderPagesPayloadTypeResolver;\n  PagesDto?: IPagesDtoTypeResolver;\n  UpdateBatchWewbsiteComponentPayload?: IUpdateBatchWewbsiteComponentPayloadTypeResolver;\n  ComponentDto?: IComponentDtoTypeResolver;\n  CreateComponentPayload?: ICreateComponentPayloadTypeResolver;\n  CreateWebsiteComponentPayload?: ICreateWebsiteComponentPayloadTypeResolver;\n  CreateWebsitePagePayload?: ICreateWebsitePagePayloadTypeResolver;\n  CreateWebsiteSeoPayload?: ICreateWebsiteSeoPayloadTypeResolver;\n  UpdateComponentPayload?: IUpdateComponentPayloadTypeResolver;\n  UpdateWebsiteComponentPayload?: IUpdateWebsiteComponentPayloadTypeResolver;\n  UpdateWebsitePagePayload?: IUpdateWebsitePagePayloadTypeResolver;\n  UpdateWebsiteSeoPayload?: IUpdateWebsiteSeoPayloadTypeResolver;\n  DeleteComponentPayload?: IDeleteComponentPayloadTypeResolver;\n  DeleteWebsiteComponentPayload?: IDeleteWebsiteComponentPayloadTypeResolver;\n  DeleteWebsitePagePayload?: IDeleteWebsitePagePayloadTypeResolver;\n  DeleteWebsiteSeoPayload?: IDeleteWebsiteSeoPayloadTypeResolver;\n  DocumentCategoryPayload?: IDocumentCategoryPayloadTypeResolver;\n  DocumentCategoryDetailPayload?: IDocumentCategoryDetailPayloadTypeResolver;\n  DocumentPayload?: IDocumentPayloadTypeResolver;\n  DocumentTemplatePayload?: IDocumentTemplatePayloadTypeResolver;\n  TemplatePagePayload?: ITemplatePagePayloadTypeResolver;\n  DocumentTagPayload?: IDocumentTagPayloadTypeResolver;\n  DocumentScanPayload?: IDocumentScanPayloadTypeResolver;\n  DocumentReadPayload?: IDocumentReadPayloadTypeResolver;\n  CreateVideoCallPayload?: ICreateVideoCallPayloadTypeResolver;\n  RoomAccessToken?: IRoomAccessTokenTypeResolver;\n  UpdateVideoCallPayload?: IUpdateVideoCallPayloadTypeResolver;\n  DeleteVideoCallPayload?: IDeleteVideoCallPayloadTypeResolver;\n  CreateVideoRoomPayload?: ICreateVideoRoomPayloadTypeResolver;\n  SendNotificationUsersPayload?: ISendNotificationUsersPayloadTypeResolver;\n  SendEmailDownloadPayload?: ISendEmailDownloadPayloadTypeResolver;\n  SendEmailNotificationPayload?: ISendEmailNotificationPayloadTypeResolver;\n  RecordingPath?: IRecordingPathTypeResolver;\n  CreateUpdateContactEmailPayload?: ICreateUpdateContactEmailPayloadTypeResolver;\n  SendEmailPayload?: ISendEmailPayloadTypeResolver;\n  ResponseEmail?: IResponseEmailTypeResolver;\n  DeleteContactEmailPayload?: IDeleteContactEmailPayloadTypeResolver;\n  SendMailBotPayload?: ISendMailBotPayloadTypeResolver;\n  ServiceAreaPayload?: IServiceAreaPayloadTypeResolver;\n  AreaPayload?: IAreaPayloadTypeResolver;\n  ServiceMemberPayload?: IServiceMemberPayloadTypeResolver;\n  ServiceQuizPayload?: IServiceQuizPayloadTypeResolver;\n  QuizPayload?: IQuizPayloadTypeResolver;\n  QuizSectionPayload?: IQuizSectionPayloadTypeResolver;\n  QuizQuestionPayload?: IQuizQuestionPayloadTypeResolver;\n  QuizQuestionNestedPayload?: IQuizQuestionNestedPayloadTypeResolver;\n  QuizQuestionAnswerPayload?: IQuizQuestionAnswerPayloadTypeResolver;\n  QuizAnswerPayload?: IQuizAnswerPayloadTypeResolver;\n  QuizMemberPayload?: IQuizMemberPayloadTypeResolver;\n  QuizQuestionMemberPayload?: IQuizQuestionMemberPayloadTypeResolver;\n  QuizMemberAnswerPayload?: IQuizMemberAnswerPayloadTypeResolver;\n  QuizMemberDescriptionPayload?: IQuizMemberDescriptionPayloadTypeResolver;\n  KeyPayload?: IKeyPayloadTypeResolver;\n  Key?: IKeyTypeResolver;\n  QuotationPayload?: IQuotationPayloadTypeResolver;\n  LoginPayload?: ILoginPayloadTypeResolver;\n  ErrorData?: IErrorDataTypeResolver;\n  PolicyPayload?: IPolicyPayloadTypeResolver;\n  QuotationDownloadPDFPayload?: IQuotationDownloadPDFPayloadTypeResolver;\n  Pdf64Data?: IPdf64DataTypeResolver;\n  QuotationEmitPayload?: IQuotationEmitPayloadTypeResolver;\n  SendQuotationPayload?: ISendQuotationPayloadTypeResolver;\n  CreatePaymentMethodPayload?: ICreatePaymentMethodPayloadTypeResolver;\n  SetupIntentStripePayload?: ISetupIntentStripePayloadTypeResolver;\n  SetDefaultPaymentMethodOnCustomerPayload?: ISetDefaultPaymentMethodOnCustomerPayloadTypeResolver;\n  UpdatePriceStripePayload?: IUpdatePriceStripePayloadTypeResolver;\n  NewPaymentsAnyTypePayload?: INewPaymentsAnyTypePayloadTypeResolver;\n  CreateProductStripePayload?: ICreateProductStripePayloadTypeResolver;\n  PlanPayload?: IPlanPayloadTypeResolver;\n  CreateStripePricePayload?: ICreateStripePricePayloadTypeResolver;\n  CreateMethodPaymentPayload?: ICreateMethodPaymentPayloadTypeResolver;\n  UpdateMethodPaymentPayload?: IUpdateMethodPaymentPayloadTypeResolver;\n  DeleteMethodPaymentPayload?: IDeleteMethodPaymentPayloadTypeResolver;\n  CreatePaymentStripePayload?: ICreatePaymentStripePayloadTypeResolver;\n  CreateSuscriptionStripePayload?: ICreateSuscriptionStripePayloadTypeResolver;\n  CreateSuscriptionExternalStripePayload?: ICreateSuscriptionExternalStripePayloadTypeResolver;\n  DeleteSuscriptionExternalStripePayload?: IDeleteSuscriptionExternalStripePayloadTypeResolver;\n  CreateStripeAccountPayload?: ICreateStripeAccountPayloadTypeResolver;\n  DeletePaymentPayload?: IDeletePaymentPayloadTypeResolver;\n  UpdatePaymentPayload?: IUpdatePaymentPayloadTypeResolver;\n  CreateInvoicePayload?: ICreateInvoicePayloadTypeResolver;\n  UpdateStatusInvoicePayload?: IUpdateStatusInvoicePayloadTypeResolver;\n  DeletePaymentMethodPayload?: IDeletePaymentMethodPayloadTypeResolver;\n  CreateBatchInsurerCoveragesPayload?: ICreateBatchInsurerCoveragesPayloadTypeResolver;\n  CreateQuotePayload?: ICreateQuotePayloadTypeResolver;\n  CreateNewOfficesPayload?: ICreateNewOfficesPayloadTypeResolver;\n  CreateNewProfilesPayload?: ICreateNewProfilesPayloadTypeResolver;\n  CreateInsurerPayload?: ICreateInsurerPayloadTypeResolver;\n  CreateOfficePayload?: ICreateOfficePayloadTypeResolver;\n  CreateRegistrationPayload?: ICreateRegistrationPayloadTypeResolver;\n  CreateQuatorProfilePayload?: ICreateQuatorProfilePayloadTypeResolver;\n  DeleteInsurerPayload?: IDeleteInsurerPayloadTypeResolver;\n  DeleteOfficePayload?: IDeleteOfficePayloadTypeResolver;\n  DeleteQuoterProfilePayload?: IDeleteQuoterProfilePayloadTypeResolver;\n  UpdateInsurerPayload?: IUpdateInsurerPayloadTypeResolver;\n  UpdateOfficePayload?: IUpdateOfficePayloadTypeResolver;\n  UpdateQuoterProfilePayload?: IUpdateQuoterProfilePayloadTypeResolver;\n  CreateCatalogPayload?: ICreateCatalogPayloadTypeResolver;\n  PopulateCredentialsPayload?: IPopulateCredentialsPayloadTypeResolver;\n  PopulateServicesPayload?: IPopulateServicesPayloadTypeResolver;\n  EmissionCarPayload?: IEmissionCarPayloadTypeResolver;\n  PrintEmissionPayload?: IPrintEmissionPayloadTypeResolver;\n  CreateQuoteCoveragePayload?: ICreateQuoteCoveragePayloadTypeResolver;\n  UpdateQuoteCoveragePayload?: IUpdateQuoteCoveragePayloadTypeResolver;\n  DeleteQuoteCoveragePayload?: IDeleteQuoteCoveragePayloadTypeResolver;\n  AssociationWithQuoterProfilePayload?: IAssociationWithQuoterProfilePayloadTypeResolver;\n  UpdateQuotePayload?: IUpdateQuotePayloadTypeResolver;\n  CreateInsurerCredentialPayload?: ICreateInsurerCredentialPayloadTypeResolver;\n  UpdateInsurerCredentialPayload?: IUpdateInsurerCredentialPayloadTypeResolver;\n  AssociationRelationCarPayload?: IAssociationRelationCarPayloadTypeResolver;\n  CreateCoverageProjectPayload?: ICreateCoverageProjectPayloadTypeResolver;\n  UpdateCoverageProjectPayload?: IUpdateCoverageProjectPayloadTypeResolver;\n  UpdateBatchCoverageProjectPayload?: IUpdateBatchCoverageProjectPayloadTypeResolver;\n  CreateApiServicePayload?: ICreateApiServicePayloadTypeResolver;\n  UpdateApiServicePayload?: IUpdateApiServicePayloadTypeResolver;\n  DynamicCustomMetaPayload?: IDynamicCustomMetaPayloadTypeResolver;\n  DynamicCustomValuePayload?: IDynamicCustomValuePayloadTypeResolver;\n  DynamicPagePayload?: IDynamicPagePayloadTypeResolver;\n  DynamicBlockPayload?: IDynamicBlockPayloadTypeResolver;\n  DynamicSectionPayload?: IDynamicSectionPayloadTypeResolver;\n  DynamicSectionBlockPayload?: IDynamicSectionBlockPayloadTypeResolver;\n  DynamicTabPayload?: IDynamicTabPayloadTypeResolver;\n  CreateChargePayload?: ICreateChargePayloadTypeResolver;\n  CreateClinicHistoryPayload?: ICreateClinicHistoryPayloadTypeResolver;\n  CreateClinicHistoryMedicalBackgroundDetailPayload?: ICreateClinicHistoryMedicalBackgroundDetailPayloadTypeResolver;\n  CreateEventDetailPayload?: ICreateEventDetailPayloadTypeResolver;\n  CreateFisicExamPayload?: ICreateFisicExamPayloadTypeResolver;\n  CreateFormatPayload?: ICreateFormatPayloadTypeResolver;\n  CreateMedicalBackgroundDetailPayload?: ICreateMedicalBackgroundDetailPayloadTypeResolver;\n  CreateMedicalBackgroundPayload?: ICreateMedicalBackgroundPayloadTypeResolver;\n  CreateMedicalConfigPayload?: ICreateMedicalConfigPayloadTypeResolver;\n  CreateMedicalServicePaylod?: ICreateMedicalServicePaylodTypeResolver;\n  CreateMedicinePayload?: ICreateMedicinePayloadTypeResolver;\n  CreateVaccinePayload?: ICreateVaccinePayloadTypeResolver;\n  CreateVitalSignsPayload?: ICreateVitalSignsPayloadTypeResolver;\n  CreateMedicRecipePayload?: ICreateMedicRecipePayloadTypeResolver;\n  CreateRecipeConfigPaylod?: ICreateRecipeConfigPaylodTypeResolver;\n  CreateRegistSesionPayload?: ICreateRegistSesionPayloadTypeResolver;\n  CreatePacientNotePayload?: ICreatePacientNotePayloadTypeResolver;\n  CreateDiagnosticPayload?: ICreateDiagnosticPayloadTypeResolver;\n  CreateConsultNotePayload?: ICreateConsultNotePayloadTypeResolver;\n  CreateMedicalBackgroundSetPayload?: ICreateMedicalBackgroundSetPayloadTypeResolver;\n  CreatePacientMedicalBackgroundPaylod?: ICreatePacientMedicalBackgroundPaylodTypeResolver;\n  CreatePatientVitalSignsResponsePayload?: ICreatePatientVitalSignsResponsePayloadTypeResolver;\n  UpdateChargePayload?: IUpdateChargePayloadTypeResolver;\n  UpdateClinicHistoryPayloads?: IUpdateClinicHistoryPayloadsTypeResolver;\n  UpdateClinicHistoryMedicalBackgroundDetailPayload?: IUpdateClinicHistoryMedicalBackgroundDetailPayloadTypeResolver;\n  UpdateEventDetailtPayload?: IUpdateEventDetailtPayloadTypeResolver;\n  UpdateFisicExamPayload?: IUpdateFisicExamPayloadTypeResolver;\n  UpdateFormatPayload?: IUpdateFormatPayloadTypeResolver;\n  UpdateMedicalBackgroundDetailPayload?: IUpdateMedicalBackgroundDetailPayloadTypeResolver;\n  UpdateMedicalBackgroundPayload?: IUpdateMedicalBackgroundPayloadTypeResolver;\n  UpdateMedicalConfigPayload?: IUpdateMedicalConfigPayloadTypeResolver;\n  UpdateMedicalServicePayload?: IUpdateMedicalServicePayloadTypeResolver;\n  UpdateMedicinePayload?: IUpdateMedicinePayloadTypeResolver;\n  UpdateVaccinePayload?: IUpdateVaccinePayloadTypeResolver;\n  UpdateVitalSingsPayloads?: IUpdateVitalSingsPayloadsTypeResolver;\n  UpdateMedicRecipePayload?: IUpdateMedicRecipePayloadTypeResolver;\n  UpdateRecipeConfigPayload?: IUpdateRecipeConfigPayloadTypeResolver;\n  UpdateRegistSesionPayload?: IUpdateRegistSesionPayloadTypeResolver;\n  UpdatePacientNotePayload?: IUpdatePacientNotePayloadTypeResolver;\n  UpdateTherapyPayload?: IUpdateTherapyPayloadTypeResolver;\n  UpdateDiagnosticPayload?: IUpdateDiagnosticPayloadTypeResolver;\n  UpdateConsultNotePayload?: IUpdateConsultNotePayloadTypeResolver;\n  UpdatePacientMedicalBackgroundPayload?: IUpdatePacientMedicalBackgroundPayloadTypeResolver;\n  UpdateBillingRequestPayload?: IUpdateBillingRequestPayloadTypeResolver;\n  UpdateSortFormatPayload?: IUpdateSortFormatPayloadTypeResolver;\n  UpdatePatientVitalSignsResponsePayloads?: IUpdatePatientVitalSignsResponsePayloadsTypeResolver;\n  DeleteChargePayload?: IDeleteChargePayloadTypeResolver;\n  DeleteClinicHistoryPayload?: IDeleteClinicHistoryPayloadTypeResolver;\n  DeleteClinicHistoryMedicalBackgroundDetailPayload?: IDeleteClinicHistoryMedicalBackgroundDetailPayloadTypeResolver;\n  DeleteConsultPayload?: IDeleteConsultPayloadTypeResolver;\n  DeleteFisicalExamPayload?: IDeleteFisicalExamPayloadTypeResolver;\n  DeleteMedicalBackgroundDetailPayload?: IDeleteMedicalBackgroundDetailPayloadTypeResolver;\n  DeleteMedicalBackgroundPayload?: IDeleteMedicalBackgroundPayloadTypeResolver;\n  DeleteMedicalConfigPayload?: IDeleteMedicalConfigPayloadTypeResolver;\n  DeleteMedicalServicePayload?: IDeleteMedicalServicePayloadTypeResolver;\n  DeleteMedicinePayload?: IDeleteMedicinePayloadTypeResolver;\n  DeleteVaccinePayload?: IDeleteVaccinePayloadTypeResolver;\n  DeleteVitalSignPayload?: IDeleteVitalSignPayloadTypeResolver;\n  DeleteMedicRecipePayload?: IDeleteMedicRecipePayloadTypeResolver;\n  DeleteRecipeConfigPayload?: IDeleteRecipeConfigPayloadTypeResolver;\n  DeleteRegistSesionPayload?: IDeleteRegistSesionPayloadTypeResolver;\n  DeleteTherapyPayload?: IDeleteTherapyPayloadTypeResolver;\n  DeleteDiagnosticPayload?: IDeleteDiagnosticPayloadTypeResolver;\n  DeleteConsultNotePayload?: IDeleteConsultNotePayloadTypeResolver;\n  DeletePacientNotePayload?: IDeletePacientNotePayloadTypeResolver;\n  DeletePacientMedicalBackgroundPayload?: IDeletePacientMedicalBackgroundPayloadTypeResolver;\n  DeleteBillingRequestPayload?: IDeleteBillingRequestPayloadTypeResolver;\n  DeleteFormatPayload?: IDeleteFormatPayloadTypeResolver;\n  CreatePDFPayload?: ICreatePDFPayloadTypeResolver;\n  OrderingMemberBoardPayload?: IOrderingMemberBoardPayloadTypeResolver;\n  SpacePayload?: ISpacePayloadTypeResolver;\n  MemberSpacePayload?: IMemberSpacePayloadTypeResolver;\n  BoardStatusPayload?: IBoardStatusPayloadTypeResolver;\n  BoardPayload?: IBoardPayloadTypeResolver;\n  BoardListPayload?: IBoardListPayloadTypeResolver;\n  BoardGroupColumnPayload?: IBoardGroupColumnPayloadTypeResolver;\n  BoardColumnTypePayload?: IBoardColumnTypePayloadTypeResolver;\n  BoardColumnValuePayload?: IBoardColumnValuePayloadTypeResolver;\n  CardColumnValuePayload?: ICardColumnValuePayloadTypeResolver;\n  BoardMemberReferencePayload?: IBoardMemberReferencePayloadTypeResolver;\n  BoardRowPayload?: IBoardRowPayloadTypeResolver;\n  CardPayload?: ICardPayloadTypeResolver;\n  CardChecklistPayload?: ICardChecklistPayloadTypeResolver;\n  CardCheckComponentPayload?: ICardCheckComponentPayloadTypeResolver;\n  CardReplyPayload?: ICardReplyPayloadTypeResolver;\n  NestedFilesPayload?: INestedFilesPayloadTypeResolver;\n  MemberCardPayload?: IMemberCardPayloadTypeResolver;\n  MemberBoardPayload?: IMemberBoardPayloadTypeResolver;\n  DeleteMeasurePayload?: IDeleteMeasurePayloadTypeResolver;\n  UpdateMeasurePayload?: IUpdateMeasurePayloadTypeResolver;\n  DeleteMaterialCategoryPayload?: IDeleteMaterialCategoryPayloadTypeResolver;\n  CreateMeasureValuePayload?: ICreateMeasureValuePayloadTypeResolver;\n  UpdateMeasureValuePayload?: IUpdateMeasureValuePayloadTypeResolver;\n  DeleteMeasureValuePayload?: IDeleteMeasureValuePayloadTypeResolver;\n  DeleteMeasureUnityTwoPayload?: IDeleteMeasureUnityTwoPayloadTypeResolver;\n  UpdateModulePayload?: IUpdateModulePayloadTypeResolver;\n  CreateMaterialQuotationPayload?: ICreateMaterialQuotationPayloadTypeResolver;\n  UpdateMaterialQuotationPayload?: IUpdateMaterialQuotationPayloadTypeResolver;\n  DeleteMaterialQuotationPayload?: IDeleteMaterialQuotationPayloadTypeResolver;\n  CreateMaterialModulePayload?: ICreateMaterialModulePayloadTypeResolver;\n  UpdateMaterialModulePayload?: IUpdateMaterialModulePayloadTypeResolver;\n  DeleteMaterialModulePayload?: IDeleteMaterialModulePayloadTypeResolver;\n  CreateUserCustomerPayload?: ICreateUserCustomerPayloadTypeResolver;\n  CreateMeasureUnityPayload?: ICreateMeasureUnityPayloadTypeResolver;\n  UpdateMeasureUnityPayload?: IUpdateMeasureUnityPayloadTypeResolver;\n  DeleteMeasureUnityPayload?: IDeleteMeasureUnityPayloadTypeResolver;\n  CreateAttributePayload?: ICreateAttributePayloadTypeResolver;\n  CreateAttributeValuePayload?: ICreateAttributeValuePayloadTypeResolver;\n  CreateBuildingSiteAddressPayload?: ICreateBuildingSiteAddressPayloadTypeResolver;\n  CreateMadreQuotationPayload?: ICreateMadreQuotationPayloadTypeResolver;\n  CreateMaterialCategoryPayload?: ICreateMaterialCategoryPayloadTypeResolver;\n  CreateMaterialCombinationPayload?: ICreateMaterialCombinationPayloadTypeResolver;\n  CreateMaterialPayload?: ICreateMaterialPayloadTypeResolver;\n  CreateMaterialStockMeasurePayload?: ICreateMaterialStockMeasurePayloadTypeResolver;\n  CreateMaterialStockPayload?: ICreateMaterialStockPayloadTypeResolver;\n  CreateMaterialVariableQuotationPayload?: ICreateMaterialVariableQuotationPayloadTypeResolver;\n  CreateMeasurePayload?: ICreateMeasurePayloadTypeResolver;\n  CreateMeasureTwoPayload?: ICreateMeasureTwoPayloadTypeResolver;\n  CreateModuleCategoryPayload?: ICreateModuleCategoryPayloadTypeResolver;\n  CreateModulePayload?: ICreateModulePayloadTypeResolver;\n  CreateQuotationPayload?: ICreateQuotationPayloadTypeResolver;\n  CreateQuotationModulePayload?: ICreateQuotationModulePayloadTypeResolver;\n  CreateVariablePayload?: ICreateVariablePayloadTypeResolver;\n  DeleteAttributePayload?: IDeleteAttributePayloadTypeResolver;\n  DeleteAttributeValuePayload?: IDeleteAttributeValuePayloadTypeResolver;\n  DeleteBuildingSiteAddressPayload?: IDeleteBuildingSiteAddressPayloadTypeResolver;\n  DeleteMaterialCombinationPayload?: IDeleteMaterialCombinationPayloadTypeResolver;\n  DeleteMaterialPayload?: IDeleteMaterialPayloadTypeResolver;\n  DeleteMaterialStockPayload?: IDeleteMaterialStockPayloadTypeResolver;\n  DeleteMaterialStockMeasurePayload?: IDeleteMaterialStockMeasurePayloadTypeResolver;\n  DeleteMaterialVariableQuotationPayload?: IDeleteMaterialVariableQuotationPayloadTypeResolver;\n  DeleteModuleCategoryPayload?: IDeleteModuleCategoryPayloadTypeResolver;\n  DeleteModulePayload?: IDeleteModulePayloadTypeResolver;\n  DeleteQuotationModulePayload?: IDeleteQuotationModulePayloadTypeResolver;\n  DeleteQuotationPayload?: IDeleteQuotationPayloadTypeResolver;\n  DeleteVariablePayload?: IDeleteVariablePayloadTypeResolver;\n  UpdateAttributePayload?: IUpdateAttributePayloadTypeResolver;\n  UpdateAttributeValuePayload?: IUpdateAttributeValuePayloadTypeResolver;\n  UpdateBuildingSiteAddressPayload?: IUpdateBuildingSiteAddressPayloadTypeResolver;\n  UpdateMaterialCategoryPayload?: IUpdateMaterialCategoryPayloadTypeResolver;\n  UpdateMaterialCombinationPayload?: IUpdateMaterialCombinationPayloadTypeResolver;\n  UpdateMaterialPayload?: IUpdateMaterialPayloadTypeResolver;\n  UpdateMaterialStockMeasurePayload?: IUpdateMaterialStockMeasurePayloadTypeResolver;\n  UpdateMaterialStockPayload?: IUpdateMaterialStockPayloadTypeResolver;\n  UpdateMadreQuotationPayload?: IUpdateMadreQuotationPayloadTypeResolver;\n  DeleteMadreQuotationPayload?: IDeleteMadreQuotationPayloadTypeResolver;\n  UpdateMaterialVariableQuotationPayload?: IUpdateMaterialVariableQuotationPayloadTypeResolver;\n  UpdateMeasureUnityTwoPayload?: IUpdateMeasureUnityTwoPayloadTypeResolver;\n  UpdateModuleCategoryPayload?: IUpdateModuleCategoryPayloadTypeResolver;\n  UpdateQuotationModulePayload?: IUpdateQuotationModulePayloadTypeResolver;\n  UpdateQuotationPayload?: IUpdateQuotationPayloadTypeResolver;\n  UpdateVariablePayload?: IUpdateVariablePayloadTypeResolver;\n  UpdateAnalysisPayload?: IUpdateAnalysisPayloadTypeResolver;\n  CreateClientPayload?: ICreateClientPayloadTypeResolver;\n  UpdateClientPayload?: IUpdateClientPayloadTypeResolver;\n  CreateConsultPayload?: ICreateConsultPayloadTypeResolver;\n  UpdateConsultPayload?: IUpdateConsultPayloadTypeResolver;\n  CreateComparedPayload?: ICreateComparedPayloadTypeResolver;\n  UpdateComparedPayload?: IUpdateComparedPayloadTypeResolver;\n  DeleteComparedPayload?: IDeleteComparedPayloadTypeResolver;\n  CreateCarMercadoPayload?: ICreateCarMercadoPayloadTypeResolver;\n  CreateCarMercadoMassivePayload?: ICreateCarMercadoMassivePayloadTypeResolver;\n  DeleteCarMercadoPayload?: IDeleteCarMercadoPayloadTypeResolver;\n  ZipFolderContentPayload?: IZipFolderContentPayloadTypeResolver;\n  FolderPayload?: IFolderPayloadTypeResolver;\n  DeleteFolderPayLoad?: IDeleteFolderPayLoadTypeResolver;\n  CreateFilePayload?: ICreateFilePayloadTypeResolver;\n  UpdateFilesPayload?: IUpdateFilesPayloadTypeResolver;\n  DeleteFilePayLoad?: IDeleteFilePayLoadTypeResolver;\n  ShareFilePayload?: IShareFilePayloadTypeResolver;\n  ShareFolderPayload?: IShareFolderPayloadTypeResolver;\n  StopSharingFolderPayload?: IStopSharingFolderPayloadTypeResolver;\n  StopSharingFilePayload?: IStopSharingFilePayloadTypeResolver;\n  UploadFilePrivatePayload?: IUploadFilePrivatePayloadTypeResolver;\n  AddChatMemberPayload?: IAddChatMemberPayloadTypeResolver;\n  AddChatMemberWsPayload?: IAddChatMemberWsPayloadTypeResolver;\n  GetConversationIdPayload?: IGetConversationIdPayloadTypeResolver;\n  DeleteReplyPayload?: IDeleteReplyPayloadTypeResolver;\n  WalletPayload?: IWalletPayloadTypeResolver;\n  WalletTransactionPayload?: IWalletTransactionPayloadTypeResolver;\n  MultipleWalletTransactionPayload?: IMultipleWalletTransactionPayloadTypeResolver;\n  WalletTransactionStatusPayload?: IWalletTransactionStatusPayloadTypeResolver;\n  WalletTransactionMemberRelationPayload?: IWalletTransactionMemberRelationPayloadTypeResolver;\n  MemberWalletPayload?: IMemberWalletPayloadTypeResolver;\n  ProjectWalletKeyPayload?: IProjectWalletKeyPayloadTypeResolver;\n  ProjectWalletKey?: IProjectWalletKeyTypeResolver;\n  CreateCertificateMovementPayload?: ICreateCertificateMovementPayloadTypeResolver;\n  DeleteCertificatePayload?: IDeleteCertificatePayloadTypeResolver;\n  UpdateInsurerModulePayload?: IUpdateInsurerModulePayloadTypeResolver;\n  CreateInsurerModulePayload?: ICreateInsurerModulePayloadTypeResolver;\n  CreatePolicyModulePayload?: ICreatePolicyModulePayloadTypeResolver;\n  UpdatePolicyModulePayload?: IUpdatePolicyModulePayloadTypeResolver;\n  DeletePolicyModulePayload?: IDeletePolicyModulePayloadTypeResolver;\n  CreateInsurerFeePayload?: ICreateInsurerFeePayloadTypeResolver;\n  DeleteInsurerFeePayload?: IDeleteInsurerFeePayloadTypeResolver;\n  UpdateInsurerFeePayload?: IUpdateInsurerFeePayloadTypeResolver;\n  CreatePolicyPayload?: ICreatePolicyPayloadTypeResolver;\n  CancelCertificatePayload?: ICancelCertificatePayloadTypeResolver;\n  CreateBeneficiaryPayload?: ICreateBeneficiaryPayloadTypeResolver;\n  CreateCertificatePayload?: ICreateCertificatePayloadTypeResolver;\n  CreateCertificateFilePayload?: ICreateCertificateFilePayloadTypeResolver;\n  CreateContactPayload?: ICreateContactPayloadTypeResolver;\n  CreateContractorBranchOfficePayload?: ICreateContractorBranchOfficePayloadTypeResolver;\n  CreateContractorContactPayload?: ICreateContractorContactPayloadTypeResolver;\n  CreateContractorPayload?: ICreateContractorPayloadTypeResolver;\n  CreateContractorPolicyPayload?: ICreateContractorPolicyPayloadTypeResolver;\n  CreateCountryRequestPayload?: ICreateCountryRequestPayloadTypeResolver;\n  CreateFeePayload?: ICreateFeePayloadTypeResolver;\n  CreateInsurerCompanyPayload?: ICreateInsurerCompanyPayloadTypeResolver;\n  CreateIssuedReportPayload?: ICreateIssuedReportPayloadTypeResolver;\n  IssuedReport?: IIssuedReportTypeResolver;\n  CreateMerchandiseDetailPayload?: ICreateMerchandiseDetailPayloadTypeResolver;\n  CreateMerchandisePayload?: ICreateMerchandisePayloadTypeResolver;\n  CreateMoneyPayload?: ICreateMoneyPayloadTypeResolver;\n  CreateMoneyPolicyPayload?: ICreateMoneyPolicyPayloadTypeResolver;\n  MoneyPolicy?: IMoneyPolicyTypeResolver;\n  DeleteBeneficiaryPayload?: IDeleteBeneficiaryPayloadTypeResolver;\n  DeleteContactPayload?: IDeleteContactPayloadTypeResolver;\n  DeleteContractorPayload?: IDeleteContractorPayloadTypeResolver;\n  DeleteContractorOfficePayload?: IDeleteContractorOfficePayloadTypeResolver;\n  DeleteContractorPolicyPayload?: IDeleteContractorPolicyPayloadTypeResolver;\n  DeleteInsurerModulePayload?: IDeleteInsurerModulePayloadTypeResolver;\n  DeleteFeePayload?: IDeleteFeePayloadTypeResolver;\n  DeleteMerchandisePayload?: IDeleteMerchandisePayloadTypeResolver;\n  DeleteInsurerCompanyPayload?: IDeleteInsurerCompanyPayloadTypeResolver;\n  DeleteMoneyPayload?: IDeleteMoneyPayloadTypeResolver;\n  DeletePolicyPayload?: IDeletePolicyPayloadTypeResolver;\n  UpdateBeneficiaryPayload?: IUpdateBeneficiaryPayloadTypeResolver;\n  UpdateCertificatePayload?: IUpdateCertificatePayloadTypeResolver;\n  UpdateContactPayload?: IUpdateContactPayloadTypeResolver;\n  UpdateContractorPayload?: IUpdateContractorPayloadTypeResolver;\n  UpdateFeePayload?: IUpdateFeePayloadTypeResolver;\n  UpdateInsurerCompanyPayload?: IUpdateInsurerCompanyPayloadTypeResolver;\n  UpdateMerchandisePayload?: IUpdateMerchandisePayloadTypeResolver;\n  UpdateMoneyPayload?: IUpdateMoneyPayloadTypeResolver;\n  UpdatePolicyPayload?: IUpdatePolicyPayloadTypeResolver;\n  AttendancePayload?: IAttendancePayloadTypeResolver;\n  ClassroomPayload?: IClassroomPayloadTypeResolver;\n  DayServicePayload?: IDayServicePayloadTypeResolver;\n  GradePayload?: IGradePayloadTypeResolver;\n  LevelPayload?: ILevelPayloadTypeResolver;\n  SchoolPayload?: ISchoolPayloadTypeResolver;\n  StudentPayload?: IStudentPayloadTypeResolver;\n  CreateBulkStudentPayload?: ICreateBulkStudentPayloadTypeResolver;\n  BeneficiariePayload?: IBeneficiariePayloadTypeResolver;\n  FormAccidentDiseasePayload?: IFormAccidentDiseasePayloadTypeResolver;\n  FormAutomobileDamagePayload?: IFormAutomobileDamagePayloadTypeResolver;\n  FormCarCatalogPayload?: IFormCarCatalogPayloadTypeResolver;\n  FormDamagePayload?: IFormDamagePayloadTypeResolver;\n  FormLifePayload?: IFormLifePayloadTypeResolver;\n  InvolvedReferrerPayload?: IInvolvedReferrerPayloadTypeResolver;\n  OldPolicePayload?: IOldPolicePayloadTypeResolver;\n  PersonalInformationPayload?: IPersonalInformationPayloadTypeResolver;\n  PolicePayload?: IPolicePayloadTypeResolver;\n  PoliceAssignPayload?: IPoliceAssignPayloadTypeResolver;\n  PolicePendientPayload?: IPolicePendientPayloadTypeResolver;\n  PoliceQuotePayload?: IPoliceQuotePayloadTypeResolver;\n  PoliceQuotePrimaPayload?: IPoliceQuotePrimaPayloadTypeResolver;\n  RelationShipPayload?: IRelationShipPayloadTypeResolver;\n  SucursalPayload?: ISucursalPayloadTypeResolver;\n  AgentKeyPayload?: IAgentKeyPayloadTypeResolver;\n  AgentProviderContactPayload?: IAgentProviderContactPayloadTypeResolver;\n  AgentProviderPayload?: IAgentProviderPayloadTypeResolver;\n  BranchPayload?: IBranchPayloadTypeResolver;\n  ComissionPayload?: IComissionPayloadTypeResolver;\n  ContractorCelulaPayload?: IContractorCelulaPayloadTypeResolver;\n  ContractorClassificationPayload?: IContractorClassificationPayloadTypeResolver;\n  ContractorGroupingLevelPayload?: IContractorGroupingLevelPayloadTypeResolver;\n  ContractorPayload?: IContractorPayloadTypeResolver;\n  ContractorProcessDocumentPayload?: IContractorProcessDocumentPayloadTypeResolver;\n  CoverageCoinsurancePayload?: ICoverageCoinsurancePayloadTypeResolver;\n  CoverageDeductiblePayload?: ICoverageDeductiblePayloadTypeResolver;\n  CoverageInPolicyPayload?: ICoverageInPolicyPayloadTypeResolver;\n  CoveragePayload?: ICoveragePayloadTypeResolver;\n  CoveragePackagePayload?: ICoveragePackagePayloadTypeResolver;\n  CoverageSuminsuredPayload?: ICoverageSuminsuredPayloadTypeResolver;\n  CoverageTopecoinsurancePayload?: ICoverageTopecoinsurancePayloadTypeResolver;\n  ProcessDocumentPayload?: IProcessDocumentPayloadTypeResolver;\n  ProjectAgentProviderBranchPayload?: IProjectAgentProviderBranchPayloadTypeResolver;\n  ProjectAgentProviderPayload?: IProjectAgentProviderPayloadTypeResolver;\n  ReferrerAccountStatePayload?: IReferrerAccountStatePayloadTypeResolver;\n  ReferrerBranchPayload?: IReferrerBranchPayloadTypeResolver;\n  ReferrerPayload?: IReferrerPayloadTypeResolver;\n  ResponsableInvolvedPayload?: IResponsableInvolvedPayloadTypeResolver;\n  SubBranchPayload?: ISubBranchPayloadTypeResolver;\n  ProjectAgentProviderEmailReminderPayload?: IProjectAgentProviderEmailReminderPayloadTypeResolver;\n  EndorsementPayload?: IEndorsementPayloadTypeResolver;\n  EndorsementCertPayload?: IEndorsementCertPayloadTypeResolver;\n  SinisterPayload?: ISinisterPayloadTypeResolver;\n  SinisterAilingPayload?: ISinisterAilingPayloadTypeResolver;\n  SinisterCarPayload?: ISinisterCarPayloadTypeResolver;\n  SinisterCarContactPayload?: ISinisterCarContactPayloadTypeResolver;\n  SinisterDamagePayload?: ISinisterDamagePayloadTypeResolver;\n  SinisterDamageContactPayload?: ISinisterDamageContactPayloadTypeResolver;\n  SinisterLifePayload?: ISinisterLifePayloadTypeResolver;\n  SinisterLifeContactPayload?: ISinisterLifeContactPayloadTypeResolver;\n  SinisterHospitalPayload?: ISinisterHospitalPayloadTypeResolver;\n  SinisterFacturaPayload?: ISinisterFacturaPayloadTypeResolver;\n  PoliceReceiptPayload?: IPoliceReceiptPayloadTypeResolver;\n  PoliceReceiptAccountPayload?: IPoliceReceiptAccountPayloadTypeResolver;\n  PoliceReceiptAccountStatePayload?: IPoliceReceiptAccountStatePayloadTypeResolver;\n  PoliceReceiptFolioPayload?: IPoliceReceiptFolioPayloadTypeResolver;\n  PoliceReceiptPaymentPayload?: IPoliceReceiptPaymentPayloadTypeResolver;\n  PoliceFilePayload?: IPoliceFilePayloadTypeResolver;\n  InsurerCommentPayload?: IInsurerCommentPayloadTypeResolver;\n  InsurerFileReadingPayload?: IInsurerFileReadingPayloadTypeResolver;\n  InsurerFileReadingTagPayload?: IInsurerFileReadingTagPayloadTypeResolver;\n  InsurerBailTypePayload?: IInsurerBailTypePayloadTypeResolver;\n  InsurerInvolvedPayload?: IInsurerInvolvedPayloadTypeResolver;\n  InsurerLogPayload?: IInsurerLogPayloadTypeResolver;\n  InsurerLogEmailPayload?: IInsurerLogEmailPayloadTypeResolver;\n  InsurerOrgInfoPayload?: IInsurerOrgInfoPayloadTypeResolver;\n  InsurerTicketPayload?: IInsurerTicketPayloadTypeResolver;\n  InsurerSchedulePayload?: IInsurerSchedulePayloadTypeResolver;\n  InsurerScheduleParticipantPayload?: IInsurerScheduleParticipantPayloadTypeResolver;\n  InsurerNotificationPayload?: IInsurerNotificationPayloadTypeResolver;\n  InsurerReminderPayload?: IInsurerReminderPayloadTypeResolver;\n  InsurerReminderProjectAgentProviderPayload?: IInsurerReminderProjectAgentProviderPayloadTypeResolver;\n  InsurerReminderRecordPayload?: IInsurerReminderRecordPayloadTypeResolver;\n  InsurerReminderSubBranchPayload?: IInsurerReminderSubBranchPayloadTypeResolver;\n  InsurerBirthDateTemplatePayload?: IInsurerBirthDateTemplatePayloadTypeResolver;\n  InsurerDirectoryPayload?: IInsurerDirectoryPayloadTypeResolver;\n  InsurerExpensePayload?: IInsurerExpensePayloadTypeResolver;\n  InsurerIbisFormPayload?: IInsurerIbisFormPayloadTypeResolver;\n  InsurerIbisProviderPayload?: IInsurerIbisProviderPayloadTypeResolver;\n  InsurerSenderPayload?: IInsurerSenderPayloadTypeResolver;\n  InsurerZipCodeSepomexPayload?: IInsurerZipCodeSepomexPayloadTypeResolver;\n  AgentProviderBonoPayload?: IAgentProviderBonoPayloadTypeResolver;\n  SendNotificationPayload?: ISendNotificationPayloadTypeResolver;\n  MultipleNotificationPayload?: IMultipleNotificationPayloadTypeResolver;\n  MultipleMemberNotificationPayload?: IMultipleMemberNotificationPayloadTypeResolver;\n  MemberNotificationPayload?: IMemberNotificationPayloadTypeResolver;\n  NotificationPayload?: INotificationPayloadTypeResolver;\n  DevicePayload?: IDevicePayloadTypeResolver;\n  SetCodeAsUnavailablePayload?: ISetCodeAsUnavailablePayloadTypeResolver;\n  CreateAdminCodePayload?: ICreateAdminCodePayloadTypeResolver;\n  AdminCode?: IAdminCodeTypeResolver;\n  ScanCodePayload?: IScanCodePayloadTypeResolver;\n  SendMessagePayload?: ISendMessagePayloadTypeResolver;\n  LookForCodePayload?: ILookForCodePayloadTypeResolver;\n  CreateCodePayload?: ICreateCodePayloadTypeResolver;\n  CreatePrizeCategoryPayload?: ICreatePrizeCategoryPayloadTypeResolver;\n  CreatePrizeCodePayload?: ICreatePrizeCodePayloadTypeResolver;\n  DeleteCodePayload?: IDeleteCodePayloadTypeResolver;\n  DeletePrizeCodePayload?: IDeletePrizeCodePayloadTypeResolver;\n  ExchangeDotsPayload?: IExchangeDotsPayloadTypeResolver;\n  CreateAdverseEventPayload?: ICreateAdverseEventPayloadTypeResolver;\n  AdverseEvent?: IAdverseEventTypeResolver;\n  DeleteAdverseEventPayload?: IDeleteAdverseEventPayloadTypeResolver;\n  CreateBrandPayload?: ICreateBrandPayloadTypeResolver;\n  Subscription?: ISubscriptionTypeResolver;\n  exchange_CreateProviderPayload?: Iexchange_CreateProviderPayloadTypeResolver;\n  UpdatePurchaseQuoteMutation?: IUpdatePurchaseQuoteMutationTypeResolver;\n  UpdatePurchaseQuotePayload?: IUpdatePurchaseQuotePayloadTypeResolver;\n  UpdateRouteMutation?: IUpdateRouteMutationTypeResolver;\n  UpdateRoutePayload?: IUpdateRoutePayloadTypeResolver;\n  docsreader_CreateTemplatePayload?: Idocsreader_CreateTemplatePayloadTypeResolver;\n  CreateDettachedStripeSuscriptionMutation?: ICreateDettachedStripeSuscriptionMutationTypeResolver;\n  CreateDettachedStripeSuscriptionPayload?: ICreateDettachedStripeSuscriptionPayloadTypeResolver;\n  CreateStripeCustomerMutation?: ICreateStripeCustomerMutationTypeResolver;\n  CreateStripeCustomerPayload?: ICreateStripeCustomerPayloadTypeResolver;\n  StripeCustomer?: IStripeCustomerTypeResolver;\n  AuthorizeDirective?: IAuthorizeDirectiveTypeResolver;\n  itus_CreateOfficePayload?: Iitus_CreateOfficePayloadTypeResolver;\n  Name?: GraphQLScalarType;\n}\nexport interface IQueryTypeResolver<TParent = any> {\n  listGroups?: QueryToListGroupsResolver<TParent>;\n  groupById?: QueryToGroupByIdResolver<TParent>;\n  currencies?: QueryToCurrenciesResolver<TParent>;\n  currencyById?: QueryToCurrencyByIdResolver<TParent>;\n  listNiches?: QueryToListNichesResolver<TParent>;\n  listNicheServices?: QueryToListNicheServicesResolver<TParent>;\n  tutorByName?: QueryToTutorByNameResolver<TParent>;\n  pageManagerById?: QueryToPageManagerByIdResolver<TParent>;\n  listPageManager?: QueryToListPageManagerResolver<TParent>;\n  listViewManager?: QueryToListViewManagerResolver<TParent>;\n  viewManagerBy?: QueryToViewManagerByResolver<TParent>;\n  viewManagerById?: QueryToViewManagerByIdResolver<TParent>;\n  viewBlockColumnById?: QueryToViewBlockColumnByIdResolver<TParent>;\n  me?: QueryToMeResolver<TParent>;\n  username?: QueryToUsernameResolver<TParent>;\n  allStreams?: QueryToAllStreamsResolver<TParent>;\n  meById?: QueryToMeByIdResolver<TParent>;\n  meByIdPublic?: QueryToMeByIdPublicResolver<TParent>;\n  referer?: QueryToRefererResolver<TParent>;\n  projectByUrl?: QueryToProjectByUrlResolver<TParent>;\n  countries?: QueryToCountriesResolver<TParent>;\n  countriesList?: QueryToCountriesListResolver<TParent>;\n  companies?: QueryToCompaniesResolver<TParent>;\n  roles?: QueryToRolesResolver<TParent>;\n  industries?: QueryToIndustriesResolver<TParent>;\n  rolesByProject?: QueryToRolesByProjectResolver<TParent>;\n  members?: QueryToMembersResolver<TParent>;\n  memberById?: QueryToMemberByIdResolver<TParent>;\n  deleteMyMembers?: QueryToDeleteMyMembersResolver<TParent>;\n  membersByProject?: QueryToMembersByProjectResolver<TParent>;\n  countryByCode?: QueryToCountryByCodeResolver<TParent>;\n  listUsers?: QueryToListUsersResolver<TParent>;\n  listIsMemberInSpace?: QueryToListIsMemberInSpaceResolver<TParent>;\n  listIsMemberInBoard?: QueryToListIsMemberInBoardResolver<TParent>;\n  listUsersLazyLoad?: QueryToListUsersLazyLoadResolver<TParent>;\n  listUsersPublic?: QueryToListUsersPublicResolver<TParent>;\n  projectsInfinite?: QueryToProjectsInfiniteResolver<TParent>;\n  projects?: QueryToProjectsResolver<TParent>;\n  projectById?: QueryToProjectByIdResolver<TParent>;\n  projectByIdPublic?: QueryToProjectByIdPublicResolver<TParent>;\n  conversationMemberBy?: QueryToConversationMemberByResolver<TParent>;\n  memberNameBy?: QueryToMemberNameByResolver<TParent>;\n  userById?: QueryToUserByIdResolver<TParent>;\n  customMemberById?: QueryToCustomMemberByIdResolver<TParent>;\n  plans?: QueryToPlansResolver<TParent>;\n  planById?: QueryToPlanByIdResolver<TParent>;\n  projectSocialNetworksByProjectId?: QueryToProjectSocialNetworksByProjectIdResolver<TParent>;\n  recommendedProjects?: QueryToRecommendedProjectsResolver<TParent>;\n  publicProjects?: QueryToPublicProjectsResolver<TParent>;\n  listMemberRelations?: QueryToListMemberRelationsResolver<TParent>;\n  memberRelationById?: QueryToMemberRelationByIdResolver<TParent>;\n  projectTemplateById?: QueryToProjectTemplateByIdResolver<TParent>;\n  projectTemplatesByProjectId?: QueryToProjectTemplatesByProjectIdResolver<TParent>;\n  projectTemplates?: QueryToProjectTemplatesResolver<TParent>;\n  countryById?: QueryToCountryByIdResolver<TParent>;\n  columnTabs?: QueryToColumnTabsResolver<TParent>;\n  columnTabsById?: QueryToColumnTabsByIdResolver<TParent>;\n  rankingSeller?: QueryToRankingSellerResolver<TParent>;\n  ranking?: QueryToRankingResolver<TParent>;\n  sellByNominatorAndProspectId?: QueryToSellByNominatorAndProspectIdResolver<TParent>;\n  nominatorSellById?: QueryToNominatorSellByIdResolver<TParent>;\n  nominatorSellByMemberRelationId?: QueryToNominatorSellByMemberRelationIdResolver<TParent>;\n  listNominatorSells?: QueryToListNominatorSellsResolver<TParent>;\n  nominatorStat?: QueryToNominatorStatResolver<TParent>;\n  sellStats?: QueryToSellStatsResolver<TParent>;\n  sellById?: QueryToSellByIdResolver<TParent>;\n  memberIndustries?: QueryToMemberIndustriesResolver<TParent>;\n  memberIndustryById?: QueryToMemberIndustryByIdResolver<TParent>;\n  stadisticsLogin?: QueryToStadisticsLoginResolver<TParent>;\n  allStadisticsLogin?: QueryToAllStadisticsLoginResolver<TParent>;\n  stadisticsLProjectsByCompany?: QueryToStadisticsLProjectsByCompanyResolver<TParent>;\n  listMembersByBusinessId?: QueryToListMembersByBusinessIdResolver<TParent>;\n  projectRoleById?: QueryToProjectRoleByIdResolver<TParent>;\n  fAQs?: QueryToFAQsResolver<TParent>;\n  topicDiseases?: QueryToTopicDiseasesResolver<TParent>;\n  listInsuranceForms?: QueryToListInsuranceFormsResolver<TParent>;\n  insuranceFormById?: QueryToInsuranceFormByIdResolver<TParent>;\n  topicDiseaseById?: QueryToTopicDiseaseByIdResolver<TParent>;\n  resultByMemberId?: QueryToResultByMemberIdResolver<TParent>;\n  results?: QueryToResultsResolver<TParent>;\n  answers?: QueryToAnswersResolver<TParent>;\n  articles?: QueryToArticlesResolver<TParent>;\n  listArticles?: QueryToListArticlesResolver<TParent>;\n  fullArticles?: QueryToFullArticlesResolver<TParent>;\n  listAddresses?: QueryToListAddressesResolver<TParent>;\n  taxonomyById?: QueryToTaxonomyByIdResolver<TParent>;\n  taxonomyBySlug?: QueryToTaxonomyBySlugResolver<TParent>;\n  taxonomyBySlugProject?: QueryToTaxonomyBySlugProjectResolver<TParent>;\n  listProducts?: QueryToListProductsResolver<TParent>;\n  fullProducts?: QueryToFullProductsResolver<TParent>;\n  taxonomiesByProject?: QueryToTaxonomiesByProjectResolver<TParent>;\n  fullTaxonomies?: QueryToFullTaxonomiesResolver<TParent>;\n  surveysByArticleId?: QueryToSurveysByArticleIdResolver<TParent>;\n  shopById?: QueryToShopByIdResolver<TParent>;\n  articleById?: QueryToArticleByIdResolver<TParent>;\n  seoBySlug?: QueryToSeoBySlugResolver<TParent>;\n  articleBySlug?: QueryToArticleBySlugResolver<TParent>;\n  articleBySlugProject?: QueryToArticleBySlugProjectResolver<TParent>;\n  productById?: QueryToProductByIdResolver<TParent>;\n  courseById?: QueryToCourseByIdResolver<TParent>;\n  coursesByProjectId?: QueryToCoursesByProjectIdResolver<TParent>;\n  courseTaxonomiesByProjectId?: QueryToCourseTaxonomiesByProjectIdResolver<TParent>;\n  coursesByTaxonomyId?: QueryToCoursesByTaxonomyIdResolver<TParent>;\n  storeStocks?: QueryToStoreStocksResolver<TParent>;\n  storeStocksByStoreId?: QueryToStoreStocksByStoreIdResolver<TParent>;\n  storeTransfersByStoreId?: QueryToStoreTransfersByStoreIdResolver<TParent>;\n  coursesByTaxonomyAndModality?: QueryToCoursesByTaxonomyAndModalityResolver<TParent>;\n  productBySlug?: QueryToProductBySlugResolver<TParent>;\n  productsBySlug?: QueryToProductsBySlugResolver<TParent>;\n  productBySlugProject?: QueryToProductBySlugProjectResolver<TParent>;\n  branchOfficesByIds?: QueryToBranchOfficesByIdsResolver<TParent>;\n  productByIdResolver?: QueryToProductByIdResolverResolver<TParent>;\n  addressById?: QueryToAddressByIdResolver<TParent>;\n  branchOffices?: QueryToBranchOfficesResolver<TParent>;\n  storeById?: QueryToStoreByIdResolver<TParent>;\n  managers?: QueryToManagersResolver<TParent>;\n  purchases?: QueryToPurchasesResolver<TParent>;\n  productPurchases?: QueryToProductPurchasesResolver<TParent>;\n  stores?: QueryToStoresResolver<TParent>;\n  productPurchasesByPurchaseId?: QueryToProductPurchasesByPurchaseIdResolver<TParent>;\n  managerByBranchOfficeId?: QueryToManagerByBranchOfficeIdResolver<TParent>;\n  productProviders?: QueryToProductProvidersResolver<TParent>;\n  purchaseById?: QueryToPurchaseByIdResolver<TParent>;\n  branchOfficeById?: QueryToBranchOfficeByIdResolver<TParent>;\n  storeTransferById?: QueryToStoreTransferByIdResolver<TParent>;\n  storeStockByStoreIdAndProductId?: QueryToStoreStockByStoreIdAndProductIdResolver<TParent>;\n  storeTransfers?: QueryToStoreTransfersResolver<TParent>;\n  drugs?: QueryToDrugsResolver<TParent>;\n  carriers?: QueryToCarriersResolver<TParent>;\n  groups?: QueryToGroupsResolver<TParent>;\n  pharmacyRadiusPricing?: QueryToPharmacyRadiusPricingResolver<TParent>;\n  pharmaciesByZipCode?: QueryToPharmaciesByZipCodeResolver<TParent>;\n  searchMembers?: QueryToSearchMembersResolver<TParent>;\n  productsByNameAndZipCode?: QueryToProductsByNameAndZipCodeResolver<TParent>;\n  transactions?: QueryToTransactionsResolver<TParent>;\n  pricings?: QueryToPricingsResolver<TParent>;\n  menus?: QueryToMenusResolver<TParent>;\n  bbotRestaurants?: QueryToBbotRestaurantsResolver<TParent>;\n  listByMemberId?: QueryToListByMemberIdResolver<TParent>;\n  legalTerms?: QueryToLegalTermsResolver<TParent>;\n  legalTermById?: QueryToLegalTermByIdResolver<TParent>;\n  increaseLegalTermCounter?: QueryToIncreaseLegalTermCounterResolver<TParent>;\n  stockAlerts?: QueryToStockAlertsResolver<TParent>;\n  stockAlertById?: QueryToStockAlertByIdResolver<TParent>;\n  stockAlertByProductId?: QueryToStockAlertByProductIdResolver<TParent>;\n  purchaseQuoteById?: QueryToPurchaseQuoteByIdResolver<TParent>;\n  purchaseQuotes?: QueryToPurchaseQuotesResolver<TParent>;\n  taxes?: QueryToTaxesResolver<TParent>;\n  productSells?: QueryToProductSellsResolver<TParent>;\n  productSellById?: QueryToProductSellByIdResolver<TParent>;\n  listRoutes?: QueryToListRoutesResolver<TParent>;\n  routes?: QueryToRoutesResolver<TParent>;\n  routeById?: QueryToRouteByIdResolver<TParent>;\n  services?: QueryToServicesResolver<TParent>;\n  fixUpdateNameService?: QueryToFixUpdateNameServiceResolver<TParent>;\n  servicesByProject?: QueryToServicesByProjectResolver<TParent>;\n  microServiceByCodeName?: QueryToMicroServiceByCodeNameResolver<TParent>;\n  endOfDay?: QueryToEndOfDayResolver<TParent>;\n  startOfDay?: QueryToStartOfDayResolver<TParent>;\n  listSchedules?: QueryToListSchedulesResolver<TParent>;\n  scheduleManagerByEventType?: QueryToScheduleManagerByEventTypeResolver<TParent>;\n  availableEvents?: QueryToAvailableEventsResolver<TParent>;\n  myEvents?: QueryToMyEventsResolver<TParent>;\n  events?: QueryToEventsResolver<TParent>;\n  filteredEvents?: QueryToFilteredEventsResolver<TParent>;\n  currentDate?: QueryToCurrentDateResolver<TParent>;\n  eventTypes?: QueryToEventTypesResolver<TParent>;\n  subEventTypes?: QueryToSubEventTypesResolver<TParent>;\n  eventById?: QueryToEventByIdResolver<TParent>;\n  localTime?: QueryToLocalTimeResolver<TParent>;\n  nextEvent?: QueryToNextEventResolver<TParent>;\n  nextEventMembers?: QueryToNextEventMembersResolver<TParent>;\n  membersEvents?: QueryToMembersEventsResolver<TParent>;\n  associatedEvents?: QueryToAssociatedEventsResolver<TParent>;\n  listHiring?: QueryToListHiringResolver<TParent>;\n  listHiringType?: QueryToListHiringTypeResolver<TParent>;\n  listShift?: QueryToListShiftResolver<TParent>;\n  listDays?: QueryToListDaysResolver<TParent>;\n  listResourceQuotes?: QueryToListResourceQuotesResolver<TParent>;\n  resourceQuoteById?: QueryToResourceQuoteByIdResolver<TParent>;\n  listResourceQuoteDetails?: QueryToListResourceQuoteDetailsResolver<TParent>;\n  listProposal?: QueryToListProposalResolver<TParent>;\n  proposalById?: QueryToProposalByIdResolver<TParent>;\n  listCollaborators?: QueryToListCollaboratorsResolver<TParent>;\n  listCollaboratorHours?: QueryToListCollaboratorHoursResolver<TParent>;\n  housReportedProject?: QueryToHousReportedProjectResolver<TParent>;\n  listEnumHiringType?: QueryToListEnumHiringTypeResolver<TParent>;\n  hiringByMemberId?: QueryToHiringByMemberIdResolver<TParent>;\n  shiftByMemberId?: QueryToShiftByMemberIdResolver<TParent>;\n  resourceQuotesByMemberId?: QueryToResourceQuotesByMemberIdResolver<TParent>;\n  collaboratorsByMemberId?: QueryToCollaboratorsByMemberIdResolver<TParent>;\n  hiringServicesByServiceAreaId?: QueryToHiringServicesByServiceAreaIdResolver<TParent>;\n  configs?: QueryToConfigsResolver<TParent>;\n  configurationTemplateById?: QueryToConfigurationTemplateByIdResolver<TParent>;\n  listComponents?: QueryToListComponentsResolver<TParent>;\n  listWebsitePages?: QueryToListWebsitePagesResolver<TParent>;\n  webSitePageById?: QueryToWebSitePageByIdResolver<TParent>;\n  websitePageComponentById?: QueryToWebsitePageComponentByIdResolver<TParent>;\n  listProjectPlanSubscriptions?: QueryToListProjectPlanSubscriptionsResolver<TParent>;\n  projectPlanSubscriptionByMemberId?: QueryToProjectPlanSubscriptionByMemberIdResolver<TParent>;\n  projectPlanSubscriptionsByMemberId?: QueryToProjectPlanSubscriptionsByMemberIdResolver<TParent>;\n  listBusinesses?: QueryToListBusinessesResolver<TParent>;\n  businesses?: QueryToBusinessesResolver<TParent>;\n  businessTypes?: QueryToBusinessTypesResolver<TParent>;\n  businessRules?: QueryToBusinessRulesResolver<TParent>;\n  businessRuleById?: QueryToBusinessRuleByIdResolver<TParent>;\n  businessTypeById?: QueryToBusinessTypeByIdResolver<TParent>;\n  businessById?: QueryToBusinessByIdResolver<TParent>;\n  listProjectPlans?: QueryToListProjectPlansResolver<TParent>;\n  projectPlans?: QueryToProjectPlansResolver<TParent>;\n  projectPlanById?: QueryToProjectPlanByIdResolver<TParent>;\n  websitePageBySlug?: QueryToWebsitePageBySlugResolver<TParent>;\n  listTemplates?: QueryToListTemplatesResolver<TParent>;\n  templateById?: QueryToTemplateByIdResolver<TParent>;\n  errorPages?: QueryToErrorPagesResolver<TParent>;\n  errorPageById?: QueryToErrorPageByIdResolver<TParent>;\n  errorPageValidations?: QueryToErrorPageValidationsResolver<TParent>;\n  errorPageValidationById?: QueryToErrorPageValidationByIdResolver<TParent>;\n  couponById?: QueryToCouponByIdResolver<TParent>;\n  coupons?: QueryToCouponsResolver<TParent>;\n  couponTemplates?: QueryToCouponTemplatesResolver<TParent>;\n  listDocumentCategory?: QueryToListDocumentCategoryResolver<TParent>;\n  listDocumentCategoryDetail?: QueryToListDocumentCategoryDetailResolver<TParent>;\n  listDocument?: QueryToListDocumentResolver<TParent>;\n  listDocumentTemplate?: QueryToListDocumentTemplateResolver<TParent>;\n  listTemplatePage?: QueryToListTemplatePageResolver<TParent>;\n  listDocumentTag?: QueryToListDocumentTagResolver<TParent>;\n  listDocumentScan?: QueryToListDocumentScanResolver<TParent>;\n  listDocumentRead?: QueryToListDocumentReadResolver<TParent>;\n  verifyUserRoom?: QueryToVerifyUserRoomResolver<TParent>;\n  verifyVideoRoom?: QueryToVerifyVideoRoomResolver<TParent>;\n  roomTokenLiveKit2?: QueryToRoomTokenLiveKit2Resolver<TParent>;\n  roomTokenLiveKit3?: QueryToRoomTokenLiveKit3Resolver<TParent>;\n  startRecordRoom2?: QueryToStartRecordRoom2Resolver<TParent>;\n  videoCalls?: QueryToVideoCallsResolver<TParent>;\n  listVideoRooms?: QueryToListVideoRoomsResolver<TParent>;\n  listRoomRecords?: QueryToListRoomRecordsResolver<TParent>;\n  roomRecord?: QueryToRoomRecordResolver<TParent>;\n  videoCallsByMember?: QueryToVideoCallsByMemberResolver<TParent>;\n  videoCallById?: QueryToVideoCallByIdResolver<TParent>;\n  videoCallBySessionId?: QueryToVideoCallBySessionIdResolver<TParent>;\n  contactEmails?: QueryToContactEmailsResolver<TParent>;\n  listServiceArea?: QueryToListServiceAreaResolver<TParent>;\n  listArea?: QueryToListAreaResolver<TParent>;\n  listServiceQuiz?: QueryToListServiceQuizResolver<TParent>;\n  listQuiz?: QueryToListQuizResolver<TParent>;\n  listQuizSection?: QueryToListQuizSectionResolver<TParent>;\n  listQuizQuestion?: QueryToListQuizQuestionResolver<TParent>;\n  listQuizQuestionAnswer?: QueryToListQuizQuestionAnswerResolver<TParent>;\n  listQuizAnswer?: QueryToListQuizAnswerResolver<TParent>;\n  listQuizMember?: QueryToListQuizMemberResolver<TParent>;\n  listQuizMemberGrouped?: QueryToListQuizMemberGroupedResolver<TParent>;\n  listQuizQuestionMember?: QueryToListQuizQuestionMemberResolver<TParent>;\n  listQuizMemberAnswer?: QueryToListQuizMemberAnswerResolver<TParent>;\n  listQuizMemberDescription?: QueryToListQuizMemberDescriptionResolver<TParent>;\n  serviceAreaById?: QueryToServiceAreaByIdResolver<TParent>;\n  areaById?: QueryToAreaByIdResolver<TParent>;\n  serviceAreaMemberByMemberId?: QueryToServiceAreaMemberByMemberIdResolver<TParent>;\n  catalogAarco?: QueryToCatalogAarcoResolver<TParent>;\n  quotationByIdPeticionAarco?: QueryToQuotationByIdPeticionAarcoResolver<TParent>;\n  coverageAarco?: QueryToCoverageAarcoResolver<TParent>;\n  payment_transactions?: QueryToPayment_transactionsResolver<TParent>;\n  methodPayments?: QueryToMethodPaymentsResolver<TParent>;\n  plan?: QueryToPlanResolver<TParent>;\n  listInvoices?: QueryToListInvoicesResolver<TParent>;\n  invoiceById?: QueryToInvoiceByIdResolver<TParent>;\n  listInvoiceAddress?: QueryToListInvoiceAddressResolver<TParent>;\n  listInvoiceDetailProduct?: QueryToListInvoiceDetailProductResolver<TParent>;\n  invoicesByMemberId?: QueryToInvoicesByMemberIdResolver<TParent>;\n  customerSuscriptions?: QueryToCustomerSuscriptionsResolver<TParent>;\n  productStripeByProductId?: QueryToProductStripeByProductIdResolver<TParent>;\n  planByProductId?: QueryToPlanByProductIdResolver<TParent>;\n  listAccountKey?: QueryToListAccountKeyResolver<TParent>;\n  accountKeysByMemberId?: QueryToAccountKeysByMemberIdResolver<TParent>;\n  paymentMethodByMemberId?: QueryToPaymentMethodByMemberIdResolver<TParent>;\n  memberWithStripePaymentMethod?: QueryToMemberWithStripePaymentMethodResolver<TParent>;\n  methodPaymentById?: QueryToMethodPaymentByIdResolver<TParent>;\n  subscriptionStatus?: QueryToSubscriptionStatusResolver<TParent>;\n  paymentMethodsStripe?: QueryToPaymentMethodsStripeResolver<TParent>;\n  vehiclesCarcatalogHdiCodeYearsCarId?: QueryToVehiclesCarcatalogHdiCodeYearsCarIdResolver<TParent>;\n  vehiclesCarcatalogMapfreeCodeYearsCarId?: QueryToVehiclesCarcatalogMapfreeCodeYearsCarIdResolver<TParent>;\n  vehiclesCarcatalogQualitasCodeYearsCarId?: QueryToVehiclesCarcatalogQualitasCodeYearsCarIdResolver<TParent>;\n  vehiclesCarcatalogZurichCodeYearsCarId?: QueryToVehiclesCarcatalogZurichCodeYearsCarIdResolver<TParent>;\n  quoteCoverages?: QueryToQuoteCoveragesResolver<TParent>;\n  quoteCoverageById?: QueryToQuoteCoverageByIdResolver<TParent>;\n  listStaffQuote?: QueryToListStaffQuoteResolver<TParent>;\n  multiquoter_listProposal?: QueryToMultiquoter_listProposalResolver<TParent>;\n  listCollaborator?: QueryToListCollaboratorResolver<TParent>;\n  coverageByProject?: QueryToCoverageByProjectResolver<TParent>;\n  packages?: QueryToPackagesResolver<TParent>;\n  coverages?: QueryToCoveragesResolver<TParent>;\n  runServiceQuoteFetch?: QueryToRunServiceQuoteFetchResolver<TParent>;\n  stadistics?: QueryToStadisticsResolver<TParent>;\n  stadisticsQualitas?: QueryToStadisticsQualitasResolver<TParent>;\n  listRQuoterProfilesByProjectId?: QueryToListRQuoterProfilesByProjectIdResolver<TParent>;\n  listRQuoterProfilesInsurerByProjectId?: QueryToListRQuoterProfilesInsurerByProjectIdResolver<TParent>;\n  homologated?: QueryToHomologatedResolver<TParent>;\n  listInsurerServiceCredentials?: QueryToListInsurerServiceCredentialsResolver<TParent>;\n  listInsurerService?: QueryToListInsurerServiceResolver<TParent>;\n  listInsurerService2?: QueryToListInsurerService2Resolver<TParent>;\n  listRelations?: QueryToListRelationsResolver<TParent>;\n  quotes?: QueryToQuotesResolver<TParent>;\n  listQuotesAlt?: QueryToListQuotesAltResolver<TParent>;\n  listQuotes?: QueryToListQuotesResolver<TParent>;\n  quotesByMember?: QueryToQuotesByMemberResolver<TParent>;\n  listRegistrations?: QueryToListRegistrationsResolver<TParent>;\n  quoteById?: QueryToQuoteByIdResolver<TParent>;\n  listQuoteServices?: QueryToListQuoteServicesResolver<TParent>;\n  listGenders?: QueryToListGendersResolver<TParent>;\n  listCars?: QueryToListCarsResolver<TParent>;\n  listCarType?: QueryToListCarTypeResolver<TParent>;\n  listCarBrand?: QueryToListCarBrandResolver<TParent>;\n  listCarSuBbrand?: QueryToListCarSuBbrandResolver<TParent>;\n  listModel?: QueryToListModelResolver<TParent>;\n  car?: QueryToCarResolver<TParent>;\n  relationCars?: QueryToRelationCarsResolver<TParent>;\n  colony?: QueryToColonyResolver<TParent>;\n  listCoverages?: QueryToListCoveragesResolver<TParent>;\n  catalogById?: QueryToCatalogByIdResolver<TParent>;\n  catalogs?: QueryToCatalogsResolver<TParent>;\n  catalogByYears?: QueryToCatalogByYearsResolver<TParent>;\n  insurers?: QueryToInsurersResolver<TParent>;\n  offices?: QueryToOfficesResolver<TParent>;\n  quatorProfiles?: QueryToQuatorProfilesResolver<TParent>;\n  quoterProfileById?: QueryToQuoterProfileByIdResolver<TParent>;\n  vehiclesCarCatalogAbas?: QueryToVehiclesCarCatalogAbasResolver<TParent>;\n  vehiclesCarCatalogAbasByBrand?: QueryToVehiclesCarCatalogAbasByBrandResolver<TParent>;\n  vehiclesCarCatalogAbasBySubBrand?: QueryToVehiclesCarCatalogAbasBySubBrandResolver<TParent>;\n  vehiclesCarCatalogAfirme?: QueryToVehiclesCarCatalogAfirmeResolver<TParent>;\n  vehiclesCarCatalogAfirmebyBrand?: QueryToVehiclesCarCatalogAfirmebyBrandResolver<TParent>;\n  vehiclesCarCatalogAfirmebySubrand?: QueryToVehiclesCarCatalogAfirmebySubrandResolver<TParent>;\n  vehiclesCarCatalogAig?: QueryToVehiclesCarCatalogAigResolver<TParent>;\n  vehiclesCarCatalogAigByBrand?: QueryToVehiclesCarCatalogAigByBrandResolver<TParent>;\n  vehiclesCarCatalogAigBySubBrand?: QueryToVehiclesCarCatalogAigBySubBrandResolver<TParent>;\n  vehiclesCarCatalogAnas?: QueryToVehiclesCarCatalogAnasResolver<TParent>;\n  vehiclesCarCatalogAnasByBrand?: QueryToVehiclesCarCatalogAnasByBrandResolver<TParent>;\n  vehiclesCarCatalogAnasbySubbrand?: QueryToVehiclesCarCatalogAnasbySubbrandResolver<TParent>;\n  vehiclesAtlas?: QueryToVehiclesAtlasResolver<TParent>;\n  vehiclesAtlasByBrand?: QueryToVehiclesAtlasByBrandResolver<TParent>;\n  vehiclesAtlasBySubbrand?: QueryToVehiclesAtlasBySubbrandResolver<TParent>;\n  vehiclesAxa?: QueryToVehiclesAxaResolver<TParent>;\n  vehiclesAxaByBrand?: QueryToVehiclesAxaByBrandResolver<TParent>;\n  vehiclesAxaBySubbrand?: QueryToVehiclesAxaBySubbrandResolver<TParent>;\n  vehiclesBanorte?: QueryToVehiclesBanorteResolver<TParent>;\n  vehiclesBanorteByBrand?: QueryToVehiclesBanorteByBrandResolver<TParent>;\n  vehiclesBanorteBySubbrand?: QueryToVehiclesBanorteBySubbrandResolver<TParent>;\n  vehiclesGrip?: QueryToVehiclesGripResolver<TParent>;\n  vehiclesGripByBrand?: QueryToVehiclesGripByBrandResolver<TParent>;\n  vehiclesGripBySubbrand?: QueryToVehiclesGripBySubbrandResolver<TParent>;\n  vehiclesHdi?: QueryToVehiclesHdiResolver<TParent>;\n  vehiclesHdiByBrand?: QueryToVehiclesHdiByBrandResolver<TParent>;\n  vehiclesHdiBySubbrand?: QueryToVehiclesHdiBySubbrandResolver<TParent>;\n  vehiclesMapfree?: QueryToVehiclesMapfreeResolver<TParent>;\n  vehiclesMapfreeByBrand?: QueryToVehiclesMapfreeByBrandResolver<TParent>;\n  vehiclesMapfreeBySubbrand?: QueryToVehiclesMapfreeBySubbrandResolver<TParent>;\n  vehiclesP?: QueryToVehiclesPResolver<TParent>;\n  vehiclesPByBrand?: QueryToVehiclesPByBrandResolver<TParent>;\n  vehiclesPBySubbrand?: QueryToVehiclesPBySubbrandResolver<TParent>;\n  vehiclesPotosi?: QueryToVehiclesPotosiResolver<TParent>;\n  vehiclesPotosiByBrand?: QueryToVehiclesPotosiByBrandResolver<TParent>;\n  vehiclesPotosiBySubbrand?: QueryToVehiclesPotosiBySubbrandResolver<TParent>;\n  vehiclesQualitas?: QueryToVehiclesQualitasResolver<TParent>;\n  vehiclesQualitasByBrand?: QueryToVehiclesQualitasByBrandResolver<TParent>;\n  vehiclesQualitasBySubbrand?: QueryToVehiclesQualitasBySubbrandResolver<TParent>;\n  vehiclesZurich?: QueryToVehiclesZurichResolver<TParent>;\n  vehiclesZurichByBrand?: QueryToVehiclesZurichByBrandResolver<TParent>;\n  vehiclesZurichBySubbrand?: QueryToVehiclesZurichBySubbrandResolver<TParent>;\n  vehiclesCarcatalogAbaCodeYearsCarId?: QueryToVehiclesCarcatalogAbaCodeYearsCarIdResolver<TParent>;\n  vehiclesCarcatalogAfirmeCodeYearsCarId?: QueryToVehiclesCarcatalogAfirmeCodeYearsCarIdResolver<TParent>;\n  vehiclesCarcatalogAxaCodeYearsCarId?: QueryToVehiclesCarcatalogAxaCodeYearsCarIdResolver<TParent>;\n  vehiclesCarcatalogAtlasCodeYearsCarId?: QueryToVehiclesCarcatalogAtlasCodeYearsCarIdResolver<TParent>;\n  vehiclesCarcatalogBanorteCodeYearsCarId?: QueryToVehiclesCarcatalogBanorteCodeYearsCarIdResolver<TParent>;\n  vehiclesCarcatalogGnpCodeYearsCarId?: QueryToVehiclesCarcatalogGnpCodeYearsCarIdResolver<TParent>;\n  apiServices?: QueryToApiServicesResolver<TParent>;\n  apiServiceBySecretAndProjectId?: QueryToApiServiceBySecretAndProjectIdResolver<TParent>;\n  listDynamicPage?: QueryToListDynamicPageResolver<TParent>;\n  listDynamicBlock?: QueryToListDynamicBlockResolver<TParent>;\n  listDynamicSection?: QueryToListDynamicSectionResolver<TParent>;\n  listDynamicTab?: QueryToListDynamicTabResolver<TParent>;\n  listDynamicSectionBlock?: QueryToListDynamicSectionBlockResolver<TParent>;\n  listDynamicCustomMeta?: QueryToListDynamicCustomMetaResolver<TParent>;\n  listDynamicCustomValue?: QueryToListDynamicCustomValueResolver<TParent>;\n  listCharges?: QueryToListChargesResolver<TParent>;\n  listClinicHistory?: QueryToListClinicHistoryResolver<TParent>;\n  listConsult?: QueryToListConsultResolver<TParent>;\n  listFisicExam?: QueryToListFisicExamResolver<TParent>;\n  listMedicalBackgrounds?: QueryToListMedicalBackgroundsResolver<TParent>;\n  listMedicBackgroundDetails?: QueryToListMedicBackgroundDetailsResolver<TParent>;\n  listClinicHistory_MedicalBackgroundDetails?: QueryToListClinicHistory_MedicalBackgroundDetailsResolver<TParent>;\n  listMedicines?: QueryToListMedicinesResolver<TParent>;\n  listMedicalServices?: QueryToListMedicalServicesResolver<TParent>;\n  listVaccines?: QueryToListVaccinesResolver<TParent>;\n  listVitalSigns?: QueryToListVitalSignsResolver<TParent>;\n  listMedicalConfigs?: QueryToListMedicalConfigsResolver<TParent>;\n  listRegistSesions?: QueryToListRegistSesionsResolver<TParent>;\n  listTherapy?: QueryToListTherapyResolver<TParent>;\n  listRecipeConfig?: QueryToListRecipeConfigResolver<TParent>;\n  listMedicRecipe?: QueryToListMedicRecipeResolver<TParent>;\n  listConsultNotes?: QueryToListConsultNotesResolver<TParent>;\n  listPacientNote?: QueryToListPacientNoteResolver<TParent>;\n  listDiagnostic?: QueryToListDiagnosticResolver<TParent>;\n  listPacientMedicalBackground?: QueryToListPacientMedicalBackgroundResolver<TParent>;\n  listBillingRequests?: QueryToListBillingRequestsResolver<TParent>;\n  listFormats?: QueryToListFormatsResolver<TParent>;\n  listPatientResponses?: QueryToListPatientResponsesResolver<TParent>;\n  medicalBackgroundsByFormatId?: QueryToMedicalBackgroundsByFormatIdResolver<TParent>;\n  consultInfo?: QueryToConsultInfoResolver<TParent>;\n  listChagesForPacient?: QueryToListChagesForPacientResolver<TParent>;\n  listPacientMedicalBackgroundById?: QueryToListPacientMedicalBackgroundByIdResolver<TParent>;\n  listEventDetailsByMemberId?: QueryToListEventDetailsByMemberIdResolver<TParent>;\n  listFisicExamsByMemberId?: QueryToListFisicExamsByMemberIdResolver<TParent>;\n  listMedicalBackgroundByMemberId?: QueryToListMedicalBackgroundByMemberIdResolver<TParent>;\n  listMedicRecipesByMemberId?: QueryToListMedicRecipesByMemberIdResolver<TParent>;\n  listPatientNotesByMemberId?: QueryToListPatientNotesByMemberIdResolver<TParent>;\n  listVitalSignsByMemberId?: QueryToListVitalSignsByMemberIdResolver<TParent>;\n  listVaccinesByMemberId?: QueryToListVaccinesByMemberIdResolver<TParent>;\n  listDiagnosticByEventId?: QueryToListDiagnosticByEventIdResolver<TParent>;\n  listEnumInsideType?: QueryToListEnumInsideTypeResolver<TParent>;\n  listSpace?: QueryToListSpaceResolver<TParent>;\n  listBoardStatus?: QueryToListBoardStatusResolver<TParent>;\n  listBoard?: QueryToListBoardResolver<TParent>;\n  listBoardList?: QueryToListBoardListResolver<TParent>;\n  listCardReply?: QueryToListCardReplyResolver<TParent>;\n  listCard?: QueryToListCardResolver<TParent>;\n  listNestedFiles?: QueryToListNestedFilesResolver<TParent>;\n  listMemberCard?: QueryToListMemberCardResolver<TParent>;\n  listMemberBoard?: QueryToListMemberBoardResolver<TParent>;\n  listMemberSpace?: QueryToListMemberSpaceResolver<TParent>;\n  listMemberSpaceOnValue?: QueryToListMemberSpaceOnValueResolver<TParent>;\n  listMemberSpaceOnCard?: QueryToListMemberSpaceOnCardResolver<TParent>;\n  listMemberBoardOnValue?: QueryToListMemberBoardOnValueResolver<TParent>;\n  listMemberBoardOnCard?: QueryToListMemberBoardOnCardResolver<TParent>;\n  listBoardColumnTypes?: QueryToListBoardColumnTypesResolver<TParent>;\n  listMemberSpaceAccess?: QueryToListMemberSpaceAccessResolver<TParent>;\n  listCardColumnValue?: QueryToListCardColumnValueResolver<TParent>;\n  listBoardMemberReference?: QueryToListBoardMemberReferenceResolver<TParent>;\n  memberBoardByMember?: QueryToMemberBoardByMemberResolver<TParent>;\n  memberSpaceByMember?: QueryToMemberSpaceByMemberResolver<TParent>;\n  isMembersInspace?: QueryToIsMembersInspaceResolver<TParent>;\n  isMembersInBoard?: QueryToIsMembersInBoardResolver<TParent>;\n  attributeById?: QueryToAttributeByIdResolver<TParent>;\n  attributeValueById?: QueryToAttributeValueByIdResolver<TParent>;\n  buildingSiteAddressById?: QueryToBuildingSiteAddressByIdResolver<TParent>;\n  customerById?: QueryToCustomerByIdResolver<TParent>;\n  madreQuotationById?: QueryToMadreQuotationByIdResolver<TParent>;\n  materialById?: QueryToMaterialByIdResolver<TParent>;\n  materialCategoryById?: QueryToMaterialCategoryByIdResolver<TParent>;\n  materialCombinationById?: QueryToMaterialCombinationByIdResolver<TParent>;\n  materialCombinationAttributeById?: QueryToMaterialCombinationAttributeByIdResolver<TParent>;\n  materialModuleById?: QueryToMaterialModuleByIdResolver<TParent>;\n  materialQuotationById?: QueryToMaterialQuotationByIdResolver<TParent>;\n  materialStockById?: QueryToMaterialStockByIdResolver<TParent>;\n  materialStockMeasureById?: QueryToMaterialStockMeasureByIdResolver<TParent>;\n  materialVariableModuleById?: QueryToMaterialVariableModuleByIdResolver<TParent>;\n  materialVariableQuotationById?: QueryToMaterialVariableQuotationByIdResolver<TParent>;\n  measureById?: QueryToMeasureByIdResolver<TParent>;\n  measureUnityById?: QueryToMeasureUnityByIdResolver<TParent>;\n  measureUnityTwoById?: QueryToMeasureUnityTwoByIdResolver<TParent>;\n  measureValueById?: QueryToMeasureValueByIdResolver<TParent>;\n  moduleById?: QueryToModuleByIdResolver<TParent>;\n  moduleCategoryById?: QueryToModuleCategoryByIdResolver<TParent>;\n  quotationById?: QueryToQuotationByIdResolver<TParent>;\n  quotationModuleById?: QueryToQuotationModuleByIdResolver<TParent>;\n  userCustomerByMemberId?: QueryToUserCustomerByMemberIdResolver<TParent>;\n  variableById?: QueryToVariableByIdResolver<TParent>;\n  attributes?: QueryToAttributesResolver<TParent>;\n  attributeValues?: QueryToAttributeValuesResolver<TParent>;\n  buildingSiteAddresses?: QueryToBuildingSiteAddressesResolver<TParent>;\n  customers?: QueryToCustomersResolver<TParent>;\n  madreQuotations?: QueryToMadreQuotationsResolver<TParent>;\n  materials?: QueryToMaterialsResolver<TParent>;\n  materialCategories?: QueryToMaterialCategoriesResolver<TParent>;\n  materialCombinations?: QueryToMaterialCombinationsResolver<TParent>;\n  materialCombinationAttributes?: QueryToMaterialCombinationAttributesResolver<TParent>;\n  materialModules?: QueryToMaterialModulesResolver<TParent>;\n  materialQuotations?: QueryToMaterialQuotationsResolver<TParent>;\n  materialStocks?: QueryToMaterialStocksResolver<TParent>;\n  materialStockMeasures?: QueryToMaterialStockMeasuresResolver<TParent>;\n  materialVariableModules?: QueryToMaterialVariableModulesResolver<TParent>;\n  materialVariableQuotations?: QueryToMaterialVariableQuotationsResolver<TParent>;\n  measures?: QueryToMeasuresResolver<TParent>;\n  measureUnities?: QueryToMeasureUnitiesResolver<TParent>;\n  measureUnityTwos?: QueryToMeasureUnityTwosResolver<TParent>;\n  measureValues?: QueryToMeasureValuesResolver<TParent>;\n  modules?: QueryToModulesResolver<TParent>;\n  moduleCategories?: QueryToModuleCategoriesResolver<TParent>;\n  quotations?: QueryToQuotationsResolver<TParent>;\n  quotationModules?: QueryToQuotationModulesResolver<TParent>;\n  variables?: QueryToVariablesResolver<TParent>;\n  brandHermer?: QueryToBrandHermerResolver<TParent>;\n  modelsHermer?: QueryToModelsHermerResolver<TParent>;\n  yearHermer?: QueryToYearHermerResolver<TParent>;\n  modelLobato?: QueryToModelLobatoResolver<TParent>;\n  modelsMercadoLibre?: QueryToModelsMercadoLibreResolver<TParent>;\n  listConsultHermer?: QueryToListConsultHermerResolver<TParent>;\n  listConsultAllHermer?: QueryToListConsultAllHermerResolver<TParent>;\n  listConsultLastAnalysisHermer?: QueryToListConsultLastAnalysisHermerResolver<TParent>;\n  getConsultHermer?: QueryToGetConsultHermerResolver<TParent>;\n  downloadFile?: QueryToDownloadFileResolver<TParent>;\n  listFolders?: QueryToListFoldersResolver<TParent>;\n  foldersList?: QueryToFoldersListResolver<TParent>;\n  folderAllowedMembers?: QueryToFolderAllowedMembersResolver<TParent>;\n  fileAllowedMembers?: QueryToFileAllowedMembersResolver<TParent>;\n  sharedFilesFromFolder?: QueryToSharedFilesFromFolderResolver<TParent>;\n  listFiles?: QueryToListFilesResolver<TParent>;\n  listFilesByMemberId?: QueryToListFilesByMemberIdResolver<TParent>;\n  listFoldersByMemberId?: QueryToListFoldersByMemberIdResolver<TParent>;\n  outstandingFoldersByMemberId?: QueryToOutstandingFoldersByMemberIdResolver<TParent>;\n  sharedFilesByMemberId?: QueryToSharedFilesByMemberIdResolver<TParent>;\n  sharedFilesAmongstMembers?: QueryToSharedFilesAmongstMembersResolver<TParent>;\n  sharedFoldersByMemberId?: QueryToSharedFoldersByMemberIdResolver<TParent>;\n  folderById?: QueryToFolderByIdResolver<TParent>;\n  fileById?: QueryToFileByIdResolver<TParent>;\n  outstandingFilesByMemberId?: QueryToOutstandingFilesByMemberIdResolver<TParent>;\n  conversationsByToMemberId?: QueryToConversationsByToMemberIdResolver<TParent>;\n  conversationsByMemberId?: QueryToConversationsByMemberIdResolver<TParent>;\n  listWallets?: QueryToListWalletsResolver<TParent>;\n  walletById?: QueryToWalletByIdResolver<TParent>;\n  listMemberWallets?: QueryToListMemberWalletsResolver<TParent>;\n  listWalletTransaction?: QueryToListWalletTransactionResolver<TParent>;\n  walletTransactionById?: QueryToWalletTransactionByIdResolver<TParent>;\n  listWalletTransactionStatus?: QueryToListWalletTransactionStatusResolver<TParent>;\n  listWalletTransactionMember?: QueryToListWalletTransactionMemberResolver<TParent>;\n  listWalletTransactionMemberDetail?: QueryToListWalletTransactionMemberDetailResolver<TParent>;\n  investmentVsEarning?: QueryToInvestmentVsEarningResolver<TParent>;\n  walletTransactionDetail?: QueryToWalletTransactionDetailResolver<TParent>;\n  listMemberWalletsByMember?: QueryToListMemberWalletsByMemberResolver<TParent>;\n  certificateMovements?: QueryToCertificateMovementsResolver<TParent>;\n  countryRequests?: QueryToCountryRequestsResolver<TParent>;\n  certificates?: QueryToCertificatesResolver<TParent>;\n  certificatesNotPaginated?: QueryToCertificatesNotPaginatedResolver<TParent>;\n  fees?: QueryToFeesResolver<TParent>;\n  beneficiaries?: QueryToBeneficiariesResolver<TParent>;\n  insurerCompanies?: QueryToInsurerCompaniesResolver<TParent>;\n  merchandises?: QueryToMerchandisesResolver<TParent>;\n  merchandiseCategories?: QueryToMerchandiseCategoriesResolver<TParent>;\n  merchandiseDetails?: QueryToMerchandiseDetailsResolver<TParent>;\n  contacts?: QueryToContactsResolver<TParent>;\n  contractors?: QueryToContractorsResolver<TParent>;\n  trafficDetails?: QueryToTrafficDetailsResolver<TParent>;\n  money?: QueryToMoneyResolver<TParent>;\n  policies?: QueryToPoliciesResolver<TParent>;\n  contractorBranchOffices?: QueryToContractorBranchOfficesResolver<TParent>;\n  contractorContacts?: QueryToContractorContactsResolver<TParent>;\n  contractorPolicies?: QueryToContractorPoliciesResolver<TParent>;\n  contactById?: QueryToContactByIdResolver<TParent>;\n  contractorById?: QueryToContractorByIdResolver<TParent>;\n  contractorContactById?: QueryToContractorContactByIdResolver<TParent>;\n  contractorPolicyById?: QueryToContractorPolicyByIdResolver<TParent>;\n  insurerCompanyById?: QueryToInsurerCompanyByIdResolver<TParent>;\n  moneyById?: QueryToMoneyByIdResolver<TParent>;\n  certificateById?: QueryToCertificateByIdResolver<TParent>;\n  contractorOfficeById?: QueryToContractorOfficeByIdResolver<TParent>;\n  policyModules?: QueryToPolicyModulesResolver<TParent>;\n  policyModuleById?: QueryToPolicyModuleByIdResolver<TParent>;\n  insurerModules?: QueryToInsurerModulesResolver<TParent>;\n  insurerModuleById?: QueryToInsurerModuleByIdResolver<TParent>;\n  beneficiaryById?: QueryToBeneficiaryByIdResolver<TParent>;\n  merchandiseById?: QueryToMerchandiseByIdResolver<TParent>;\n  insurerFeeById?: QueryToInsurerFeeByIdResolver<TParent>;\n  insurerFees?: QueryToInsurerFeesResolver<TParent>;\n  listSchool?: QueryToListSchoolResolver<TParent>;\n  schoolById?: QueryToSchoolByIdResolver<TParent>;\n  listClassroom?: QueryToListClassroomResolver<TParent>;\n  classroomById?: QueryToClassroomByIdResolver<TParent>;\n  listLevel?: QueryToListLevelResolver<TParent>;\n  levelById?: QueryToLevelByIdResolver<TParent>;\n  levelByName?: QueryToLevelByNameResolver<TParent>;\n  gradeByName?: QueryToGradeByNameResolver<TParent>;\n  classroomByName?: QueryToClassroomByNameResolver<TParent>;\n  listGrade?: QueryToListGradeResolver<TParent>;\n  gradeById?: QueryToGradeByIdResolver<TParent>;\n  listStudent?: QueryToListStudentResolver<TParent>;\n  studentById?: QueryToStudentByIdResolver<TParent>;\n  listStudentByLastAttendance?: QueryToListStudentByLastAttendanceResolver<TParent>;\n  listAttendanceStudent?: QueryToListAttendanceStudentResolver<TParent>;\n  attendanceStudentById?: QueryToAttendanceStudentByIdResolver<TParent>;\n  listStudentTutorMemberId?: QueryToListStudentTutorMemberIdResolver<TParent>;\n  listClassroomTeacherMemberId?: QueryToListClassroomTeacherMemberIdResolver<TParent>;\n  chatBotConversations?: QueryToChatBotConversationsResolver<TParent>;\n  listAgentProviderBonos?: QueryToListAgentProviderBonosResolver<TParent>;\n  listBeneficiaries?: QueryToListBeneficiariesResolver<TParent>;\n  listFormAccidentDiseases?: QueryToListFormAccidentDiseasesResolver<TParent>;\n  listFormAutomobileDamages?: QueryToListFormAutomobileDamagesResolver<TParent>;\n  listFormCarCatalogs?: QueryToListFormCarCatalogsResolver<TParent>;\n  listFormDamages?: QueryToListFormDamagesResolver<TParent>;\n  listFormLifes?: QueryToListFormLifesResolver<TParent>;\n  listInvolvedReferrers?: QueryToListInvolvedReferrersResolver<TParent>;\n  listOldPolices?: QueryToListOldPolicesResolver<TParent>;\n  listPersonalInformations?: QueryToListPersonalInformationsResolver<TParent>;\n  listPolices?: QueryToListPolicesResolver<TParent>;\n  listPoliceAssigns?: QueryToListPoliceAssignsResolver<TParent>;\n  listPolicePendients?: QueryToListPolicePendientsResolver<TParent>;\n  listPoliceQuotes?: QueryToListPoliceQuotesResolver<TParent>;\n  listPoliceQuotePrimas?: QueryToListPoliceQuotePrimasResolver<TParent>;\n  listRelationShips?: QueryToListRelationShipsResolver<TParent>;\n  listSucursals?: QueryToListSucursalsResolver<TParent>;\n  listEndorsements?: QueryToListEndorsementsResolver<TParent>;\n  listEndorsementCerts?: QueryToListEndorsementCertsResolver<TParent>;\n  listSinisters?: QueryToListSinistersResolver<TParent>;\n  listSinisterAccidents?: QueryToListSinisterAccidentsResolver<TParent>;\n  listSinisterAilings?: QueryToListSinisterAilingsResolver<TParent>;\n  listSinisterCars?: QueryToListSinisterCarsResolver<TParent>;\n  listSinisterCarContacts?: QueryToListSinisterCarContactsResolver<TParent>;\n  listSinisterDamages?: QueryToListSinisterDamagesResolver<TParent>;\n  listSinisterDamageContacts?: QueryToListSinisterDamageContactsResolver<TParent>;\n  listSinisterFacturas?: QueryToListSinisterFacturasResolver<TParent>;\n  listSinisterHospitals?: QueryToListSinisterHospitalsResolver<TParent>;\n  listSinisterLifes?: QueryToListSinisterLifesResolver<TParent>;\n  listSinisterLifeContacts?: QueryToListSinisterLifeContactsResolver<TParent>;\n  listPoliceReceipts?: QueryToListPoliceReceiptsResolver<TParent>;\n  listPoliceReceiptAccounts?: QueryToListPoliceReceiptAccountsResolver<TParent>;\n  listPoliceReceiptAccountStates?: QueryToListPoliceReceiptAccountStatesResolver<TParent>;\n  listPoliceReceiptFolios?: QueryToListPoliceReceiptFoliosResolver<TParent>;\n  listPoliceReceiptPayments?: QueryToListPoliceReceiptPaymentsResolver<TParent>;\n  listPoliceFiles?: QueryToListPoliceFilesResolver<TParent>;\n  listInsurerComments?: QueryToListInsurerCommentsResolver<TParent>;\n  listInsurerFileReadings?: QueryToListInsurerFileReadingsResolver<TParent>;\n  listInsurerFileReadingTags?: QueryToListInsurerFileReadingTagsResolver<TParent>;\n  listInsurerInvolveds?: QueryToListInsurerInvolvedsResolver<TParent>;\n  listInsurerLogs?: QueryToListInsurerLogsResolver<TParent>;\n  listInsurerLogEmails?: QueryToListInsurerLogEmailsResolver<TParent>;\n  listInsurerOrgInfos?: QueryToListInsurerOrgInfosResolver<TParent>;\n  listInsurerTickets?: QueryToListInsurerTicketsResolver<TParent>;\n  listInsurerSchedules?: QueryToListInsurerSchedulesResolver<TParent>;\n  listInsurerScheduleParticipants?: QueryToListInsurerScheduleParticipantsResolver<TParent>;\n  listInsurerNotifications?: QueryToListInsurerNotificationsResolver<TParent>;\n  listInsurerReminders?: QueryToListInsurerRemindersResolver<TParent>;\n  listInsurerReminderProjectAgentProviders?: QueryToListInsurerReminderProjectAgentProvidersResolver<TParent>;\n  listInsurerReminderRecords?: QueryToListInsurerReminderRecordsResolver<TParent>;\n  listInsurerReminderSubBranches?: QueryToListInsurerReminderSubBranchesResolver<TParent>;\n  listInsurerBailTypes?: QueryToListInsurerBailTypesResolver<TParent>;\n  listInsurerBirthDateTemplates?: QueryToListInsurerBirthDateTemplatesResolver<TParent>;\n  listInsurerDirectories?: QueryToListInsurerDirectoriesResolver<TParent>;\n  listInsurerExpenses?: QueryToListInsurerExpensesResolver<TParent>;\n  listInsurerIbisForms?: QueryToListInsurerIbisFormsResolver<TParent>;\n  listInsurerIbisProviders?: QueryToListInsurerIbisProvidersResolver<TParent>;\n  listInsurerSenders?: QueryToListInsurerSendersResolver<TParent>;\n  listInsurerZipCodeSepomexs?: QueryToListInsurerZipCodeSepomexsResolver<TParent>;\n  listComissions?: QueryToListComissionsResolver<TParent>;\n  listCoverageTopecoinsurances?: QueryToListCoverageTopecoinsurancesResolver<TParent>;\n  listCoverageSuminsureds?: QueryToListCoverageSuminsuredsResolver<TParent>;\n  listCoveragePackages?: QueryToListCoveragePackagesResolver<TParent>;\n  saam_listCoverages?: QueryToSaam_listCoveragesResolver<TParent>;\n  listCoverageInPolicies?: QueryToListCoverageInPoliciesResolver<TParent>;\n  listCoverageDeductibles?: QueryToListCoverageDeductiblesResolver<TParent>;\n  listCoverageCoinsurances?: QueryToListCoverageCoinsurancesResolver<TParent>;\n  listResponsableInvolveds?: QueryToListResponsableInvolvedsResolver<TParent>;\n  listProjectAgentProviderEmailReminders?: QueryToListProjectAgentProviderEmailRemindersResolver<TParent>;\n  listProjectAgentProviders?: QueryToListProjectAgentProvidersResolver<TParent>;\n  listAgentProviderContacts?: QueryToListAgentProviderContactsResolver<TParent>;\n  listAgentProviders?: QueryToListAgentProvidersResolver<TParent>;\n  listAgentKeys?: QueryToListAgentKeysResolver<TParent>;\n  listReferrers?: QueryToListReferrersResolver<TParent>;\n  listReferrerBranches?: QueryToListReferrerBranchesResolver<TParent>;\n  listReferrerAccountStates?: QueryToListReferrerAccountStatesResolver<TParent>;\n  listContractors?: QueryToListContractorsResolver<TParent>;\n  listContractorCelulas?: QueryToListContractorCelulasResolver<TParent>;\n  listContractorGroups?: QueryToListContractorGroupsResolver<TParent>;\n  listContractorGroupingLevels?: QueryToListContractorGroupingLevelsResolver<TParent>;\n  listContractorClassifications?: QueryToListContractorClassificationsResolver<TParent>;\n  listContractorProcessDocuments?: QueryToListContractorProcessDocumentsResolver<TParent>;\n  listProcessDocuments?: QueryToListProcessDocumentsResolver<TParent>;\n  listBranches?: QueryToListBranchesResolver<TParent>;\n  listSubBranches?: QueryToListSubBranchesResolver<TParent>;\n  listProjectAgentProviderBranches?: QueryToListProjectAgentProviderBranchesResolver<TParent>;\n  listDevices?: QueryToListDevicesResolver<TParent>;\n  deviceById?: QueryToDeviceByIdResolver<TParent>;\n  listNotifications?: QueryToListNotificationsResolver<TParent>;\n  notificationsById?: QueryToNotificationsByIdResolver<TParent>;\n  devicesByMemberId?: QueryToDevicesByMemberIdResolver<TParent>;\n  listNotificationByMemberId?: QueryToListNotificationByMemberIdResolver<TParent>;\n  codes?: QueryToCodesResolver<TParent>;\n  brandsByProjectId?: QueryToBrandsByProjectIdResolver<TParent>;\n  providers?: QueryToProvidersResolver<TParent>;\n  scanCode?: QueryToScanCodeResolver<TParent>;\n  availableDots?: QueryToAvailableDotsResolver<TParent>;\n  exchangeMovements?: QueryToExchangeMovementsResolver<TParent>;\n  dotMovementsByMemberId?: QueryToDotMovementsByMemberIdResolver<TParent>;\n  lookForAdminCode?: QueryToLookForAdminCodeResolver<TParent>;\n  prizeCategories?: QueryToPrizeCategoriesResolver<TParent>;\n  prizeCodes?: QueryToPrizeCodesResolver<TParent>;\n  prizeCategoryById?: QueryToPrizeCategoryByIdResolver<TParent>;\n  dotMovementById?: QueryToDotMovementByIdResolver<TParent>;\n}\n\nexport interface QueryToListGroupsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IGroupFilterInput;\n  order?: Array<IGroupSortInput>;\n}\nexport interface QueryToListGroupsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListGroupsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToGroupByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToGroupByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToGroupByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCurrenciesArgs {\n  filter?: ICurrencyFilterInput;\n}\nexport interface QueryToCurrenciesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCurrenciesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCurrencyByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToCurrencyByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCurrencyByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListNichesArgs {\n  skip?: number;\n  take?: number;\n  filter?: INicheFilterInput;\n  order?: Array<INicheSortInput>;\n}\nexport interface QueryToListNichesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListNichesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListNicheServicesArgs {\n  skip?: number;\n  take?: number;\n  filter?: INicheServiceFilterInput;\n  order?: Array<INicheServiceSortInput>;\n}\nexport interface QueryToListNicheServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListNicheServicesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTutorByNameArgs {\n  projectId: IUUID;\n  name: string;\n}\nexport interface QueryToTutorByNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTutorByNameArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPageManagerByIdArgs {\n  projectId: IUUID;\n  pageName: string;\n}\nexport interface QueryToPageManagerByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPageManagerByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPageManagerArgs {\n  projectId: IUUID;\n}\nexport interface QueryToListPageManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPageManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListViewManagerArgs {\n  pageManagerId: IUUID;\n}\nexport interface QueryToListViewManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListViewManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToViewManagerByArgs {\n  filter?: IViewManagerFilterInput;\n  order?: Array<IViewManagerSortInput>;\n}\nexport interface QueryToViewManagerByResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToViewManagerByArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToViewManagerByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToViewManagerByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToViewManagerByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToViewBlockColumnByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToViewBlockColumnByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToViewBlockColumnByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToUsernameArgs {\n  username: string;\n}\nexport interface QueryToUsernameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToUsernameArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAllStreamsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToAllStreamsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAllStreamsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMeByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeByIdPublicArgs {\n  id: IUUID;\n}\nexport interface QueryToMeByIdPublicResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeByIdPublicArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRefererResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectByUrlArgs {\n  url: string;\n}\nexport interface QueryToProjectByUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectByUrlArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCountriesArgs {\n  filter?: ICountryFilterInput;\n  order?: Array<ICountrySortInput>;\n}\nexport interface QueryToCountriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCountriesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCountriesListArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICountryFilterInput;\n}\nexport interface QueryToCountriesListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCountriesListArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCompaniesArgs {\n  order?: Array<ICompanySortInput>;\n}\nexport interface QueryToCompaniesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCompaniesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRolesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToIndustriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRolesByProjectArgs {\n  id: IUUID;\n}\nexport interface QueryToRolesByProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToRolesByProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMembersArgs {\n  filter?: IMemberFilterInput;\n}\nexport interface QueryToMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMembersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMemberByIdArgs {\n  id?: IUUID;\n}\nexport interface QueryToMemberByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMemberByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToDeleteMyMembersArgs {\n  projectId: IUUID;\n}\nexport interface QueryToDeleteMyMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToDeleteMyMembersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMembersByProjectArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IMemberProjectFilterInput;\n  order?: Array<IMemberProjectSortInput>;\n}\nexport interface QueryToMembersByProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMembersByProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCountryByCodeArgs {\n  code: string;\n}\nexport interface QueryToCountryByCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCountryByCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListUsersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IMemberFilterInput;\n  order?: Array<IMemberSortInput>;\n}\nexport interface QueryToListUsersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListUsersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListIsMemberInSpaceArgs {\n  skip?: number;\n  take?: number;\n  spaceId: IUUID;\n  projectId: IUUID;\n  filter?: IMemberInSpaceFilterInput;\n  order?: Array<IMemberInSpaceSortInput>;\n}\nexport interface QueryToListIsMemberInSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListIsMemberInSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListIsMemberInBoardArgs {\n  skip?: number;\n  take?: number;\n  boardId: IUUID;\n  projectId: IUUID;\n  filter?: IMemberInBoardFilterInput;\n  order?: Array<IMemberInBoardSortInput>;\n}\nexport interface QueryToListIsMemberInBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListIsMemberInBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListUsersLazyLoadArgs {\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  filter?: IMemberFilterInput;\n  order?: Array<IMemberSortInput>;\n}\nexport interface QueryToListUsersLazyLoadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListUsersLazyLoadArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListUsersPublicArgs {\n  projectId: IUUID;\n  isActive?: boolean;\n  filter?: IMemberFilterInput;\n  order?: Array<IMemberSortInput>;\n}\nexport interface QueryToListUsersPublicResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListUsersPublicArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectsInfiniteArgs {\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  filter?: IProjectFilterInput;\n  order?: Array<IProjectSortInput>;\n}\nexport interface QueryToProjectsInfiniteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectsInfiniteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToProjectByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectByIdPublicArgs {\n  id: IUUID;\n}\nexport interface QueryToProjectByIdPublicResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectByIdPublicArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToConversationMemberByArgs {\n  id: IUUID;\n}\nexport interface QueryToConversationMemberByResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToConversationMemberByArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMemberNameByArgs {\n  id: IUUID;\n}\nexport interface QueryToMemberNameByResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMemberNameByArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToUserByIdArgs {\n  url: string;\n}\nexport interface QueryToUserByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToUserByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCustomMemberByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToCustomMemberByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCustomMemberByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPlansResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPlanByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToPlanByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPlanByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectSocialNetworksByProjectIdArgs {\n  projectId: IUUID;\n}\nexport interface QueryToProjectSocialNetworksByProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectSocialNetworksByProjectIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRecommendedProjectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPublicProjectsArgs {\n  skip?: number;\n  take?: number;\n}\nexport interface QueryToPublicProjectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPublicProjectsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberRelationsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IMemberRelationFilterInput;\n  order?: Array<IMemberRelationSortInput>;\n}\nexport interface QueryToListMemberRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberRelationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMemberRelationByIdArgs {\n  id?: IUUID;\n}\nexport interface QueryToMemberRelationByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMemberRelationByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectTemplateByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToProjectTemplateByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectTemplateByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectTemplatesByProjectIdArgs {\n  projectId: IUUID;\n}\nexport interface QueryToProjectTemplatesByProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectTemplatesByProjectIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectTemplatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCountryByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToCountryByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCountryByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToColumnTabsArgs {\n  filter?: IColumnTabFilterInput;\n}\nexport interface QueryToColumnTabsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToColumnTabsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToColumnTabsByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToColumnTabsByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToColumnTabsByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRankingSellerArgs {\n  skip?: number;\n  take?: number;\n  businessId: IUUID;\n  projectId: IUUID;\n  beginDate?: IDateTime;\n  endDate?: IDateTime;\n  filter?: IRankingDTOFilterInput;\n}\nexport interface QueryToRankingSellerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToRankingSellerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRankingArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  beginDate?: IDateTime;\n  endDate?: IDateTime;\n  filter?: IRankingDTOFilterInput;\n}\nexport interface QueryToRankingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToRankingArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSellByNominatorAndProspectIdArgs {\n  nominatorId: IUUID;\n  prospectId: IUUID;\n}\nexport interface QueryToSellByNominatorAndProspectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSellByNominatorAndProspectIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToNominatorSellByIdArgs {\n  id?: IUUID;\n}\nexport interface QueryToNominatorSellByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToNominatorSellByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToNominatorSellByMemberRelationIdArgs {\n  memberRelationId?: IUUID;\n}\nexport interface QueryToNominatorSellByMemberRelationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToNominatorSellByMemberRelationIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListNominatorSellsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISellFilterInput;\n  order?: Array<ISellSortInput>;\n}\nexport interface QueryToListNominatorSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListNominatorSellsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToNominatorStatArgs {\n  id: IUUID;\n}\nexport interface QueryToNominatorStatResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToNominatorStatArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSellStatsArgs {\n  id: IUUID;\n}\nexport interface QueryToSellStatsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSellStatsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSellByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToSellByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSellByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMemberIndustriesArgs {\n  filter?: IMemberIndustryFilterInput;\n}\nexport interface QueryToMemberIndustriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMemberIndustriesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMemberIndustryByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMemberIndustryByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMemberIndustryByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStadisticsLoginArgs {\n  skip?: number;\n  take?: number;\n  companyId: IUUID;\n  filter?: IMemberCompanyDtoFilterInput;\n  order?: Array<IMemberCompanyDtoSortInput>;\n}\nexport interface QueryToStadisticsLoginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStadisticsLoginArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAllStadisticsLoginArgs {\n  companyId: IUUID;\n}\nexport interface QueryToAllStadisticsLoginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAllStadisticsLoginArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStadisticsLProjectsByCompanyArgs {\n  companyId: IUUID;\n}\nexport interface QueryToStadisticsLProjectsByCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStadisticsLProjectsByCompanyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMembersByBusinessIdArgs {\n  businessId: IUUID;\n}\nexport interface QueryToListMembersByBusinessIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMembersByBusinessIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectRoleByIdArgs {\n  id?: IUUID;\n}\nexport interface QueryToProjectRoleByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectRoleByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFAQsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToFAQsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFAQsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTopicDiseasesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToTopicDiseasesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTopicDiseasesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsuranceFormsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsuranceFormFilterInput;\n  order?: Array<IInsuranceFormSortInput>;\n}\nexport interface QueryToListInsuranceFormsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsuranceFormsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInsuranceFormByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToInsuranceFormByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInsuranceFormByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTopicDiseaseByIdArgs {\n  id: IUUID;\n  month: number;\n}\nexport interface QueryToTopicDiseaseByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTopicDiseaseByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToResultByMemberIdArgs {\n  surveyId: IUUID;\n  memberId: IUUID;\n}\nexport interface QueryToResultByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToResultByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToResultsArgs {\n  surveyId: IUUID;\n}\nexport interface QueryToResultsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToResultsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAnswersArgs {\n  surveyId: IUUID;\n}\nexport interface QueryToAnswersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAnswersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToArticlesArgs {\n  language?: IArticleLanguage;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  filter?: IArticleFilterInput;\n  order?: Array<IArticleSortInput>;\n}\nexport interface QueryToArticlesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToArticlesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListArticlesArgs {\n  skip?: number;\n  take?: number;\n  language?: IArticleLanguage;\n  filter?: IArticleFilterInput;\n  order?: Array<IArticleSortInput>;\n}\nexport interface QueryToListArticlesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListArticlesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFullArticlesArgs {\n  language?: IArticleLanguage;\n  projectId: IUUID;\n}\nexport interface QueryToFullArticlesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFullArticlesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListAddressesArgs {\n  id: IUUID;\n}\nexport interface QueryToListAddressesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListAddressesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTaxonomyByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToTaxonomyByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTaxonomyByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTaxonomyBySlugArgs {\n  slug: string;\n}\nexport interface QueryToTaxonomyBySlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTaxonomyBySlugArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTaxonomyBySlugProjectArgs {\n  slug: string;\n  projectId: IUUID;\n}\nexport interface QueryToTaxonomyBySlugProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTaxonomyBySlugProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListProductsArgs {\n  skip?: number;\n  take?: number;\n  year?: number;\n  month?: number;\n  filter?: IProductFilterInput;\n  order?: Array<IProductSortInput>;\n}\nexport interface QueryToListProductsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListProductsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFullProductsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToFullProductsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFullProductsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTaxonomiesByProjectArgs {\n  skip?: number;\n  take?: number;\n  filter?: ITaxonomyFilterInput;\n  order?: Array<ITaxonomySortInput>;\n}\nexport interface QueryToTaxonomiesByProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTaxonomiesByProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFullTaxonomiesArgs {\n  projectId: IUUID;\n  filter?: ITaxonomyFilterInput;\n}\nexport interface QueryToFullTaxonomiesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFullTaxonomiesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSurveysByArticleIdArgs {\n  articleId: IUUID;\n}\nexport interface QueryToSurveysByArticleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSurveysByArticleIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToShopByIdArgs {\n  projectId: IUUID;\n}\nexport interface QueryToShopByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToShopByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToArticleByIdArgs {\n  id: IUUID;\n  viewed: boolean;\n}\nexport interface QueryToArticleByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToArticleByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSeoBySlugArgs {\n  slug: string;\n  projectId: IUUID;\n}\nexport interface QueryToSeoBySlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSeoBySlugArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToArticleBySlugArgs {\n  slug: string;\n  viewed: boolean;\n}\nexport interface QueryToArticleBySlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToArticleBySlugArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToArticleBySlugProjectArgs {\n  projectId: IUUID;\n  slug: string;\n  viewed: boolean;\n}\nexport interface QueryToArticleBySlugProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToArticleBySlugProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToProductByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCourseByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToCourseByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCourseByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCoursesByProjectIdArgs {\n  projectId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n}\nexport interface QueryToCoursesByProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCoursesByProjectIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCourseTaxonomiesByProjectIdArgs {\n  projectId: IUUID;\n}\nexport interface QueryToCourseTaxonomiesByProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCourseTaxonomiesByProjectIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCoursesByTaxonomyIdArgs {\n  taxonomyId: IUUID;\n}\nexport interface QueryToCoursesByTaxonomyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCoursesByTaxonomyIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStoreStocksArgs {\n  projectId: IUUID;\n}\nexport interface QueryToStoreStocksResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStoreStocksArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStoreStocksByStoreIdArgs {\n  storeId: IUUID;\n  filter?: IStoreStockFilterInput;\n}\nexport interface QueryToStoreStocksByStoreIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStoreStocksByStoreIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStoreTransfersByStoreIdArgs {\n  storeId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n}\nexport interface QueryToStoreTransfersByStoreIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStoreTransfersByStoreIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCoursesByTaxonomyAndModalityArgs {\n  projectId: IUUID;\n  taxonomyId?: IUUID;\n  courseModality?: ICourseModality;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n}\nexport interface QueryToCoursesByTaxonomyAndModalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCoursesByTaxonomyAndModalityArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductBySlugArgs {\n  slug: string;\n}\nexport interface QueryToProductBySlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductBySlugArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductsBySlugArgs {\n  slug: string;\n}\nexport interface QueryToProductsBySlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductsBySlugArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductBySlugProjectArgs {\n  projectId: IUUID;\n  slug: string;\n}\nexport interface QueryToProductBySlugProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductBySlugProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBranchOfficesByIdsArgs {\n  ids?: Array<IUUID>;\n}\nexport interface QueryToBranchOfficesByIdsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBranchOfficesByIdsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductByIdResolverArgs {\n  id: IUUID;\n}\nexport interface QueryToProductByIdResolverResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductByIdResolverArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAddressByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToAddressByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAddressByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBranchOfficesArgs {\n  projectId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  filter?: IBranchOfficeFilterInput;\n}\nexport interface QueryToBranchOfficesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBranchOfficesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStoreByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToStoreByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStoreByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToManagersArgs {\n  projectId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n}\nexport interface QueryToManagersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToManagersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPurchasesArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IPurchaseFilterInput;\n  order?: Array<IPurchaseSortInput>;\n}\nexport interface QueryToPurchasesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPurchasesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductPurchasesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToProductPurchasesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductPurchasesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStoresArgs {\n  projectId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n}\nexport interface QueryToStoresResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStoresArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductPurchasesByPurchaseIdArgs {\n  purchaseId: IUUID;\n}\nexport interface QueryToProductPurchasesByPurchaseIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductPurchasesByPurchaseIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToManagerByBranchOfficeIdArgs {\n  branchOfficeId: IUUID;\n}\nexport interface QueryToManagerByBranchOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToManagerByBranchOfficeIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductProvidersArgs {\n  projectId: IUUID;\n}\nexport interface QueryToProductProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductProvidersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPurchaseByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToPurchaseByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPurchaseByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBranchOfficeByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToBranchOfficeByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBranchOfficeByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStoreTransferByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToStoreTransferByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStoreTransferByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStoreStockByStoreIdAndProductIdArgs {\n  productId: IUUID;\n  storeId: IUUID;\n}\nexport interface QueryToStoreStockByStoreIdAndProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStoreStockByStoreIdAndProductIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStoreTransfersArgs {\n  projectId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n}\nexport interface QueryToStoreTransfersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStoreTransfersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToDrugsArgs {\n  skip?: number;\n  take?: number;\n  name: string;\n  filter?: IDrugFilterInput;\n}\nexport interface QueryToDrugsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToDrugsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCarriersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToGroupsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPharmacyRadiusPricingArgs {\n  memberNumber: string;\n  personCode: string;\n  ndc: string;\n  quantity: number;\n  daysSupply: number;\n  groupNum: string;\n  radius: number;\n  zip: string;\n  maxRecords: number;\n  filter?: IPharmacyRadiusResponseFilterInput;\n}\nexport interface QueryToPharmacyRadiusPricingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPharmacyRadiusPricingArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPharmaciesByZipCodeArgs {\n  groupNum: string;\n  radius: number;\n  zipCode: string;\n}\nexport interface QueryToPharmaciesByZipCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPharmaciesByZipCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSearchMembersArgs {\n  chid: string;\n  firstName: string;\n  lastName: string;\n  dob: string;\n}\nexport interface QueryToSearchMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSearchMembersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductsByNameAndZipCodeArgs {\n  name: string;\n  zipCode: string;\n  memberNumber: string;\n  personCode: string;\n  quantity: number;\n  daysSupply: number;\n  groupNum: string;\n  radius: number;\n  maxRecords: number;\n}\nexport interface QueryToProductsByNameAndZipCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductsByNameAndZipCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTransactionsArgs {\n  memberId?: string;\n  memberKey: string;\n  personCode: string;\n  senderId?: string;\n  dateStartRange: IDateTime;\n  dateEndRange: IDateTime;\n}\nexport interface QueryToTransactionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTransactionsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPricingsArgs {\n  requestId?: string;\n  bin: string;\n  npi: string;\n  pcn?: string;\n  groupNumber?: string;\n  ndc: string;\n  quantity: number;\n  daysSupply: number;\n  firstName: string;\n  lastName: string;\n  dos: string;\n  dob?: string;\n  dateWritten?: string;\n  gender?: number;\n  chid: string;\n  personCode?: string;\n  compoundCode?: number;\n  rxNumber?: string;\n  daw?: string;\n  occ?: string;\n  prescriberNpi?: string;\n  ingredientCost?: number;\n  dispensingFee?: number;\n  usualAndCustomary?: number;\n  grossAmountDue?: number;\n  ignoreAcumulators?: boolean;\n  jobRunId?: number;\n}\nexport interface QueryToPricingsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPricingsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMenusArgs {\n  restaurantId: string;\n  menuId?: string;\n}\nexport interface QueryToMenusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMenusArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBbotRestaurantsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToLegalTermsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ILegalTermFilterInput;\n  order?: Array<ILegalTermSortInput>;\n}\nexport interface QueryToLegalTermsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToLegalTermsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToLegalTermByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToLegalTermByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToLegalTermByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToIncreaseLegalTermCounterArgs {\n  id: IUUID;\n}\nexport interface QueryToIncreaseLegalTermCounterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToIncreaseLegalTermCounterArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStockAlertsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IStockAlertFilterInput;\n}\nexport interface QueryToStockAlertsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStockAlertsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStockAlertByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToStockAlertByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStockAlertByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStockAlertByProductIdArgs {\n  productId: IUUID;\n}\nexport interface QueryToStockAlertByProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStockAlertByProductIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPurchaseQuoteByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToPurchaseQuoteByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPurchaseQuoteByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPurchaseQuotesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPurchaseQuoteFilterInput;\n}\nexport interface QueryToPurchaseQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPurchaseQuotesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTaxesArgs {\n  filter?: ITaxFilterInput;\n}\nexport interface QueryToTaxesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTaxesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductSellsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IProductSellFilterInput;\n}\nexport interface QueryToProductSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductSellsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductSellByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToProductSellByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductSellByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListRoutesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IRouteFilterInput;\n}\nexport interface QueryToListRoutesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListRoutesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRoutesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRouteByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToRouteByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToRouteByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFixUpdateNameServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToServicesByProjectArgs {\n  id: IUUID;\n}\nexport interface QueryToServicesByProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToServicesByProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMicroServiceByCodeNameArgs {\n  codeName: string;\n}\nexport interface QueryToMicroServiceByCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMicroServiceByCodeNameArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToEndOfDayArgs {\n  date: IDateTime;\n}\nexport interface QueryToEndOfDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToEndOfDayArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStartOfDayArgs {\n  date: IDateTime;\n}\nexport interface QueryToStartOfDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStartOfDayArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSchedulesArgs {\n  projectId: IUUID;\n  memberId: IUUID;\n}\nexport interface QueryToListSchedulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSchedulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToScheduleManagerByEventTypeArgs {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventTypeId: IUUID;\n}\nexport interface QueryToScheduleManagerByEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToScheduleManagerByEventTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAvailableEventsArgs {\n  projectId: IUUID;\n  eventTypeId: IUUID;\n  day: number;\n  month: number;\n  hour: number;\n  year: number;\n}\nexport interface QueryToAvailableEventsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAvailableEventsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMyEventsArgs {\n  projectId: IUUID;\n  id: IUUID;\n  month: number;\n  eventTypeId?: IUUID;\n  year: number;\n}\nexport interface QueryToMyEventsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMyEventsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToEventsArgs {\n  projectId: IUUID;\n  month: number;\n  year: number;\n  visibility: IEventVisibility;\n  filter?: IEventFilterInput;\n  order?: Array<IEventSortInput>;\n}\nexport interface QueryToEventsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToEventsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFilteredEventsArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  memberId: IUUID;\n  filter?: IEventFilterInput;\n  order?: Array<IEventSortInput>;\n}\nexport interface QueryToFilteredEventsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFilteredEventsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCurrentDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToEventTypesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToEventTypesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToEventTypesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSubEventTypesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToEventByIdArgs {\n  projectId: IUUID;\n  id: IUUID;\n}\nexport interface QueryToEventByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToEventByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToLocalTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToNextEventArgs {\n  projectId: IUUID;\n  memberId: IUUID;\n  quantity?: number;\n  day?: number;\n  month?: number;\n  year?: number;\n  eventVisibility?: IEventVisibility;\n  filter?: IEventFilterInput;\n}\nexport interface QueryToNextEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToNextEventArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToNextEventMembersArgs {\n  projectId: IUUID;\n  memberId: IUUID;\n  quantity?: number;\n  eventVisibility?: IEventVisibility;\n  filter?: IEventFilterInput;\n}\nexport interface QueryToNextEventMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToNextEventMembersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMembersEventsArgs {\n  projectId: IUUID;\n  membersId?: Array<string>;\n  eventTypeId?: IUUID;\n  eventMode?: IEventMode;\n}\nexport interface QueryToMembersEventsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMembersEventsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAssociatedEventsArgs {\n  projectId: IUUID;\n  memberId: IUUID;\n  membersId: Array<string>;\n}\nexport interface QueryToAssociatedEventsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAssociatedEventsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListHiringArgs {\n  projectId: IUUID;\n  filter?: IHiringFilterInput;\n  order?: Array<IHiringSortInput>;\n}\nexport interface QueryToListHiringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListHiringArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListHiringTypeArgs {\n  projectId: IUUID;\n  filter?: IHiringTypeFilterInput;\n  order?: Array<IHiringTypeSortInput>;\n}\nexport interface QueryToListHiringTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListHiringTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListShiftArgs {\n  projectId: IUUID;\n  filter?: IShiftFilterInput;\n  order?: Array<IShiftSortInput>;\n}\nexport interface QueryToListShiftResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListShiftArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDaysArgs {\n  filter?: IDayFilterInput;\n  order?: Array<IDaySortInput>;\n}\nexport interface QueryToListDaysResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDaysArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListResourceQuotesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IResourceQuoteFilterInput;\n  order?: Array<IResourceQuoteSortInput>;\n}\nexport interface QueryToListResourceQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListResourceQuotesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToResourceQuoteByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToResourceQuoteByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToResourceQuoteByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListResourceQuoteDetailsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IResourceQuoteDetailFilterInput;\n  order?: Array<IResourceQuoteDetailSortInput>;\n}\nexport interface QueryToListResourceQuoteDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListResourceQuoteDetailsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListProposalArgs {\n  skip?: number;\n  take?: number;\n  filter?: IProposalFilterInput;\n  order?: Array<IProposalSortInput>;\n}\nexport interface QueryToListProposalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListProposalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProposalByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToProposalByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProposalByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCollaboratorsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICollaboratorFilterInput;\n  order?: Array<ICollaboratorSortInput>;\n}\nexport interface QueryToListCollaboratorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCollaboratorsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCollaboratorHoursArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICollaboratorHoursFilterInput;\n  order?: Array<ICollaboratorHoursSortInput>;\n}\nexport interface QueryToListCollaboratorHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCollaboratorHoursArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToHousReportedProjectArgs {\n  projectId: IUUID;\n}\nexport interface QueryToHousReportedProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToHousReportedProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListEnumHiringTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToHiringByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToHiringByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToHiringByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToShiftByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToShiftByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToShiftByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToResourceQuotesByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToResourceQuotesByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToResourceQuotesByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCollaboratorsByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToCollaboratorsByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCollaboratorsByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToHiringServicesByServiceAreaIdArgs {\n  serviceId: IUUID;\n}\nexport interface QueryToHiringServicesByServiceAreaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToHiringServicesByServiceAreaIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToConfigsArgs {\n  id: IUUID;\n}\nexport interface QueryToConfigsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToConfigsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToConfigurationTemplateByIdArgs {\n  projectId: IUUID;\n  templateType: ITemplateType;\n}\nexport interface QueryToConfigurationTemplateByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToConfigurationTemplateByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListComponentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListWebsitePagesArgs {\n  projectId?: IUUID;\n  order?: Array<IWebsitePageSortInput>;\n}\nexport interface QueryToListWebsitePagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListWebsitePagesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToWebSitePageByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToWebSitePageByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToWebSitePageByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToWebsitePageComponentByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToWebsitePageComponentByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToWebsitePageComponentByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListProjectPlanSubscriptionsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IProjectPlanSubscriptionFilterInput;\n}\nexport interface QueryToListProjectPlanSubscriptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListProjectPlanSubscriptionsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectPlanSubscriptionByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToProjectPlanSubscriptionByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectPlanSubscriptionByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectPlanSubscriptionsByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToProjectPlanSubscriptionsByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectPlanSubscriptionsByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListBusinessesArgs {\n  filter?: IBusinessFilterInput;\n}\nexport interface QueryToListBusinessesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListBusinessesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBusinessesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IBusinessFilterInput;\n}\nexport interface QueryToBusinessesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBusinessesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBusinessTypesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IBusinessTypeFilterInput;\n}\nexport interface QueryToBusinessTypesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBusinessTypesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBusinessRulesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IBusinessRuleFilterInput;\n}\nexport interface QueryToBusinessRulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBusinessRulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBusinessRuleByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToBusinessRuleByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBusinessRuleByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBusinessTypeByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToBusinessTypeByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBusinessTypeByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBusinessByIdArgs {\n  id?: IUUID;\n}\nexport interface QueryToBusinessByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBusinessByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListProjectPlansArgs {\n  filter?: IProjectPlanFilterInput;\n}\nexport interface QueryToListProjectPlansResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListProjectPlansArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectPlansArgs {\n  skip?: number;\n  take?: number;\n  filter?: IProjectPlanFilterInput;\n}\nexport interface QueryToProjectPlansResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectPlansArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProjectPlanByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToProjectPlanByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProjectPlanByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToWebsitePageBySlugArgs {\n  slug: string;\n  projectId: IUUID;\n}\nexport interface QueryToWebsitePageBySlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToWebsitePageBySlugArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListTemplatesArgs {\n  filter?: ITemplateFilterInput;\n}\nexport interface QueryToListTemplatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListTemplatesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTemplateByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToTemplateByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToTemplateByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToErrorPagesArgs {\n  filter?: IErrorPageFilterInput;\n}\nexport interface QueryToErrorPagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToErrorPagesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToErrorPageByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToErrorPageByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToErrorPageByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToErrorPageValidationsArgs {\n  filter?: IErrorPageValidationFilterInput;\n}\nexport interface QueryToErrorPageValidationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToErrorPageValidationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToErrorPageValidationByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToErrorPageValidationByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToErrorPageValidationByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCouponByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToCouponByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCouponByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCouponsArgs {\n  filter?: ICouponFilterInput;\n}\nexport interface QueryToCouponsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCouponsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCouponTemplatesArgs {\n  filter?: ICouponTemplateFilterInput;\n}\nexport interface QueryToCouponTemplatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCouponTemplatesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDocumentCategoryArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDocumentCategoryFilterInput;\n  order?: Array<IDocumentCategorySortInput>;\n}\nexport interface QueryToListDocumentCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDocumentCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDocumentCategoryDetailArgs {\n  projectId: IUUID;\n  filter?: IDocumentCategoryDetailFilterInput;\n  order?: Array<IDocumentCategoryDetailSortInput>;\n}\nexport interface QueryToListDocumentCategoryDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDocumentCategoryDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDocumentArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDocumentFilterInput;\n  order?: Array<IDocumentSortInput>;\n}\nexport interface QueryToListDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDocumentTemplateArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDocumentTemplateFilterInput;\n  order?: Array<IDocumentTemplateSortInput>;\n}\nexport interface QueryToListDocumentTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDocumentTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListTemplatePageArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: ITemplatePageFilterInput;\n  order?: Array<ITemplatePageSortInput>;\n}\nexport interface QueryToListTemplatePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListTemplatePageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDocumentTagArgs {\n  projectId: IUUID;\n  filter?: IDocumentTagFilterInput;\n  order?: Array<IDocumentTagSortInput>;\n}\nexport interface QueryToListDocumentTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDocumentTagArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDocumentScanArgs {\n  projectId: IUUID;\n  filter?: IDocumentScanFilterInput;\n  order?: Array<IDocumentScanSortInput>;\n}\nexport interface QueryToListDocumentScanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDocumentScanArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDocumentReadArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDocumentReadFilterInput;\n  order?: Array<IDocumentReadSortInput>;\n}\nexport interface QueryToListDocumentReadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDocumentReadArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVerifyUserRoomArgs {\n  projectId: IUUID;\n  sessionName: string;\n}\nexport interface QueryToVerifyUserRoomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVerifyUserRoomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVerifyVideoRoomArgs {\n  projectId: IUUID;\n  sessionName: string;\n}\nexport interface QueryToVerifyVideoRoomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVerifyVideoRoomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRoomTokenLiveKit2Args {\n  projectId: IUUID;\n  sessionName: string;\n  participantName: string;\n  photo?: string;\n  memberId?: string;\n}\nexport interface QueryToRoomTokenLiveKit2Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToRoomTokenLiveKit2Args, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRoomTokenLiveKit3Args {\n  projectId: IUUID;\n  sessionName: string;\n  participantName: string;\n  memberId?: string;\n}\nexport interface QueryToRoomTokenLiveKit3Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToRoomTokenLiveKit3Args, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStartRecordRoom2Args {\n  memberId: IUUID;\n  name: string;\n  roomName?: string;\n}\nexport interface QueryToStartRecordRoom2Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStartRecordRoom2Args, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVideoCallsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListVideoRoomsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToListVideoRoomsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListVideoRoomsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListRoomRecordsArgs {\n  roomName: string;\n}\nexport interface QueryToListRoomRecordsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListRoomRecordsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRoomRecordArgs {\n  videoRoomRecordId: IUUID;\n}\nexport interface QueryToRoomRecordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToRoomRecordArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVideoCallsByMemberArgs {\n  memberId: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToVideoCallsByMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVideoCallsByMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVideoCallByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToVideoCallByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVideoCallByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVideoCallBySessionIdArgs {\n  sessionId: string;\n}\nexport interface QueryToVideoCallBySessionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVideoCallBySessionIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContactEmailsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToContactEmailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContactEmailsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListServiceAreaArgs {\n  skip?: number;\n  take?: number;\n  filter?: IServiceFilterInput;\n  order?: Array<IServiceSortInput>;\n}\nexport interface QueryToListServiceAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListServiceAreaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListAreaArgs {\n  skip?: number;\n  take?: number;\n  filter?: IAreaFilterInput;\n  order?: Array<IAreaSortInput>;\n}\nexport interface QueryToListAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListAreaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListServiceQuizArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IServiceQuizFilterInput;\n  order?: Array<IServiceQuizSortInput>;\n}\nexport interface QueryToListServiceQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListServiceQuizArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuizFilterInput;\n  order?: Array<IQuizSortInput>;\n}\nexport interface QueryToListQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizSectionArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuizSectionFilterInput;\n  order?: Array<IQuizSectionSortInput>;\n}\nexport interface QueryToListQuizSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizSectionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizQuestionArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuizQuestionFilterInput;\n  order?: Array<IQuizQuestionSortInput>;\n}\nexport interface QueryToListQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizQuestionAnswerArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuizQuestionAnswerFilterInput;\n  order?: Array<IQuizQuestionAnswerSortInput>;\n}\nexport interface QueryToListQuizQuestionAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizQuestionAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizAnswerArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuizAnswerFilterInput;\n  order?: Array<IQuizAnswerSortInput>;\n}\nexport interface QueryToListQuizAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizMemberArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuizMemberFilterInput;\n  order?: Array<IQuizMemberSortInput>;\n}\nexport interface QueryToListQuizMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizMemberGroupedArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  quizId?: IUUID;\n  filter?: IQuizMemberGroupedFilterInput;\n  order?: Array<IQuizMemberGroupedSortInput>;\n}\nexport interface QueryToListQuizMemberGroupedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizMemberGroupedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizQuestionMemberArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuizQuestionMemberFilterInput;\n  order?: Array<IQuizQuestionMemberSortInput>;\n}\nexport interface QueryToListQuizQuestionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizQuestionMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizMemberAnswerArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuizMemberAnswerFilterInput;\n  order?: Array<IQuizMemberAnswerSortInput>;\n}\nexport interface QueryToListQuizMemberAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizMemberAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuizMemberDescriptionArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuizMemberDescriptionFilterInput;\n  order?: Array<IQuizMemberDescriptionSortInput>;\n}\nexport interface QueryToListQuizMemberDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuizMemberDescriptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToServiceAreaByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToServiceAreaByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToServiceAreaByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAreaByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToAreaByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAreaByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToServiceAreaMemberByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToServiceAreaMemberByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToServiceAreaMemberByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCatalogAarcoArgs {\n  projectId: IUUID;\n  nameCatalog: IEnumNameCatalog;\n  filter: string;\n  filter2?: boolean;\n  token: string;\n}\nexport interface QueryToCatalogAarcoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCatalogAarcoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuotationByIdPeticionAarcoArgs {\n  projectId: IUUID;\n  token: string;\n  idPeticion: number;\n}\nexport interface QueryToQuotationByIdPeticionAarcoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuotationByIdPeticionAarcoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCoverageAarcoArgs {\n  projectId: IUUID;\n  token: string;\n  idCotizacion: number;\n  formasPago: Array<IEnumFormsPayment>;\n  idProducto: number;\n  productos: Array<number>;\n  aseguradoras: number;\n}\nexport interface QueryToCoverageAarcoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCoverageAarcoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPayment_transactionsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ITransactionFilterInput;\n  order?: Array<ITransactionSortInput>;\n}\nexport interface QueryToPayment_transactionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPayment_transactionsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMethodPaymentsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IMethodPaymentFilterInput;\n  order?: Array<IMethodPaymentSortInput>;\n}\nexport interface QueryToMethodPaymentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMethodPaymentsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPlanArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPlanFilterInput;\n  order?: Array<IPlanSortInput>;\n}\nexport interface QueryToPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPlanArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInvoicesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInvoiceFilterInput;\n  order?: Array<IInvoiceSortInput>;\n}\nexport interface QueryToListInvoicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInvoicesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInvoiceByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToInvoiceByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInvoiceByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInvoiceAddressArgs {\n  addressId: IUUID;\n}\nexport interface QueryToListInvoiceAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInvoiceAddressArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInvoiceDetailProductArgs {\n  productId: IUUID;\n}\nexport interface QueryToListInvoiceDetailProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInvoiceDetailProductArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInvoicesByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToInvoicesByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInvoicesByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCustomerSuscriptionsArgs {\n  filter?: ICustomerSuscriptionFilterInput;\n}\nexport interface QueryToCustomerSuscriptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCustomerSuscriptionsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProductStripeByProductIdArgs {\n  id: IUUID;\n}\nexport interface QueryToProductStripeByProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProductStripeByProductIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPlanByProductIdArgs {\n  productId: IUUID;\n}\nexport interface QueryToPlanByProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPlanByProductIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListAccountKeyArgs {\n  skip?: number;\n  take?: number;\n  filter?: IAccountKeyFilterInput;\n  order?: Array<IAccountKeySortInput>;\n}\nexport interface QueryToListAccountKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListAccountKeyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAccountKeysByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToAccountKeysByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAccountKeysByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPaymentMethodByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToPaymentMethodByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPaymentMethodByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMemberWithStripePaymentMethodArgs {\n  memberId: IUUID;\n}\nexport interface QueryToMemberWithStripePaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMemberWithStripePaymentMethodArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMethodPaymentByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMethodPaymentByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMethodPaymentByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSubscriptionStatusArgs {\n  memberId: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToSubscriptionStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSubscriptionStatusArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPaymentMethodsStripeArgs {\n  memberId: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToPaymentMethodsStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPaymentMethodsStripeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogHdiCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogHdiCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogHdiCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogHdiCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogHdiCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogMapfreeCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogMapfreCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogMapfreCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogMapfreeCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogMapfreeCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogQualitasCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogQualitasCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogQualitasCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogQualitasCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogQualitasCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogZurichCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogZurichCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogZurichCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogZurichCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogZurichCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuoteCoveragesArgs {\n  filter?: IQuotationCoverageFilterInput;\n  order?: Array<IQuotationCoverageSortInput>;\n}\nexport interface QueryToQuoteCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuoteCoveragesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuoteCoverageByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToQuoteCoverageByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuoteCoverageByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListStaffQuoteArgs {\n  projectId: IUUID;\n  filter?: IStaffQuoteFilterInput;\n  order?: Array<IStaffQuoteSortInput>;\n}\nexport interface QueryToListStaffQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListStaffQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMultiquoter_listProposalArgs {\n  projectId: IUUID;\n  filter?: IProposalFilterInput;\n  order?: Array<IProposalSortInput>;\n}\nexport interface QueryToMultiquoter_listProposalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMultiquoter_listProposalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCollaboratorArgs {\n  projectId: IUUID;\n  filter?: ICollaboratorFilterInput;\n  order?: Array<ICollaboratorSortInput>;\n}\nexport interface QueryToListCollaboratorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCollaboratorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCoverageByProjectArgs {\n  projectId: IUUID;\n  insurerName: string;\n  packageStatus: IInsurerPackageStatus;\n}\nexport interface QueryToCoverageByProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCoverageByProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPackagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCoveragesArgs {\n  insurer: string;\n}\nexport interface QueryToCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCoveragesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRunServiceQuoteFetchArgs {\n  input: IQuoterRequestInput;\n}\nexport interface QueryToRunServiceQuoteFetchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToRunServiceQuoteFetchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStadisticsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStadisticsQualitasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListRQuoterProfilesByProjectIdArgs {\n  projectId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  filter?: IQuoterProfileFilterInput;\n  order?: Array<IQuoterProfileSortInput>;\n}\nexport interface QueryToListRQuoterProfilesByProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListRQuoterProfilesByProjectIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListRQuoterProfilesInsurerByProjectIdArgs {\n  projectId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  filter?: IQuoterProfileInsurerFilterInput;\n  order?: Array<IQuoterProfileInsurerSortInput>;\n}\nexport interface QueryToListRQuoterProfilesInsurerByProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListRQuoterProfilesInsurerByProjectIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToHomologatedArgs {\n  code: string;\n}\nexport interface QueryToHomologatedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToHomologatedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerServiceCredentialsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToListInsurerServiceCredentialsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerServiceCredentialsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerService2Args {\n  name: string;\n}\nexport interface QueryToListInsurerService2Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerService2Args, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListRelationsArgs {\n  carId: number;\n}\nexport interface QueryToListRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListRelationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuotesArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  status: IQuoteStatus;\n  filter?: IQuoteFilterInput;\n  order?: Array<IQuoteSortInput>;\n}\nexport interface QueryToQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuotesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuotesAltArgs {\n  skip?: number;\n  take?: number;\n  filter?: IQuoteFilterInput;\n  order?: Array<IQuoteSortInput>;\n}\nexport interface QueryToListQuotesAltResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuotesAltArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuotesArgs {\n  projectId: IUUID;\n  filter?: IQuoteFilterInput;\n}\nexport interface QueryToListQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListQuotesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuotesByMemberArgs {\n  memberId: IUUID;\n  status: IQuoteStatus;\n}\nexport interface QueryToQuotesByMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuotesByMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListRegistrationsArgs {\n  projectId: IUUID;\n  filter?: IRegistrationFilterInput;\n  order?: Array<IRegistrationSortInput>;\n}\nexport interface QueryToListRegistrationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListRegistrationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuoteByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToQuoteByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuoteByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListQuoteServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListGendersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCarsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCarTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCarBrandArgs {\n  type: string;\n  insurer?: string;\n}\nexport interface QueryToListCarBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCarBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCarSuBbrandArgs {\n  type: string;\n  insurer?: string;\n  brand: string;\n}\nexport interface QueryToListCarSuBbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCarSuBbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListModelArgs {\n  type: string;\n  insurer?: string;\n  brand: string;\n  subbrand: string;\n}\nexport interface QueryToListModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListModelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCarArgs {\n  type: string;\n  insurer?: string;\n  brand: string;\n  subbrand: string;\n  year: ILong;\n}\nexport interface QueryToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCarArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToRelationCarsArgs {\n  qualitasCode: string;\n}\nexport interface QueryToRelationCarsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToRelationCarsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToColonyArgs {\n  zipcode: string;\n}\nexport interface QueryToColonyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToColonyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCoveragesArgs {\n  coverage: string;\n  owner?: string;\n  type?: string;\n  insurance?: string;\n}\nexport interface QueryToListCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCoveragesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCatalogByIdArgs {\n  catalogId: IUUID;\n}\nexport interface QueryToCatalogByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCatalogByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCatalogsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICatalogFilterInput;\n  order?: Array<ICatalogSortInput>;\n}\nexport interface QueryToCatalogsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCatalogsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCatalogByYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInsurersArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IInsurerFilterInput;\n  order?: Array<IInsurerSortInput>;\n}\nexport interface QueryToInsurersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInsurersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToOfficesArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IOfficeFilterInput;\n  order?: Array<IOfficeSortInput>;\n}\nexport interface QueryToOfficesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToOfficesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuatorProfilesArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IQuoterProfileFilterInput;\n  order?: Array<IQuoterProfileSortInput>;\n}\nexport interface QueryToQuatorProfilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuatorProfilesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuoterProfileByIdArgs {\n  quoterProfileId: IUUID;\n}\nexport interface QueryToQuoterProfileByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuoterProfileByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAbasArgs {\n  brand: string;\n  subbrand: string;\n  filter?: IVehiclesCarCatalogAbaFilterInput;\n  order?: Array<IVehiclesCarCatalogAbaSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAbasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAbasArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAbasByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogAbaFilterInput;\n  order?: Array<IVehiclesCarCatalogAbaSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAbasByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAbasByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAbasBySubBrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogAbaFilterInput;\n  order?: Array<IVehiclesCarCatalogAbaSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAbasBySubBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAbasBySubBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAfirmeArgs {\n  filter?: IVehiclesCarCatalogAfirmeFilterInput;\n  order?: Array<IVehiclesCarCatalogAfirmeSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAfirmeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAfirmeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAfirmebyBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogAfirmeFilterInput;\n  order?: Array<IVehiclesCarCatalogAfirmeSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAfirmebyBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAfirmebyBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAfirmebySubrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogAfirmeFilterInput;\n  order?: Array<IVehiclesCarCatalogAfirmeSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAfirmebySubrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAfirmebySubrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAigArgs {\n  filter?: IVehiclesCarCatalogAigFilterInput;\n  order?: Array<IVehiclesCarCatalogAigSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAigByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogAigFilterInput;\n  order?: Array<IVehiclesCarCatalogAigSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAigByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAigByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAigBySubBrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogAigFilterInput;\n  order?: Array<IVehiclesCarCatalogAigSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAigBySubBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAigBySubBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAnasArgs {\n  filter?: IVehiclesCarCatalogAnaFilterInput;\n  order?: Array<IVehiclesCarCatalogAnaSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAnasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAnasArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAnasByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogAnaFilterInput;\n  order?: Array<IVehiclesCarCatalogAnaSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAnasByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAnasByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarCatalogAnasbySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogAnaFilterInput;\n  order?: Array<IVehiclesCarCatalogAnaSortInput>;\n}\nexport interface QueryToVehiclesCarCatalogAnasbySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarCatalogAnasbySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesAtlasArgs {\n  filter?: IVehiclesCarCatalogAtlaFilterInput;\n  order?: Array<IVehiclesCarCatalogAtlaSortInput>;\n}\nexport interface QueryToVehiclesAtlasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesAtlasArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesAtlasByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogAtlaFilterInput;\n  order?: Array<IVehiclesCarCatalogAtlaSortInput>;\n}\nexport interface QueryToVehiclesAtlasByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesAtlasByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesAtlasBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogAtlaFilterInput;\n  order?: Array<IVehiclesCarCatalogAtlaSortInput>;\n}\nexport interface QueryToVehiclesAtlasBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesAtlasBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesAxaArgs {\n  filter?: IVehiclesCarCatalogAxaFilterInput;\n  order?: Array<IVehiclesCarCatalogAxaSortInput>;\n}\nexport interface QueryToVehiclesAxaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesAxaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesAxaByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogAxaFilterInput;\n  order?: Array<IVehiclesCarCatalogAxaSortInput>;\n}\nexport interface QueryToVehiclesAxaByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesAxaByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesAxaBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogAxaFilterInput;\n  order?: Array<IVehiclesCarCatalogAxaSortInput>;\n}\nexport interface QueryToVehiclesAxaBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesAxaBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesBanorteArgs {\n  filter?: IVehiclesCarCatalogBanorteFilterInput;\n  order?: Array<IVehiclesCarCatalogBanorteSortInput>;\n}\nexport interface QueryToVehiclesBanorteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesBanorteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesBanorteByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogBanorteFilterInput;\n  order?: Array<IVehiclesCarCatalogBanorteSortInput>;\n}\nexport interface QueryToVehiclesBanorteByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesBanorteByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesBanorteBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogBanorteFilterInput;\n  order?: Array<IVehiclesCarCatalogBanorteSortInput>;\n}\nexport interface QueryToVehiclesBanorteBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesBanorteBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesGripArgs {\n  filter?: IVehiclesCarCatalogGnpFilterInput;\n  order?: Array<IVehiclesCarCatalogGnpSortInput>;\n}\nexport interface QueryToVehiclesGripResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesGripArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesGripByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogGnpFilterInput;\n  order?: Array<IVehiclesCarCatalogGnpSortInput>;\n}\nexport interface QueryToVehiclesGripByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesGripByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesGripBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogGnpFilterInput;\n  order?: Array<IVehiclesCarCatalogGnpSortInput>;\n}\nexport interface QueryToVehiclesGripBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesGripBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesHdiArgs {\n  filter?: IVehiclesCarCatalogHdiFilterInput;\n  order?: Array<IVehiclesCarCatalogHdiSortInput>;\n}\nexport interface QueryToVehiclesHdiResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesHdiArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesHdiByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogHdiFilterInput;\n  order?: Array<IVehiclesCarCatalogHdiSortInput>;\n}\nexport interface QueryToVehiclesHdiByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesHdiByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesHdiBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogHdiFilterInput;\n  order?: Array<IVehiclesCarCatalogHdiSortInput>;\n}\nexport interface QueryToVehiclesHdiBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesHdiBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesMapfreeArgs {\n  filter?: IVehiclesCarCatalogMapfreFilterInput;\n  order?: Array<IVehiclesCarCatalogMapfreSortInput>;\n}\nexport interface QueryToVehiclesMapfreeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesMapfreeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesMapfreeByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogMapfreFilterInput;\n  order?: Array<IVehiclesCarCatalogMapfreSortInput>;\n}\nexport interface QueryToVehiclesMapfreeByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesMapfreeByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesMapfreeBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogMapfreFilterInput;\n  order?: Array<IVehiclesCarCatalogMapfreSortInput>;\n}\nexport interface QueryToVehiclesMapfreeBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesMapfreeBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesPArgs {\n  filter?: IVehiclesCarCatalogPFilterInput;\n  order?: Array<IVehiclesCarCatalogPSortInput>;\n}\nexport interface QueryToVehiclesPResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesPArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesPByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogPFilterInput;\n  order?: Array<IVehiclesCarCatalogPSortInput>;\n}\nexport interface QueryToVehiclesPByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesPByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesPBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogPFilterInput;\n  order?: Array<IVehiclesCarCatalogPSortInput>;\n}\nexport interface QueryToVehiclesPBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesPBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesPotosiArgs {\n  filter?: IVehiclesCarCatalogPotosiFilterInput;\n  order?: Array<IVehiclesCarCatalogPotosiSortInput>;\n}\nexport interface QueryToVehiclesPotosiResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesPotosiArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesPotosiByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogPotosiFilterInput;\n  order?: Array<IVehiclesCarCatalogPotosiSortInput>;\n}\nexport interface QueryToVehiclesPotosiByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesPotosiByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesPotosiBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogPotosiFilterInput;\n  order?: Array<IVehiclesCarCatalogPotosiSortInput>;\n}\nexport interface QueryToVehiclesPotosiBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesPotosiBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesQualitasArgs {\n  filter?: IVehiclesCarCatalogQualitaFilterInput;\n  order?: Array<IVehiclesCarCatalogQualitaSortInput>;\n}\nexport interface QueryToVehiclesQualitasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesQualitasArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesQualitasByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogQualitaFilterInput;\n  order?: Array<IVehiclesCarCatalogQualitaSortInput>;\n}\nexport interface QueryToVehiclesQualitasByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesQualitasByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesQualitasBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogQualitaFilterInput;\n  order?: Array<IVehiclesCarCatalogQualitaSortInput>;\n}\nexport interface QueryToVehiclesQualitasBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesQualitasBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesZurichArgs {\n  filter?: IVehiclesCarCatalogZurichFilterInput;\n  order?: Array<IVehiclesCarCatalogZurichSortInput>;\n}\nexport interface QueryToVehiclesZurichResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesZurichArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesZurichByBrandArgs {\n  brand: string;\n  filter?: IVehiclesCarCatalogZurichFilterInput;\n  order?: Array<IVehiclesCarCatalogZurichSortInput>;\n}\nexport interface QueryToVehiclesZurichByBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesZurichByBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesZurichBySubbrandArgs {\n  subbrand: string;\n  filter?: IVehiclesCarCatalogZurichFilterInput;\n  order?: Array<IVehiclesCarCatalogZurichSortInput>;\n}\nexport interface QueryToVehiclesZurichBySubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesZurichBySubbrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogAbaCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogAbaCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogAbaCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogAbaCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogAbaCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogAfirmeCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogAfirmeCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogAfirmeCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogAfirmeCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogAfirmeCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogAxaCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogAxaCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogAxaCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogAxaCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogAxaCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogAtlasCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogAtlasCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogAtlasCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogAtlasCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogAtlasCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogBanorteCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogBanorteCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogBanorteCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogBanorteCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogBanorteCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVehiclesCarcatalogGnpCodeYearsCarIdArgs {\n  carId: number;\n  filter?: IVehiclesCarCatalogGnpCodeYearFilterInput;\n  order?: Array<IVehiclesCarCatalogGnpCodeYearSortInput>;\n}\nexport interface QueryToVehiclesCarcatalogGnpCodeYearsCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVehiclesCarcatalogGnpCodeYearsCarIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToApiServicesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToApiServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToApiServicesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToApiServiceBySecretAndProjectIdArgs {\n  projectId: IUUID;\n  secretkey: string;\n}\nexport interface QueryToApiServiceBySecretAndProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToApiServiceBySecretAndProjectIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDynamicPageArgs {\n  projectId: IUUID;\n  filter?: IDynamicPageFilterInput;\n  order?: Array<IDynamicPageSortInput>;\n}\nexport interface QueryToListDynamicPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDynamicPageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDynamicBlockArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDynamicBlockFilterInput;\n  order?: Array<IDynamicBlockSortInput>;\n}\nexport interface QueryToListDynamicBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDynamicBlockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDynamicSectionArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDynamicSectionFilterInput;\n  order?: Array<IDynamicSectionSortInput>;\n}\nexport interface QueryToListDynamicSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDynamicSectionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDynamicTabArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDynamicTabFilterInput;\n  order?: Array<IDynamicTabSortInput>;\n}\nexport interface QueryToListDynamicTabResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDynamicTabArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDynamicSectionBlockArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDynamicSectionBlockFilterInput;\n  order?: Array<IDynamicSectionBlockSortInput>;\n}\nexport interface QueryToListDynamicSectionBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDynamicSectionBlockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDynamicCustomMetaArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDynamicCustomMetaFilterInput;\n  order?: Array<IDynamicCustomMetaSortInput>;\n}\nexport interface QueryToListDynamicCustomMetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDynamicCustomMetaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDynamicCustomValueArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IDynamicCustomValueFilterInput;\n  order?: Array<IDynamicCustomValueSortInput>;\n}\nexport interface QueryToListDynamicCustomValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDynamicCustomValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListChargesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IChargeFilterInput;\n  order?: Array<IChargeSortInput>;\n}\nexport interface QueryToListChargesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListChargesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListClinicHistoryArgs {\n  filter?: IClinicHistoryFilterInput;\n  order?: Array<IClinicHistorySortInput>;\n}\nexport interface QueryToListClinicHistoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListClinicHistoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListConsultArgs {\n  skip?: number;\n  take?: number;\n  filter?: IEventDetailFilterInput;\n  order?: Array<IEventDetailSortInput>;\n}\nexport interface QueryToListConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListConsultArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFisicExamArgs {\n  filter?: IFisicExamFilterInput;\n  order?: Array<IFisicExamSortInput>;\n}\nexport interface QueryToListFisicExamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFisicExamArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMedicalBackgroundsArgs {\n  projectId: IUUID;\n  memberId: IUUID;\n  eventTypeId: IUUID;\n  filter?: IMedicalBackgroundFilterInput;\n  order?: Array<IMedicalBackgroundSortInput>;\n}\nexport interface QueryToListMedicalBackgroundsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMedicalBackgroundsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMedicBackgroundDetailsArgs {\n  filter?: IMedicalBackgroundDetailFilterInput;\n  order?: Array<IMedicalBackgroundDetailSortInput>;\n}\nexport interface QueryToListMedicBackgroundDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMedicBackgroundDetailsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListClinicHistory_MedicalBackgroundDetailsArgs {\n  filter?: IClinicHistoryMedicalBackgroundDetailFilterInput;\n  order?: Array<IClinicHistoryMedicalBackgroundDetailSortInput>;\n}\nexport interface QueryToListClinicHistory_MedicalBackgroundDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListClinicHistory_MedicalBackgroundDetailsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMedicinesArgs {\n  eventId: IUUID;\n  filter?: IMedicineFilterInput;\n  order?: Array<IMedicineSortInput>;\n}\nexport interface QueryToListMedicinesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMedicinesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMedicalServicesArgs {\n  filter?: IMedicalServiceFilterInput;\n  order?: Array<IMedicalServiceSortInput>;\n}\nexport interface QueryToListMedicalServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMedicalServicesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListVaccinesArgs {\n  filter?: IVaccineFilterInput;\n  order?: Array<IVaccineSortInput>;\n}\nexport interface QueryToListVaccinesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListVaccinesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListVitalSignsArgs {\n  filter?: IVitalSignFilterInput;\n  order?: Array<IVitalSignSortInput>;\n}\nexport interface QueryToListVitalSignsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListVitalSignsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMedicalConfigsArgs {\n  filter?: IMedicalConfigFilterInput;\n  order?: Array<IMedicalConfigSortInput>;\n}\nexport interface QueryToListMedicalConfigsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMedicalConfigsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListRegistSesionsArgs {\n  filter?: IRegistSesionFilterInput;\n  order?: Array<IRegistSesionSortInput>;\n}\nexport interface QueryToListRegistSesionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListRegistSesionsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListTherapyArgs {\n  skip?: number;\n  take?: number;\n  filter?: ITherapyFilterInput;\n  order?: Array<ITherapySortInput>;\n}\nexport interface QueryToListTherapyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListTherapyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListRecipeConfigArgs {\n  filter?: IRecipeConfigFilterInput;\n  order?: Array<IRecipeConfigSortInput>;\n}\nexport interface QueryToListRecipeConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListRecipeConfigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMedicRecipeArgs {\n  filter?: IMedicRecipeFilterInput;\n  order?: Array<IMedicRecipeSortInput>;\n}\nexport interface QueryToListMedicRecipeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMedicRecipeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListConsultNotesArgs {\n  filter?: IConsultNoteFilterInput;\n  order?: Array<IConsultNoteSortInput>;\n}\nexport interface QueryToListConsultNotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListConsultNotesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPacientNoteArgs {\n  filter?: IPacientNoteFilterInput;\n  order?: Array<IPacientNoteSortInput>;\n}\nexport interface QueryToListPacientNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPacientNoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDiagnosticArgs {\n  filter?: IDiagnosticFilterInput;\n  order?: Array<IDiagnosticSortInput>;\n}\nexport interface QueryToListDiagnosticResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDiagnosticArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPacientMedicalBackgroundArgs {\n  filter?: IPacientMedicalBackgroundFilterInput;\n  order?: Array<IPacientMedicalBackgroundSortInput>;\n}\nexport interface QueryToListPacientMedicalBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPacientMedicalBackgroundArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListBillingRequestsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFormatsArgs {\n  filter?: IFormatFilterInput;\n  order?: Array<IFormatSortInput>;\n}\nexport interface QueryToListFormatsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFormatsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPatientResponsesArgs {\n  filter?: IPatientVitalSignsResponseFilterInput;\n  order?: Array<IPatientVitalSignsResponseSortInput>;\n}\nexport interface QueryToListPatientResponsesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPatientResponsesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMedicalBackgroundsByFormatIdArgs {\n  formatId: IUUID;\n}\nexport interface QueryToMedicalBackgroundsByFormatIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMedicalBackgroundsByFormatIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToConsultInfoArgs {\n  eventId: IUUID;\n}\nexport interface QueryToConsultInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToConsultInfoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListChagesForPacientArgs {\n  skip?: number;\n  take?: number;\n  memberId: IUUID;\n  filter?: IEventDetailFilterInput;\n  order?: Array<IEventDetailSortInput>;\n}\nexport interface QueryToListChagesForPacientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListChagesForPacientArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPacientMedicalBackgroundByIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListPacientMedicalBackgroundByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPacientMedicalBackgroundByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListEventDetailsByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListEventDetailsByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListEventDetailsByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFisicExamsByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListFisicExamsByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFisicExamsByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMedicalBackgroundByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListMedicalBackgroundByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMedicalBackgroundByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMedicRecipesByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListMedicRecipesByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMedicRecipesByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPatientNotesByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListPatientNotesByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPatientNotesByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListVitalSignsByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListVitalSignsByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListVitalSignsByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListVaccinesByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListVaccinesByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListVaccinesByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDiagnosticByEventIdArgs {\n  eventId: IUUID;\n}\nexport interface QueryToListDiagnosticByEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDiagnosticByEventIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListEnumInsideTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSpaceArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: ISpaceFilterInput;\n  order?: Array<ISpaceSortInput>;\n}\nexport interface QueryToListSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListBoardStatusArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IBoardStatusFilterInput;\n  order?: Array<IBoardStatusSortInput>;\n}\nexport interface QueryToListBoardStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListBoardStatusArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListBoardArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IBoardFilterInput;\n  order?: Array<IBoardSortInput>;\n}\nexport interface QueryToListBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListBoardListArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IBoardListFilterInput;\n  order?: Array<IBoardListSortInput>;\n}\nexport interface QueryToListBoardListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListBoardListArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCardReplyArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: ICardReplyFilterInput;\n  order?: Array<ICardReplySortInput>;\n}\nexport interface QueryToListCardReplyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCardReplyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCardArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: ICardFilterInput;\n  order?: Array<ICardSortInput>;\n}\nexport interface QueryToListCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListNestedFilesArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: INestedFileFilterInput;\n  order?: Array<INestedFileSortInput>;\n}\nexport interface QueryToListNestedFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListNestedFilesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberCardArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IMemberCardFilterInput;\n  order?: Array<IMemberCardSortInput>;\n}\nexport interface QueryToListMemberCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberBoardArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IMemberBoardFilterInput;\n  order?: Array<IMemberBoardSortInput>;\n}\nexport interface QueryToListMemberBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberSpaceArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IMemberSpaceFilterInput;\n  order?: Array<IMemberSpaceSortInput>;\n}\nexport interface QueryToListMemberSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberSpaceOnValueArgs {\n  spaceId: IUUID;\n  boardColumnValueId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  order?: Array<IMemberSpaceSortInput>;\n}\nexport interface QueryToListMemberSpaceOnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberSpaceOnValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberSpaceOnCardArgs {\n  spaceId: IUUID;\n  cardId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  order?: Array<IMemberSpaceSortInput>;\n}\nexport interface QueryToListMemberSpaceOnCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberSpaceOnCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberBoardOnValueArgs {\n  boardId: IUUID;\n  boardColumnValueId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  order?: Array<IMemberBoardSortInput>;\n}\nexport interface QueryToListMemberBoardOnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberBoardOnValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberBoardOnCardArgs {\n  boardId: IUUID;\n  cardId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  order?: Array<IMemberBoardSortInput>;\n}\nexport interface QueryToListMemberBoardOnCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberBoardOnCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListBoardColumnTypesArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IBoardColumnTypeFilterInput;\n  order?: Array<IBoardColumnTypeSortInput>;\n}\nexport interface QueryToListBoardColumnTypesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListBoardColumnTypesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberSpaceAccessArgs {\n  spaceId: IUUID;\n}\nexport interface QueryToListMemberSpaceAccessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberSpaceAccessArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCardColumnValueArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: ICardColumnValueFilterInput;\n  order?: Array<ICardColumnValueSortInput>;\n}\nexport interface QueryToListCardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCardColumnValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListBoardMemberReferenceArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IBoardMemberReferenceFilterInput;\n  order?: Array<IBoardMemberReferenceSortInput>;\n}\nexport interface QueryToListBoardMemberReferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListBoardMemberReferenceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMemberBoardByMemberArgs {\n  memberId: IUUID;\n}\nexport interface QueryToMemberBoardByMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMemberBoardByMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMemberSpaceByMemberArgs {\n  memberId: IUUID;\n}\nexport interface QueryToMemberSpaceByMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMemberSpaceByMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToIsMembersInspaceArgs {\n  memberId: IUUID;\n  spaceId: IUUID;\n}\nexport interface QueryToIsMembersInspaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToIsMembersInspaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToIsMembersInBoardArgs {\n  memberId: IUUID;\n  boardId: IUUID;\n}\nexport interface QueryToIsMembersInBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToIsMembersInBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAttributeByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToAttributeByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAttributeByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAttributeValueByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToAttributeValueByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAttributeValueByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBuildingSiteAddressByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToBuildingSiteAddressByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBuildingSiteAddressByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCustomerByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToCustomerByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCustomerByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMadreQuotationByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMadreQuotationByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMadreQuotationByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialCategoryByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialCategoryByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialCategoryByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialCombinationByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialCombinationByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialCombinationByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialCombinationAttributeByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialCombinationAttributeByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialCombinationAttributeByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialModuleByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialModuleByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialModuleByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialQuotationByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialQuotationByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialQuotationByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialStockByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialStockByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialStockByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialStockMeasureByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialStockMeasureByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialStockMeasureByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialVariableModuleByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialVariableModuleByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialVariableModuleByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialVariableQuotationByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMaterialVariableQuotationByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialVariableQuotationByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeasureByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMeasureByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeasureByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeasureUnityByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMeasureUnityByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeasureUnityByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeasureUnityTwoByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMeasureUnityTwoByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeasureUnityTwoByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeasureValueByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMeasureValueByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeasureValueByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToModuleByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToModuleByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToModuleByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToModuleCategoryByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToModuleCategoryByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToModuleCategoryByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuotationByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToQuotationByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuotationByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuotationModuleByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToQuotationModuleByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuotationModuleByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToUserCustomerByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToUserCustomerByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToUserCustomerByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVariableByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToVariableByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVariableByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAttributesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToAttributesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAttributesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAttributeValuesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToAttributeValuesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAttributeValuesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBuildingSiteAddressesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToBuildingSiteAddressesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBuildingSiteAddressesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCustomersArgs {\n  projectId: IUUID;\n}\nexport interface QueryToCustomersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCustomersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMadreQuotationsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMadreQuotationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMadreQuotationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMaterialsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialCategoriesArgs {\n  projectId: IUUID;\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n}\nexport interface QueryToMaterialCategoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialCategoriesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialCombinationsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMaterialCombinationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialCombinationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialCombinationAttributesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMaterialCombinationAttributesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialCombinationAttributesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialModulesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMaterialModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialModulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialQuotationsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMaterialQuotationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialQuotationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialStocksArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMaterialStocksResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialStocksArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialStockMeasuresArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMaterialStockMeasuresResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialStockMeasuresArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialVariableModulesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMaterialVariableModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialVariableModulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMaterialVariableQuotationsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMaterialVariableQuotationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMaterialVariableQuotationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeasuresArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMeasuresResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeasuresArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeasureUnitiesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMeasureUnitiesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeasureUnitiesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeasureUnityTwosArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMeasureUnityTwosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeasureUnityTwosArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMeasureValuesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToMeasureValuesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMeasureValuesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToModulesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToModulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToModuleCategoriesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToModuleCategoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToModuleCategoriesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuotationsArgs {\n  projectId: IUUID;\n}\nexport interface QueryToQuotationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuotationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToQuotationModulesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToQuotationModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToQuotationModulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToVariablesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToVariablesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToVariablesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBrandHermerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToModelsHermerArgs {\n  brand: string;\n}\nexport interface QueryToModelsHermerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToModelsHermerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToYearHermerArgs {\n  brand: string;\n  subbrand: string;\n}\nexport interface QueryToYearHermerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToYearHermerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToModelLobatoArgs {\n  brand: string;\n  model: string;\n  year: number;\n  feature: Array<string>;\n}\nexport interface QueryToModelLobatoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToModelLobatoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToModelsMercadoLibreArgs {\n  consultId: number;\n}\nexport interface QueryToModelsMercadoLibreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToModelsMercadoLibreArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListConsultHermerArgs {\n  page?: number;\n  brand?: string;\n}\nexport interface QueryToListConsultHermerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListConsultHermerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListConsultAllHermerArgs {\n  page?: number;\n  brand?: string;\n}\nexport interface QueryToListConsultAllHermerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListConsultAllHermerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListConsultLastAnalysisHermerArgs {\n  page?: number;\n  brand?: string;\n  appraisal?: string;\n}\nexport interface QueryToListConsultLastAnalysisHermerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListConsultLastAnalysisHermerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToGetConsultHermerArgs {\n  id: number;\n}\nexport interface QueryToGetConsultHermerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToGetConsultHermerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToDownloadFileArgs {\n  token: string;\n}\nexport interface QueryToDownloadFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToDownloadFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFoldersArgs {\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  filter?: IFolderFilterInput;\n  order?: Array<IFolderSortInput>;\n}\nexport interface QueryToListFoldersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFoldersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFoldersListArgs {\n  first?: number;\n  after?: string;\n  last?: number;\n  before?: string;\n  filter?: IFolderFilterInput;\n  order?: Array<IFolderSortInput>;\n}\nexport interface QueryToFoldersListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFoldersListArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFolderAllowedMembersArgs {\n  folderId: IUUID;\n}\nexport interface QueryToFolderAllowedMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFolderAllowedMembersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFileAllowedMembersArgs {\n  fileId: IUUID;\n}\nexport interface QueryToFileAllowedMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFileAllowedMembersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSharedFilesFromFolderArgs {\n  folderId: IUUID;\n}\nexport interface QueryToSharedFilesFromFolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSharedFilesFromFolderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFilesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IFileFilterInput;\n  order?: Array<IFileSortInput>;\n}\nexport interface QueryToListFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFilesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFilesByMemberIdArgs {\n  memberId: IUUID;\n  filter?: IFileFilterInput;\n  order?: Array<IFileSortInput>;\n}\nexport interface QueryToListFilesByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFilesByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFoldersByMemberIdArgs {\n  memberId: IUUID;\n  filter?: IFolderFilterInput;\n  order?: Array<IFolderSortInput>;\n}\nexport interface QueryToListFoldersByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFoldersByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToOutstandingFoldersByMemberIdArgs {\n  skip?: number;\n  take?: number;\n  memberId: IUUID;\n  filter?: IFolderFilterInput;\n}\nexport interface QueryToOutstandingFoldersByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToOutstandingFoldersByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSharedFilesByMemberIdArgs {\n  memberId: IUUID;\n  filter?: ISharedFileFilterInput;\n}\nexport interface QueryToSharedFilesByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSharedFilesByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSharedFilesAmongstMembersArgs {\n  memberIds: Array<IUUID>;\n}\nexport interface QueryToSharedFilesAmongstMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSharedFilesAmongstMembersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSharedFoldersByMemberIdArgs {\n  memberId: IUUID;\n  filter?: ISharedFolderFilterInput;\n}\nexport interface QueryToSharedFoldersByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSharedFoldersByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFolderByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToFolderByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFolderByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFileByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToFileByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFileByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToOutstandingFilesByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToOutstandingFilesByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToOutstandingFilesByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToConversationsByToMemberIdArgs {\n  conversationId: IUUID;\n}\nexport interface QueryToConversationsByToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToConversationsByToMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToConversationsByMemberIdArgs {\n  memberId: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToConversationsByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToConversationsByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListWalletsArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IEWalletFilterInput;\n  order?: Array<IEWalletSortInput>;\n}\nexport interface QueryToListWalletsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListWalletsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToWalletByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToWalletByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToWalletByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberWalletsArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IMemberWalletFilterInput;\n  order?: Array<IMemberWalletSortInput>;\n}\nexport interface QueryToListMemberWalletsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberWalletsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListWalletTransactionArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IWalletTransactionFilterInput;\n  order?: Array<IWalletTransactionSortInput>;\n}\nexport interface QueryToListWalletTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListWalletTransactionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToWalletTransactionByIdArgs {\n  id?: IUUID;\n}\nexport interface QueryToWalletTransactionByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToWalletTransactionByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListWalletTransactionStatusArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IWalletTransactionStatusFilterInput;\n  order?: Array<IWalletTransactionStatusSortInput>;\n}\nexport interface QueryToListWalletTransactionStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListWalletTransactionStatusArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListWalletTransactionMemberArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IWalletTransactionMemberRelationFilterInput;\n  order?: Array<IWalletTransactionMemberRelationSortInput>;\n}\nexport interface QueryToListWalletTransactionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListWalletTransactionMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListWalletTransactionMemberDetailArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IWalletTransactionMemberDetailFilterInput;\n  order?: Array<IWalletTransactionMemberDetailSortInput>;\n}\nexport interface QueryToListWalletTransactionMemberDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListWalletTransactionMemberDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInvestmentVsEarningArgs {\n  eWalletId: IUUID;\n  receptorId: IUUID;\n}\nexport interface QueryToInvestmentVsEarningResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInvestmentVsEarningArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToWalletTransactionDetailArgs {\n  walletId?: IUUID;\n  receptorId?: IUUID;\n}\nexport interface QueryToWalletTransactionDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToWalletTransactionDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListMemberWalletsByMemberArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListMemberWalletsByMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListMemberWalletsByMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCertificateMovementsArgs {\n  filter?: ICertificateMovementFilterInput;\n}\nexport interface QueryToCertificateMovementsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCertificateMovementsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCountryRequestsArgs {\n  filter?: ICountryRequestFilterInput;\n}\nexport interface QueryToCountryRequestsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCountryRequestsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCertificatesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICertificateFilterInput;\n}\nexport interface QueryToCertificatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCertificatesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCertificatesNotPaginatedArgs {\n  filter?: ICertificateFilterInput;\n}\nexport interface QueryToCertificatesNotPaginatedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCertificatesNotPaginatedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToFeesArgs {\n  filter?: IFeeFilterInput;\n}\nexport interface QueryToFeesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToFeesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBeneficiariesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IBeneficiaryFilterInput;\n}\nexport interface QueryToBeneficiariesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBeneficiariesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInsurerCompaniesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerCompanyFilterInput;\n}\nexport interface QueryToInsurerCompaniesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInsurerCompaniesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMerchandisesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IMerchandiseFilterInput;\n}\nexport interface QueryToMerchandisesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMerchandisesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMerchandiseCategoriesArgs {\n  filter?: IMerchandiseCategoryFilterInput;\n}\nexport interface QueryToMerchandiseCategoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMerchandiseCategoriesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMerchandiseDetailsArgs {\n  filter?: IMerchandiseDetailFilterInput;\n}\nexport interface QueryToMerchandiseDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMerchandiseDetailsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContactsArgs {\n  filter?: IContactFilterInput;\n}\nexport interface QueryToContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContactsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContractorsArgs {\n  filter?: IContractorFilterInput;\n}\nexport interface QueryToContractorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContractorsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToTrafficDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMoneyArgs {\n  filter?: IMoneyFilterInput;\n}\nexport interface QueryToMoneyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMoneyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPoliciesArgs {\n  filter?: IPolicyFilterInput;\n}\nexport interface QueryToPoliciesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPoliciesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContractorBranchOfficesArgs {\n  filter?: IContractorOfficeFilterInput;\n}\nexport interface QueryToContractorBranchOfficesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContractorBranchOfficesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContractorContactsArgs {\n  filter?: IContractorContactFilterInput;\n}\nexport interface QueryToContractorContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContractorContactsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContractorPoliciesArgs {\n  filter?: IContractorPolicyFilterInput;\n}\nexport interface QueryToContractorPoliciesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContractorPoliciesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContactByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToContactByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContactByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContractorByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToContractorByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContractorByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContractorContactByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToContractorContactByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContractorContactByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContractorPolicyByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToContractorPolicyByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContractorPolicyByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInsurerCompanyByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToInsurerCompanyByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInsurerCompanyByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMoneyByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMoneyByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMoneyByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCertificateByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToCertificateByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCertificateByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToContractorOfficeByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToContractorOfficeByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToContractorOfficeByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPolicyModulesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPolicyModuleFilterInput;\n}\nexport interface QueryToPolicyModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPolicyModulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPolicyModuleByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToPolicyModuleByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPolicyModuleByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInsurerModulesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerModuleFilterInput;\n}\nexport interface QueryToInsurerModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInsurerModulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInsurerModuleByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToInsurerModuleByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInsurerModuleByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBeneficiaryByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToBeneficiaryByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBeneficiaryByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToMerchandiseByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToMerchandiseByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToMerchandiseByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInsurerFeeByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToInsurerFeeByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInsurerFeeByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToInsurerFeesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerFeeFilterInput;\n}\nexport interface QueryToInsurerFeesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToInsurerFeesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSchoolArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: ISchoolFilterInput;\n  order?: Array<ISchoolSortInput>;\n}\nexport interface QueryToListSchoolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSchoolArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSchoolByIdArgs {\n  id: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToSchoolByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSchoolByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListClassroomArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IClassroomFilterInput;\n  order?: Array<IClassroomSortInput>;\n}\nexport interface QueryToListClassroomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListClassroomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToClassroomByIdArgs {\n  id: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToClassroomByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToClassroomByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListLevelArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: ILevelFilterInput;\n  order?: Array<ILevelSortInput>;\n}\nexport interface QueryToListLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListLevelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToLevelByIdArgs {\n  id: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToLevelByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToLevelByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToLevelByNameArgs {\n  projectId: IUUID;\n  name: string;\n}\nexport interface QueryToLevelByNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToLevelByNameArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToGradeByNameArgs {\n  projectId: IUUID;\n  levelId: IUUID;\n  name: string;\n}\nexport interface QueryToGradeByNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToGradeByNameArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToClassroomByNameArgs {\n  projectId: IUUID;\n  levelId: IUUID;\n  gradeId: IUUID;\n  teacherMemberId: IUUID;\n  name: string;\n}\nexport interface QueryToClassroomByNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToClassroomByNameArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListGradeArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IGradeFilterInput;\n  order?: Array<IGradeSortInput>;\n}\nexport interface QueryToListGradeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListGradeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToGradeByIdArgs {\n  id: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToGradeByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToGradeByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListStudentArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IStudentFilterInput;\n  order?: Array<IStudentSortInput>;\n}\nexport interface QueryToListStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListStudentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToStudentByIdArgs {\n  id: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToStudentByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToStudentByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListStudentByLastAttendanceArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IStudentFilterInput;\n  order?: Array<IStudentSortInput>;\n}\nexport interface QueryToListStudentByLastAttendanceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListStudentByLastAttendanceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListAttendanceStudentArgs {\n  skip?: number;\n  take?: number;\n  projectId: IUUID;\n  filter?: IAttendanceFilterInput;\n  order?: Array<IAttendanceSortInput>;\n}\nexport interface QueryToListAttendanceStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListAttendanceStudentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAttendanceStudentByIdArgs {\n  id: IUUID;\n  projectId: IUUID;\n}\nexport interface QueryToAttendanceStudentByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAttendanceStudentByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListStudentTutorMemberIdArgs {\n  tutorMemberId: IUUID;\n}\nexport interface QueryToListStudentTutorMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListStudentTutorMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListClassroomTeacherMemberIdArgs {\n  teacherMemberId: IUUID;\n}\nexport interface QueryToListClassroomTeacherMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListClassroomTeacherMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToChatBotConversationsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IMyConversationFilterInput;\n  order?: Array<IMyConversationSortInput>;\n}\nexport interface QueryToChatBotConversationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToChatBotConversationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListAgentProviderBonosArgs {\n  skip?: number;\n  take?: number;\n  filter?: IAgentProviderBonoFilterInput;\n  order?: Array<IAgentProviderBonoSortInput>;\n}\nexport interface QueryToListAgentProviderBonosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListAgentProviderBonosArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListBeneficiariesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IBeneficiarieFilterInput;\n  order?: Array<IBeneficiarieSortInput>;\n}\nexport interface QueryToListBeneficiariesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListBeneficiariesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFormAccidentDiseasesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IFormAccidentDiseaseFilterInput;\n  order?: Array<IFormAccidentDiseaseSortInput>;\n}\nexport interface QueryToListFormAccidentDiseasesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFormAccidentDiseasesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFormAutomobileDamagesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IFormAutomobileDamageFilterInput;\n  order?: Array<IFormAutomobileDamageSortInput>;\n}\nexport interface QueryToListFormAutomobileDamagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFormAutomobileDamagesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFormCarCatalogsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IFormCarCatalogFilterInput;\n  order?: Array<IFormCarCatalogSortInput>;\n}\nexport interface QueryToListFormCarCatalogsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFormCarCatalogsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFormDamagesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IFormDamageFilterInput;\n  order?: Array<IFormDamageSortInput>;\n}\nexport interface QueryToListFormDamagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFormDamagesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListFormLifesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IFormLifeFilterInput;\n  order?: Array<IFormLifeSortInput>;\n}\nexport interface QueryToListFormLifesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListFormLifesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInvolvedReferrersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInvolvedReferrerFilterInput;\n  order?: Array<IInvolvedReferrerSortInput>;\n}\nexport interface QueryToListInvolvedReferrersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInvolvedReferrersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListOldPolicesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IOldPoliceFilterInput;\n  order?: Array<IOldPoliceSortInput>;\n}\nexport interface QueryToListOldPolicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListOldPolicesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPersonalInformationsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPersonalInformationFilterInput;\n  order?: Array<IPersonalInformationSortInput>;\n}\nexport interface QueryToListPersonalInformationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPersonalInformationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPolicesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceFilterInput;\n  order?: Array<IPoliceSortInput>;\n}\nexport interface QueryToListPolicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPolicesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPoliceAssignsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceAssignFilterInput;\n  order?: Array<IPoliceAssignSortInput>;\n}\nexport interface QueryToListPoliceAssignsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPoliceAssignsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPolicePendientsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPolicePendientFilterInput;\n  order?: Array<IPolicePendientSortInput>;\n}\nexport interface QueryToListPolicePendientsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPolicePendientsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPoliceQuotesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceQuoteFilterInput;\n  order?: Array<IPoliceQuoteSortInput>;\n}\nexport interface QueryToListPoliceQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPoliceQuotesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPoliceQuotePrimasArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceQuotePrimaFilterInput;\n  order?: Array<IPoliceQuotePrimaSortInput>;\n}\nexport interface QueryToListPoliceQuotePrimasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPoliceQuotePrimasArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListRelationShipsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IRelationShipFilterInput;\n  order?: Array<IRelationShipSortInput>;\n}\nexport interface QueryToListRelationShipsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListRelationShipsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSucursalsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISucursalFilterInput;\n  order?: Array<ISucursalSortInput>;\n}\nexport interface QueryToListSucursalsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSucursalsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListEndorsementsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IEndorsementFilterInput;\n  order?: Array<IEndorsementSortInput>;\n}\nexport interface QueryToListEndorsementsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListEndorsementsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListEndorsementCertsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IEndorsementCertFilterInput;\n  order?: Array<IEndorsementCertSortInput>;\n}\nexport interface QueryToListEndorsementCertsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListEndorsementCertsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinistersArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterFilterInput;\n  order?: Array<ISinisterSortInput>;\n}\nexport interface QueryToListSinistersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinistersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterAccidentsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterAccidentFilterInput;\n  order?: Array<ISinisterAccidentSortInput>;\n}\nexport interface QueryToListSinisterAccidentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterAccidentsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterAilingsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterAilingFilterInput;\n  order?: Array<ISinisterAilingSortInput>;\n}\nexport interface QueryToListSinisterAilingsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterAilingsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterCarsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterCarFilterInput;\n  order?: Array<ISinisterCarSortInput>;\n}\nexport interface QueryToListSinisterCarsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterCarsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterCarContactsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterCarContactFilterInput;\n  order?: Array<ISinisterCarContactSortInput>;\n}\nexport interface QueryToListSinisterCarContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterCarContactsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterDamagesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterDamageFilterInput;\n  order?: Array<ISinisterDamageSortInput>;\n}\nexport interface QueryToListSinisterDamagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterDamagesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterDamageContactsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterDamageContactFilterInput;\n  order?: Array<ISinisterDamageContactSortInput>;\n}\nexport interface QueryToListSinisterDamageContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterDamageContactsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterFacturasArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterFacturaFilterInput;\n  order?: Array<ISinisterFacturaSortInput>;\n}\nexport interface QueryToListSinisterFacturasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterFacturasArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterHospitalsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterHospitalFilterInput;\n  order?: Array<ISinisterHospitalSortInput>;\n}\nexport interface QueryToListSinisterHospitalsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterHospitalsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterLifesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterLifeFilterInput;\n  order?: Array<ISinisterLifeSortInput>;\n}\nexport interface QueryToListSinisterLifesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterLifesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSinisterLifeContactsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISinisterLifeContactFilterInput;\n  order?: Array<ISinisterLifeContactSortInput>;\n}\nexport interface QueryToListSinisterLifeContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSinisterLifeContactsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPoliceReceiptsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceReceiptFilterInput;\n  order?: Array<IPoliceReceiptSortInput>;\n}\nexport interface QueryToListPoliceReceiptsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPoliceReceiptsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPoliceReceiptAccountsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceReceiptAccountFilterInput;\n  order?: Array<IPoliceReceiptAccountSortInput>;\n}\nexport interface QueryToListPoliceReceiptAccountsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPoliceReceiptAccountsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPoliceReceiptAccountStatesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceReceiptAccountStateFilterInput;\n  order?: Array<IPoliceReceiptAccountStateSortInput>;\n}\nexport interface QueryToListPoliceReceiptAccountStatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPoliceReceiptAccountStatesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPoliceReceiptFoliosArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceReceiptFolioFilterInput;\n  order?: Array<IPoliceReceiptFolioSortInput>;\n}\nexport interface QueryToListPoliceReceiptFoliosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPoliceReceiptFoliosArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPoliceReceiptPaymentsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceReceiptPaymentFilterInput;\n  order?: Array<IPoliceReceiptPaymentSortInput>;\n}\nexport interface QueryToListPoliceReceiptPaymentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPoliceReceiptPaymentsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListPoliceFilesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IPoliceFileFilterInput;\n  order?: Array<IPoliceFileSortInput>;\n}\nexport interface QueryToListPoliceFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListPoliceFilesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerCommentsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerCommentFilterInput;\n  order?: Array<IInsurerCommentSortInput>;\n}\nexport interface QueryToListInsurerCommentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerCommentsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerFileReadingsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerFileReadingFilterInput;\n  order?: Array<IInsurerFileReadingSortInput>;\n}\nexport interface QueryToListInsurerFileReadingsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerFileReadingsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerFileReadingTagsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerFileReadingTagFilterInput;\n  order?: Array<IInsurerFileReadingTagSortInput>;\n}\nexport interface QueryToListInsurerFileReadingTagsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerFileReadingTagsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerInvolvedsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerInvolvedFilterInput;\n  order?: Array<IInsurerInvolvedSortInput>;\n}\nexport interface QueryToListInsurerInvolvedsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerInvolvedsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerLogsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerLogFilterInput;\n  order?: Array<IInsurerLogSortInput>;\n}\nexport interface QueryToListInsurerLogsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerLogsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerLogEmailsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerLogEmailFilterInput;\n  order?: Array<IInsurerLogEmailSortInput>;\n}\nexport interface QueryToListInsurerLogEmailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerLogEmailsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerOrgInfosArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerOrgInfoFilterInput;\n  order?: Array<IInsurerOrgInfoSortInput>;\n}\nexport interface QueryToListInsurerOrgInfosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerOrgInfosArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerTicketsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerTicketFilterInput;\n  order?: Array<IInsurerTicketSortInput>;\n}\nexport interface QueryToListInsurerTicketsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerTicketsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerSchedulesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerScheduleFilterInput;\n  order?: Array<IInsurerScheduleSortInput>;\n}\nexport interface QueryToListInsurerSchedulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerSchedulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerScheduleParticipantsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerScheduleParticipantFilterInput;\n  order?: Array<IInsurerScheduleParticipantSortInput>;\n}\nexport interface QueryToListInsurerScheduleParticipantsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerScheduleParticipantsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerNotificationsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerNotificationFilterInput;\n  order?: Array<IInsurerNotificationSortInput>;\n}\nexport interface QueryToListInsurerNotificationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerNotificationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerRemindersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerReminderFilterInput;\n  order?: Array<IInsurerReminderSortInput>;\n}\nexport interface QueryToListInsurerRemindersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerRemindersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerReminderProjectAgentProvidersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerReminderProjectAgentProviderFilterInput;\n  order?: Array<IInsurerReminderProjectAgentProviderSortInput>;\n}\nexport interface QueryToListInsurerReminderProjectAgentProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerReminderProjectAgentProvidersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerReminderRecordsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerReminderRecordFilterInput;\n  order?: Array<IInsurerReminderRecordSortInput>;\n}\nexport interface QueryToListInsurerReminderRecordsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerReminderRecordsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerReminderSubBranchesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerReminderSubBranchFilterInput;\n  order?: Array<IInsurerReminderSubBranchSortInput>;\n}\nexport interface QueryToListInsurerReminderSubBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerReminderSubBranchesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerBailTypesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerBailTypeFilterInput;\n  order?: Array<IInsurerBailTypeSortInput>;\n}\nexport interface QueryToListInsurerBailTypesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerBailTypesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerBirthDateTemplatesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerBirthDateTemplateFilterInput;\n  order?: Array<IInsurerBirthDateTemplateSortInput>;\n}\nexport interface QueryToListInsurerBirthDateTemplatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerBirthDateTemplatesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerDirectoriesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerDirectoryFilterInput;\n  order?: Array<IInsurerDirectorySortInput>;\n}\nexport interface QueryToListInsurerDirectoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerDirectoriesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerExpensesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerExpenseFilterInput;\n  order?: Array<IInsurerExpenseSortInput>;\n}\nexport interface QueryToListInsurerExpensesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerExpensesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerIbisFormsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerIbisFormFilterInput;\n  order?: Array<IInsurerIbisFormSortInput>;\n}\nexport interface QueryToListInsurerIbisFormsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerIbisFormsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerIbisProvidersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerIbisProviderFilterInput;\n  order?: Array<IInsurerIbisProviderSortInput>;\n}\nexport interface QueryToListInsurerIbisProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerIbisProvidersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerSendersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerSenderFilterInput;\n  order?: Array<IInsurerSenderSortInput>;\n}\nexport interface QueryToListInsurerSendersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerSendersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListInsurerZipCodeSepomexsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IInsurerZipCodeSepomexFilterInput;\n  order?: Array<IInsurerZipCodeSepomexSortInput>;\n}\nexport interface QueryToListInsurerZipCodeSepomexsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListInsurerZipCodeSepomexsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListComissionsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IComissionFilterInput;\n  order?: Array<IComissionSortInput>;\n}\nexport interface QueryToListComissionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListComissionsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCoverageTopecoinsurancesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICoverageTopecoinsuranceFilterInput;\n  order?: Array<ICoverageTopecoinsuranceSortInput>;\n}\nexport interface QueryToListCoverageTopecoinsurancesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCoverageTopecoinsurancesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCoverageSuminsuredsArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICoverageSuminsuredFilterInput;\n  order?: Array<ICoverageSuminsuredSortInput>;\n}\nexport interface QueryToListCoverageSuminsuredsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCoverageSuminsuredsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCoveragePackagesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICoveragePackageFilterInput;\n  order?: Array<ICoveragePackageSortInput>;\n}\nexport interface QueryToListCoveragePackagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCoveragePackagesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToSaam_listCoveragesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICoverageFilterInput;\n  order?: Array<ICoverageSortInput>;\n}\nexport interface QueryToSaam_listCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToSaam_listCoveragesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCoverageInPoliciesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICoverageInPolicyFilterInput;\n  order?: Array<ICoverageInPolicySortInput>;\n}\nexport interface QueryToListCoverageInPoliciesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCoverageInPoliciesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCoverageDeductiblesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICoverageDeductibleFilterInput;\n  order?: Array<ICoverageDeductibleSortInput>;\n}\nexport interface QueryToListCoverageDeductiblesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCoverageDeductiblesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListCoverageCoinsurancesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ICoverageCoinsuranceFilterInput;\n  order?: Array<ICoverageCoinsuranceSortInput>;\n}\nexport interface QueryToListCoverageCoinsurancesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListCoverageCoinsurancesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListResponsableInvolvedsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IResponsableInvolvedFilterInput;\n  order?: Array<IResponsableInvolvedSortInput>;\n}\nexport interface QueryToListResponsableInvolvedsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListResponsableInvolvedsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListProjectAgentProviderEmailRemindersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IProjectAgentProviderEmailReminderFilterInput;\n  order?: Array<IProjectAgentProviderEmailReminderSortInput>;\n}\nexport interface QueryToListProjectAgentProviderEmailRemindersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListProjectAgentProviderEmailRemindersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListProjectAgentProvidersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IProjectAgentProviderFilterInput;\n  order?: Array<IProjectAgentProviderSortInput>;\n}\nexport interface QueryToListProjectAgentProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListProjectAgentProvidersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListAgentProviderContactsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IAgentProviderContactFilterInput;\n  order?: Array<IAgentProviderContactSortInput>;\n}\nexport interface QueryToListAgentProviderContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListAgentProviderContactsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListAgentProvidersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IAgentProviderFilterInput;\n  order?: Array<IAgentProviderSortInput>;\n}\nexport interface QueryToListAgentProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListAgentProvidersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListAgentKeysArgs {\n  skip?: number;\n  take?: number;\n  filter?: IAgentKeyFilterInput;\n  order?: Array<IAgentKeySortInput>;\n}\nexport interface QueryToListAgentKeysResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListAgentKeysArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListReferrersArgs {\n  skip?: number;\n  take?: number;\n  filter?: IReferrerFilterInput;\n  order?: Array<IReferrerSortInput>;\n}\nexport interface QueryToListReferrersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListReferrersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListReferrerBranchesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IReferrerBranchFilterInput;\n  order?: Array<IReferrerBranchSortInput>;\n}\nexport interface QueryToListReferrerBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListReferrerBranchesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListReferrerAccountStatesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IReferrerAccountStateFilterInput;\n  order?: Array<IReferrerAccountStateSortInput>;\n}\nexport interface QueryToListReferrerAccountStatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListReferrerAccountStatesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListContractorsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IContractorFilterInput;\n  order?: Array<IContractorSortInput>;\n}\nexport interface QueryToListContractorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListContractorsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListContractorCelulasArgs {\n  skip?: number;\n  take?: number;\n  filter?: IContractorCelulaFilterInput;\n  order?: Array<IContractorCelulaSortInput>;\n}\nexport interface QueryToListContractorCelulasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListContractorCelulasArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListContractorGroupsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IContractorGroupFilterInput;\n  order?: Array<IContractorGroupSortInput>;\n}\nexport interface QueryToListContractorGroupsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListContractorGroupsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListContractorGroupingLevelsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IContractorGroupingLevelFilterInput;\n  order?: Array<IContractorGroupingLevelSortInput>;\n}\nexport interface QueryToListContractorGroupingLevelsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListContractorGroupingLevelsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListContractorClassificationsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IContractorClassificationFilterInput;\n  order?: Array<IContractorClassificationSortInput>;\n}\nexport interface QueryToListContractorClassificationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListContractorClassificationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListContractorProcessDocumentsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IContractorProcessDocumentFilterInput;\n  order?: Array<IContractorProcessDocumentSortInput>;\n}\nexport interface QueryToListContractorProcessDocumentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListContractorProcessDocumentsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListProcessDocumentsArgs {\n  skip?: number;\n  take?: number;\n  filter?: IProcessDocumentFilterInput;\n  order?: Array<IProcessDocumentSortInput>;\n}\nexport interface QueryToListProcessDocumentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListProcessDocumentsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListBranchesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IBranchFilterInput;\n  order?: Array<IBranchSortInput>;\n}\nexport interface QueryToListBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListBranchesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListSubBranchesArgs {\n  skip?: number;\n  take?: number;\n  filter?: ISubBranchFilterInput;\n  order?: Array<ISubBranchSortInput>;\n}\nexport interface QueryToListSubBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListSubBranchesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListProjectAgentProviderBranchesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IProjectAgentProviderBranchFilterInput;\n  order?: Array<IProjectAgentProviderBranchSortInput>;\n}\nexport interface QueryToListProjectAgentProviderBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListProjectAgentProviderBranchesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListDevicesArgs {\n  skip?: number;\n  take?: number;\n  filter?: IDeviceFilterInput;\n  order?: Array<IDeviceSortInput>;\n}\nexport interface QueryToListDevicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListDevicesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToDeviceByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToDeviceByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToDeviceByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListNotificationsArgs {\n  skip?: number;\n  take?: number;\n  filter?: INotificationFilterInput;\n  order?: Array<INotificationSortInput>;\n}\nexport interface QueryToListNotificationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListNotificationsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToNotificationsByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToNotificationsByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToNotificationsByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToDevicesByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToDevicesByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToDevicesByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToListNotificationByMemberIdArgs {\n  memberId: IUUID;\n}\nexport interface QueryToListNotificationByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToListNotificationByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToCodesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToCodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToCodesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToBrandsByProjectIdArgs {\n  projectId: IUUID;\n  filter?: IBrandFilterInput;\n}\nexport interface QueryToBrandsByProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToBrandsByProjectIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToProvidersArgs {\n  projectId: IUUID;\n}\nexport interface QueryToProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToProvidersArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToScanCodeArgs {\n  code: string;\n}\nexport interface QueryToScanCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToScanCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToAvailableDotsArgs {\n  memberId: IUUID;\n}\nexport interface QueryToAvailableDotsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToAvailableDotsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToExchangeMovementsArgs {\n  memberId: IUUID;\n  filter?: IDotMovementFilterInput;\n}\nexport interface QueryToExchangeMovementsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToExchangeMovementsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToDotMovementsByMemberIdArgs {\n  memberId: IUUID;\n  filter?: IDotMovementFilterInput;\n  order?: Array<IDotMovementSortInput>;\n}\nexport interface QueryToDotMovementsByMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToDotMovementsByMemberIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToLookForAdminCodeArgs {\n  code: string;\n}\nexport interface QueryToLookForAdminCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToLookForAdminCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPrizeCategoriesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToPrizeCategoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPrizeCategoriesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPrizeCodesArgs {\n  projectId: IUUID;\n}\nexport interface QueryToPrizeCodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPrizeCodesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToPrizeCategoryByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToPrizeCategoryByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToPrizeCategoryByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QueryToDotMovementByIdArgs {\n  id: IUUID;\n}\nexport interface QueryToDotMovementByIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: QueryToDotMovementByIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGroupCollectionSegmentTypeResolver<TParent = any> {\n  items?: GroupCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: GroupCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: GroupCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface GroupCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGroupTypeResolver<TParent = any> {\n  projectId?: GroupToProjectIdResolver<TParent>;\n  project?: GroupToProjectResolver<TParent>;\n  name?: GroupToNameResolver<TParent>;\n  description?: GroupToDescriptionResolver<TParent>;\n  members?: GroupToMembersResolver<TParent>;\n  groupTaxonomies?: GroupToGroupTaxonomiesResolver<TParent>;\n  id?: GroupToIdResolver<TParent>;\n  createdAt?: GroupToCreatedAtResolver<TParent>;\n  updatedAt?: GroupToUpdatedAtResolver<TParent>;\n}\n\nexport interface GroupToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupToMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupToGroupTaxonomiesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectTypeResolver<TParent = any> {\n  name?: ProjectToNameResolver<TParent>;\n  description?: ProjectToDescriptionResolver<TParent>;\n  logo?: ProjectToLogoResolver<TParent>;\n  tagLine?: ProjectToTagLineResolver<TParent>;\n  isAPublicPlatform?: ProjectToIsAPublicPlatformResolver<TParent>;\n  isReady?: ProjectToIsReadyResolver<TParent>;\n  url?: ProjectToUrlResolver<TParent>;\n  onProduction?: ProjectToOnProductionResolver<TParent>;\n  industryId?: ProjectToIndustryIdResolver<TParent>;\n  industry?: ProjectToIndustryResolver<TParent>;\n  companyId?: ProjectToCompanyIdResolver<TParent>;\n  company?: ProjectToCompanyResolver<TParent>;\n  projectRoles?: ProjectToProjectRolesResolver<TParent>;\n  memberProjects?: ProjectToMemberProjectsResolver<TParent>;\n  projectSocialNetworks?: ProjectToProjectSocialNetworksResolver<TParent>;\n  groups?: ProjectToGroupsResolver<TParent>;\n  nicheId?: ProjectToNicheIdResolver<TParent>;\n  niche?: ProjectToNicheResolver<TParent>;\n  id?: ProjectToIdResolver<TParent>;\n  createdAt?: ProjectToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectToUpdatedAtResolver<TParent>;\n  shop?: ProjectToShopResolver<TParent>;\n  services?: ProjectToServicesResolver<TParent>;\n  site?: ProjectToSiteResolver<TParent>;\n}\n\nexport interface ProjectToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToLogoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToTagLineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToIsAPublicPlatformResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToIsReadyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToOnProductionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToIndustryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToIndustryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToCompanyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToProjectRolesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToMemberProjectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToProjectSocialNetworksResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToGroupsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToNicheIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToNicheResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToShopResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectToSiteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IIndustryTypeResolver<TParent = any> {\n  name?: IndustryToNameResolver<TParent>;\n  slug?: IndustryToSlugResolver<TParent>;\n  projects?: IndustryToProjectsResolver<TParent>;\n  companies?: IndustryToCompaniesResolver<TParent>;\n  id?: IndustryToIdResolver<TParent>;\n  createdAt?: IndustryToCreatedAtResolver<TParent>;\n  updatedAt?: IndustryToUpdatedAtResolver<TParent>;\n}\n\nexport interface IndustryToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IndustryToSlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IndustryToProjectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IndustryToCompaniesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IndustryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IndustryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IndustryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICompanyTypeResolver<TParent = any> {\n  name?: CompanyToNameResolver<TParent>;\n  numberEmployees?: CompanyToNumberEmployeesResolver<TParent>;\n  countryId?: CompanyToCountryIdResolver<TParent>;\n  country?: CompanyToCountryResolver<TParent>;\n  photo?: CompanyToPhotoResolver<TParent>;\n  tagLine?: CompanyToTagLineResolver<TParent>;\n  industryId?: CompanyToIndustryIdResolver<TParent>;\n  industry?: CompanyToIndustryResolver<TParent>;\n  memberCompanies?: CompanyToMemberCompaniesResolver<TParent>;\n  projects?: CompanyToProjectsResolver<TParent>;\n  id?: CompanyToIdResolver<TParent>;\n  createdAt?: CompanyToCreatedAtResolver<TParent>;\n  updatedAt?: CompanyToUpdatedAtResolver<TParent>;\n}\n\nexport interface CompanyToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToNumberEmployeesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToCountryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToTagLineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToIndustryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToIndustryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToMemberCompaniesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToProjectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CompanyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICountryTypeResolver<TParent = any> {\n  name?: CountryToNameResolver<TParent>;\n  code?: CountryToCodeResolver<TParent>;\n  phoneCode?: CountryToPhoneCodeResolver<TParent>;\n  currencyId?: CountryToCurrencyIdResolver<TParent>;\n  currency?: CountryToCurrencyResolver<TParent>;\n  profile?: CountryToProfileResolver<TParent>;\n  id?: CountryToIdResolver<TParent>;\n  createdAt?: CountryToCreatedAtResolver<TParent>;\n  updatedAt?: CountryToUpdatedAtResolver<TParent>;\n}\n\nexport interface CountryToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryToPhoneCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryToCurrencyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryToCurrencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryToProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICurrencyTypeResolver<TParent = any> {\n  name?: CurrencyToNameResolver<TParent>;\n  symbol?: CurrencyToSymbolResolver<TParent>;\n  code?: CurrencyToCodeResolver<TParent>;\n  exchangeRate?: CurrencyToExchangeRateResolver<TParent>;\n  id?: CurrencyToIdResolver<TParent>;\n  createdAt?: CurrencyToCreatedAtResolver<TParent>;\n  updatedAt?: CurrencyToUpdatedAtResolver<TParent>;\n}\n\nexport interface CurrencyToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CurrencyToSymbolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CurrencyToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CurrencyToExchangeRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CurrencyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CurrencyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CurrencyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProfileTypeResolver<TParent = any> {\n  firstName?: ProfileToFirstNameResolver<TParent>;\n  lastName?: ProfileToLastNameResolver<TParent>;\n  postalCode?: ProfileToPostalCodeResolver<TParent>;\n  address?: ProfileToAddressResolver<TParent>;\n  town?: ProfileToTownResolver<TParent>;\n  city?: ProfileToCityResolver<TParent>;\n  colony?: ProfileToColonyResolver<TParent>;\n  street?: ProfileToStreetResolver<TParent>;\n  houseNumber?: ProfileToHouseNumberResolver<TParent>;\n  periodInvoice?: ProfileToPeriodInvoiceResolver<TParent>;\n  billingForm?: ProfileToBillingFormResolver<TParent>;\n  paymentTerm?: ProfileToPaymentTermResolver<TParent>;\n  dialCode?: ProfileToDialCodeResolver<TParent>;\n  fullName?: ProfileToFullNameResolver<TParent>;\n  photo?: ProfileToPhotoResolver<TParent>;\n  memberId?: ProfileToMemberIdResolver<TParent>;\n  member?: ProfileToMemberResolver<TParent>;\n  countryId?: ProfileToCountryIdResolver<TParent>;\n  country?: ProfileToCountryResolver<TParent>;\n  phone?: ProfileToPhoneResolver<TParent>;\n  cURP?: ProfileToCURPResolver<TParent>;\n  rFC?: ProfileToRFCResolver<TParent>;\n  nSS?: ProfileToNSSResolver<TParent>;\n  infonavitCredit?: ProfileToInfonavitCreditResolver<TParent>;\n  nationality?: ProfileToNationalityResolver<TParent>;\n  age?: ProfileToAgeResolver<TParent>;\n  gender?: ProfileToGenderResolver<TParent>;\n  dateOfBirth?: ProfileToDateOfBirthResolver<TParent>;\n  maritalStatus?: ProfileToMaritalStatusResolver<TParent>;\n  biography?: ProfileToBiographyResolver<TParent>;\n  siteLogo?: ProfileToSiteLogoResolver<TParent>;\n  siteUrl?: ProfileToSiteUrlResolver<TParent>;\n  quatorProfileId?: ProfileToQuatorProfileIdResolver<TParent>;\n  state?: ProfileToStateResolver<TParent>;\n  institution?: ProfileToInstitutionResolver<TParent>;\n  hospital?: ProfileToHospitalResolver<TParent>;\n  id?: ProfileToIdResolver<TParent>;\n  createdAt?: ProfileToCreatedAtResolver<TParent>;\n  updatedAt?: ProfileToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProfileToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToPostalCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToTownResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToColonyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToStreetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToHouseNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToPeriodInvoiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToBillingFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToPaymentTermResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToDialCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToCountryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToCURPResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToRFCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToNSSResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToInfonavitCreditResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToNationalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToAgeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToGenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToDateOfBirthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToMaritalStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToBiographyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToSiteLogoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToSiteUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToQuatorProfileIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToInstitutionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToHospitalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProfileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberTypeResolver<TParent = any> {\n  username?: MemberToUsernameResolver<TParent>;\n  email?: MemberToEmailResolver<TParent>;\n  recoverToken?: MemberToRecoverTokenResolver<TParent>;\n  recoverRegister?: MemberToRecoverRegisterResolver<TParent>;\n  isActive?: MemberToIsActiveResolver<TParent>;\n  firstTime?: MemberToFirstTimeResolver<TParent>;\n  loginCount?: MemberToLoginCountResolver<TParent>;\n  rFC?: MemberToRFCResolver<TParent>;\n  businessName?: MemberToBusinessNameResolver<TParent>;\n  useBilling?: MemberToUseBillingResolver<TParent>;\n  socialReason?: MemberToSocialReasonResolver<TParent>;\n  adminCode?: MemberToAdminCodeResolver<TParent>;\n  canifarmaQRCodeOne?: MemberToCanifarmaQRCodeOneResolver<TParent>;\n  canifarmaQRCodeTwo?: MemberToCanifarmaQRCodeTwoResolver<TParent>;\n  consecutive?: MemberToConsecutiveResolver<TParent>;\n  businessId?: MemberToBusinessIdResolver<TParent>;\n  memberCompanies?: MemberToMemberCompaniesResolver<TParent>;\n  memberRoles?: MemberToMemberRolesResolver<TParent>;\n  memberProjects?: MemberToMemberProjectsResolver<TParent>;\n  profile?: MemberToProfileResolver<TParent>;\n  memberStream?: MemberToMemberStreamResolver<TParent>;\n  lastLogin?: MemberToLastLoginResolver<TParent>;\n  groups?: MemberToGroupsResolver<TParent>;\n  taxonomies?: MemberToTaxonomiesResolver<TParent>;\n  healthInsurance?: MemberToHealthInsuranceResolver<TParent>;\n  companyData?: MemberToCompanyDataResolver<TParent>;\n  billingData?: MemberToBillingDataResolver<TParent>;\n  sells?: MemberToSellsResolver<TParent>;\n  sellsList?: MemberToSellsListResolver<TParent>;\n  sellsProspectList?: MemberToSellsProspectListResolver<TParent>;\n  sellersSellList?: MemberToSellersSellListResolver<TParent>;\n  memberRelations?: MemberToMemberRelationsResolver<TParent>;\n  memberBusinesses?: MemberToMemberBusinessesResolver<TParent>;\n  slugs?: MemberToSlugsResolver<TParent>;\n  memberIndustryId?: MemberToMemberIndustryIdResolver<TParent>;\n  memberIndustry?: MemberToMemberIndustryResolver<TParent>;\n  branchOfficeIds?: MemberToBranchOfficeIdsResolver<TParent>;\n  id?: MemberToIdResolver<TParent>;\n  createdAt?: MemberToCreatedAtResolver<TParent>;\n  updatedAt?: MemberToUpdatedAtResolver<TParent>;\n  addresses?: MemberToAddressesResolver<TParent>;\n  hiring?: MemberToHiringResolver<TParent>;\n  shift?: MemberToShiftResolver<TParent>;\n  resourceQuotes?: MemberToResourceQuotesResolver<TParent>;\n  collaborator?: MemberToCollaboratorResolver<TParent>;\n  business?: MemberToBusinessResolver<TParent>;\n  projectPlanSuscriptions?: MemberToProjectPlanSuscriptionsResolver<TParent>;\n  serviceMember?: MemberToServiceMemberResolver<TParent>;\n  accountKeys?: MemberToAccountKeysResolver<TParent>;\n  paymentMethod?: MemberToPaymentMethodResolver<TParent>;\n  listEventDetails?: MemberToListEventDetailsResolver<TParent>;\n  listFisicExams?: MemberToListFisicExamsResolver<TParent>;\n  listMedicalBackgrounds?: MemberToListMedicalBackgroundsResolver<TParent>;\n  listMedicRecipes?: MemberToListMedicRecipesResolver<TParent>;\n  listPatientNotes?: MemberToListPatientNotesResolver<TParent>;\n  listVitalSigns?: MemberToListVitalSignsResolver<TParent>;\n  listVaccines?: MemberToListVaccinesResolver<TParent>;\n  memberBoards?: MemberToMemberBoardsResolver<TParent>;\n  memberSpaces?: MemberToMemberSpacesResolver<TParent>;\n  files?: MemberToFilesResolver<TParent>;\n  folders?: MemberToFoldersResolver<TParent>;\n  sharedFiles?: MemberToSharedFilesResolver<TParent>;\n  sharedFolders?: MemberToSharedFoldersResolver<TParent>;\n  memberWallets?: MemberToMemberWalletsResolver<TParent>;\n  devices?: MemberToDevicesResolver<TParent>;\n  notifications?: MemberToNotificationsResolver<TParent>;\n}\n\nexport interface MemberToUsernameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToRecoverTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToRecoverRegisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToFirstTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToLoginCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToRFCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToBusinessNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToUseBillingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToSocialReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToAdminCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToCanifarmaQRCodeOneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToCanifarmaQRCodeTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToConsecutiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToBusinessIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberCompaniesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberRolesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberProjectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberStreamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToLastLoginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToGroupsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToTaxonomiesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToHealthInsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToCompanyDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToBillingDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToSellsListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToSellsProspectListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToSellersSellListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberBusinessesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToSlugsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberIndustryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberIndustryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToBranchOfficeIdsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToAddressesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToHiringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToShiftResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToResourceQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToCollaboratorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToBusinessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToProjectPlanSuscriptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToServiceMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToAccountKeysResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToPaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToListEventDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToListFisicExamsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToListMedicalBackgroundsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToListMedicRecipesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToListPatientNotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToListVitalSignsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToListVaccinesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberBoardsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberSpacesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToFoldersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToSharedFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToSharedFoldersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToMemberWalletsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToDevicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberToNotificationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberCompanyTypeResolver<TParent = any> {\n  companyId?: MemberCompanyToCompanyIdResolver<TParent>;\n  company?: MemberCompanyToCompanyResolver<TParent>;\n  memberId?: MemberCompanyToMemberIdResolver<TParent>;\n  member?: MemberCompanyToMemberResolver<TParent>;\n  isDefault?: MemberCompanyToIsDefaultResolver<TParent>;\n  id?: MemberCompanyToIdResolver<TParent>;\n  createdAt?: MemberCompanyToCreatedAtResolver<TParent>;\n  updatedAt?: MemberCompanyToUpdatedAtResolver<TParent>;\n}\n\nexport interface MemberCompanyToCompanyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyToCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyToIsDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberRoleTypeResolver<TParent = any> {\n  companyId?: MemberRoleToCompanyIdResolver<TParent>;\n  company?: MemberRoleToCompanyResolver<TParent>;\n  roleId?: MemberRoleToRoleIdResolver<TParent>;\n  role?: MemberRoleToRoleResolver<TParent>;\n  memberId?: MemberRoleToMemberIdResolver<TParent>;\n  member?: MemberRoleToMemberResolver<TParent>;\n  id?: MemberRoleToIdResolver<TParent>;\n  createdAt?: MemberRoleToCreatedAtResolver<TParent>;\n  updatedAt?: MemberRoleToUpdatedAtResolver<TParent>;\n}\n\nexport interface MemberRoleToCompanyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRoleToCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRoleToRoleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRoleToRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRoleToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRoleToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRoleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRoleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRoleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRoleTypeResolver<TParent = any> {\n  name?: RoleToNameResolver<TParent>;\n  codeName?: RoleToCodeNameResolver<TParent>;\n  description?: RoleToDescriptionResolver<TParent>;\n  memberRoles?: RoleToMemberRolesResolver<TParent>;\n  id?: RoleToIdResolver<TParent>;\n  createdAt?: RoleToCreatedAtResolver<TParent>;\n  updatedAt?: RoleToUpdatedAtResolver<TParent>;\n}\n\nexport interface RoleToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoleToCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoleToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoleToMemberRolesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberProjectTypeResolver<TParent = any> {\n  memberId?: MemberProjectToMemberIdResolver<TParent>;\n  member?: MemberProjectToMemberResolver<TParent>;\n  projectId?: MemberProjectToProjectIdResolver<TParent>;\n  project?: MemberProjectToProjectResolver<TParent>;\n  memberProjectRoleProject?: MemberProjectToMemberProjectRoleProjectResolver<TParent>;\n  id?: MemberProjectToIdResolver<TParent>;\n  createdAt?: MemberProjectToCreatedAtResolver<TParent>;\n  updatedAt?: MemberProjectToUpdatedAtResolver<TParent>;\n}\n\nexport interface MemberProjectToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectToMemberProjectRoleProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberProjectRoleProjectTypeResolver<TParent = any> {\n  memberProjectId?: MemberProjectRoleProjectToMemberProjectIdResolver<TParent>;\n  memberProject?: MemberProjectRoleProjectToMemberProjectResolver<TParent>;\n  projectRoleId?: MemberProjectRoleProjectToProjectRoleIdResolver<TParent>;\n  projectRole?: MemberProjectRoleProjectToProjectRoleResolver<TParent>;\n  id?: MemberProjectRoleProjectToIdResolver<TParent>;\n  createdAt?: MemberProjectRoleProjectToCreatedAtResolver<TParent>;\n  updatedAt?: MemberProjectRoleProjectToUpdatedAtResolver<TParent>;\n}\n\nexport interface MemberProjectRoleProjectToMemberProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectRoleProjectToMemberProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectRoleProjectToProjectRoleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectRoleProjectToProjectRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectRoleProjectToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectRoleProjectToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectRoleProjectToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectRoleTypeResolver<TParent = any> {\n  name?: ProjectRoleToNameResolver<TParent>;\n  codeName?: ProjectRoleToCodeNameResolver<TParent>;\n  label?: ProjectRoleToLabelResolver<TParent>;\n  description?: ProjectRoleToDescriptionResolver<TParent>;\n  isActive?: ProjectRoleToIsActiveResolver<TParent>;\n  permission?: ProjectRoleToPermissionResolver<TParent>;\n  projectId?: ProjectRoleToProjectIdResolver<TParent>;\n  project?: ProjectRoleToProjectResolver<TParent>;\n  viewManagers?: ProjectRoleToViewManagersResolver<TParent>;\n  id?: ProjectRoleToIdResolver<TParent>;\n  createdAt?: ProjectRoleToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectRoleToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProjectRoleToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToPermissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToViewManagersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectRoleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPermissionTypeResolver<TParent = any> {\n  projectId?: PermissionToProjectIdResolver<TParent>;\n  project?: PermissionToProjectResolver<TParent>;\n  projectRoleId?: PermissionToProjectRoleIdResolver<TParent>;\n  projectRole?: PermissionToProjectRoleResolver<TParent>;\n  rules?: PermissionToRulesResolver<TParent>;\n  id?: PermissionToIdResolver<TParent>;\n  createdAt?: PermissionToCreatedAtResolver<TParent>;\n  updatedAt?: PermissionToUpdatedAtResolver<TParent>;\n}\n\nexport interface PermissionToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PermissionToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PermissionToProjectRoleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PermissionToProjectRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PermissionToRulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PermissionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PermissionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PermissionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IViewManagerTypeResolver<TParent = any> {\n  pageManagerId?: ViewManagerToPageManagerIdResolver<TParent>;\n  pageManager?: ViewManagerToPageManagerResolver<TParent>;\n  name?: ViewManagerToNameResolver<TParent>;\n  default?: ViewManagerToDefaultResolver<TParent>;\n  config?: ViewManagerToConfigResolver<TParent>;\n  projectRoleId?: ViewManagerToProjectRoleIdResolver<TParent>;\n  projectRole?: ViewManagerToProjectRoleResolver<TParent>;\n  viewColumns?: ViewManagerToViewColumnsResolver<TParent>;\n  id?: ViewManagerToIdResolver<TParent>;\n  createdAt?: ViewManagerToCreatedAtResolver<TParent>;\n  updatedAt?: ViewManagerToUpdatedAtResolver<TParent>;\n}\n\nexport interface ViewManagerToPageManagerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToPageManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToProjectRoleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToProjectRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToViewColumnsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewManagerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPageManagerTypeResolver<TParent = any> {\n  projectId?: PageManagerToProjectIdResolver<TParent>;\n  project?: PageManagerToProjectResolver<TParent>;\n  pageName?: PageManagerToPageNameResolver<TParent>;\n  config?: PageManagerToConfigResolver<TParent>;\n  viewManagers?: PageManagerToViewManagersResolver<TParent>;\n  id?: PageManagerToIdResolver<TParent>;\n  createdAt?: PageManagerToCreatedAtResolver<TParent>;\n  updatedAt?: PageManagerToUpdatedAtResolver<TParent>;\n}\n\nexport interface PageManagerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageManagerToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageManagerToPageNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageManagerToConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageManagerToViewManagersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageManagerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageManagerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageManagerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IViewColumnTypeResolver<TParent = any> {\n  viewManagerId?: ViewColumnToViewManagerIdResolver<TParent>;\n  viewManager?: ViewColumnToViewManagerResolver<TParent>;\n  isDefault?: ViewColumnToIsDefaultResolver<TParent>;\n  position?: ViewColumnToPositionResolver<TParent>;\n  config?: ViewColumnToConfigResolver<TParent>;\n  viewBlockColumns?: ViewColumnToViewBlockColumnsResolver<TParent>;\n  id?: ViewColumnToIdResolver<TParent>;\n  createdAt?: ViewColumnToCreatedAtResolver<TParent>;\n  updatedAt?: ViewColumnToUpdatedAtResolver<TParent>;\n}\n\nexport interface ViewColumnToViewManagerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewColumnToViewManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewColumnToIsDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewColumnToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewColumnToConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewColumnToViewBlockColumnsArgs {\n  order?: Array<IViewBlockColumnSortInput>;\n}\nexport interface ViewColumnToViewBlockColumnsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: ViewColumnToViewBlockColumnsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewColumnToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewColumnToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewColumnToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IViewBlockColumnTypeResolver<TParent = any> {\n  keyName?: ViewBlockColumnToKeyNameResolver<TParent>;\n  name?: ViewBlockColumnToNameResolver<TParent>;\n  config?: ViewBlockColumnToConfigResolver<TParent>;\n  position?: ViewBlockColumnToPositionResolver<TParent>;\n  viewColumnId?: ViewBlockColumnToViewColumnIdResolver<TParent>;\n  viewColumn?: ViewBlockColumnToViewColumnResolver<TParent>;\n  columnTabId?: ViewBlockColumnToColumnTabIdResolver<TParent>;\n  columnTab?: ViewBlockColumnToColumnTabResolver<TParent>;\n  id?: ViewBlockColumnToIdResolver<TParent>;\n  createdAt?: ViewBlockColumnToCreatedAtResolver<TParent>;\n  updatedAt?: ViewBlockColumnToUpdatedAtResolver<TParent>;\n}\n\nexport interface ViewBlockColumnToKeyNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToViewColumnIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToViewColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToColumnTabIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToColumnTabResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IColumnTabTypeResolver<TParent = any> {\n  isDefault?: ColumnTabToIsDefaultResolver<TParent>;\n  name?: ColumnTabToNameResolver<TParent>;\n  position?: ColumnTabToPositionResolver<TParent>;\n  config?: ColumnTabToConfigResolver<TParent>;\n  columnId?: ColumnTabToColumnIdResolver<TParent>;\n  viewColumn?: ColumnTabToViewColumnResolver<TParent>;\n  blockColumns?: ColumnTabToBlockColumnsResolver<TParent>;\n  id?: ColumnTabToIdResolver<TParent>;\n  createdAt?: ColumnTabToCreatedAtResolver<TParent>;\n  updatedAt?: ColumnTabToUpdatedAtResolver<TParent>;\n}\n\nexport interface ColumnTabToIsDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColumnTabToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColumnTabToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColumnTabToConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColumnTabToColumnIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColumnTabToViewColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColumnTabToBlockColumnsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColumnTabToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColumnTabToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColumnTabToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberStreamTypeResolver<TParent = any> {\n  memberId?: MemberStreamToMemberIdResolver<TParent>;\n  member?: MemberStreamToMemberResolver<TParent>;\n  userName?: MemberStreamToUserNameResolver<TParent>;\n  firstName?: MemberStreamToFirstNameResolver<TParent>;\n  lastName?: MemberStreamToLastNameResolver<TParent>;\n  image?: MemberStreamToImageResolver<TParent>;\n  isOnline?: MemberStreamToIsOnlineResolver<TParent>;\n  description?: MemberStreamToDescriptionResolver<TParent>;\n  id?: MemberStreamToIdResolver<TParent>;\n  createdAt?: MemberStreamToCreatedAtResolver<TParent>;\n  updatedAt?: MemberStreamToUpdatedAtResolver<TParent>;\n}\n\nexport interface MemberStreamToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToUserNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToIsOnlineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStreamToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberTaxonomyTypeResolver<TParent = any> {\n  memberId?: MemberTaxonomyToMemberIdResolver<TParent>;\n  member?: MemberTaxonomyToMemberResolver<TParent>;\n  taxonomyId?: MemberTaxonomyToTaxonomyIdResolver<TParent>;\n}\n\nexport interface MemberTaxonomyToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberTaxonomyToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberTaxonomyToTaxonomyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHealthInsuranceTypeResolver<TParent = any> {\n  memberId?: HealthInsuranceToMemberIdResolver<TParent>;\n  member?: HealthInsuranceToMemberResolver<TParent>;\n  nSS?: HealthInsuranceToNSSResolver<TParent>;\n  insuranceMajorMedicalExpenses?: HealthInsuranceToInsuranceMajorMedicalExpensesResolver<TParent>;\n  typeInsurance?: HealthInsuranceToTypeInsuranceResolver<TParent>;\n  insuranceCarrier?: HealthInsuranceToInsuranceCarrierResolver<TParent>;\n  policyNumber?: HealthInsuranceToPolicyNumberResolver<TParent>;\n  dischargeDate?: HealthInsuranceToDischargeDateResolver<TParent>;\n  expirationDate?: HealthInsuranceToExpirationDateResolver<TParent>;\n  id?: HealthInsuranceToIdResolver<TParent>;\n  createdAt?: HealthInsuranceToCreatedAtResolver<TParent>;\n  updatedAt?: HealthInsuranceToUpdatedAtResolver<TParent>;\n}\n\nexport interface HealthInsuranceToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToNSSResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToInsuranceMajorMedicalExpensesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToTypeInsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToInsuranceCarrierResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToPolicyNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToDischargeDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToExpirationDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HealthInsuranceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEnterpriseDataTypeResolver<TParent = any> {\n  memberId?: EnterpriseDataToMemberIdResolver<TParent>;\n  member?: EnterpriseDataToMemberResolver<TParent>;\n  companyName?: EnterpriseDataToCompanyNameResolver<TParent>;\n  companyCategory?: EnterpriseDataToCompanyCategoryResolver<TParent>;\n  sucursal?: EnterpriseDataToSucursalResolver<TParent>;\n  phones?: EnterpriseDataToPhonesResolver<TParent>;\n  webSite?: EnterpriseDataToWebSiteResolver<TParent>;\n  id?: EnterpriseDataToIdResolver<TParent>;\n  createdAt?: EnterpriseDataToCreatedAtResolver<TParent>;\n  updatedAt?: EnterpriseDataToUpdatedAtResolver<TParent>;\n}\n\nexport interface EnterpriseDataToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EnterpriseDataToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EnterpriseDataToCompanyNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EnterpriseDataToCompanyCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EnterpriseDataToSucursalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EnterpriseDataToPhonesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EnterpriseDataToWebSiteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EnterpriseDataToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EnterpriseDataToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EnterpriseDataToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBillingDataTypeResolver<TParent = any> {\n  memberId?: BillingDataToMemberIdResolver<TParent>;\n  member?: BillingDataToMemberResolver<TParent>;\n  person?: BillingDataToPersonResolver<TParent>;\n  businessName?: BillingDataToBusinessNameResolver<TParent>;\n  rFC?: BillingDataToRFCResolver<TParent>;\n  useCDFI?: BillingDataToUseCDFIResolver<TParent>;\n  paymentMethod?: BillingDataToPaymentMethodResolver<TParent>;\n  paymentTerm?: BillingDataToPaymentTermResolver<TParent>;\n  taxSituation?: BillingDataToTaxSituationResolver<TParent>;\n  id?: BillingDataToIdResolver<TParent>;\n  createdAt?: BillingDataToCreatedAtResolver<TParent>;\n  updatedAt?: BillingDataToUpdatedAtResolver<TParent>;\n}\n\nexport interface BillingDataToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToPersonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToBusinessNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToRFCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToUseCDFIResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToPaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToPaymentTermResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToTaxSituationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingDataToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISellTypeResolver<TParent = any> {\n  nominatorId?: SellToNominatorIdResolver<TParent>;\n  nominator?: SellToNominatorResolver<TParent>;\n  prospectId?: SellToProspectIdResolver<TParent>;\n  prospect?: SellToProspectResolver<TParent>;\n  sellerId?: SellToSellerIdResolver<TParent>;\n  seller?: SellToSellerResolver<TParent>;\n  memberRelationId?: SellToMemberRelationIdResolver<TParent>;\n  memberRelation?: SellToMemberRelationResolver<TParent>;\n  concept?: SellToConceptResolver<TParent>;\n  amount?: SellToAmountResolver<TParent>;\n  status?: SellToStatusResolver<TParent>;\n  description?: SellToDescriptionResolver<TParent>;\n  walletTransactionId?: SellToWalletTransactionIdResolver<TParent>;\n  id?: SellToIdResolver<TParent>;\n  createdAt?: SellToCreatedAtResolver<TParent>;\n  updatedAt?: SellToUpdatedAtResolver<TParent>;\n  walletTransaction?: SellToWalletTransactionResolver<TParent>;\n}\n\nexport interface SellToNominatorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToNominatorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToProspectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToProspectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToSellerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToSellerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToMemberRelationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToConceptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToWalletTransactionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellToWalletTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberRelationTypeResolver<TParent = any> {\n  status?: MemberRelationToStatusResolver<TParent>;\n  parentNodeId?: MemberRelationToParentNodeIdResolver<TParent>;\n  parentNode?: MemberRelationToParentNodeResolver<TParent>;\n  childNodeId?: MemberRelationToChildNodeIdResolver<TParent>;\n  childNode?: MemberRelationToChildNodeResolver<TParent>;\n  isActive?: MemberRelationToIsActiveResolver<TParent>;\n  parentRelationId?: MemberRelationToParentRelationIdResolver<TParent>;\n  parentRelation?: MemberRelationToParentRelationResolver<TParent>;\n  memberRelations?: MemberRelationToMemberRelationsResolver<TParent>;\n  sells?: MemberRelationToSellsResolver<TParent>;\n  id?: MemberRelationToIdResolver<TParent>;\n  createdAt?: MemberRelationToCreatedAtResolver<TParent>;\n  updatedAt?: MemberRelationToUpdatedAtResolver<TParent>;\n}\n\nexport interface MemberRelationToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToParentNodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToParentNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToChildNodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToChildNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToParentRelationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToParentRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToMemberRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionTypeResolver<TParent = any> {\n  walletTransactionStatus?: WalletTransactionToWalletTransactionStatusResolver<TParent>;\n  receptor?: WalletTransactionToReceptorResolver<TParent>;\n  eWallet?: WalletTransactionToEWalletResolver<TParent>;\n  service?: WalletTransactionToServiceResolver<TParent>;\n  paymentServiceId?: WalletTransactionToPaymentServiceIdResolver<TParent>;\n  paymentServiceToken?: WalletTransactionToPaymentServiceTokenResolver<TParent>;\n  amount?: WalletTransactionToAmountResolver<TParent>;\n  detainedAmount?: WalletTransactionToDetainedAmountResolver<TParent>;\n  concept?: WalletTransactionToConceptResolver<TParent>;\n  description?: WalletTransactionToDescriptionResolver<TParent>;\n  projectWalletKeyId?: WalletTransactionToProjectWalletKeyIdResolver<TParent>;\n  memberId?: WalletTransactionToMemberIdResolver<TParent>;\n  eWalletId?: WalletTransactionToEWalletIdResolver<TParent>;\n  receptorId?: WalletTransactionToReceptorIdResolver<TParent>;\n  type?: WalletTransactionToTypeResolver<TParent>;\n  walletTransactionMember?: WalletTransactionToWalletTransactionMemberResolver<TParent>;\n  id?: WalletTransactionToIdResolver<TParent>;\n  createdAt?: WalletTransactionToCreatedAtResolver<TParent>;\n  updatedAt?: WalletTransactionToUpdatedAtResolver<TParent>;\n  member?: WalletTransactionToMemberResolver<TParent>;\n}\n\nexport interface WalletTransactionToWalletTransactionStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToReceptorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToEWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToPaymentServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToPaymentServiceTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToDetainedAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToConceptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToProjectWalletKeyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToEWalletIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToReceptorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToWalletTransactionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionStatusTypeResolver<TParent = any> {\n  walletTransaction?: WalletTransactionStatusToWalletTransactionResolver<TParent>;\n  status?: WalletTransactionStatusToStatusResolver<TParent>;\n  description?: WalletTransactionStatusToDescriptionResolver<TParent>;\n  walletTransactionId?: WalletTransactionStatusToWalletTransactionIdResolver<TParent>;\n  id?: WalletTransactionStatusToIdResolver<TParent>;\n  createdAt?: WalletTransactionStatusToCreatedAtResolver<TParent>;\n  updatedAt?: WalletTransactionStatusToUpdatedAtResolver<TParent>;\n}\n\nexport interface WalletTransactionStatusToWalletTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionStatusToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionStatusToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionStatusToWalletTransactionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionStatusToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionStatusToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionStatusToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEWalletTypeResolver<TParent = any> {\n  balance?: EWalletToBalanceResolver<TParent>;\n  detained?: EWalletToDetainedResolver<TParent>;\n  eWalletTransactions?: EWalletToEWalletTransactionsResolver<TParent>;\n  eWalletRetrieves?: EWalletToEWalletRetrievesResolver<TParent>;\n  memberWallets?: EWalletToMemberWalletsResolver<TParent>;\n  projectId?: EWalletToProjectIdResolver<TParent>;\n  principal?: EWalletToPrincipalResolver<TParent>;\n  detainedManual?: EWalletToDetainedManualResolver<TParent>;\n  automaticPayment?: EWalletToAutomaticPaymentResolver<TParent>;\n  id?: EWalletToIdResolver<TParent>;\n  createdAt?: EWalletToCreatedAtResolver<TParent>;\n  updatedAt?: EWalletToUpdatedAtResolver<TParent>;\n}\n\nexport interface EWalletToBalanceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToDetainedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToEWalletTransactionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToEWalletRetrievesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToMemberWalletsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToPrincipalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToDetainedManualResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToAutomaticPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberWalletTypeResolver<TParent = any> {\n  eWallet?: MemberWalletToEWalletResolver<TParent>;\n  memberId?: MemberWalletToMemberIdResolver<TParent>;\n  eWalletId?: MemberWalletToEWalletIdResolver<TParent>;\n  id?: MemberWalletToIdResolver<TParent>;\n  createdAt?: MemberWalletToCreatedAtResolver<TParent>;\n  updatedAt?: MemberWalletToUpdatedAtResolver<TParent>;\n  member?: MemberWalletToMemberResolver<TParent>;\n}\n\nexport interface MemberWalletToEWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberWalletToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberWalletToEWalletIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberWalletToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberWalletToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberWalletToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberWalletToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionMemberRelationTypeResolver<TParent = any> {\n  walletTransaction?: WalletTransactionMemberRelationToWalletTransactionResolver<TParent>;\n  walletTransactionMemberDetails?: WalletTransactionMemberRelationToWalletTransactionMemberDetailsResolver<TParent>;\n  memberRelationId?: WalletTransactionMemberRelationToMemberRelationIdResolver<TParent>;\n  walletTransactionId?: WalletTransactionMemberRelationToWalletTransactionIdResolver<TParent>;\n  id?: WalletTransactionMemberRelationToIdResolver<TParent>;\n  createdAt?: WalletTransactionMemberRelationToCreatedAtResolver<TParent>;\n  updatedAt?: WalletTransactionMemberRelationToUpdatedAtResolver<TParent>;\n}\n\nexport interface WalletTransactionMemberRelationToWalletTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberRelationToWalletTransactionMemberDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberRelationToMemberRelationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberRelationToWalletTransactionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberRelationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberRelationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberRelationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionMemberDetailTypeResolver<TParent = any> {\n  walletTransactionMember?: WalletTransactionMemberDetailToWalletTransactionMemberResolver<TParent>;\n  amount?: WalletTransactionMemberDetailToAmountResolver<TParent>;\n  description?: WalletTransactionMemberDetailToDescriptionResolver<TParent>;\n  walletTransactionMemberId?: WalletTransactionMemberDetailToWalletTransactionMemberIdResolver<TParent>;\n  id?: WalletTransactionMemberDetailToIdResolver<TParent>;\n  createdAt?: WalletTransactionMemberDetailToCreatedAtResolver<TParent>;\n  updatedAt?: WalletTransactionMemberDetailToUpdatedAtResolver<TParent>;\n}\n\nexport interface WalletTransactionMemberDetailToWalletTransactionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberDetailToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberDetailToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberDetailToWalletTransactionMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberBusinessTypeResolver<TParent = any> {\n  memberId?: MemberBusinessToMemberIdResolver<TParent>;\n  member?: MemberBusinessToMemberResolver<TParent>;\n  businessId?: MemberBusinessToBusinessIdResolver<TParent>;\n  id?: MemberBusinessToIdResolver<TParent>;\n  createdAt?: MemberBusinessToCreatedAtResolver<TParent>;\n  updatedAt?: MemberBusinessToUpdatedAtResolver<TParent>;\n}\n\nexport interface MemberBusinessToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBusinessToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBusinessToBusinessIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBusinessToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBusinessToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBusinessToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberIndustryTypeResolver<TParent = any> {\n  name?: MemberIndustryToNameResolver<TParent>;\n  projectId?: MemberIndustryToProjectIdResolver<TParent>;\n  members?: MemberIndustryToMembersResolver<TParent>;\n  id?: MemberIndustryToIdResolver<TParent>;\n  createdAt?: MemberIndustryToCreatedAtResolver<TParent>;\n  updatedAt?: MemberIndustryToUpdatedAtResolver<TParent>;\n}\n\nexport interface MemberIndustryToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberIndustryToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberIndustryToMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberIndustryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberIndustryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberIndustryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddressTypeResolver<TParent = any> {\n  projectId?: AddressToProjectIdResolver<TParent>;\n  memberId?: AddressToMemberIdResolver<TParent>;\n  rFC?: AddressToRFCResolver<TParent>;\n  businessName?: AddressToBusinessNameResolver<TParent>;\n  addressType?: AddressToAddressTypeResolver<TParent>;\n  firstName?: AddressToFirstNameResolver<TParent>;\n  lastName?: AddressToLastNameResolver<TParent>;\n  countryName?: AddressToCountryNameResolver<TParent>;\n  state?: AddressToStateResolver<TParent>;\n  city?: AddressToCityResolver<TParent>;\n  subUrb?: AddressToSubUrbResolver<TParent>;\n  zipCode?: AddressToZipCodeResolver<TParent>;\n  addressLine1?: AddressToAddressLine1Resolver<TParent>;\n  addressLine2?: AddressToAddressLine2Resolver<TParent>;\n  phone?: AddressToPhoneResolver<TParent>;\n  number?: AddressToNumberResolver<TParent>;\n  municipality?: AddressToMunicipalityResolver<TParent>;\n  addressDetails?: AddressToAddressDetailsResolver<TParent>;\n  isPrincipal?: AddressToIsPrincipalResolver<TParent>;\n  id?: AddressToIdResolver<TParent>;\n  createdAt?: AddressToCreatedAtResolver<TParent>;\n  updatedAt?: AddressToUpdatedAtResolver<TParent>;\n  invoice?: AddressToInvoiceResolver<TParent>;\n}\n\nexport interface AddressToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToRFCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToBusinessNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToAddressTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToCountryNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToSubUrbResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToZipCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToAddressLine1Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToAddressLine2Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToMunicipalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToAddressDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToIsPrincipalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AddressToInvoiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInvoiceTypeResolver<TParent = any> {\n  invoiceNumber?: InvoiceToInvoiceNumberResolver<TParent>;\n  invoiceStatus?: InvoiceToInvoiceStatusResolver<TParent>;\n  projectId?: InvoiceToProjectIdResolver<TParent>;\n  memberId?: InvoiceToMemberIdResolver<TParent>;\n  invoiceDate?: InvoiceToInvoiceDateResolver<TParent>;\n  observations?: InvoiceToObservationsResolver<TParent>;\n  subTotal?: InvoiceToSubTotalResolver<TParent>;\n  shippingSale?: InvoiceToShippingSaleResolver<TParent>;\n  discount?: InvoiceToDiscountResolver<TParent>;\n  total?: InvoiceToTotalResolver<TParent>;\n  addressId?: InvoiceToAddressIdResolver<TParent>;\n  details?: InvoiceToDetailsResolver<TParent>;\n  id?: InvoiceToIdResolver<TParent>;\n  createdAt?: InvoiceToCreatedAtResolver<TParent>;\n  updatedAt?: InvoiceToUpdatedAtResolver<TParent>;\n  member?: InvoiceToMemberResolver<TParent>;\n  address?: InvoiceToAddressResolver<TParent>;\n}\n\nexport interface InvoiceToInvoiceNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToInvoiceStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToInvoiceDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToShippingSaleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToAddressIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInvoiceDetailTypeResolver<TParent = any> {\n  invoiceId?: InvoiceDetailToInvoiceIdResolver<TParent>;\n  invoice?: InvoiceDetailToInvoiceResolver<TParent>;\n  productId?: InvoiceDetailToProductIdResolver<TParent>;\n  quantity?: InvoiceDetailToQuantityResolver<TParent>;\n  salePrice?: InvoiceDetailToSalePriceResolver<TParent>;\n  totalPrice?: InvoiceDetailToTotalPriceResolver<TParent>;\n  id?: InvoiceDetailToIdResolver<TParent>;\n  createdAt?: InvoiceDetailToCreatedAtResolver<TParent>;\n  updatedAt?: InvoiceDetailToUpdatedAtResolver<TParent>;\n  product?: InvoiceDetailToProductResolver<TParent>;\n}\n\nexport interface InvoiceDetailToInvoiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceDetailToInvoiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceDetailToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceDetailToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceDetailToSalePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceDetailToTotalPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceDetailToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductTypeResolver<TParent = any> {\n  projectId?: ProductToProjectIdResolver<TParent>;\n  memberId?: ProductToMemberIdResolver<TParent>;\n  title?: ProductToTitleResolver<TParent>;\n  photo?: ProductToPhotoResolver<TParent>;\n  slug?: ProductToSlugResolver<TParent>;\n  sku?: ProductToSkuResolver<TParent>;\n  price?: ProductToPriceResolver<TParent>;\n  offerPrice?: ProductToOfferPriceResolver<TParent>;\n  stock?: ProductToStockResolver<TParent>;\n  active?: ProductToActiveResolver<TParent>;\n  shippingType?: ProductToShippingTypeResolver<TParent>;\n  shippingPrice?: ProductToShippingPriceResolver<TParent>;\n  description?: ProductToDescriptionResolver<TParent>;\n  publishDate?: ProductToPublishDateResolver<TParent>;\n  views?: ProductToViewsResolver<TParent>;\n  status?: ProductToStatusResolver<TParent>;\n  seoProduct?: ProductToSeoProductResolver<TParent>;\n  subCategories?: ProductToSubCategoriesResolver<TParent>;\n  categories?: ProductToCategoriesResolver<TParent>;\n  details?: ProductToDetailsResolver<TParent>;\n  images?: ProductToImagesResolver<TParent>;\n  shopType?: ProductToShopTypeResolver<TParent>;\n  code?: ProductToCodeResolver<TParent>;\n  purchasePrice?: ProductToPurchasePriceResolver<TParent>;\n  sellPrice?: ProductToSellPriceResolver<TParent>;\n  storeId?: ProductToStoreIdResolver<TParent>;\n  store?: ProductToStoreResolver<TParent>;\n  measure?: ProductToMeasureResolver<TParent>;\n  utility?: ProductToUtilityResolver<TParent>;\n  measureType?: ProductToMeasureTypeResolver<TParent>;\n  origin?: ProductToOriginResolver<TParent>;\n  productType?: ProductToProductTypeResolver<TParent>;\n  planId?: ProductToPlanIdResolver<TParent>;\n  barcode?: ProductToBarcodeResolver<TParent>;\n  brand?: ProductToBrandResolver<TParent>;\n  family?: ProductToFamilyResolver<TParent>;\n  line?: ProductToLineResolver<TParent>;\n  subFamily?: ProductToSubFamilyResolver<TParent>;\n  key?: ProductToKeyResolver<TParent>;\n  onStore?: ProductToOnStoreResolver<TParent>;\n  onCatalog?: ProductToOnCatalogResolver<TParent>;\n  sellMeasure?: ProductToSellMeasureResolver<TParent>;\n  costType?: ProductToCostTypeResolver<TParent>;\n  purchaseMeasure?: ProductToPurchaseMeasureResolver<TParent>;\n  costingType?: ProductToCostingTypeResolver<TParent>;\n  productModality?: ProductToProductModalityResolver<TParent>;\n  stockAlertId?: ProductToStockAlertIdResolver<TParent>;\n  stockAlert?: ProductToStockAlertResolver<TParent>;\n  providers?: ProductToProvidersResolver<TParent>;\n  prices?: ProductToPricesResolver<TParent>;\n  discounts?: ProductToDiscountsResolver<TParent>;\n  partNumber?: ProductToPartNumberResolver<TParent>;\n  fee?: ProductToFeeResolver<TParent>;\n  dataSheet?: ProductToDataSheetResolver<TParent>;\n  ecommerceTitle?: ProductToEcommerceTitleResolver<TParent>;\n  ecommerceDescription?: ProductToEcommerceDescriptionResolver<TParent>;\n  ecommerceInstructions?: ProductToEcommerceInstructionsResolver<TParent>;\n  id?: ProductToIdResolver<TParent>;\n  createdAt?: ProductToCreatedAtResolver<TParent>;\n  updatedAt?: ProductToUpdatedAtResolver<TParent>;\n  invoiceDetail?: ProductToInvoiceDetailResolver<TParent>;\n}\n\nexport interface ProductToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToSlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToSkuResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToOfferPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToStockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToShippingTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToShippingPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToPublishDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToViewsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToSeoProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToSubCategoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToCategoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToImagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToShopTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToPurchasePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToSellPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToStoreIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToUtilityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToMeasureTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToOriginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToProductTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToPlanIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToBarcodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToFamilyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToLineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToSubFamilyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToOnStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToOnCatalogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToSellMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToCostTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToPurchaseMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToCostingTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToProductModalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToStockAlertIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToStockAlertResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToPricesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToDiscountsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToPartNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToDataSheetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToEcommerceTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToEcommerceDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToEcommerceInstructionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductToInvoiceDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITaxonomyTypeResolver<TParent = any> {\n  projectId?: TaxonomyToProjectIdResolver<TParent>;\n  name?: TaxonomyToNameResolver<TParent>;\n  slug?: TaxonomyToSlugResolver<TParent>;\n  description?: TaxonomyToDescriptionResolver<TParent>;\n  termGroup?: TaxonomyToTermGroupResolver<TParent>;\n  photo?: TaxonomyToPhotoResolver<TParent>;\n  tagLine?: TaxonomyToTagLineResolver<TParent>;\n  tagLine2?: TaxonomyToTagLine2Resolver<TParent>;\n  parentId?: TaxonomyToParentIdResolver<TParent>;\n  parent?: TaxonomyToParentResolver<TParent>;\n  subCategories?: TaxonomyToSubCategoriesResolver<TParent>;\n  isPublic?: TaxonomyToIsPublicResolver<TParent>;\n  articles?: TaxonomyToArticlesResolver<TParent>;\n  groupArticles?: TaxonomyToGroupArticlesResolver<TParent>;\n  products?: TaxonomyToProductsResolver<TParent>;\n  seoTaxonomy?: TaxonomyToSeoTaxonomyResolver<TParent>;\n  id?: TaxonomyToIdResolver<TParent>;\n  createdAt?: TaxonomyToCreatedAtResolver<TParent>;\n  updatedAt?: TaxonomyToUpdatedAtResolver<TParent>;\n}\n\nexport interface TaxonomyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToSlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToTermGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToTagLineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToTagLine2Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToParentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToParentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToSubCategoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToIsPublicResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToArticlesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToGroupArticlesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToProductsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToSeoTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IArticleTypeResolver<TParent = any> {\n  projectId?: ArticleToProjectIdResolver<TParent>;\n  memberId?: ArticleToMemberIdResolver<TParent>;\n  title?: ArticleToTitleResolver<TParent>;\n  photo?: ArticleToPhotoResolver<TParent>;\n  slug?: ArticleToSlugResolver<TParent>;\n  resume?: ArticleToResumeResolver<TParent>;\n  content?: ArticleToContentResolver<TParent>;\n  active?: ArticleToActiveResolver<TParent>;\n  views?: ArticleToViewsResolver<TParent>;\n  status?: ArticleToStatusResolver<TParent>;\n  releaseDate?: ArticleToReleaseDateResolver<TParent>;\n  seoTitle?: ArticleToSeoTitleResolver<TParent>;\n  seoDescription?: ArticleToSeoDescriptionResolver<TParent>;\n  seoKeywords?: ArticleToSeoKeywordsResolver<TParent>;\n  structuredMarking?: ArticleToStructuredMarkingResolver<TParent>;\n  imageAlt?: ArticleToImageAltResolver<TParent>;\n  seoArticle?: ArticleToSeoArticleResolver<TParent>;\n  typeContent?: ArticleToTypeContentResolver<TParent>;\n  embedContent?: ArticleToEmbedContentResolver<TParent>;\n  groupId?: ArticleToGroupIdResolver<TParent>;\n  group?: ArticleToGroupResolver<TParent>;\n  language?: ArticleToLanguageResolver<TParent>;\n  parentId?: ArticleToParentIdResolver<TParent>;\n  parent?: ArticleToParentResolver<TParent>;\n  variants?: ArticleToVariantsResolver<TParent>;\n  subCategories?: ArticleToSubCategoriesResolver<TParent>;\n  categories?: ArticleToCategoriesResolver<TParent>;\n  tags?: ArticleToTagsResolver<TParent>;\n  surveys?: ArticleToSurveysResolver<TParent>;\n  id?: ArticleToIdResolver<TParent>;\n  createdAt?: ArticleToCreatedAtResolver<TParent>;\n  updatedAt?: ArticleToUpdatedAtResolver<TParent>;\n  author?: ArticleToAuthorResolver<TParent>;\n}\n\nexport interface ArticleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToSlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToResumeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToViewsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToReleaseDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToSeoTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToSeoDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToSeoKeywordsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToStructuredMarkingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToImageAltResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToSeoArticleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToTypeContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToEmbedContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToGroupIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToLanguageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToParentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToParentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToVariantsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToSubCategoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToCategoriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToTagsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToSurveysResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleToAuthorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISurveyTypeResolver<TParent = any> {\n  title?: SurveyToTitleResolver<TParent>;\n  description?: SurveyToDescriptionResolver<TParent>;\n  isActive?: SurveyToIsActiveResolver<TParent>;\n  thankYouMessage?: SurveyToThankYouMessageResolver<TParent>;\n  articles?: SurveyToArticlesResolver<TParent>;\n  questions?: SurveyToQuestionsResolver<TParent>;\n  id?: SurveyToIdResolver<TParent>;\n  createdAt?: SurveyToCreatedAtResolver<TParent>;\n  updatedAt?: SurveyToUpdatedAtResolver<TParent>;\n}\n\nexport interface SurveyToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SurveyToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SurveyToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SurveyToThankYouMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SurveyToArticlesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SurveyToQuestionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SurveyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SurveyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SurveyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuestionTypeResolver<TParent = any> {\n  surveyId?: QuestionToSurveyIdResolver<TParent>;\n  survey?: QuestionToSurveyResolver<TParent>;\n  title?: QuestionToTitleResolver<TParent>;\n  type?: QuestionToTypeResolver<TParent>;\n  image?: QuestionToImageResolver<TParent>;\n  isRequired?: QuestionToIsRequiredResolver<TParent>;\n  position?: QuestionToPositionResolver<TParent>;\n  allowsFileUpload?: QuestionToAllowsFileUploadResolver<TParent>;\n  options?: QuestionToOptionsResolver<TParent>;\n  answers?: QuestionToAnswersResolver<TParent>;\n  id?: QuestionToIdResolver<TParent>;\n  createdAt?: QuestionToCreatedAtResolver<TParent>;\n  updatedAt?: QuestionToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuestionToSurveyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToSurveyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToIsRequiredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToAllowsFileUploadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToOptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToAnswersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IOptionTypeResolver<TParent = any> {\n  questionId?: OptionToQuestionIdResolver<TParent>;\n  question?: OptionToQuestionResolver<TParent>;\n  title?: OptionToTitleResolver<TParent>;\n  position?: OptionToPositionResolver<TParent>;\n  count?: OptionToCountResolver<TParent>;\n  answers?: OptionToAnswersResolver<TParent>;\n  id?: OptionToIdResolver<TParent>;\n  createdAt?: OptionToCreatedAtResolver<TParent>;\n  updatedAt?: OptionToUpdatedAtResolver<TParent>;\n}\n\nexport interface OptionToQuestionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OptionToQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OptionToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OptionToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OptionToCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OptionToAnswersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OptionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OptionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OptionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAnswerTypeResolver<TParent = any> {\n  memberId?: AnswerToMemberIdResolver<TParent>;\n  questionId?: AnswerToQuestionIdResolver<TParent>;\n  question?: AnswerToQuestionResolver<TParent>;\n  optionId?: AnswerToOptionIdResolver<TParent>;\n  option?: AnswerToOptionResolver<TParent>;\n  uploadFile?: AnswerToUploadFileResolver<TParent>;\n  responseText?: AnswerToResponseTextResolver<TParent>;\n  id?: AnswerToIdResolver<TParent>;\n  createdAt?: AnswerToCreatedAtResolver<TParent>;\n  updatedAt?: AnswerToUpdatedAtResolver<TParent>;\n  member?: AnswerToMemberResolver<TParent>;\n}\n\nexport interface AnswerToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToQuestionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToOptionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToOptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToUploadFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToResponseTextResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnswerToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductDetailTypeResolver<TParent = any> {\n  productId?: ProductDetailToProductIdResolver<TParent>;\n  product?: ProductDetailToProductResolver<TParent>;\n  key?: ProductDetailToKeyResolver<TParent>;\n  value?: ProductDetailToValueResolver<TParent>;\n  id?: ProductDetailToIdResolver<TParent>;\n  createdAt?: ProductDetailToCreatedAtResolver<TParent>;\n  updatedAt?: ProductDetailToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProductDetailToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductDetailToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductDetailToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductDetailToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IImageTypeResolver<TParent = any> {\n  projectId?: ImageToProjectIdResolver<TParent>;\n  original?: ImageToOriginalResolver<TParent>;\n  title?: ImageToTitleResolver<TParent>;\n  products?: ImageToProductsResolver<TParent>;\n  id?: ImageToIdResolver<TParent>;\n  createdAt?: ImageToCreatedAtResolver<TParent>;\n  updatedAt?: ImageToUpdatedAtResolver<TParent>;\n}\n\nexport interface ImageToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ImageToOriginalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ImageToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ImageToProductsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ImageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ImageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ImageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStoreTypeResolver<TParent = any> {\n  projectId?: StoreToProjectIdResolver<TParent>;\n  name?: StoreToNameResolver<TParent>;\n  branchOfficeId?: StoreToBranchOfficeIdResolver<TParent>;\n  branchOffice?: StoreToBranchOfficeResolver<TParent>;\n  code?: StoreToCodeResolver<TParent>;\n  storeType?: StoreToStoreTypeResolver<TParent>;\n  sellerId?: StoreToSellerIdResolver<TParent>;\n  stocks?: StoreToStocksResolver<TParent>;\n  id?: StoreToIdResolver<TParent>;\n  createdAt?: StoreToCreatedAtResolver<TParent>;\n  updatedAt?: StoreToUpdatedAtResolver<TParent>;\n  seller?: StoreToSellerResolver<TParent>;\n}\n\nexport interface StoreToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToBranchOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToStoreTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToSellerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToStocksResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreToSellerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBranchOfficeTypeResolver<TParent = any> {\n  projectId?: BranchOfficeToProjectIdResolver<TParent>;\n  isActive?: BranchOfficeToIsActiveResolver<TParent>;\n  name?: BranchOfficeToNameResolver<TParent>;\n  countryId?: BranchOfficeToCountryIdResolver<TParent>;\n  state?: BranchOfficeToStateResolver<TParent>;\n  municipality?: BranchOfficeToMunicipalityResolver<TParent>;\n  email?: BranchOfficeToEmailResolver<TParent>;\n  phone?: BranchOfficeToPhoneResolver<TParent>;\n  postalCode?: BranchOfficeToPostalCodeResolver<TParent>;\n  street?: BranchOfficeToStreetResolver<TParent>;\n  number?: BranchOfficeToNumberResolver<TParent>;\n  managerId?: BranchOfficeToManagerIdResolver<TParent>;\n  manager?: BranchOfficeToManagerResolver<TParent>;\n  id?: BranchOfficeToIdResolver<TParent>;\n  createdAt?: BranchOfficeToCreatedAtResolver<TParent>;\n  updatedAt?: BranchOfficeToUpdatedAtResolver<TParent>;\n  country?: BranchOfficeToCountryResolver<TParent>;\n}\n\nexport interface BranchOfficeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToMunicipalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToPostalCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToStreetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToManagerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficeToCountryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IManagerTypeResolver<TParent = any> {\n  projectId?: ManagerToProjectIdResolver<TParent>;\n  memberId?: ManagerToMemberIdResolver<TParent>;\n  branchOfficeId?: ManagerToBranchOfficeIdResolver<TParent>;\n  branchOffice?: ManagerToBranchOfficeResolver<TParent>;\n  id?: ManagerToIdResolver<TParent>;\n  createdAt?: ManagerToCreatedAtResolver<TParent>;\n  updatedAt?: ManagerToUpdatedAtResolver<TParent>;\n}\n\nexport interface ManagerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagerToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagerToBranchOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagerToBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStoreStockTypeResolver<TParent = any> {\n  projectId?: StoreStockToProjectIdResolver<TParent>;\n  productId?: StoreStockToProductIdResolver<TParent>;\n  storeId?: StoreStockToStoreIdResolver<TParent>;\n  store?: StoreStockToStoreResolver<TParent>;\n  product?: StoreStockToProductResolver<TParent>;\n  stock?: StoreStockToStockResolver<TParent>;\n  id?: StoreStockToIdResolver<TParent>;\n  createdAt?: StoreStockToCreatedAtResolver<TParent>;\n  updatedAt?: StoreStockToUpdatedAtResolver<TParent>;\n}\n\nexport interface StoreStockToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreStockToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreStockToStoreIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreStockToStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreStockToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreStockToStockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreStockToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreStockToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreStockToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStockAlertTypeResolver<TParent = any> {\n  projectId?: StockAlertToProjectIdResolver<TParent>;\n  productId?: StockAlertToProductIdResolver<TParent>;\n  product?: StockAlertToProductResolver<TParent>;\n  lowestQuantity?: StockAlertToLowestQuantityResolver<TParent>;\n  middleQuantity?: StockAlertToMiddleQuantityResolver<TParent>;\n  highestQuantity?: StockAlertToHighestQuantityResolver<TParent>;\n  id?: StockAlertToIdResolver<TParent>;\n  createdAt?: StockAlertToCreatedAtResolver<TParent>;\n  updatedAt?: StockAlertToUpdatedAtResolver<TParent>;\n}\n\nexport interface StockAlertToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertToLowestQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertToMiddleQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertToHighestQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductProvTypeResolver<TParent = any> {\n  productId?: ProductProvToProductIdResolver<TParent>;\n  providerId?: ProductProvToProviderIdResolver<TParent>;\n  product?: ProductProvToProductResolver<TParent>;\n  provider?: ProductProvToProviderResolver<TParent>;\n  projectId?: ProductProvToProjectIdResolver<TParent>;\n  id?: ProductProvToIdResolver<TParent>;\n  createdAt?: ProductProvToCreatedAtResolver<TParent>;\n  updatedAt?: ProductProvToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProductProvToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProvToProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProvToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProvToProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProvToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProvToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProvToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProvToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductProviderTypeResolver<TParent = any> {\n  projectId?: ProductProviderToProjectIdResolver<TParent>;\n  name?: ProductProviderToNameResolver<TParent>;\n  rfc?: ProductProviderToRfcResolver<TParent>;\n  socialReason?: ProductProviderToSocialReasonResolver<TParent>;\n  address?: ProductProviderToAddressResolver<TParent>;\n  purchase?: ProductProviderToPurchaseResolver<TParent>;\n  creditDays?: ProductProviderToCreditDaysResolver<TParent>;\n  afectaDiot?: ProductProviderToAfectaDiotResolver<TParent>;\n  city?: ProductProviderToCityResolver<TParent>;\n  credit?: ProductProviderToCreditResolver<TParent>;\n  balance?: ProductProviderToBalanceResolver<TParent>;\n  providerType?: ProductProviderToProviderTypeResolver<TParent>;\n  id?: ProductProviderToIdResolver<TParent>;\n  createdAt?: ProductProviderToCreatedAtResolver<TParent>;\n  updatedAt?: ProductProviderToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProductProviderToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToRfcResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToSocialReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToPurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToCreditDaysResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToAfectaDiotResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToCreditResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToBalanceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToProviderTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductProviderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPurchaseTypeResolver<TParent = any> {\n  projectId?: PurchaseToProjectIdResolver<TParent>;\n  invoice?: PurchaseToInvoiceResolver<TParent>;\n  invoiceDate?: PurchaseToInvoiceDateResolver<TParent>;\n  expirationDate?: PurchaseToExpirationDateResolver<TParent>;\n  branchOfficeId?: PurchaseToBranchOfficeIdResolver<TParent>;\n  storeId?: PurchaseToStoreIdResolver<TParent>;\n  providerId?: PurchaseToProviderIdResolver<TParent>;\n  total?: PurchaseToTotalResolver<TParent>;\n  currencyId?: PurchaseToCurrencyIdResolver<TParent>;\n  hasBuyer?: PurchaseToHasBuyerResolver<TParent>;\n  globalDiscount?: PurchaseToGlobalDiscountResolver<TParent>;\n  buyerId?: PurchaseToBuyerIdResolver<TParent>;\n  isActive?: PurchaseToIsActiveResolver<TParent>;\n  discount?: PurchaseToDiscountResolver<TParent>;\n  subTotal?: PurchaseToSubTotalResolver<TParent>;\n  provider?: PurchaseToProviderResolver<TParent>;\n  store?: PurchaseToStoreResolver<TParent>;\n  branchOffice?: PurchaseToBranchOfficeResolver<TParent>;\n  productPurchases?: PurchaseToProductPurchasesResolver<TParent>;\n  files?: PurchaseToFilesResolver<TParent>;\n  id?: PurchaseToIdResolver<TParent>;\n  createdAt?: PurchaseToCreatedAtResolver<TParent>;\n  updatedAt?: PurchaseToUpdatedAtResolver<TParent>;\n}\n\nexport interface PurchaseToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToInvoiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToInvoiceDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToExpirationDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToBranchOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToStoreIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToCurrencyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToHasBuyerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToGlobalDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToBuyerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToProductPurchasesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductPurchaseTypeResolver<TParent = any> {\n  projectId?: ProductPurchaseToProjectIdResolver<TParent>;\n  productId?: ProductPurchaseToProductIdResolver<TParent>;\n  purchaseId?: ProductPurchaseToPurchaseIdResolver<TParent>;\n  quantity?: ProductPurchaseToQuantityResolver<TParent>;\n  price?: ProductPurchaseToPriceResolver<TParent>;\n  discount?: ProductPurchaseToDiscountResolver<TParent>;\n  taxes?: ProductPurchaseToTaxesResolver<TParent>;\n  product?: ProductPurchaseToProductResolver<TParent>;\n  purchase?: ProductPurchaseToPurchaseResolver<TParent>;\n  id?: ProductPurchaseToIdResolver<TParent>;\n  createdAt?: ProductPurchaseToCreatedAtResolver<TParent>;\n  updatedAt?: ProductPurchaseToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProductPurchaseToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToPurchaseIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToTaxesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToPurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPurchaseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPurchaseFileTypeResolver<TParent = any> {\n  fileid?: PurchaseFileToFileidResolver<TParent>;\n  purchaseId?: PurchaseFileToPurchaseIdResolver<TParent>;\n  purchase?: PurchaseFileToPurchaseResolver<TParent>;\n  id?: PurchaseFileToIdResolver<TParent>;\n  createdAt?: PurchaseFileToCreatedAtResolver<TParent>;\n  updatedAt?: PurchaseFileToUpdatedAtResolver<TParent>;\n}\n\nexport interface PurchaseFileToFileidResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseFileToPurchaseIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseFileToPurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseFileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseFileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseFileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductPriceTypeResolver<TParent = any> {\n  price?: ProductPriceToPriceResolver<TParent>;\n  productId?: ProductPriceToProductIdResolver<TParent>;\n  product?: ProductPriceToProductResolver<TParent>;\n  utility?: ProductPriceToUtilityResolver<TParent>;\n  setPrice?: ProductPriceToSetPriceResolver<TParent>;\n  id?: ProductPriceToIdResolver<TParent>;\n  createdAt?: ProductPriceToCreatedAtResolver<TParent>;\n  updatedAt?: ProductPriceToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProductPriceToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPriceToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPriceToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPriceToUtilityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPriceToSetPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPriceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPriceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductPriceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHiringTypeResolver<TParent = any> {\n  hiringType?: HiringToHiringTypeResolver<TParent>;\n  collaborators?: HiringToCollaboratorsResolver<TParent>;\n  hiringServices?: HiringToHiringServicesResolver<TParent>;\n  projectRoleId?: HiringToProjectRoleIdResolver<TParent>;\n  memberId?: HiringToMemberIdResolver<TParent>;\n  dateStart?: HiringToDateStartResolver<TParent>;\n  dateEnd?: HiringToDateEndResolver<TParent>;\n  job?: HiringToJobResolver<TParent>;\n  description?: HiringToDescriptionResolver<TParent>;\n  amount?: HiringToAmountResolver<TParent>;\n  amountWritted?: HiringToAmountWrittedResolver<TParent>;\n  amountPerHour?: HiringToAmountPerHourResolver<TParent>;\n  vacationDays?: HiringToVacationDaysResolver<TParent>;\n  professionalLicense?: HiringToProfessionalLicenseResolver<TParent>;\n  cURP?: HiringToCURPResolver<TParent>;\n  iNE?: HiringToINEResolver<TParent>;\n  infonavit?: HiringToInfonavitResolver<TParent>;\n  nationality?: HiringToNationalityResolver<TParent>;\n  birthNationality?: HiringToBirthNationalityResolver<TParent>;\n  civilState?: HiringToCivilStateResolver<TParent>;\n  benefits?: HiringToBenefitsResolver<TParent>;\n  enumHiringType?: HiringToEnumHiringTypeResolver<TParent>;\n  hiringTypeId?: HiringToHiringTypeIdResolver<TParent>;\n  id?: HiringToIdResolver<TParent>;\n  createdAt?: HiringToCreatedAtResolver<TParent>;\n  updatedAt?: HiringToUpdatedAtResolver<TParent>;\n}\n\nexport interface HiringToHiringTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToCollaboratorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToHiringServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToProjectRoleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToDateStartResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToDateEndResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToJobResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToAmountWrittedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToAmountPerHourResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToVacationDaysResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToProfessionalLicenseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToCURPResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToINEResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToInfonavitResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToNationalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToBirthNationalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToCivilStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToBenefitsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToEnumHiringTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToHiringTypeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHiringTypeTypeResolver<TParent = any> {\n  projectId?: HiringTypeToProjectIdResolver<TParent>;\n  name?: HiringTypeToNameResolver<TParent>;\n  hirings?: HiringTypeToHiringsResolver<TParent>;\n  id?: HiringTypeToIdResolver<TParent>;\n  createdAt?: HiringTypeToCreatedAtResolver<TParent>;\n  updatedAt?: HiringTypeToUpdatedAtResolver<TParent>;\n}\n\nexport interface HiringTypeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringTypeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringTypeToHiringsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringTypeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringTypeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringTypeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICollaboratorTypeResolver<TParent = any> {\n  resourceQuoteDetail?: CollaboratorToResourceQuoteDetailResolver<TParent>;\n  hiring?: CollaboratorToHiringResolver<TParent>;\n  reportedHours?: CollaboratorToReportedHoursResolver<TParent>;\n  hours?: CollaboratorToHoursResolver<TParent>;\n  costByHour?: CollaboratorToCostByHourResolver<TParent>;\n  role?: CollaboratorToRoleResolver<TParent>;\n  projectRoleId?: CollaboratorToProjectRoleIdResolver<TParent>;\n  timeEstimated?: CollaboratorToTimeEstimatedResolver<TParent>;\n  amount?: CollaboratorToAmountResolver<TParent>;\n  memberId?: CollaboratorToMemberIdResolver<TParent>;\n  resourceQuoteDetailId?: CollaboratorToResourceQuoteDetailIdResolver<TParent>;\n  hiringId?: CollaboratorToHiringIdResolver<TParent>;\n  collaboratorHours?: CollaboratorToCollaboratorHoursResolver<TParent>;\n  id?: CollaboratorToIdResolver<TParent>;\n  createdAt?: CollaboratorToCreatedAtResolver<TParent>;\n  updatedAt?: CollaboratorToUpdatedAtResolver<TParent>;\n  member?: CollaboratorToMemberResolver<TParent>;\n}\n\nexport interface CollaboratorToResourceQuoteDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToHiringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToReportedHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToCostByHourResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToProjectRoleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToTimeEstimatedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToResourceQuoteDetailIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToHiringIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToCollaboratorHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResourceQuoteDetailTypeResolver<TParent = any> {\n  resourceQuote?: ResourceQuoteDetailToResourceQuoteResolver<TParent>;\n  resourceQuoteDetailBoardRow?: ResourceQuoteDetailToResourceQuoteDetailBoardRowResolver<TParent>;\n  collaborators?: ResourceQuoteDetailToCollaboratorsResolver<TParent>;\n  totalCost?: ResourceQuoteDetailToTotalCostResolver<TParent>;\n  totalHours?: ResourceQuoteDetailToTotalHoursResolver<TParent>;\n  totalEarnings?: ResourceQuoteDetailToTotalEarningsResolver<TParent>;\n  totalReportedHours?: ResourceQuoteDetailToTotalReportedHoursResolver<TParent>;\n  title?: ResourceQuoteDetailToTitleResolver<TParent>;\n  serviceId?: ResourceQuoteDetailToServiceIdResolver<TParent>;\n  resourceQuoteId?: ResourceQuoteDetailToResourceQuoteIdResolver<TParent>;\n  description?: ResourceQuoteDetailToDescriptionResolver<TParent>;\n  nomenclature?: ResourceQuoteDetailToNomenclatureResolver<TParent>;\n  consecutive?: ResourceQuoteDetailToConsecutiveResolver<TParent>;\n  earningPercentage?: ResourceQuoteDetailToEarningPercentageResolver<TParent>;\n  id?: ResourceQuoteDetailToIdResolver<TParent>;\n  createdAt?: ResourceQuoteDetailToCreatedAtResolver<TParent>;\n  updatedAt?: ResourceQuoteDetailToUpdatedAtResolver<TParent>;\n  service?: ResourceQuoteDetailToServiceResolver<TParent>;\n}\n\nexport interface ResourceQuoteDetailToResourceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToResourceQuoteDetailBoardRowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToCollaboratorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToTotalCostResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToTotalHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToTotalEarningsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToTotalReportedHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToResourceQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToNomenclatureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToConsecutiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToEarningPercentageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResourceQuoteTypeResolver<TParent = any> {\n  proposals?: ResourceQuoteToProposalsResolver<TParent>;\n  resourceQuoteDetails?: ResourceQuoteToResourceQuoteDetailsResolver<TParent>;\n  totalCostServices?: ResourceQuoteToTotalCostServicesResolver<TParent>;\n  totalHoursServices?: ResourceQuoteToTotalHoursServicesResolver<TParent>;\n  totalEarnings?: ResourceQuoteToTotalEarningsResolver<TParent>;\n  totalReportedHours?: ResourceQuoteToTotalReportedHoursResolver<TParent>;\n  calculatedClosingDate?: ResourceQuoteToCalculatedClosingDateResolver<TParent>;\n  memberId?: ResourceQuoteToMemberIdResolver<TParent>;\n  projectId?: ResourceQuoteToProjectIdResolver<TParent>;\n  title?: ResourceQuoteToTitleResolver<TParent>;\n  areaId?: ResourceQuoteToAreaIdResolver<TParent>;\n  approvedDate?: ResourceQuoteToApprovedDateResolver<TParent>;\n  status?: ResourceQuoteToStatusResolver<TParent>;\n  id?: ResourceQuoteToIdResolver<TParent>;\n  createdAt?: ResourceQuoteToCreatedAtResolver<TParent>;\n  updatedAt?: ResourceQuoteToUpdatedAtResolver<TParent>;\n  member?: ResourceQuoteToMemberResolver<TParent>;\n  area?: ResourceQuoteToAreaResolver<TParent>;\n}\n\nexport interface ResourceQuoteToProposalsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToResourceQuoteDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToTotalCostServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToTotalHoursServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToTotalEarningsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToTotalReportedHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToCalculatedClosingDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToAreaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToApprovedDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteToAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProposalTypeResolver<TParent = any> {\n  resourceQuote?: ProposalToResourceQuoteResolver<TParent>;\n  title?: ProposalToTitleResolver<TParent>;\n  state?: ProposalToStateResolver<TParent>;\n  city?: ProposalToCityResolver<TParent>;\n  pDF?: ProposalToPDFResolver<TParent>;\n  introduction?: ProposalToIntroductionResolver<TParent>;\n  summary?: ProposalToSummaryResolver<TParent>;\n  methodology?: ProposalToMethodologyResolver<TParent>;\n  timeEstimate?: ProposalToTimeEstimateResolver<TParent>;\n  finishDate?: ProposalToFinishDateResolver<TParent>;\n  discount?: ProposalToDiscountResolver<TParent>;\n  discountType?: ProposalToDiscountTypeResolver<TParent>;\n  tax?: ProposalToTaxResolver<TParent>;\n  taxType?: ProposalToTaxTypeResolver<TParent>;\n  status?: ProposalToStatusResolver<TParent>;\n  total?: ProposalToTotalResolver<TParent>;\n  resourceQuoteId?: ProposalToResourceQuoteIdResolver<TParent>;\n  id?: ProposalToIdResolver<TParent>;\n  createdAt?: ProposalToCreatedAtResolver<TParent>;\n  updatedAt?: ProposalToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProposalToResourceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToPDFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToIntroductionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToSummaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToMethodologyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToTimeEstimateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToFinishDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToDiscountTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToTaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToTaxTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToResourceQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAreaTypeResolver<TParent = any> {\n  services?: AreaToServicesResolver<TParent>;\n  name?: AreaToNameResolver<TParent>;\n  description?: AreaToDescriptionResolver<TParent>;\n  code?: AreaToCodeResolver<TParent>;\n  active?: AreaToActiveResolver<TParent>;\n  projectId?: AreaToProjectIdResolver<TParent>;\n  id?: AreaToIdResolver<TParent>;\n  createdAt?: AreaToCreatedAtResolver<TParent>;\n  updatedAt?: AreaToUpdatedAtResolver<TParent>;\n}\n\nexport interface AreaToServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceAreaTypeResolver<TParent = any> {\n  serviceQuizes?: ServiceAreaToServiceQuizesResolver<TParent>;\n  serviceMembers?: ServiceAreaToServiceMembersResolver<TParent>;\n  area?: ServiceAreaToAreaResolver<TParent>;\n  name?: ServiceAreaToNameResolver<TParent>;\n  description?: ServiceAreaToDescriptionResolver<TParent>;\n  code?: ServiceAreaToCodeResolver<TParent>;\n  active?: ServiceAreaToActiveResolver<TParent>;\n  areaId?: ServiceAreaToAreaIdResolver<TParent>;\n  id?: ServiceAreaToIdResolver<TParent>;\n  createdAt?: ServiceAreaToCreatedAtResolver<TParent>;\n  updatedAt?: ServiceAreaToUpdatedAtResolver<TParent>;\n  hiringService?: ServiceAreaToHiringServiceResolver<TParent>;\n}\n\nexport interface ServiceAreaToServiceQuizesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToServiceMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToAreaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceAreaToHiringServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceQuizTypeResolver<TParent = any> {\n  quiz?: ServiceQuizToQuizResolver<TParent>;\n  service?: ServiceQuizToServiceResolver<TParent>;\n  serviceId?: ServiceQuizToServiceIdResolver<TParent>;\n  quizId?: ServiceQuizToQuizIdResolver<TParent>;\n  id?: ServiceQuizToIdResolver<TParent>;\n  createdAt?: ServiceQuizToCreatedAtResolver<TParent>;\n  updatedAt?: ServiceQuizToUpdatedAtResolver<TParent>;\n}\n\nexport interface ServiceQuizToQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceQuizToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceQuizToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceQuizToQuizIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceQuizToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceQuizToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceQuizToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizTypeResolver<TParent = any> {\n  serviceQuizes?: QuizToServiceQuizesResolver<TParent>;\n  quizSections?: QuizToQuizSectionsResolver<TParent>;\n  quizMembers?: QuizToQuizMembersResolver<TParent>;\n  timesAnswered?: QuizToTimesAnsweredResolver<TParent>;\n  name?: QuizToNameResolver<TParent>;\n  description?: QuizToDescriptionResolver<TParent>;\n  note?: QuizToNoteResolver<TParent>;\n  projectId?: QuizToProjectIdResolver<TParent>;\n  answerableOnlyOnce?: QuizToAnswerableOnlyOnceResolver<TParent>;\n  maxTimesAnswerable?: QuizToMaxTimesAnswerableResolver<TParent>;\n  mailInterviewed?: QuizToMailInterviewedResolver<TParent>;\n  mailCreator?: QuizToMailCreatorResolver<TParent>;\n  saveSend?: QuizToSaveSendResolver<TParent>;\n  tagPosition?: QuizToTagPositionResolver<TParent>;\n  quizStatus?: QuizToQuizStatusResolver<TParent>;\n  id?: QuizToIdResolver<TParent>;\n  createdAt?: QuizToCreatedAtResolver<TParent>;\n  updatedAt?: QuizToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizToServiceQuizesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToQuizSectionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToQuizMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToTimesAnsweredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToAnswerableOnlyOnceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToMaxTimesAnswerableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToMailInterviewedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToMailCreatorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToSaveSendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToTagPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToQuizStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizSectionTypeResolver<TParent = any> {\n  quizQuestions?: QuizSectionToQuizQuestionsResolver<TParent>;\n  quiz?: QuizSectionToQuizResolver<TParent>;\n  name?: QuizSectionToNameResolver<TParent>;\n  description?: QuizSectionToDescriptionResolver<TParent>;\n  order?: QuizSectionToOrderResolver<TParent>;\n  quizId?: QuizSectionToQuizIdResolver<TParent>;\n  id?: QuizSectionToIdResolver<TParent>;\n  createdAt?: QuizSectionToCreatedAtResolver<TParent>;\n  updatedAt?: QuizSectionToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizSectionToQuizQuestionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionToQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionToQuizIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionTypeResolver<TParent = any> {\n  quizSection?: QuizQuestionToQuizSectionResolver<TParent>;\n  quizQuestionAnswers?: QuizQuestionToQuizQuestionAnswersResolver<TParent>;\n  quizQuestionMembers?: QuizQuestionToQuizQuestionMembersResolver<TParent>;\n  quizQuestionNesteds?: QuizQuestionToQuizQuestionNestedsResolver<TParent>;\n  question?: QuizQuestionToQuestionResolver<TParent>;\n  questionType?: QuizQuestionToQuestionTypeResolver<TParent>;\n  description?: QuizQuestionToDescriptionResolver<TParent>;\n  helpText?: QuizQuestionToHelpTextResolver<TParent>;\n  placeHolder?: QuizQuestionToPlaceHolderResolver<TParent>;\n  required?: QuizQuestionToRequiredResolver<TParent>;\n  requireConfimation?: QuizQuestionToRequireConfimationResolver<TParent>;\n  maxCharacters?: QuizQuestionToMaxCharactersResolver<TParent>;\n  memberId?: QuizQuestionToMemberIdResolver<TParent>;\n  tagPosition?: QuizQuestionToTagPositionResolver<TParent>;\n  order?: QuizQuestionToOrderResolver<TParent>;\n  active?: QuizQuestionToActiveResolver<TParent>;\n  quizSectionId?: QuizQuestionToQuizSectionIdResolver<TParent>;\n  quizQuestionPrefabId?: QuizQuestionToQuizQuestionPrefabIdResolver<TParent>;\n  quizQuestionPrefab?: QuizQuestionToQuizQuestionPrefabResolver<TParent>;\n  id?: QuizQuestionToIdResolver<TParent>;\n  createdAt?: QuizQuestionToCreatedAtResolver<TParent>;\n  updatedAt?: QuizQuestionToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizQuestionToQuizSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToQuizQuestionAnswersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToQuizQuestionMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToQuizQuestionNestedsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToQuestionTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToHelpTextResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToPlaceHolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToRequiredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToRequireConfimationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToMaxCharactersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToTagPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToQuizSectionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToQuizQuestionPrefabIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToQuizQuestionPrefabResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionAnswerTypeResolver<TParent = any> {\n  quizAnswer?: QuizQuestionAnswerToQuizAnswerResolver<TParent>;\n  quizQuestion?: QuizQuestionAnswerToQuizQuestionResolver<TParent>;\n  quizQuestionId?: QuizQuestionAnswerToQuizQuestionIdResolver<TParent>;\n  quizAnswerId?: QuizQuestionAnswerToQuizAnswerIdResolver<TParent>;\n  order?: QuizQuestionAnswerToOrderResolver<TParent>;\n  value?: QuizQuestionAnswerToValueResolver<TParent>;\n  calc?: QuizQuestionAnswerToCalcResolver<TParent>;\n  id?: QuizQuestionAnswerToIdResolver<TParent>;\n  createdAt?: QuizQuestionAnswerToCreatedAtResolver<TParent>;\n  updatedAt?: QuizQuestionAnswerToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizQuestionAnswerToQuizAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerToQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerToQuizQuestionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerToQuizAnswerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerToCalcResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizAnswerTypeResolver<TParent = any> {\n  quizQuestionAnswers?: QuizAnswerToQuizQuestionAnswersResolver<TParent>;\n  description?: QuizAnswerToDescriptionResolver<TParent>;\n  active?: QuizAnswerToActiveResolver<TParent>;\n  projectId?: QuizAnswerToProjectIdResolver<TParent>;\n  id?: QuizAnswerToIdResolver<TParent>;\n  createdAt?: QuizAnswerToCreatedAtResolver<TParent>;\n  updatedAt?: QuizAnswerToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizAnswerToQuizQuestionAnswersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizAnswerToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizAnswerToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizAnswerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizAnswerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizAnswerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizAnswerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionMemberTypeResolver<TParent = any> {\n  quizMember?: QuizQuestionMemberToQuizMemberResolver<TParent>;\n  quizMemberDescriptions?: QuizQuestionMemberToQuizMemberDescriptionsResolver<TParent>;\n  quizMemberAnswers?: QuizQuestionMemberToQuizMemberAnswersResolver<TParent>;\n  quizQuestion?: QuizQuestionMemberToQuizQuestionResolver<TParent>;\n  quizMemberId?: QuizQuestionMemberToQuizMemberIdResolver<TParent>;\n  quizQuestionId?: QuizQuestionMemberToQuizQuestionIdResolver<TParent>;\n  active?: QuizQuestionMemberToActiveResolver<TParent>;\n  id?: QuizQuestionMemberToIdResolver<TParent>;\n  createdAt?: QuizQuestionMemberToCreatedAtResolver<TParent>;\n  updatedAt?: QuizQuestionMemberToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizQuestionMemberToQuizMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberToQuizMemberDescriptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberToQuizMemberAnswersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberToQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberToQuizMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberToQuizQuestionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberTypeResolver<TParent = any> {\n  quiz?: QuizMemberToQuizResolver<TParent>;\n  quizQuestionMembers?: QuizMemberToQuizQuestionMembersResolver<TParent>;\n  quizId?: QuizMemberToQuizIdResolver<TParent>;\n  email?: QuizMemberToEmailResolver<TParent>;\n  projectId?: QuizMemberToProjectIdResolver<TParent>;\n  memberId?: QuizMemberToMemberIdResolver<TParent>;\n  quizStatus?: QuizMemberToQuizStatusResolver<TParent>;\n  active?: QuizMemberToActiveResolver<TParent>;\n  id?: QuizMemberToIdResolver<TParent>;\n  createdAt?: QuizMemberToCreatedAtResolver<TParent>;\n  updatedAt?: QuizMemberToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizMemberToQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToQuizQuestionMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToQuizIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToQuizStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberDescriptionTypeResolver<TParent = any> {\n  quizQuestionMember?: QuizMemberDescriptionToQuizQuestionMemberResolver<TParent>;\n  quizQuestionMemberId?: QuizMemberDescriptionToQuizQuestionMemberIdResolver<TParent>;\n  description?: QuizMemberDescriptionToDescriptionResolver<TParent>;\n  active?: QuizMemberDescriptionToActiveResolver<TParent>;\n  id?: QuizMemberDescriptionToIdResolver<TParent>;\n  createdAt?: QuizMemberDescriptionToCreatedAtResolver<TParent>;\n  updatedAt?: QuizMemberDescriptionToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizMemberDescriptionToQuizQuestionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberDescriptionToQuizQuestionMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberDescriptionToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberDescriptionToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberDescriptionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberDescriptionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberDescriptionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberAnswerTypeResolver<TParent = any> {\n  quizQuestionMember?: QuizMemberAnswerToQuizQuestionMemberResolver<TParent>;\n  quizAnswer?: QuizMemberAnswerToQuizAnswerResolver<TParent>;\n  quizQuestionMemberId?: QuizMemberAnswerToQuizQuestionMemberIdResolver<TParent>;\n  quizAnswerId?: QuizMemberAnswerToQuizAnswerIdResolver<TParent>;\n  active?: QuizMemberAnswerToActiveResolver<TParent>;\n  id?: QuizMemberAnswerToIdResolver<TParent>;\n  createdAt?: QuizMemberAnswerToCreatedAtResolver<TParent>;\n  updatedAt?: QuizMemberAnswerToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizMemberAnswerToQuizQuestionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberAnswerToQuizAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberAnswerToQuizQuestionMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberAnswerToQuizAnswerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberAnswerToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberAnswerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberAnswerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberAnswerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionNestedTypeResolver<TParent = any> {\n  quizQuestion?: QuizQuestionNestedToQuizQuestionResolver<TParent>;\n  name?: QuizQuestionNestedToNameResolver<TParent>;\n  description?: QuizQuestionNestedToDescriptionResolver<TParent>;\n  url?: QuizQuestionNestedToUrlResolver<TParent>;\n  show?: QuizQuestionNestedToShowResolver<TParent>;\n  order?: QuizQuestionNestedToOrderResolver<TParent>;\n  quizQuestionId?: QuizQuestionNestedToQuizQuestionIdResolver<TParent>;\n  id?: QuizQuestionNestedToIdResolver<TParent>;\n  createdAt?: QuizQuestionNestedToCreatedAtResolver<TParent>;\n  updatedAt?: QuizQuestionNestedToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizQuestionNestedToQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionNestedToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionNestedToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionNestedToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionNestedToShowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionNestedToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionNestedToQuizQuestionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionNestedToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionNestedToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionNestedToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionPrefabTypeResolver<TParent = any> {\n  name?: QuizQuestionPrefabToNameResolver<TParent>;\n  icon?: QuizQuestionPrefabToIconResolver<TParent>;\n  code?: QuizQuestionPrefabToCodeResolver<TParent>;\n  quizQuestionPrefabGroupId?: QuizQuestionPrefabToQuizQuestionPrefabGroupIdResolver<TParent>;\n  quizQuestionPrefabGroup?: QuizQuestionPrefabToQuizQuestionPrefabGroupResolver<TParent>;\n  quizQuestions?: QuizQuestionPrefabToQuizQuestionsResolver<TParent>;\n  quizQuestionPrefabFeatureds?: QuizQuestionPrefabToQuizQuestionPrefabFeaturedsResolver<TParent>;\n  id?: QuizQuestionPrefabToIdResolver<TParent>;\n  createdAt?: QuizQuestionPrefabToCreatedAtResolver<TParent>;\n  updatedAt?: QuizQuestionPrefabToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizQuestionPrefabToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabToIconResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabToQuizQuestionPrefabGroupIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabToQuizQuestionPrefabGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabToQuizQuestionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabToQuizQuestionPrefabFeaturedsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionPrefabGroupTypeResolver<TParent = any> {\n  name?: QuizQuestionPrefabGroupToNameResolver<TParent>;\n  quizQuestionPrefabs?: QuizQuestionPrefabGroupToQuizQuestionPrefabsResolver<TParent>;\n  id?: QuizQuestionPrefabGroupToIdResolver<TParent>;\n  createdAt?: QuizQuestionPrefabGroupToCreatedAtResolver<TParent>;\n  updatedAt?: QuizQuestionPrefabGroupToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizQuestionPrefabGroupToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabGroupToQuizQuestionPrefabsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabGroupToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabGroupToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabGroupToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionPrefabFeaturedTypeResolver<TParent = any> {\n  outstand?: QuizQuestionPrefabFeaturedToOutstandResolver<TParent>;\n  projectId?: QuizQuestionPrefabFeaturedToProjectIdResolver<TParent>;\n  quizQuestionPrefabId?: QuizQuestionPrefabFeaturedToQuizQuestionPrefabIdResolver<TParent>;\n  quizQuestionPrefab?: QuizQuestionPrefabFeaturedToQuizQuestionPrefabResolver<TParent>;\n  id?: QuizQuestionPrefabFeaturedToIdResolver<TParent>;\n  createdAt?: QuizQuestionPrefabFeaturedToCreatedAtResolver<TParent>;\n  updatedAt?: QuizQuestionPrefabFeaturedToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuizQuestionPrefabFeaturedToOutstandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabFeaturedToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabFeaturedToQuizQuestionPrefabIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabFeaturedToQuizQuestionPrefabResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabFeaturedToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabFeaturedToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionPrefabFeaturedToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceMemberTypeResolver<TParent = any> {\n  service?: ServiceMemberToServiceResolver<TParent>;\n  memberId?: ServiceMemberToMemberIdResolver<TParent>;\n  serviceId?: ServiceMemberToServiceIdResolver<TParent>;\n  id?: ServiceMemberToIdResolver<TParent>;\n  createdAt?: ServiceMemberToCreatedAtResolver<TParent>;\n  updatedAt?: ServiceMemberToUpdatedAtResolver<TParent>;\n  member?: ServiceMemberToMemberResolver<TParent>;\n}\n\nexport interface ServiceMemberToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceMemberToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceMemberToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceMemberToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceMemberToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceMemberToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceMemberToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHiringServiceTypeResolver<TParent = any> {\n  hiring?: HiringServiceToHiringResolver<TParent>;\n  serviceId?: HiringServiceToServiceIdResolver<TParent>;\n  hiringId?: HiringServiceToHiringIdResolver<TParent>;\n  id?: HiringServiceToIdResolver<TParent>;\n  createdAt?: HiringServiceToCreatedAtResolver<TParent>;\n  updatedAt?: HiringServiceToUpdatedAtResolver<TParent>;\n  service?: HiringServiceToServiceResolver<TParent>;\n}\n\nexport interface HiringServiceToHiringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringServiceToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringServiceToHiringIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringServiceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringServiceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HiringServiceToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResourceQuoteDetailBoardRowTypeResolver<TParent = any> {\n  resourceQuoteDetail?: ResourceQuoteDetailBoardRowToResourceQuoteDetailResolver<TParent>;\n  boardRowId?: ResourceQuoteDetailBoardRowToBoardRowIdResolver<TParent>;\n  resourceQuoteDetailId?: ResourceQuoteDetailBoardRowToResourceQuoteDetailIdResolver<TParent>;\n  id?: ResourceQuoteDetailBoardRowToIdResolver<TParent>;\n  createdAt?: ResourceQuoteDetailBoardRowToCreatedAtResolver<TParent>;\n  updatedAt?: ResourceQuoteDetailBoardRowToUpdatedAtResolver<TParent>;\n}\n\nexport interface ResourceQuoteDetailBoardRowToResourceQuoteDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailBoardRowToBoardRowIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailBoardRowToResourceQuoteDetailIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailBoardRowToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailBoardRowToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailBoardRowToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICollaboratorHoursTypeResolver<TParent = any> {\n  collaborator?: CollaboratorHoursToCollaboratorResolver<TParent>;\n  totalHours?: CollaboratorHoursToTotalHoursResolver<TParent>;\n  date?: CollaboratorHoursToDateResolver<TParent>;\n  initialHour?: CollaboratorHoursToInitialHourResolver<TParent>;\n  finalHour?: CollaboratorHoursToFinalHourResolver<TParent>;\n  collaboratorId?: CollaboratorHoursToCollaboratorIdResolver<TParent>;\n  id?: CollaboratorHoursToIdResolver<TParent>;\n  createdAt?: CollaboratorHoursToCreatedAtResolver<TParent>;\n  updatedAt?: CollaboratorHoursToUpdatedAtResolver<TParent>;\n}\n\nexport interface CollaboratorHoursToCollaboratorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursToTotalHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursToDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursToInitialHourResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursToFinalHourResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursToCollaboratorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IShiftTypeResolver<TParent = any> {\n  day?: ShiftToDayResolver<TParent>;\n  projectId?: ShiftToProjectIdResolver<TParent>;\n  memberId?: ShiftToMemberIdResolver<TParent>;\n  timeStart?: ShiftToTimeStartResolver<TParent>;\n  timeEnd?: ShiftToTimeEndResolver<TParent>;\n  dayId?: ShiftToDayIdResolver<TParent>;\n  id?: ShiftToIdResolver<TParent>;\n  createdAt?: ShiftToCreatedAtResolver<TParent>;\n  updatedAt?: ShiftToUpdatedAtResolver<TParent>;\n}\n\nexport interface ShiftToDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShiftToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShiftToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShiftToTimeStartResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShiftToTimeEndResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShiftToDayIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShiftToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShiftToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShiftToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDayTypeResolver<TParent = any> {\n  shifts?: DayToShiftsResolver<TParent>;\n  name?: DayToNameResolver<TParent>;\n  codeDay?: DayToCodeDayResolver<TParent>;\n  id?: DayToIdResolver<TParent>;\n  createdAt?: DayToCreatedAtResolver<TParent>;\n  updatedAt?: DayToUpdatedAtResolver<TParent>;\n}\n\nexport interface DayToShiftsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayToCodeDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBusinessTypeResolver<TParent = any> {\n  projectId?: BusinessToProjectIdResolver<TParent>;\n  name?: BusinessToNameResolver<TParent>;\n  description?: BusinessToDescriptionResolver<TParent>;\n  slogan?: BusinessToSloganResolver<TParent>;\n  image?: BusinessToImageResolver<TParent>;\n  businessTypeId?: BusinessToBusinessTypeIdResolver<TParent>;\n  businessType?: BusinessToBusinessTypeResolver<TParent>;\n  businessRuleProjectPlans?: BusinessToBusinessRuleProjectPlansResolver<TParent>;\n  id?: BusinessToIdResolver<TParent>;\n  createdAt?: BusinessToCreatedAtResolver<TParent>;\n  updatedAt?: BusinessToUpdatedAtResolver<TParent>;\n}\n\nexport interface BusinessToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToSloganResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToBusinessTypeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToBusinessTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToBusinessRuleProjectPlansResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBusinessTypeTypeResolver<TParent = any> {\n  projectId?: BusinessTypeToProjectIdResolver<TParent>;\n  image?: BusinessTypeToImageResolver<TParent>;\n  name?: BusinessTypeToNameResolver<TParent>;\n  description?: BusinessTypeToDescriptionResolver<TParent>;\n  id?: BusinessTypeToIdResolver<TParent>;\n  createdAt?: BusinessTypeToCreatedAtResolver<TParent>;\n  updatedAt?: BusinessTypeToUpdatedAtResolver<TParent>;\n  members?: BusinessTypeToMembersResolver<TParent>;\n}\n\nexport interface BusinessTypeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessTypeToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessTypeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessTypeToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessTypeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessTypeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessTypeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessTypeToMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBusinessRuleProjectPlanTypeResolver<TParent = any> {\n  businessRuleId?: BusinessRuleProjectPlanToBusinessRuleIdResolver<TParent>;\n  businessId?: BusinessRuleProjectPlanToBusinessIdResolver<TParent>;\n  bussines?: BusinessRuleProjectPlanToBussinesResolver<TParent>;\n  businessRule?: BusinessRuleProjectPlanToBusinessRuleResolver<TParent>;\n  projectPlanId?: BusinessRuleProjectPlanToProjectPlanIdResolver<TParent>;\n  projectPlan?: BusinessRuleProjectPlanToProjectPlanResolver<TParent>;\n  commission?: BusinessRuleProjectPlanToCommissionResolver<TParent>;\n  commissionSell?: BusinessRuleProjectPlanToCommissionSellResolver<TParent>;\n  commissionProspect?: BusinessRuleProjectPlanToCommissionProspectResolver<TParent>;\n  commissionInterested?: BusinessRuleProjectPlanToCommissionInterestedResolver<TParent>;\n  id?: BusinessRuleProjectPlanToIdResolver<TParent>;\n  createdAt?: BusinessRuleProjectPlanToCreatedAtResolver<TParent>;\n  updatedAt?: BusinessRuleProjectPlanToUpdatedAtResolver<TParent>;\n}\n\nexport interface BusinessRuleProjectPlanToBusinessRuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToBusinessIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToBussinesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToBusinessRuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToProjectPlanIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToProjectPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToCommissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToCommissionSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToCommissionProspectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToCommissionInterestedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleProjectPlanToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBusinessRuleTypeResolver<TParent = any> {\n  projectId?: BusinessRuleToProjectIdResolver<TParent>;\n  businessId?: BusinessRuleToBusinessIdResolver<TParent>;\n  business?: BusinessRuleToBusinessResolver<TParent>;\n  title?: BusinessRuleToTitleResolver<TParent>;\n  commissionNominator?: BusinessRuleToCommissionNominatorResolver<TParent>;\n  potentialProspectLimit?: BusinessRuleToPotentialProspectLimitResolver<TParent>;\n  allowExtraBonus?: BusinessRuleToAllowExtraBonusResolver<TParent>;\n  minimumBalance?: BusinessRuleToMinimumBalanceResolver<TParent>;\n  idealBalance?: BusinessRuleToIdealBalanceResolver<TParent>;\n  id?: BusinessRuleToIdResolver<TParent>;\n  createdAt?: BusinessRuleToCreatedAtResolver<TParent>;\n  updatedAt?: BusinessRuleToUpdatedAtResolver<TParent>;\n}\n\nexport interface BusinessRuleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToBusinessIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToBusinessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToCommissionNominatorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToPotentialProspectLimitResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToAllowExtraBonusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToMinimumBalanceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToIdealBalanceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectPlanTypeResolver<TParent = any> {\n  projectId?: ProjectPlanToProjectIdResolver<TParent>;\n  title?: ProjectPlanToTitleResolver<TParent>;\n  description?: ProjectPlanToDescriptionResolver<TParent>;\n  cost?: ProjectPlanToCostResolver<TParent>;\n  serviceProductId?: ProjectPlanToServiceProductIdResolver<TParent>;\n  currency?: ProjectPlanToCurrencyResolver<TParent>;\n  changeNominators?: ProjectPlanToChangeNominatorsResolver<TParent>;\n  default?: ProjectPlanToDefaultResolver<TParent>;\n  rateBase?: ProjectPlanToRateBaseResolver<TParent>;\n  frequencyPayment?: ProjectPlanToFrequencyPaymentResolver<TParent>;\n  availableNominators?: ProjectPlanToAvailableNominatorsResolver<TParent>;\n  accessExternalNominators?: ProjectPlanToAccessExternalNominatorsResolver<TParent>;\n  accessExternalProspects?: ProjectPlanToAccessExternalProspectsResolver<TParent>;\n  vendorRakingDisplay?: ProjectPlanToVendorRakingDisplayResolver<TParent>;\n  accessConnectionProspectsWhatsapp?: ProjectPlanToAccessConnectionProspectsWhatsappResolver<TParent>;\n  serviceSupport?: ProjectPlanToServiceSupportResolver<TParent>;\n  fee?: ProjectPlanToFeeResolver<TParent>;\n  projectPlanSubscriptions?: ProjectPlanToProjectPlanSubscriptionsResolver<TParent>;\n  businessRuleProjectPlans?: ProjectPlanToBusinessRuleProjectPlansResolver<TParent>;\n  id?: ProjectPlanToIdResolver<TParent>;\n  createdAt?: ProjectPlanToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectPlanToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProjectPlanToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToCostResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToServiceProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToCurrencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToChangeNominatorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToRateBaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToFrequencyPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToAvailableNominatorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToAccessExternalNominatorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToAccessExternalProspectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToVendorRakingDisplayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToAccessConnectionProspectsWhatsappResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToServiceSupportResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToProjectPlanSubscriptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToBusinessRuleProjectPlansResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectPlanSubscriptionTypeResolver<TParent = any> {\n  projectPlanId?: ProjectPlanSubscriptionToProjectPlanIdResolver<TParent>;\n  projectPlan?: ProjectPlanSubscriptionToProjectPlanResolver<TParent>;\n  projectId?: ProjectPlanSubscriptionToProjectIdResolver<TParent>;\n  memberId?: ProjectPlanSubscriptionToMemberIdResolver<TParent>;\n  active?: ProjectPlanSubscriptionToActiveResolver<TParent>;\n  id?: ProjectPlanSubscriptionToIdResolver<TParent>;\n  createdAt?: ProjectPlanSubscriptionToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectPlanSubscriptionToUpdatedAtResolver<TParent>;\n  member?: ProjectPlanSubscriptionToMemberResolver<TParent>;\n}\n\nexport interface ProjectPlanSubscriptionToProjectPlanIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionToProjectPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAccountKeyTypeResolver<TParent = any> {\n  detailsSubmitted?: AccountKeyToDetailsSubmittedResolver<TParent>;\n  paymentMethods?: AccountKeyToPaymentMethodsResolver<TParent>;\n  projectId?: AccountKeyToProjectIdResolver<TParent>;\n  memberId?: AccountKeyToMemberIdResolver<TParent>;\n  accountServiceId?: AccountKeyToAccountServiceIdResolver<TParent>;\n  customerServiceId?: AccountKeyToCustomerServiceIdResolver<TParent>;\n  servicePayment?: AccountKeyToServicePaymentResolver<TParent>;\n  id?: AccountKeyToIdResolver<TParent>;\n  createdAt?: AccountKeyToCreatedAtResolver<TParent>;\n  updatedAt?: AccountKeyToUpdatedAtResolver<TParent>;\n}\n\nexport interface AccountKeyToDetailsSubmittedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyToPaymentMethodsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyToAccountServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyToCustomerServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyToServicePaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPaymentMethodTypeResolver<TParent = any> {\n  memberId?: PaymentMethodToMemberIdResolver<TParent>;\n  projectId?: PaymentMethodToProjectIdResolver<TParent>;\n  paymentToken?: PaymentMethodToPaymentTokenResolver<TParent>;\n  default?: PaymentMethodToDefaultResolver<TParent>;\n  lastNumbers?: PaymentMethodToLastNumbersResolver<TParent>;\n  accountKeyId?: PaymentMethodToAccountKeyIdResolver<TParent>;\n  accountKey?: PaymentMethodToAccountKeyResolver<TParent>;\n  id?: PaymentMethodToIdResolver<TParent>;\n  createdAt?: PaymentMethodToCreatedAtResolver<TParent>;\n  updatedAt?: PaymentMethodToUpdatedAtResolver<TParent>;\n}\n\nexport interface PaymentMethodToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PaymentMethodToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PaymentMethodToPaymentTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PaymentMethodToDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PaymentMethodToLastNumbersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PaymentMethodToAccountKeyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PaymentMethodToAccountKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PaymentMethodToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PaymentMethodToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PaymentMethodToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEventDetailTypeResolver<TParent = any> {\n  projectId?: EventDetailToProjectIdResolver<TParent>;\n  memberId?: EventDetailToMemberIdResolver<TParent>;\n  eventId?: EventDetailToEventIdResolver<TParent>;\n  subTotal?: EventDetailToSubTotalResolver<TParent>;\n  descuento?: EventDetailToDescuentoResolver<TParent>;\n  tax?: EventDetailToTaxResolver<TParent>;\n  total?: EventDetailToTotalResolver<TParent>;\n  id?: EventDetailToIdResolver<TParent>;\n  createdAt?: EventDetailToCreatedAtResolver<TParent>;\n  updatedAt?: EventDetailToUpdatedAtResolver<TParent>;\n}\n\nexport interface EventDetailToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailToDescuentoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailToTaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFisicExamTypeResolver<TParent = any> {\n  projectId?: FisicExamToProjectIdResolver<TParent>;\n  memberId?: FisicExamToMemberIdResolver<TParent>;\n  eventId?: FisicExamToEventIdResolver<TParent>;\n  title?: FisicExamToTitleResolver<TParent>;\n  content?: FisicExamToContentResolver<TParent>;\n  isVisible?: FisicExamToIsVisibleResolver<TParent>;\n  position?: FisicExamToPositionResolver<TParent>;\n  id?: FisicExamToIdResolver<TParent>;\n  createdAt?: FisicExamToCreatedAtResolver<TParent>;\n  updatedAt?: FisicExamToUpdatedAtResolver<TParent>;\n  member?: FisicExamToMemberResolver<TParent>;\n}\n\nexport interface FisicExamToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToIsVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FisicExamToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMedicalBackgroundTypeResolver<TParent = any> {\n  format?: MedicalBackgroundToFormatResolver<TParent>;\n  projectId?: MedicalBackgroundToProjectIdResolver<TParent>;\n  formatId?: MedicalBackgroundToFormatIdResolver<TParent>;\n  label?: MedicalBackgroundToLabelResolver<TParent>;\n  isVisible?: MedicalBackgroundToIsVisibleResolver<TParent>;\n  position?: MedicalBackgroundToPositionResolver<TParent>;\n  pacientMedicalBackground?: MedicalBackgroundToPacientMedicalBackgroundResolver<TParent>;\n  medicalBackgroundDetails?: MedicalBackgroundToMedicalBackgroundDetailsResolver<TParent>;\n  id?: MedicalBackgroundToIdResolver<TParent>;\n  createdAt?: MedicalBackgroundToCreatedAtResolver<TParent>;\n  updatedAt?: MedicalBackgroundToUpdatedAtResolver<TParent>;\n  member?: MedicalBackgroundToMemberResolver<TParent>;\n}\n\nexport interface MedicalBackgroundToFormatResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToFormatIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToIsVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToPacientMedicalBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToMedicalBackgroundDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormatTypeResolver<TParent = any> {\n  projectId?: FormatToProjectIdResolver<TParent>;\n  memberId?: FormatToMemberIdResolver<TParent>;\n  eventTypeId?: FormatToEventTypeIdResolver<TParent>;\n  nameFormat?: FormatToNameFormatResolver<TParent>;\n  id?: FormatToIdResolver<TParent>;\n  createdAt?: FormatToCreatedAtResolver<TParent>;\n  updatedAt?: FormatToUpdatedAtResolver<TParent>;\n}\n\nexport interface FormatToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormatToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormatToEventTypeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormatToNameFormatResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormatToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormatToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormatToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPacientMedicalBackgroundTypeResolver<TParent = any> {\n  medicalBackgroundDetail?: PacientMedicalBackgroundToMedicalBackgroundDetailResolver<TParent>;\n  medicalBackgroundDetailId?: PacientMedicalBackgroundToMedicalBackgroundDetailIdResolver<TParent>;\n  projectId?: PacientMedicalBackgroundToProjectIdResolver<TParent>;\n  memberId?: PacientMedicalBackgroundToMemberIdResolver<TParent>;\n  eventId?: PacientMedicalBackgroundToEventIdResolver<TParent>;\n  text?: PacientMedicalBackgroundToTextResolver<TParent>;\n  isResponse?: PacientMedicalBackgroundToIsResponseResolver<TParent>;\n  id?: PacientMedicalBackgroundToIdResolver<TParent>;\n  createdAt?: PacientMedicalBackgroundToCreatedAtResolver<TParent>;\n  updatedAt?: PacientMedicalBackgroundToUpdatedAtResolver<TParent>;\n}\n\nexport interface PacientMedicalBackgroundToMedicalBackgroundDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientMedicalBackgroundToMedicalBackgroundDetailIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientMedicalBackgroundToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientMedicalBackgroundToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientMedicalBackgroundToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientMedicalBackgroundToTextResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientMedicalBackgroundToIsResponseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientMedicalBackgroundToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientMedicalBackgroundToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientMedicalBackgroundToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMedicalBackgroundDetailTypeResolver<TParent = any> {\n  medicalBackground?: MedicalBackgroundDetailToMedicalBackgroundResolver<TParent>;\n  clinicHistoryMedicalBackgroundDetails?: MedicalBackgroundDetailToClinicHistoryMedicalBackgroundDetailsResolver<TParent>;\n  projectId?: MedicalBackgroundDetailToProjectIdResolver<TParent>;\n  medicalBackgroundId?: MedicalBackgroundDetailToMedicalBackgroundIdResolver<TParent>;\n  label?: MedicalBackgroundDetailToLabelResolver<TParent>;\n  backgroundTypeOption?: MedicalBackgroundDetailToBackgroundTypeOptionResolver<TParent>;\n  isOption?: MedicalBackgroundDetailToIsOptionResolver<TParent>;\n  isVisible?: MedicalBackgroundDetailToIsVisibleResolver<TParent>;\n  position?: MedicalBackgroundDetailToPositionResolver<TParent>;\n  pacientMedicalBackgrounds?: MedicalBackgroundDetailToPacientMedicalBackgroundsResolver<TParent>;\n  id?: MedicalBackgroundDetailToIdResolver<TParent>;\n  createdAt?: MedicalBackgroundDetailToCreatedAtResolver<TParent>;\n  updatedAt?: MedicalBackgroundDetailToUpdatedAtResolver<TParent>;\n}\n\nexport interface MedicalBackgroundDetailToMedicalBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToClinicHistoryMedicalBackgroundDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToMedicalBackgroundIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToBackgroundTypeOptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToIsOptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToIsVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToPacientMedicalBackgroundsArgs {\n  filter?: IPacientMedicalBackgroundFilterInput;\n}\nexport interface MedicalBackgroundDetailToPacientMedicalBackgroundsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MedicalBackgroundDetailToPacientMedicalBackgroundsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalBackgroundDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IClinicHistoryMedicalBackgroundDetailTypeResolver<TParent = any> {\n  medicalBackgroundDetail?: ClinicHistoryMedicalBackgroundDetailToMedicalBackgroundDetailResolver<TParent>;\n  medicalBackgroundDetailId?: ClinicHistoryMedicalBackgroundDetailToMedicalBackgroundDetailIdResolver<TParent>;\n  backgroundType?: ClinicHistoryMedicalBackgroundDetailToBackgroundTypeResolver<TParent>;\n  id?: ClinicHistoryMedicalBackgroundDetailToIdResolver<TParent>;\n  createdAt?: ClinicHistoryMedicalBackgroundDetailToCreatedAtResolver<TParent>;\n  updatedAt?: ClinicHistoryMedicalBackgroundDetailToUpdatedAtResolver<TParent>;\n}\n\nexport interface ClinicHistoryMedicalBackgroundDetailToMedicalBackgroundDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryMedicalBackgroundDetailToMedicalBackgroundDetailIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryMedicalBackgroundDetailToBackgroundTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryMedicalBackgroundDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryMedicalBackgroundDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryMedicalBackgroundDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMedicRecipeTypeResolver<TParent = any> {\n  projectId?: MedicRecipeToProjectIdResolver<TParent>;\n  memberId?: MedicRecipeToMemberIdResolver<TParent>;\n  profesionalCell?: MedicRecipeToProfesionalCellResolver<TParent>;\n  speciality?: MedicRecipeToSpecialityResolver<TParent>;\n  institute?: MedicRecipeToInstituteResolver<TParent>;\n  electronicSing?: MedicRecipeToElectronicSingResolver<TParent>;\n  isCorrect?: MedicRecipeToIsCorrectResolver<TParent>;\n  id?: MedicRecipeToIdResolver<TParent>;\n  createdAt?: MedicRecipeToCreatedAtResolver<TParent>;\n  updatedAt?: MedicRecipeToUpdatedAtResolver<TParent>;\n  member?: MedicRecipeToMemberResolver<TParent>;\n}\n\nexport interface MedicRecipeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToProfesionalCellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToSpecialityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToInstituteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToElectronicSingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToIsCorrectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicRecipeToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPacientNoteTypeResolver<TParent = any> {\n  memberId?: PacientNoteToMemberIdResolver<TParent>;\n  projectId?: PacientNoteToProjectIdResolver<TParent>;\n  eventId?: PacientNoteToEventIdResolver<TParent>;\n  note?: PacientNoteToNoteResolver<TParent>;\n  id?: PacientNoteToIdResolver<TParent>;\n  createdAt?: PacientNoteToCreatedAtResolver<TParent>;\n  updatedAt?: PacientNoteToUpdatedAtResolver<TParent>;\n  member?: PacientNoteToMemberResolver<TParent>;\n}\n\nexport interface PacientNoteToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientNoteToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientNoteToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientNoteToNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientNoteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientNoteToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientNoteToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PacientNoteToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVitalSignTypeResolver<TParent = any> {\n  projectId?: VitalSignToProjectIdResolver<TParent>;\n  labelNameVt?: VitalSignToLabelNameVtResolver<TParent>;\n  isVisible?: VitalSignToIsVisibleResolver<TParent>;\n  position?: VitalSignToPositionResolver<TParent>;\n  patientVitalSignsResponse?: VitalSignToPatientVitalSignsResponseResolver<TParent>;\n  id?: VitalSignToIdResolver<TParent>;\n  createdAt?: VitalSignToCreatedAtResolver<TParent>;\n  updatedAt?: VitalSignToUpdatedAtResolver<TParent>;\n  member?: VitalSignToMemberResolver<TParent>;\n}\n\nexport interface VitalSignToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VitalSignToLabelNameVtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VitalSignToIsVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VitalSignToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VitalSignToPatientVitalSignsResponseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VitalSignToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VitalSignToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VitalSignToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VitalSignToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPatientVitalSignsResponseTypeResolver<TParent = any> {\n  vitalSignId?: PatientVitalSignsResponseToVitalSignIdResolver<TParent>;\n  vitalSign?: PatientVitalSignsResponseToVitalSignResolver<TParent>;\n  eventId?: PatientVitalSignsResponseToEventIdResolver<TParent>;\n  memberId?: PatientVitalSignsResponseToMemberIdResolver<TParent>;\n  value?: PatientVitalSignsResponseToValueResolver<TParent>;\n  id?: PatientVitalSignsResponseToIdResolver<TParent>;\n  createdAt?: PatientVitalSignsResponseToCreatedAtResolver<TParent>;\n  updatedAt?: PatientVitalSignsResponseToUpdatedAtResolver<TParent>;\n}\n\nexport interface PatientVitalSignsResponseToVitalSignIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PatientVitalSignsResponseToVitalSignResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PatientVitalSignsResponseToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PatientVitalSignsResponseToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PatientVitalSignsResponseToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PatientVitalSignsResponseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PatientVitalSignsResponseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PatientVitalSignsResponseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVaccineTypeResolver<TParent = any> {\n  projectId?: VaccineToProjectIdResolver<TParent>;\n  memberId?: VaccineToMemberIdResolver<TParent>;\n  nameVac?: VaccineToNameVacResolver<TParent>;\n  dateAplicationVac?: VaccineToDateAplicationVacResolver<TParent>;\n  nextVac?: VaccineToNextVacResolver<TParent>;\n  notesVac?: VaccineToNotesVacResolver<TParent>;\n  position?: VaccineToPositionResolver<TParent>;\n  id?: VaccineToIdResolver<TParent>;\n  createdAt?: VaccineToCreatedAtResolver<TParent>;\n  updatedAt?: VaccineToUpdatedAtResolver<TParent>;\n  member?: VaccineToMemberResolver<TParent>;\n}\n\nexport interface VaccineToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToNameVacResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToDateAplicationVacResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToNextVacResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToNotesVacResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VaccineToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberBoardTypeResolver<TParent = any> {\n  board?: MemberBoardToBoardResolver<TParent>;\n  memberId?: MemberBoardToMemberIdResolver<TParent>;\n  boardId?: MemberBoardToBoardIdResolver<TParent>;\n  outstading?: MemberBoardToOutstadingResolver<TParent>;\n  order?: MemberBoardToOrderResolver<TParent>;\n  active?: MemberBoardToActiveResolver<TParent>;\n  id?: MemberBoardToIdResolver<TParent>;\n  createdAt?: MemberBoardToCreatedAtResolver<TParent>;\n  updatedAt?: MemberBoardToUpdatedAtResolver<TParent>;\n  member?: MemberBoardToMemberResolver<TParent>;\n}\n\nexport interface MemberBoardToBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardToBoardIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardToOutstadingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardTypeResolver<TParent = any> {\n  boardLists?: BoardToBoardListsResolver<TParent>;\n  space?: BoardToSpaceResolver<TParent>;\n  memberBoards?: BoardToMemberBoardsResolver<TParent>;\n  boardStatus?: BoardToBoardStatusResolver<TParent>;\n  name?: BoardToNameResolver<TParent>;\n  description?: BoardToDescriptionResolver<TParent>;\n  memberId?: BoardToMemberIdResolver<TParent>;\n  order?: BoardToOrderResolver<TParent>;\n  color?: BoardToColorResolver<TParent>;\n  active?: BoardToActiveResolver<TParent>;\n  serviceId?: BoardToServiceIdResolver<TParent>;\n  spaceId?: BoardToSpaceIdResolver<TParent>;\n  id?: BoardToIdResolver<TParent>;\n  createdAt?: BoardToCreatedAtResolver<TParent>;\n  updatedAt?: BoardToUpdatedAtResolver<TParent>;\n  service?: BoardToServiceResolver<TParent>;\n}\n\nexport interface BoardToBoardListsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToMemberBoardsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToBoardStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToSpaceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardListTypeResolver<TParent = any> {\n  boards?: BoardListToBoardsResolver<TParent>;\n  cards?: BoardListToCardsResolver<TParent>;\n  boardGroupColumn?: BoardListToBoardGroupColumnResolver<TParent>;\n  boardRows?: BoardListToBoardRowsResolver<TParent>;\n  name?: BoardListToNameResolver<TParent>;\n  description?: BoardListToDescriptionResolver<TParent>;\n  order?: BoardListToOrderResolver<TParent>;\n  color?: BoardListToColorResolver<TParent>;\n  active?: BoardListToActiveResolver<TParent>;\n  boardId?: BoardListToBoardIdResolver<TParent>;\n  id?: BoardListToIdResolver<TParent>;\n  createdAt?: BoardListToCreatedAtResolver<TParent>;\n  updatedAt?: BoardListToUpdatedAtResolver<TParent>;\n}\n\nexport interface BoardListToBoardsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToCardsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToBoardGroupColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToBoardRowsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToBoardIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardTypeResolver<TParent = any> {\n  boardList?: CardToBoardListResolver<TParent>;\n  cardReplies?: CardToCardRepliesResolver<TParent>;\n  nestedFiles?: CardToNestedFilesResolver<TParent>;\n  memberCards?: CardToMemberCardsResolver<TParent>;\n  cardColumnValues?: CardToCardColumnValuesResolver<TParent>;\n  cardChecklists?: CardToCardChecklistsResolver<TParent>;\n  boardStatus?: CardToBoardStatusResolver<TParent>;\n  name?: CardToNameResolver<TParent>;\n  description?: CardToDescriptionResolver<TParent>;\n  active?: CardToActiveResolver<TParent>;\n  progress?: CardToProgressResolver<TParent>;\n  priority?: CardToPriorityResolver<TParent>;\n  startDate?: CardToStartDateResolver<TParent>;\n  endDate?: CardToEndDateResolver<TParent>;\n  projectId?: CardToProjectIdResolver<TParent>;\n  boardStatusId?: CardToBoardStatusIdResolver<TParent>;\n  boardListId?: CardToBoardListIdResolver<TParent>;\n  id?: CardToIdResolver<TParent>;\n  createdAt?: CardToCreatedAtResolver<TParent>;\n  updatedAt?: CardToUpdatedAtResolver<TParent>;\n}\n\nexport interface CardToBoardListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToCardRepliesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToNestedFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToMemberCardsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToCardColumnValuesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToCardChecklistsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToBoardStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToProgressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToStartDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToEndDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToBoardStatusIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToBoardListIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardReplyTypeResolver<TParent = any> {\n  card?: CardReplyToCardResolver<TParent>;\n  cardId?: CardReplyToCardIdResolver<TParent>;\n  memberId?: CardReplyToMemberIdResolver<TParent>;\n  description?: CardReplyToDescriptionResolver<TParent>;\n  active?: CardReplyToActiveResolver<TParent>;\n  id?: CardReplyToIdResolver<TParent>;\n  createdAt?: CardReplyToCreatedAtResolver<TParent>;\n  updatedAt?: CardReplyToUpdatedAtResolver<TParent>;\n  member?: CardReplyToMemberResolver<TParent>;\n}\n\nexport interface CardReplyToCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyToCardIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INestedFileTypeResolver<TParent = any> {\n  card?: NestedFileToCardResolver<TParent>;\n  name?: NestedFileToNameResolver<TParent>;\n  show?: NestedFileToShowResolver<TParent>;\n  url?: NestedFileToUrlResolver<TParent>;\n  cardId?: NestedFileToCardIdResolver<TParent>;\n  id?: NestedFileToIdResolver<TParent>;\n  createdAt?: NestedFileToCreatedAtResolver<TParent>;\n  updatedAt?: NestedFileToUpdatedAtResolver<TParent>;\n}\n\nexport interface NestedFileToCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NestedFileToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NestedFileToShowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NestedFileToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NestedFileToCardIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NestedFileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NestedFileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NestedFileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberCardTypeResolver<TParent = any> {\n  card?: MemberCardToCardResolver<TParent>;\n  cardId?: MemberCardToCardIdResolver<TParent>;\n  memberId?: MemberCardToMemberIdResolver<TParent>;\n  active?: MemberCardToActiveResolver<TParent>;\n  id?: MemberCardToIdResolver<TParent>;\n  createdAt?: MemberCardToCreatedAtResolver<TParent>;\n  updatedAt?: MemberCardToUpdatedAtResolver<TParent>;\n  member?: MemberCardToMemberResolver<TParent>;\n}\n\nexport interface MemberCardToCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCardToCardIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCardToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCardToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCardToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCardToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCardToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCardToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardColumnValueTypeResolver<TParent = any> {\n  card?: CardColumnValueToCardResolver<TParent>;\n  boardColumnValue?: CardColumnValueToBoardColumnValueResolver<TParent>;\n  cardId?: CardColumnValueToCardIdResolver<TParent>;\n  boardColumnValueId?: CardColumnValueToBoardColumnValueIdResolver<TParent>;\n  id?: CardColumnValueToIdResolver<TParent>;\n  createdAt?: CardColumnValueToCreatedAtResolver<TParent>;\n  updatedAt?: CardColumnValueToUpdatedAtResolver<TParent>;\n}\n\nexport interface CardColumnValueToCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardColumnValueToBoardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardColumnValueToCardIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardColumnValueToBoardColumnValueIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardColumnValueToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardColumnValueToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardColumnValueToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardColumnValueTypeResolver<TParent = any> {\n  boardGroupColumn?: BoardColumnValueToBoardGroupColumnResolver<TParent>;\n  boardRow?: BoardColumnValueToBoardRowResolver<TParent>;\n  boardMemberReferece?: BoardColumnValueToBoardMemberRefereceResolver<TParent>;\n  cardColumnValues?: BoardColumnValueToCardColumnValuesResolver<TParent>;\n  value?: BoardColumnValueToValueResolver<TParent>;\n  boardGroupColumnId?: BoardColumnValueToBoardGroupColumnIdResolver<TParent>;\n  boardRowId?: BoardColumnValueToBoardRowIdResolver<TParent>;\n  id?: BoardColumnValueToIdResolver<TParent>;\n  createdAt?: BoardColumnValueToCreatedAtResolver<TParent>;\n  updatedAt?: BoardColumnValueToUpdatedAtResolver<TParent>;\n}\n\nexport interface BoardColumnValueToBoardGroupColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnValueToBoardRowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnValueToBoardMemberRefereceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnValueToCardColumnValuesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnValueToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnValueToBoardGroupColumnIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnValueToBoardRowIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnValueToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnValueToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnValueToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardGroupColumnTypeResolver<TParent = any> {\n  boardList?: BoardGroupColumnToBoardListResolver<TParent>;\n  boardColumnValues?: BoardGroupColumnToBoardColumnValuesResolver<TParent>;\n  boardColumnType?: BoardGroupColumnToBoardColumnTypeResolver<TParent>;\n  name?: BoardGroupColumnToNameResolver<TParent>;\n  order?: BoardGroupColumnToOrderResolver<TParent>;\n  boardListId?: BoardGroupColumnToBoardListIdResolver<TParent>;\n  boardColumnTypeId?: BoardGroupColumnToBoardColumnTypeIdResolver<TParent>;\n  id?: BoardGroupColumnToIdResolver<TParent>;\n  createdAt?: BoardGroupColumnToCreatedAtResolver<TParent>;\n  updatedAt?: BoardGroupColumnToUpdatedAtResolver<TParent>;\n}\n\nexport interface BoardGroupColumnToBoardListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardGroupColumnToBoardColumnValuesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardGroupColumnToBoardColumnTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardGroupColumnToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardGroupColumnToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardGroupColumnToBoardListIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardGroupColumnToBoardColumnTypeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardGroupColumnToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardGroupColumnToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardGroupColumnToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardColumnTypeTypeResolver<TParent = any> {\n  boardGroupColumns?: BoardColumnTypeToBoardGroupColumnsResolver<TParent>;\n  name?: BoardColumnTypeToNameResolver<TParent>;\n  description?: BoardColumnTypeToDescriptionResolver<TParent>;\n  dataType?: BoardColumnTypeToDataTypeResolver<TParent>;\n  insideType?: BoardColumnTypeToInsideTypeResolver<TParent>;\n  active?: BoardColumnTypeToActiveResolver<TParent>;\n  projectId?: BoardColumnTypeToProjectIdResolver<TParent>;\n  id?: BoardColumnTypeToIdResolver<TParent>;\n  createdAt?: BoardColumnTypeToCreatedAtResolver<TParent>;\n  updatedAt?: BoardColumnTypeToUpdatedAtResolver<TParent>;\n}\n\nexport interface BoardColumnTypeToBoardGroupColumnsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeToDataTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeToInsideTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardRowTypeResolver<TParent = any> {\n  boardList?: BoardRowToBoardListResolver<TParent>;\n  boardColumnValues?: BoardRowToBoardColumnValuesResolver<TParent>;\n  title?: BoardRowToTitleResolver<TParent>;\n  description?: BoardRowToDescriptionResolver<TParent>;\n  order?: BoardRowToOrderResolver<TParent>;\n  active?: BoardRowToActiveResolver<TParent>;\n  boardListId?: BoardRowToBoardListIdResolver<TParent>;\n  id?: BoardRowToIdResolver<TParent>;\n  createdAt?: BoardRowToCreatedAtResolver<TParent>;\n  updatedAt?: BoardRowToUpdatedAtResolver<TParent>;\n}\n\nexport interface BoardRowToBoardListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardRowToBoardColumnValuesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardRowToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardRowToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardRowToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardRowToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardRowToBoardListIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardRowToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardRowToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardRowToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardMemberReferenceTypeResolver<TParent = any> {\n  boardColumnValue?: BoardMemberReferenceToBoardColumnValueResolver<TParent>;\n  memberId?: BoardMemberReferenceToMemberIdResolver<TParent>;\n  description?: BoardMemberReferenceToDescriptionResolver<TParent>;\n  active?: BoardMemberReferenceToActiveResolver<TParent>;\n  boardColumnValueId?: BoardMemberReferenceToBoardColumnValueIdResolver<TParent>;\n  id?: BoardMemberReferenceToIdResolver<TParent>;\n  createdAt?: BoardMemberReferenceToCreatedAtResolver<TParent>;\n  updatedAt?: BoardMemberReferenceToUpdatedAtResolver<TParent>;\n  member?: BoardMemberReferenceToMemberResolver<TParent>;\n}\n\nexport interface BoardMemberReferenceToBoardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceToBoardColumnValueIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardChecklistTypeResolver<TParent = any> {\n  card?: CardChecklistToCardResolver<TParent>;\n  cardCheckComponents?: CardChecklistToCardCheckComponentsResolver<TParent>;\n  name?: CardChecklistToNameResolver<TParent>;\n  cardId?: CardChecklistToCardIdResolver<TParent>;\n  id?: CardChecklistToIdResolver<TParent>;\n  createdAt?: CardChecklistToCreatedAtResolver<TParent>;\n  updatedAt?: CardChecklistToUpdatedAtResolver<TParent>;\n}\n\nexport interface CardChecklistToCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardChecklistToCardCheckComponentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardChecklistToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardChecklistToCardIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardChecklistToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardChecklistToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardChecklistToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardCheckComponentTypeResolver<TParent = any> {\n  cardChecklist?: CardCheckComponentToCardChecklistResolver<TParent>;\n  description?: CardCheckComponentToDescriptionResolver<TParent>;\n  selected?: CardCheckComponentToSelectedResolver<TParent>;\n  order?: CardCheckComponentToOrderResolver<TParent>;\n  cardChecklistId?: CardCheckComponentToCardChecklistIdResolver<TParent>;\n  id?: CardCheckComponentToIdResolver<TParent>;\n  createdAt?: CardCheckComponentToCreatedAtResolver<TParent>;\n  updatedAt?: CardCheckComponentToUpdatedAtResolver<TParent>;\n}\n\nexport interface CardCheckComponentToCardChecklistResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardCheckComponentToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardCheckComponentToSelectedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardCheckComponentToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardCheckComponentToCardChecklistIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardCheckComponentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardCheckComponentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardCheckComponentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardStatusTypeResolver<TParent = any> {\n  board?: BoardStatusToBoardResolver<TParent>;\n  name?: BoardStatusToNameResolver<TParent>;\n  description?: BoardStatusToDescriptionResolver<TParent>;\n  color?: BoardStatusToColorResolver<TParent>;\n  code?: BoardStatusToCodeResolver<TParent>;\n  active?: BoardStatusToActiveResolver<TParent>;\n  projectId?: BoardStatusToProjectIdResolver<TParent>;\n  boardId?: BoardStatusToBoardIdResolver<TParent>;\n  cards?: BoardStatusToCardsResolver<TParent>;\n  id?: BoardStatusToIdResolver<TParent>;\n  createdAt?: BoardStatusToCreatedAtResolver<TParent>;\n  updatedAt?: BoardStatusToUpdatedAtResolver<TParent>;\n}\n\nexport interface BoardStatusToBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToBoardIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToCardsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISpaceTypeResolver<TParent = any> {\n  boards?: SpaceToBoardsResolver<TParent>;\n  memberSpaces?: SpaceToMemberSpacesResolver<TParent>;\n  name?: SpaceToNameResolver<TParent>;\n  description?: SpaceToDescriptionResolver<TParent>;\n  image?: SpaceToImageResolver<TParent>;\n  projectId?: SpaceToProjectIdResolver<TParent>;\n  areaId?: SpaceToAreaIdResolver<TParent>;\n  visibility?: SpaceToVisibilityResolver<TParent>;\n  active?: SpaceToActiveResolver<TParent>;\n  id?: SpaceToIdResolver<TParent>;\n  createdAt?: SpaceToCreatedAtResolver<TParent>;\n  updatedAt?: SpaceToUpdatedAtResolver<TParent>;\n  area?: SpaceToAreaResolver<TParent>;\n}\n\nexport interface SpaceToBoardsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToMemberSpacesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToAreaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToVisibilityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceToAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberSpaceTypeResolver<TParent = any> {\n  space?: MemberSpaceToSpaceResolver<TParent>;\n  memberId?: MemberSpaceToMemberIdResolver<TParent>;\n  spaceId?: MemberSpaceToSpaceIdResolver<TParent>;\n  order?: MemberSpaceToOrderResolver<TParent>;\n  outstading?: MemberSpaceToOutstadingResolver<TParent>;\n  access?: MemberSpaceToAccessResolver<TParent>;\n  active?: MemberSpaceToActiveResolver<TParent>;\n  id?: MemberSpaceToIdResolver<TParent>;\n  createdAt?: MemberSpaceToCreatedAtResolver<TParent>;\n  updatedAt?: MemberSpaceToUpdatedAtResolver<TParent>;\n  member?: MemberSpaceToMemberResolver<TParent>;\n}\n\nexport interface MemberSpaceToSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToSpaceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToOrderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToOutstadingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToAccessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFileTypeResolver<TParent = any> {\n  folderId?: FileToFolderIdResolver<TParent>;\n  folder?: FileToFolderResolver<TParent>;\n  memberId?: FileToMemberIdResolver<TParent>;\n  isProfile?: FileToIsProfileResolver<TParent>;\n  token?: FileToTokenResolver<TParent>;\n  name?: FileToNameResolver<TParent>;\n  url?: FileToUrlResolver<TParent>;\n  description?: FileToDescriptionResolver<TParent>;\n  isActive?: FileToIsActiveResolver<TParent>;\n  isOutstanding?: FileToIsOutstandingResolver<TParent>;\n  partialUrl?: FileToPartialUrlResolver<TParent>;\n  sharedFiles?: FileToSharedFilesResolver<TParent>;\n  id?: FileToIdResolver<TParent>;\n  createdAt?: FileToCreatedAtResolver<TParent>;\n  updatedAt?: FileToUpdatedAtResolver<TParent>;\n  member?: FileToMemberResolver<TParent>;\n}\n\nexport interface FileToFolderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToFolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToIsProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToIsOutstandingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToPartialUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToSharedFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFolderTypeResolver<TParent = any> {\n  isActive?: FolderToIsActiveResolver<TParent>;\n  projectId?: FolderToProjectIdResolver<TParent>;\n  memberId?: FolderToMemberIdResolver<TParent>;\n  label?: FolderToLabelResolver<TParent>;\n  background?: FolderToBackgroundResolver<TParent>;\n  parentId?: FolderToParentIdResolver<TParent>;\n  path?: FolderToPathResolver<TParent>;\n  folderType?: FolderToFolderTypeResolver<TParent>;\n  isPersonal?: FolderToIsPersonalResolver<TParent>;\n  isOutstanding?: FolderToIsOutstandingResolver<TParent>;\n  parent?: FolderToParentResolver<TParent>;\n  subFolders?: FolderToSubFoldersResolver<TParent>;\n  files?: FolderToFilesResolver<TParent>;\n  id?: FolderToIdResolver<TParent>;\n  createdAt?: FolderToCreatedAtResolver<TParent>;\n  updatedAt?: FolderToUpdatedAtResolver<TParent>;\n  member?: FolderToMemberResolver<TParent>;\n}\n\nexport interface FolderToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToParentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToPathResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToFolderTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToIsPersonalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToIsOutstandingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToParentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToSubFoldersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISharedFileTypeResolver<TParent = any> {\n  fileId?: SharedFileToFileIdResolver<TParent>;\n  file?: SharedFileToFileResolver<TParent>;\n  memberId?: SharedFileToMemberIdResolver<TParent>;\n  id?: SharedFileToIdResolver<TParent>;\n  createdAt?: SharedFileToCreatedAtResolver<TParent>;\n  updatedAt?: SharedFileToUpdatedAtResolver<TParent>;\n  member?: SharedFileToMemberResolver<TParent>;\n}\n\nexport interface SharedFileToFileIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFileToFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFileToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFileToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISharedFolderTypeResolver<TParent = any> {\n  folderId?: SharedFolderToFolderIdResolver<TParent>;\n  folder?: SharedFolderToFolderResolver<TParent>;\n  memberId?: SharedFolderToMemberIdResolver<TParent>;\n  id?: SharedFolderToIdResolver<TParent>;\n  createdAt?: SharedFolderToCreatedAtResolver<TParent>;\n  updatedAt?: SharedFolderToUpdatedAtResolver<TParent>;\n  member?: SharedFolderToMemberResolver<TParent>;\n}\n\nexport interface SharedFolderToFolderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFolderToFolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFolderToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFolderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFolderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFolderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFolderToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeviceTypeResolver<TParent = any> {\n  deviceNotifications?: DeviceToDeviceNotificationsResolver<TParent>;\n  memberId?: DeviceToMemberIdResolver<TParent>;\n  projectId?: DeviceToProjectIdResolver<TParent>;\n  token?: DeviceToTokenResolver<TParent>;\n  unique?: DeviceToUniqueResolver<TParent>;\n  avalible?: DeviceToAvalibleResolver<TParent>;\n  id?: DeviceToIdResolver<TParent>;\n  createdAt?: DeviceToCreatedAtResolver<TParent>;\n  updatedAt?: DeviceToUpdatedAtResolver<TParent>;\n  member?: DeviceToMemberResolver<TParent>;\n}\n\nexport interface DeviceToDeviceNotificationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceToUniqueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceToAvalibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeviceNotificationTypeResolver<TParent = any> {\n  device?: DeviceNotificationToDeviceResolver<TParent>;\n  notification?: DeviceNotificationToNotificationResolver<TParent>;\n  deviceId?: DeviceNotificationToDeviceIdResolver<TParent>;\n  notificationId?: DeviceNotificationToNotificationIdResolver<TParent>;\n  id?: DeviceNotificationToIdResolver<TParent>;\n  createdAt?: DeviceNotificationToCreatedAtResolver<TParent>;\n  updatedAt?: DeviceNotificationToUpdatedAtResolver<TParent>;\n}\n\nexport interface DeviceNotificationToDeviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceNotificationToNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceNotificationToDeviceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceNotificationToNotificationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceNotificationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceNotificationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceNotificationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INotificationTypeResolver<TParent = any> {\n  deviceNotifications?: NotificationToDeviceNotificationsResolver<TParent>;\n  title?: NotificationToTitleResolver<TParent>;\n  description?: NotificationToDescriptionResolver<TParent>;\n  data?: NotificationToDataResolver<TParent>;\n  enabled?: NotificationToEnabledResolver<TParent>;\n  view?: NotificationToViewResolver<TParent>;\n  date?: NotificationToDateResolver<TParent>;\n  memberId?: NotificationToMemberIdResolver<TParent>;\n  id?: NotificationToIdResolver<TParent>;\n  createdAt?: NotificationToCreatedAtResolver<TParent>;\n  updatedAt?: NotificationToUpdatedAtResolver<TParent>;\n  member?: NotificationToMemberResolver<TParent>;\n}\n\nexport interface NotificationToDeviceNotificationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToEnabledResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToViewResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectSocialNetworkTypeResolver<TParent = any> {\n  projectId?: ProjectSocialNetworkToProjectIdResolver<TParent>;\n  project?: ProjectSocialNetworkToProjectResolver<TParent>;\n  socialNetworkType?: ProjectSocialNetworkToSocialNetworkTypeResolver<TParent>;\n  value?: ProjectSocialNetworkToValueResolver<TParent>;\n  id?: ProjectSocialNetworkToIdResolver<TParent>;\n  createdAt?: ProjectSocialNetworkToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectSocialNetworkToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProjectSocialNetworkToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectSocialNetworkToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectSocialNetworkToSocialNetworkTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectSocialNetworkToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectSocialNetworkToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectSocialNetworkToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectSocialNetworkToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INicheTypeResolver<TParent = any> {\n  name?: NicheToNameResolver<TParent>;\n  description?: NicheToDescriptionResolver<TParent>;\n  nicheServices?: NicheToNicheServicesResolver<TParent>;\n  projects?: NicheToProjectsResolver<TParent>;\n  id?: NicheToIdResolver<TParent>;\n  createdAt?: NicheToCreatedAtResolver<TParent>;\n  updatedAt?: NicheToUpdatedAtResolver<TParent>;\n}\n\nexport interface NicheToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheToNicheServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheToProjectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INicheServiceTypeResolver<TParent = any> {\n  nicheId?: NicheServiceToNicheIdResolver<TParent>;\n  niche?: NicheServiceToNicheResolver<TParent>;\n  codeName?: NicheServiceToCodeNameResolver<TParent>;\n  id?: NicheServiceToIdResolver<TParent>;\n  createdAt?: NicheServiceToCreatedAtResolver<TParent>;\n  updatedAt?: NicheServiceToUpdatedAtResolver<TParent>;\n  microservice?: NicheServiceToMicroserviceResolver<TParent>;\n}\n\nexport interface NicheServiceToNicheIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheServiceToNicheResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheServiceToCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheServiceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheServiceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheServiceToMicroserviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMicroserviceTypeResolver<TParent = any> {\n  name?: MicroserviceToNameResolver<TParent>;\n  codeName?: MicroserviceToCodeNameResolver<TParent>;\n  image?: MicroserviceToImageResolver<TParent>;\n  description?: MicroserviceToDescriptionResolver<TParent>;\n  priority?: MicroserviceToPriorityResolver<TParent>;\n  isPublic?: MicroserviceToIsPublicResolver<TParent>;\n  projectMicroservices?: MicroserviceToProjectMicroservicesResolver<TParent>;\n  functions?: MicroserviceToFunctionsResolver<TParent>;\n  id?: MicroserviceToIdResolver<TParent>;\n  createdAt?: MicroserviceToCreatedAtResolver<TParent>;\n  updatedAt?: MicroserviceToUpdatedAtResolver<TParent>;\n}\n\nexport interface MicroserviceToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToIsPublicResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToProjectMicroservicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToFunctionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MicroserviceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectMicroserviceTypeResolver<TParent = any> {\n  microserviceId?: ProjectMicroserviceToMicroserviceIdResolver<TParent>;\n  microservice?: ProjectMicroserviceToMicroserviceResolver<TParent>;\n  isActive?: ProjectMicroserviceToIsActiveResolver<TParent>;\n  label?: ProjectMicroserviceToLabelResolver<TParent>;\n  projectId?: ProjectMicroserviceToProjectIdResolver<TParent>;\n  id?: ProjectMicroserviceToIdResolver<TParent>;\n  createdAt?: ProjectMicroserviceToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectMicroserviceToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProjectMicroserviceToMicroserviceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectMicroserviceToMicroserviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectMicroserviceToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectMicroserviceToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectMicroserviceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectMicroserviceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectMicroserviceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectMicroserviceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFunctionTypeResolver<TParent = any> {\n  name?: FunctionToNameResolver<TParent>;\n  codeName?: FunctionToCodeNameResolver<TParent>;\n  functionType?: FunctionToFunctionTypeResolver<TParent>;\n  microserviceId?: FunctionToMicroserviceIdResolver<TParent>;\n  microservice?: FunctionToMicroserviceResolver<TParent>;\n  id?: FunctionToIdResolver<TParent>;\n  createdAt?: FunctionToCreatedAtResolver<TParent>;\n  updatedAt?: FunctionToUpdatedAtResolver<TParent>;\n}\n\nexport interface FunctionToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FunctionToCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FunctionToFunctionTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FunctionToMicroserviceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FunctionToMicroserviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FunctionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FunctionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FunctionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IShopTypeResolver<TParent = any> {\n  projectId?: ShopToProjectIdResolver<TParent>;\n  shopType?: ShopToShopTypeResolver<TParent>;\n  profileUrl?: ShopToProfileUrlResolver<TParent>;\n  id?: ShopToIdResolver<TParent>;\n  createdAt?: ShopToCreatedAtResolver<TParent>;\n  updatedAt?: ShopToUpdatedAtResolver<TParent>;\n}\n\nexport interface ShopToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShopToShopTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShopToProfileUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShopToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShopToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ShopToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceHelperTypeResolver<TParent = any> {\n  id?: ServiceHelperToIdResolver<TParent>;\n  name?: ServiceHelperToNameResolver<TParent>;\n  label?: ServiceHelperToLabelResolver<TParent>;\n  isActive?: ServiceHelperToIsActiveResolver<TParent>;\n  codeName?: ServiceHelperToCodeNameResolver<TParent>;\n  image?: ServiceHelperToImageResolver<TParent>;\n  description?: ServiceHelperToDescriptionResolver<TParent>;\n  priority?: ServiceHelperToPriorityResolver<TParent>;\n  createdAt?: ServiceHelperToCreatedAtResolver<TParent>;\n  updatedAt?: ServiceHelperToUpdatedAtResolver<TParent>;\n  projectMicroservices?: ServiceHelperToProjectMicroservicesResolver<TParent>;\n  functions?: ServiceHelperToFunctionsResolver<TParent>;\n}\n\nexport interface ServiceHelperToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToProjectMicroservicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceHelperToFunctionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConfigurationTypeResolver<TParent = any> {\n  projectId?: ConfigurationToProjectIdResolver<TParent>;\n  key?: ConfigurationToKeyResolver<TParent>;\n  value?: ConfigurationToValueResolver<TParent>;\n  id?: ConfigurationToIdResolver<TParent>;\n  createdAt?: ConfigurationToCreatedAtResolver<TParent>;\n  updatedAt?: ConfigurationToUpdatedAtResolver<TParent>;\n}\n\nexport interface ConfigurationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGroupTaxonomyTypeResolver<TParent = any> {\n  taxonomyId?: GroupTaxonomyToTaxonomyIdResolver<TParent>;\n  groupId?: GroupTaxonomyToGroupIdResolver<TParent>;\n  group?: GroupTaxonomyToGroupResolver<TParent>;\n  taxonomy?: GroupTaxonomyToTaxonomyResolver<TParent>;\n}\n\nexport interface GroupTaxonomyToTaxonomyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupTaxonomyToGroupIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupTaxonomyToGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GroupTaxonomyToTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICollectionSegmentInfoTypeResolver<TParent = any> {\n  hasNextPage?: CollectionSegmentInfoToHasNextPageResolver<TParent>;\n  hasPreviousPage?: CollectionSegmentInfoToHasPreviousPageResolver<TParent>;\n}\n\nexport interface CollectionSegmentInfoToHasNextPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollectionSegmentInfoToHasPreviousPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INicheCollectionSegmentTypeResolver<TParent = any> {\n  items?: NicheCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: NicheCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: NicheCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface NicheCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INicheServiceCollectionSegmentTypeResolver<TParent = any> {\n  items?: NicheServiceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: NicheServiceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: NicheServiceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface NicheServiceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheServiceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NicheServiceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMyUrlTypeResolver<TParent = any> {\n  url?: MyUrlToUrlResolver<TParent>;\n}\n\nexport interface MyUrlToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICountryCollectionSegmentTypeResolver<TParent = any> {\n  items?: CountryCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CountryCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CountryCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CountryCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberProjectCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberProjectCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberProjectCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberProjectCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberProjectCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberProjectCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberInSpaceCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberInSpaceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberInSpaceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberInSpaceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberInSpaceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInSpaceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInSpaceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberInSpaceTypeResolver<TParent = any> {\n  memberId?: MemberInSpaceToMemberIdResolver<TParent>;\n  spaceId?: MemberInSpaceToSpaceIdResolver<TParent>;\n  member?: MemberInSpaceToMemberResolver<TParent>;\n  memberInSpace?: MemberInSpaceToMemberInSpaceResolver<TParent>;\n}\n\nexport interface MemberInSpaceToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInSpaceToSpaceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInSpaceToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInSpaceToMemberInSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberInBoardCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberInBoardCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberInBoardCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberInBoardCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberInBoardCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInBoardCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInBoardCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberInBoardTypeResolver<TParent = any> {\n  memberId?: MemberInBoardToMemberIdResolver<TParent>;\n  boardId?: MemberInBoardToBoardIdResolver<TParent>;\n  member?: MemberInBoardToMemberResolver<TParent>;\n  memberInBoard?: MemberInBoardToMemberInBoardResolver<TParent>;\n}\n\nexport interface MemberInBoardToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInBoardToBoardIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInBoardToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInBoardToMemberInBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListUsersLazyLoadConnectionTypeResolver<TParent = any> {\n  pageInfo?: ListUsersLazyLoadConnectionToPageInfoResolver<TParent>;\n  edges?: ListUsersLazyLoadConnectionToEdgesResolver<TParent>;\n  nodes?: ListUsersLazyLoadConnectionToNodesResolver<TParent>;\n  totalCount?: ListUsersLazyLoadConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ListUsersLazyLoadConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListUsersLazyLoadConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListUsersLazyLoadConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListUsersLazyLoadConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPageInfoTypeResolver<TParent = any> {\n  hasNextPage?: PageInfoToHasNextPageResolver<TParent>;\n  hasPreviousPage?: PageInfoToHasPreviousPageResolver<TParent>;\n  startCursor?: PageInfoToStartCursorResolver<TParent>;\n  endCursor?: PageInfoToEndCursorResolver<TParent>;\n}\n\nexport interface PageInfoToHasNextPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageInfoToHasPreviousPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageInfoToStartCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PageInfoToEndCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListUsersLazyLoadEdgeTypeResolver<TParent = any> {\n  cursor?: ListUsersLazyLoadEdgeToCursorResolver<TParent>;\n  node?: ListUsersLazyLoadEdgeToNodeResolver<TParent>;\n}\n\nexport interface ListUsersLazyLoadEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListUsersLazyLoadEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectsInfiniteConnectionTypeResolver<TParent = any> {\n  pageInfo?: ProjectsInfiniteConnectionToPageInfoResolver<TParent>;\n  edges?: ProjectsInfiniteConnectionToEdgesResolver<TParent>;\n  nodes?: ProjectsInfiniteConnectionToNodesResolver<TParent>;\n  totalCount?: ProjectsInfiniteConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ProjectsInfiniteConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectsInfiniteConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectsInfiniteConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectsInfiniteConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectsInfiniteEdgeTypeResolver<TParent = any> {\n  cursor?: ProjectsInfiniteEdgeToCursorResolver<TParent>;\n  node?: ProjectsInfiniteEdgeToNodeResolver<TParent>;\n}\n\nexport interface ProjectsInfiniteEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectsInfiniteEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberChatTypeResolver<TParent = any> {\n  email?: MemberChatToEmailResolver<TParent>;\n  name?: MemberChatToNameResolver<TParent>;\n  lastName?: MemberChatToLastNameResolver<TParent>;\n  photo?: MemberChatToPhotoResolver<TParent>;\n}\n\nexport interface MemberChatToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberChatToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberChatToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberChatToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberFullNameTypeResolver<TParent = any> {\n  fullName?: MemberFullNameToFullNameResolver<TParent>;\n}\n\nexport interface MemberFullNameToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICustomMemberDtoTypeResolver<TParent = any> {\n  roleName?: CustomMemberDtoToRoleNameResolver<TParent>;\n  roleCode?: CustomMemberDtoToRoleCodeResolver<TParent>;\n  photo?: CustomMemberDtoToPhotoResolver<TParent>;\n  email?: CustomMemberDtoToEmailResolver<TParent>;\n  fullName?: CustomMemberDtoToFullNameResolver<TParent>;\n  id?: CustomMemberDtoToIdResolver<TParent>;\n  birthday?: CustomMemberDtoToBirthdayResolver<TParent>;\n}\n\nexport interface CustomMemberDtoToRoleNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomMemberDtoToRoleCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomMemberDtoToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomMemberDtoToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomMemberDtoToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomMemberDtoToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomMemberDtoToBirthdayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPlanTypeResolver<TParent = any> {\n  name?: PlanToNameResolver<TParent>;\n  price?: PlanToPriceResolver<TParent>;\n  planFunctionalities?: PlanToPlanFunctionalitiesResolver<TParent>;\n  planLimitations?: PlanToPlanLimitationsResolver<TParent>;\n  id?: PlanToIdResolver<TParent>;\n  createdAt?: PlanToCreatedAtResolver<TParent>;\n  updatedAt?: PlanToUpdatedAtResolver<TParent>;\n}\n\nexport interface PlanToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanToPlanFunctionalitiesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanToPlanLimitationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPlanFunctionalityTypeResolver<TParent = any> {\n  planId?: PlanFunctionalityToPlanIdResolver<TParent>;\n  plan?: PlanFunctionalityToPlanResolver<TParent>;\n  name?: PlanFunctionalityToNameResolver<TParent>;\n  price?: PlanFunctionalityToPriceResolver<TParent>;\n  id?: PlanFunctionalityToIdResolver<TParent>;\n  createdAt?: PlanFunctionalityToCreatedAtResolver<TParent>;\n  updatedAt?: PlanFunctionalityToUpdatedAtResolver<TParent>;\n}\n\nexport interface PlanFunctionalityToPlanIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanFunctionalityToPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanFunctionalityToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanFunctionalityToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanFunctionalityToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanFunctionalityToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanFunctionalityToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPlanLimitationTypeResolver<TParent = any> {\n  functionalityId?: PlanLimitationToFunctionalityIdResolver<TParent>;\n  planFunctionality?: PlanLimitationToPlanFunctionalityResolver<TParent>;\n  quantity?: PlanLimitationToQuantityResolver<TParent>;\n  id?: PlanLimitationToIdResolver<TParent>;\n  createdAt?: PlanLimitationToCreatedAtResolver<TParent>;\n  updatedAt?: PlanLimitationToUpdatedAtResolver<TParent>;\n}\n\nexport interface PlanLimitationToFunctionalityIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanLimitationToPlanFunctionalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanLimitationToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanLimitationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanLimitationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanLimitationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRecommendedProjectTypeResolver<TParent = any> {\n  position?: RecommendedProjectToPositionResolver<TParent>;\n  projectId?: RecommendedProjectToProjectIdResolver<TParent>;\n  project?: RecommendedProjectToProjectResolver<TParent>;\n  id?: RecommendedProjectToIdResolver<TParent>;\n  createdAt?: RecommendedProjectToCreatedAtResolver<TParent>;\n  updatedAt?: RecommendedProjectToUpdatedAtResolver<TParent>;\n}\n\nexport interface RecommendedProjectToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecommendedProjectToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecommendedProjectToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecommendedProjectToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecommendedProjectToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecommendedProjectToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProjectCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProjectCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProjectCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProjectCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberRelationCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberRelationCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberRelationCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberRelationCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberRelationCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberRelationCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectTemplateTypeResolver<TParent = any> {\n  projectId?: ProjectTemplateToProjectIdResolver<TParent>;\n  templateId?: ProjectTemplateToTemplateIdResolver<TParent>;\n  serviceEmail?: ProjectTemplateToServiceEmailResolver<TParent>;\n  templateService?: ProjectTemplateToTemplateServiceResolver<TParent>;\n  id?: ProjectTemplateToIdResolver<TParent>;\n  createdAt?: ProjectTemplateToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectTemplateToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProjectTemplateToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectTemplateToTemplateIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectTemplateToServiceEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectTemplateToTemplateServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectTemplateToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectTemplateToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectTemplateToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRankingDTOCollectionSegmentTypeResolver<TParent = any> {\n  items?: RankingDTOCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: RankingDTOCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: RankingDTOCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface RankingDTOCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RankingDTOCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RankingDTOCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRankingDTOTypeResolver<TParent = any> {\n  member?: RankingDTOToMemberResolver<TParent>;\n  amount?: RankingDTOToAmountResolver<TParent>;\n  sellsClose?: RankingDTOToSellsCloseResolver<TParent>;\n  sellsInProgress?: RankingDTOToSellsInProgressResolver<TParent>;\n  position?: RankingDTOToPositionResolver<TParent>;\n  totalSells?: RankingDTOToTotalSellsResolver<TParent>;\n  interestedProspects?: RankingDTOToInterestedProspectsResolver<TParent>;\n  potentialProspects?: RankingDTOToPotentialProspectsResolver<TParent>;\n}\n\nexport interface RankingDTOToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RankingDTOToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RankingDTOToSellsCloseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RankingDTOToSellsInProgressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RankingDTOToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RankingDTOToTotalSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RankingDTOToInterestedProspectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RankingDTOToPotentialProspectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISellCollectionSegmentTypeResolver<TParent = any> {\n  items?: SellCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SellCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SellCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SellCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberStatsTypeResolver<TParent = any> {\n  member?: MemberStatsToMemberResolver<TParent>;\n  potentials?: MemberStatsToPotentialsResolver<TParent>;\n  interesteds?: MemberStatsToInterestedsResolver<TParent>;\n  sells?: MemberStatsToSellsResolver<TParent>;\n  totalSells?: MemberStatsToTotalSellsResolver<TParent>;\n}\n\nexport interface MemberStatsToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStatsToPotentialsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStatsToInterestedsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStatsToSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberStatsToTotalSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISellStatsTypeResolver<TParent = any> {\n  sells?: SellStatsToSellsResolver<TParent>;\n  ranking?: SellStatsToRankingResolver<TParent>;\n  memberRelation?: SellStatsToMemberRelationResolver<TParent>;\n  interestedProspects?: SellStatsToInterestedProspectsResolver<TParent>;\n  investment?: SellStatsToInvestmentResolver<TParent>;\n}\n\nexport interface SellStatsToSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellStatsToRankingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellStatsToMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellStatsToInterestedProspectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SellStatsToInvestmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberCompanyDtoCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberCompanyDtoCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberCompanyDtoCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberCompanyDtoCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberCompanyDtoCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyDtoCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyDtoCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberCompanyDtoTypeResolver<TParent = any> {\n  member?: MemberCompanyDtoToMemberResolver<TParent>;\n  profile?: MemberCompanyDtoToProfileResolver<TParent>;\n  memberCompany?: MemberCompanyDtoToMemberCompanyResolver<TParent>;\n}\n\nexport interface MemberCompanyDtoToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyDtoToProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCompanyDtoToMemberCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFAQTypeResolver<TParent = any> {\n  projectId?: FAQToProjectIdResolver<TParent>;\n  question?: FAQToQuestionResolver<TParent>;\n  answer?: FAQToAnswerResolver<TParent>;\n  image?: FAQToImageResolver<TParent>;\n  position?: FAQToPositionResolver<TParent>;\n  id?: FAQToIdResolver<TParent>;\n  createdAt?: FAQToCreatedAtResolver<TParent>;\n  updatedAt?: FAQToUpdatedAtResolver<TParent>;\n}\n\nexport interface FAQToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FAQToQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FAQToAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FAQToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FAQToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FAQToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FAQToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FAQToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITopicDiseaseTypeResolver<TParent = any> {\n  projectId?: TopicDiseaseToProjectIdResolver<TParent>;\n  month?: TopicDiseaseToMonthResolver<TParent>;\n  title?: TopicDiseaseToTitleResolver<TParent>;\n  backgroundImage?: TopicDiseaseToBackgroundImageResolver<TParent>;\n  diseases?: TopicDiseaseToDiseasesResolver<TParent>;\n  id?: TopicDiseaseToIdResolver<TParent>;\n  createdAt?: TopicDiseaseToCreatedAtResolver<TParent>;\n  updatedAt?: TopicDiseaseToUpdatedAtResolver<TParent>;\n}\n\nexport interface TopicDiseaseToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TopicDiseaseToMonthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TopicDiseaseToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TopicDiseaseToBackgroundImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TopicDiseaseToDiseasesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TopicDiseaseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TopicDiseaseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TopicDiseaseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDiseaseTypeResolver<TParent = any> {\n  projectId?: DiseaseToProjectIdResolver<TParent>;\n  topicDiseaseId?: DiseaseToTopicDiseaseIdResolver<TParent>;\n  topicDisease?: DiseaseToTopicDiseaseResolver<TParent>;\n  title?: DiseaseToTitleResolver<TParent>;\n  iconImage?: DiseaseToIconImageResolver<TParent>;\n  image?: DiseaseToImageResolver<TParent>;\n  position?: DiseaseToPositionResolver<TParent>;\n  id?: DiseaseToIdResolver<TParent>;\n  createdAt?: DiseaseToCreatedAtResolver<TParent>;\n  updatedAt?: DiseaseToUpdatedAtResolver<TParent>;\n}\n\nexport interface DiseaseToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiseaseToTopicDiseaseIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiseaseToTopicDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiseaseToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiseaseToIconImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiseaseToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiseaseToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiseaseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiseaseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiseaseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsuranceFormCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsuranceFormCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsuranceFormCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsuranceFormCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsuranceFormCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsuranceFormTypeResolver<TParent = any> {\n  projectId?: InsuranceFormToProjectIdResolver<TParent>;\n  typeForm?: InsuranceFormToTypeFormResolver<TParent>;\n  name?: InsuranceFormToNameResolver<TParent>;\n  email?: InsuranceFormToEmailResolver<TParent>;\n  phone?: InsuranceFormToPhoneResolver<TParent>;\n  zipCode?: InsuranceFormToZipCodeResolver<TParent>;\n  birthDate?: InsuranceFormToBirthDateResolver<TParent>;\n  typeInsurance?: InsuranceFormToTypeInsuranceResolver<TParent>;\n  message?: InsuranceFormToMessageResolver<TParent>;\n  hospitalLevel?: InsuranceFormToHospitalLevelResolver<TParent>;\n  gender?: InsuranceFormToGenderResolver<TParent>;\n  id?: InsuranceFormToIdResolver<TParent>;\n  createdAt?: InsuranceFormToCreatedAtResolver<TParent>;\n  updatedAt?: InsuranceFormToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsuranceFormToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToTypeFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToZipCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToBirthDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToTypeInsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToHospitalLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToGenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsuranceFormToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuestionDTOTypeResolver<TParent = any> {\n  title?: QuestionDTOToTitleResolver<TParent>;\n  type?: QuestionDTOToTypeResolver<TParent>;\n  image?: QuestionDTOToImageResolver<TParent>;\n  options?: QuestionDTOToOptionsResolver<TParent>;\n  answers?: QuestionDTOToAnswersResolver<TParent>;\n}\n\nexport interface QuestionDTOToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionDTOToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionDTOToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionDTOToOptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuestionDTOToAnswersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IArticlesConnectionTypeResolver<TParent = any> {\n  pageInfo?: ArticlesConnectionToPageInfoResolver<TParent>;\n  edges?: ArticlesConnectionToEdgesResolver<TParent>;\n  nodes?: ArticlesConnectionToNodesResolver<TParent>;\n  totalCount?: ArticlesConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ArticlesConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticlesConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticlesConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticlesConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IArticlesEdgeTypeResolver<TParent = any> {\n  cursor?: ArticlesEdgeToCursorResolver<TParent>;\n  node?: ArticlesEdgeToNodeResolver<TParent>;\n}\n\nexport interface ArticlesEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticlesEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IArticleCollectionSegmentTypeResolver<TParent = any> {\n  items?: ArticleCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ArticleCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ArticleCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ArticleCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ArticleCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProductCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProductCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProductCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProductCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITaxonomyCollectionSegmentTypeResolver<TParent = any> {\n  items?: TaxonomyCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: TaxonomyCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: TaxonomyCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface TaxonomyCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxonomyCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISeoDTOTypeResolver<TParent = any> {\n  seo?: SeoDTOToSeoResolver<TParent>;\n}\n\nexport interface SeoDTOToSeoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICourseTypeResolver<TParent = any> {\n  school?: CourseToSchoolResolver<TParent>;\n  courseLevel?: CourseToCourseLevelResolver<TParent>;\n  projectId?: CourseToProjectIdResolver<TParent>;\n  title?: CourseToTitleResolver<TParent>;\n  courseModality?: CourseToCourseModalityResolver<TParent>;\n  slug?: CourseToSlugResolver<TParent>;\n  description?: CourseToDescriptionResolver<TParent>;\n  endDate?: CourseToEndDateResolver<TParent>;\n  startDate?: CourseToStartDateResolver<TParent>;\n  addressId?: CourseToAddressIdResolver<TParent>;\n  courseType?: CourseToCourseTypeResolver<TParent>;\n  duration?: CourseToDurationResolver<TParent>;\n  beginType?: CourseToBeginTypeResolver<TParent>;\n  price?: CourseToPriceResolver<TParent>;\n  schedules?: CourseToSchedulesResolver<TParent>;\n  discount?: CourseToDiscountResolver<TParent>;\n  id?: CourseToIdResolver<TParent>;\n  createdAt?: CourseToCreatedAtResolver<TParent>;\n  updatedAt?: CourseToUpdatedAtResolver<TParent>;\n}\n\nexport interface CourseToSchoolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToCourseLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToCourseModalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToSlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToEndDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToStartDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToAddressIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToCourseTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToDurationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToBeginTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToSchedulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICourseScheduleTypeResolver<TParent = any> {\n  day?: CourseScheduleToDayResolver<TParent>;\n  time?: CourseScheduleToTimeResolver<TParent>;\n  dayPosition?: CourseScheduleToDayPositionResolver<TParent>;\n  courseId?: CourseScheduleToCourseIdResolver<TParent>;\n  course?: CourseScheduleToCourseResolver<TParent>;\n  id?: CourseScheduleToIdResolver<TParent>;\n  createdAt?: CourseScheduleToCreatedAtResolver<TParent>;\n  updatedAt?: CourseScheduleToUpdatedAtResolver<TParent>;\n}\n\nexport interface CourseScheduleToDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseScheduleToTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseScheduleToDayPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseScheduleToCourseIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseScheduleToCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseScheduleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseScheduleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseScheduleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoursesByProjectIdConnectionTypeResolver<TParent = any> {\n  pageInfo?: CoursesByProjectIdConnectionToPageInfoResolver<TParent>;\n  edges?: CoursesByProjectIdConnectionToEdgesResolver<TParent>;\n  nodes?: CoursesByProjectIdConnectionToNodesResolver<TParent>;\n  totalCount?: CoursesByProjectIdConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface CoursesByProjectIdConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoursesByProjectIdConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoursesByProjectIdConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoursesByProjectIdConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoursesByProjectIdEdgeTypeResolver<TParent = any> {\n  cursor?: CoursesByProjectIdEdgeToCursorResolver<TParent>;\n  node?: CoursesByProjectIdEdgeToNodeResolver<TParent>;\n}\n\nexport interface CoursesByProjectIdEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoursesByProjectIdEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICourseTaxonomyTypeResolver<TParent = any> {\n  projectId?: CourseTaxonomyToProjectIdResolver<TParent>;\n  courseId?: CourseTaxonomyToCourseIdResolver<TParent>;\n  course?: CourseTaxonomyToCourseResolver<TParent>;\n  taxonomyId?: CourseTaxonomyToTaxonomyIdResolver<TParent>;\n  taxonomy?: CourseTaxonomyToTaxonomyResolver<TParent>;\n  id?: CourseTaxonomyToIdResolver<TParent>;\n  createdAt?: CourseTaxonomyToCreatedAtResolver<TParent>;\n  updatedAt?: CourseTaxonomyToUpdatedAtResolver<TParent>;\n}\n\nexport interface CourseTaxonomyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseTaxonomyToCourseIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseTaxonomyToCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseTaxonomyToTaxonomyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseTaxonomyToTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseTaxonomyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseTaxonomyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseTaxonomyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStoreTransfersByStoreIdConnectionTypeResolver<TParent = any> {\n  pageInfo?: StoreTransfersByStoreIdConnectionToPageInfoResolver<TParent>;\n  edges?: StoreTransfersByStoreIdConnectionToEdgesResolver<TParent>;\n  nodes?: StoreTransfersByStoreIdConnectionToNodesResolver<TParent>;\n  totalCount?: StoreTransfersByStoreIdConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface StoreTransfersByStoreIdConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransfersByStoreIdConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransfersByStoreIdConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransfersByStoreIdConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStoreTransfersByStoreIdEdgeTypeResolver<TParent = any> {\n  cursor?: StoreTransfersByStoreIdEdgeToCursorResolver<TParent>;\n  node?: StoreTransfersByStoreIdEdgeToNodeResolver<TParent>;\n}\n\nexport interface StoreTransfersByStoreIdEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransfersByStoreIdEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStoreTransferTypeResolver<TParent = any> {\n  projectId?: StoreTransferToProjectIdResolver<TParent>;\n  storeOriginId?: StoreTransferToStoreOriginIdResolver<TParent>;\n  storeDestinyId?: StoreTransferToStoreDestinyIdResolver<TParent>;\n  currencyId?: StoreTransferToCurrencyIdResolver<TParent>;\n  productsTransferred?: StoreTransferToProductsTransferredResolver<TParent>;\n  storeOrigin?: StoreTransferToStoreOriginResolver<TParent>;\n  storeDestiny?: StoreTransferToStoreDestinyResolver<TParent>;\n  folio?: StoreTransferToFolioResolver<TParent>;\n  id?: StoreTransferToIdResolver<TParent>;\n  createdAt?: StoreTransferToCreatedAtResolver<TParent>;\n  updatedAt?: StoreTransferToUpdatedAtResolver<TParent>;\n}\n\nexport interface StoreTransferToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToStoreOriginIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToStoreDestinyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToCurrencyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToProductsTransferredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToStoreOriginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToStoreDestinyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransferToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductTransferredTypeResolver<TParent = any> {\n  productId?: ProductTransferredToProductIdResolver<TParent>;\n  product?: ProductTransferredToProductResolver<TParent>;\n  quantity?: ProductTransferredToQuantityResolver<TParent>;\n  storeTransferId?: ProductTransferredToStoreTransferIdResolver<TParent>;\n  storeTransfer?: ProductTransferredToStoreTransferResolver<TParent>;\n  id?: ProductTransferredToIdResolver<TParent>;\n  createdAt?: ProductTransferredToCreatedAtResolver<TParent>;\n  updatedAt?: ProductTransferredToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProductTransferredToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductTransferredToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductTransferredToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductTransferredToStoreTransferIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductTransferredToStoreTransferResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductTransferredToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductTransferredToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductTransferredToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoursesByTaxonomyAndModalityConnectionTypeResolver<TParent = any> {\n  pageInfo?: CoursesByTaxonomyAndModalityConnectionToPageInfoResolver<TParent>;\n  edges?: CoursesByTaxonomyAndModalityConnectionToEdgesResolver<TParent>;\n  nodes?: CoursesByTaxonomyAndModalityConnectionToNodesResolver<TParent>;\n  totalCount?: CoursesByTaxonomyAndModalityConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface CoursesByTaxonomyAndModalityConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoursesByTaxonomyAndModalityConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoursesByTaxonomyAndModalityConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoursesByTaxonomyAndModalityConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoursesByTaxonomyAndModalityEdgeTypeResolver<TParent = any> {\n  cursor?: CoursesByTaxonomyAndModalityEdgeToCursorResolver<TParent>;\n  node?: CoursesByTaxonomyAndModalityEdgeToNodeResolver<TParent>;\n}\n\nexport interface CoursesByTaxonomyAndModalityEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoursesByTaxonomyAndModalityEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBranchOfficesConnectionTypeResolver<TParent = any> {\n  pageInfo?: BranchOfficesConnectionToPageInfoResolver<TParent>;\n  edges?: BranchOfficesConnectionToEdgesResolver<TParent>;\n  nodes?: BranchOfficesConnectionToNodesResolver<TParent>;\n  totalCount?: BranchOfficesConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface BranchOfficesConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficesConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficesConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficesConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBranchOfficesEdgeTypeResolver<TParent = any> {\n  cursor?: BranchOfficesEdgeToCursorResolver<TParent>;\n  node?: BranchOfficesEdgeToNodeResolver<TParent>;\n}\n\nexport interface BranchOfficesEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchOfficesEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IManagersConnectionTypeResolver<TParent = any> {\n  pageInfo?: ManagersConnectionToPageInfoResolver<TParent>;\n  edges?: ManagersConnectionToEdgesResolver<TParent>;\n  nodes?: ManagersConnectionToNodesResolver<TParent>;\n  totalCount?: ManagersConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ManagersConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagersConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagersConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagersConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IManagersEdgeTypeResolver<TParent = any> {\n  cursor?: ManagersEdgeToCursorResolver<TParent>;\n  node?: ManagersEdgeToNodeResolver<TParent>;\n}\n\nexport interface ManagersEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ManagersEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPurchaseCollectionSegmentTypeResolver<TParent = any> {\n  items?: PurchaseCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PurchaseCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PurchaseCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PurchaseCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStoresConnectionTypeResolver<TParent = any> {\n  pageInfo?: StoresConnectionToPageInfoResolver<TParent>;\n  edges?: StoresConnectionToEdgesResolver<TParent>;\n  nodes?: StoresConnectionToNodesResolver<TParent>;\n  totalCount?: StoresConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface StoresConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoresConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoresConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoresConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStoresEdgeTypeResolver<TParent = any> {\n  cursor?: StoresEdgeToCursorResolver<TParent>;\n  node?: StoresEdgeToNodeResolver<TParent>;\n}\n\nexport interface StoresEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoresEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStoreTransfersConnectionTypeResolver<TParent = any> {\n  pageInfo?: StoreTransfersConnectionToPageInfoResolver<TParent>;\n  edges?: StoreTransfersConnectionToEdgesResolver<TParent>;\n  nodes?: StoreTransfersConnectionToNodesResolver<TParent>;\n  totalCount?: StoreTransfersConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface StoreTransfersConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransfersConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransfersConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransfersConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStoreTransfersEdgeTypeResolver<TParent = any> {\n  cursor?: StoreTransfersEdgeToCursorResolver<TParent>;\n  node?: StoreTransfersEdgeToNodeResolver<TParent>;\n}\n\nexport interface StoreTransfersEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StoreTransfersEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDrugCollectionSegmentTypeResolver<TParent = any> {\n  items?: DrugCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DrugCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: DrugCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface DrugCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DrugCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DrugCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDrugTypeResolver<TParent = any> {\n  ndcUpcHri?: DrugToNdcUpcHriResolver<TParent>;\n  prodDescAbbrev?: DrugToProdDescAbbrevResolver<TParent>;\n  prodName?: DrugToProdNameResolver<TParent>;\n}\n\nexport interface DrugToNdcUpcHriResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DrugToProdDescAbbrevResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DrugToProdNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICarrierTypeResolver<TParent = any> {\n  carrierCode?: CarrierToCarrierCodeResolver<TParent>;\n  carrierName?: CarrierToCarrierNameResolver<TParent>;\n}\n\nexport interface CarrierToCarrierCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarrierToCarrierNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGroupResponseTypeResolver<TParent = any> {\n  groupItemList?: GroupResponseToGroupItemListResolver<TParent>;\n}\n\nexport interface GroupResponseToGroupItemListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGroupItemTypeResolver<TParent = any> {\n  groupItems?: GroupItemToGroupItemsResolver<TParent>;\n}\n\nexport interface GroupItemToGroupItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEmployerTypeResolver<TParent = any> {\n  carrierCode?: EmployerToCarrierCodeResolver<TParent>;\n  employerName?: EmployerToEmployerNameResolver<TParent>;\n  groupNum?: EmployerToGroupNumResolver<TParent>;\n  orgCode?: EmployerToOrgCodeResolver<TParent>;\n}\n\nexport interface EmployerToCarrierCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EmployerToEmployerNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EmployerToGroupNumResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EmployerToOrgCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPharmacyRadiusResponseTypeResolver<TParent = any> {\n  pharmacy?: PharmacyRadiusResponseToPharmacyResolver<TParent>;\n  pricing?: PharmacyRadiusResponseToPricingResolver<TParent>;\n}\n\nexport interface PharmacyRadiusResponseToPharmacyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyRadiusResponseToPricingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPharmacyTypeResolver<TParent = any> {\n  npi?: PharmacyToNpiResolver<TParent>;\n  nabp?: PharmacyToNabpResolver<TParent>;\n  affiliationCode?: PharmacyToAffiliationCodeResolver<TParent>;\n  name?: PharmacyToNameResolver<TParent>;\n  address1?: PharmacyToAddress1Resolver<TParent>;\n  address2?: PharmacyToAddress2Resolver<TParent>;\n  city?: PharmacyToCityResolver<TParent>;\n  state?: PharmacyToStateResolver<TParent>;\n  zip?: PharmacyToZipResolver<TParent>;\n  phone?: PharmacyToPhoneResolver<TParent>;\n  longitude?: PharmacyToLongitudeResolver<TParent>;\n  latitude?: PharmacyToLatitudeResolver<TParent>;\n}\n\nexport interface PharmacyToNpiResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToNabpResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToAffiliationCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToAddress1Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToAddress2Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToZipResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToLongitudeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyToLatitudeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPricingTypeResolver<TParent = any> {\n  requestId?: PricingToRequestIdResolver<TParent>;\n  status?: PricingToStatusResolver<TParent>;\n  gpi?: PricingToGpiResolver<TParent>;\n  unitCost?: PricingToUnitCostResolver<TParent>;\n  dAWDifference?: PricingToDAWDifferenceResolver<TParent>;\n  patientPay?: PricingToPatientPayResolver<TParent>;\n  totalPay?: PricingToTotalPayResolver<TParent>;\n  planPay?: PricingToPlanPayResolver<TParent>;\n  processingFee?: PricingToProcessingFeeResolver<TParent>;\n  dispensingFee?: PricingToDispensingFeeResolver<TParent>;\n  incentiveFee?: PricingToIncentiveFeeResolver<TParent>;\n  copay?: PricingToCopayResolver<TParent>;\n  clientBilled?: PricingToClientBilledResolver<TParent>;\n  marginApplied?: PricingToMarginAppliedResolver<TParent>;\n  fQMessage?: PricingToFQMessageResolver<TParent>;\n  f4Message?: PricingToF4MessageResolver<TParent>;\n  benefitCap?: PricingToBenefitCapResolver<TParent>;\n  deductible?: PricingToDeductibleResolver<TParent>;\n  mOOP?: PricingToMOOPResolver<TParent>;\n  patientTax?: PricingToPatientTaxResolver<TParent>;\n  sellTax?: PricingToSellTaxResolver<TParent>;\n  buyTax?: PricingToBuyTaxResolver<TParent>;\n  pharmacyFee?: PricingToPharmacyFeeResolver<TParent>;\n  vaccineAdminFee?: PricingToVaccineAdminFeeResolver<TParent>;\n  sellDispensingFee?: PricingToSellDispensingFeeResolver<TParent>;\n  buyDispensingFee?: PricingToBuyDispensingFeeResolver<TParent>;\n  sellIngredientCost?: PricingToSellIngredientCostResolver<TParent>;\n  buyIngredientCost?: PricingToBuyIngredientCostResolver<TParent>;\n  rejectCodes?: PricingToRejectCodesResolver<TParent>;\n  billCostCalculatorRuleName?: PricingToBillCostCalculatorRuleNameResolver<TParent>;\n  costCalculatorRuleName?: PricingToCostCalculatorRuleNameResolver<TParent>;\n  copayRuleName?: PricingToCopayRuleNameResolver<TParent>;\n}\n\nexport interface PricingToRequestIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToGpiResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToUnitCostResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToDAWDifferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToPatientPayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToTotalPayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToPlanPayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToProcessingFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToDispensingFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToIncentiveFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToCopayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToClientBilledResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToMarginAppliedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToFQMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToF4MessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToBenefitCapResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToMOOPResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToPatientTaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToSellTaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToBuyTaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToPharmacyFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToVaccineAdminFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToSellDispensingFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToBuyDispensingFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToSellIngredientCostResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToBuyIngredientCostResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToRejectCodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToBillCostCalculatorRuleNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToCostCalculatorRuleNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingToCopayRuleNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPharmacyResponseTypeResolver<TParent = any> {\n  message?: PharmacyResponseToMessageResolver<TParent>;\n  pharmacies?: PharmacyResponseToPharmaciesResolver<TParent>;\n}\n\nexport interface PharmacyResponseToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyResponseToPharmaciesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISearchMemberResponseTypeResolver<TParent = any> {\n  cardHolder?: SearchMemberResponseToCardHolderResolver<TParent>;\n}\n\nexport interface SearchMemberResponseToCardHolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardHolderTypeResolver<TParent = any> {\n  cHID?: CardHolderToCHIDResolver<TParent>;\n  members?: CardHolderToMembersResolver<TParent>;\n}\n\nexport interface CardHolderToCHIDResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardHolderToMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberInfoTypeResolver<TParent = any> {\n  id?: MemberInfoToIdResolver<TParent>;\n  firstName?: MemberInfoToFirstNameResolver<TParent>;\n  middleName?: MemberInfoToMiddleNameResolver<TParent>;\n  lastName?: MemberInfoToLastNameResolver<TParent>;\n  dOB?: MemberInfoToDOBResolver<TParent>;\n  personCode?: MemberInfoToPersonCodeResolver<TParent>;\n  sSN?: MemberInfoToSSNResolver<TParent>;\n  genderCode?: MemberInfoToGenderCodeResolver<TParent>;\n  address1?: MemberInfoToAddress1Resolver<TParent>;\n  address2?: MemberInfoToAddress2Resolver<TParent>;\n  city?: MemberInfoToCityResolver<TParent>;\n  state?: MemberInfoToStateResolver<TParent>;\n  zipCode?: MemberInfoToZipCodeResolver<TParent>;\n  homePhone?: MemberInfoToHomePhoneResolver<TParent>;\n  workPhone?: MemberInfoToWorkPhoneResolver<TParent>;\n  mobilePhone?: MemberInfoToMobilePhoneResolver<TParent>;\n  email?: MemberInfoToEmailResolver<TParent>;\n  alternateID?: MemberInfoToAlternateIDResolver<TParent>;\n  previousID?: MemberInfoToPreviousIDResolver<TParent>;\n  relationshipCode?: MemberInfoToRelationshipCodeResolver<TParent>;\n  locationCode?: MemberInfoToLocationCodeResolver<TParent>;\n  pCPNPI?: MemberInfoToPCPNPIResolver<TParent>;\n  pCPPhone?: MemberInfoToPCPPhoneResolver<TParent>;\n  pCPFax?: MemberInfoToPCPFaxResolver<TParent>;\n  group?: MemberInfoToGroupResolver<TParent>;\n  benefitSpending?: MemberInfoToBenefitSpendingResolver<TParent>;\n}\n\nexport interface MemberInfoToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToMiddleNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToDOBResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToPersonCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToSSNResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToGenderCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToAddress1Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToAddress2Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToZipCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToHomePhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToWorkPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToMobilePhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToAlternateIDResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToPreviousIDResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToRelationshipCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToLocationCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToPCPNPIResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToPCPPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToPCPFaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberInfoToBenefitSpendingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Iblog_GroupTypeResolver<TParent = any> {\n  id?: blog_GroupToIdResolver<TParent>;\n  groupName?: blog_GroupToGroupNameResolver<TParent>;\n  groupNumber?: blog_GroupToGroupNumberResolver<TParent>;\n  benefitYearStartDay?: blog_GroupToBenefitYearStartDayResolver<TParent>;\n  benefitYearStartMonth?: blog_GroupToBenefitYearStartMonthResolver<TParent>;\n  startDateTime?: blog_GroupToStartDateTimeResolver<TParent>;\n  endDateTime?: blog_GroupToEndDateTimeResolver<TParent>;\n  priorYearQ4CarryOverDeductible?: blog_GroupToPriorYearQ4CarryOverDeductibleResolver<TParent>;\n  priorYearQ4CarryOverMOOP?: blog_GroupToPriorYearQ4CarryOverMOOPResolver<TParent>;\n  carrierCode?: blog_GroupToCarrierCodeResolver<TParent>;\n  coverageType?: blog_GroupToCoverageTypeResolver<TParent>;\n}\n\nexport interface blog_GroupToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToGroupNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToGroupNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToBenefitYearStartDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToBenefitYearStartMonthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToStartDateTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToEndDateTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToPriorYearQ4CarryOverDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToPriorYearQ4CarryOverMOOPResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToCarrierCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface blog_GroupToCoverageTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBenefitSpendingTypeResolver<TParent = any> {\n  individualDeductibleSpend?: BenefitSpendingToIndividualDeductibleSpendResolver<TParent>;\n  familyDeductibleSpend?: BenefitSpendingToFamilyDeductibleSpendResolver<TParent>;\n  individualMOOPSpend?: BenefitSpendingToIndividualMOOPSpendResolver<TParent>;\n  familyMOOPSpend?: BenefitSpendingToFamilyMOOPSpendResolver<TParent>;\n  individualBenefitCapSpend?: BenefitSpendingToIndividualBenefitCapSpendResolver<TParent>;\n  familyBenefitCapSpend?: BenefitSpendingToFamilyBenefitCapSpendResolver<TParent>;\n  individualSpecialCapSpend?: BenefitSpendingToIndividualSpecialCapSpendResolver<TParent>;\n  familySpecialCapSpend?: BenefitSpendingToFamilySpecialCapSpendResolver<TParent>;\n  plus1DeductibleSpend?: BenefitSpendingToPlus1DeductibleSpendResolver<TParent>;\n  plus1BenefitCapSpend?: BenefitSpendingToPlus1BenefitCapSpendResolver<TParent>;\n  plus1MOOPSpend?: BenefitSpendingToPlus1MOOPSpendResolver<TParent>;\n  hasIndividualDeductibleBeenMet?: BenefitSpendingToHasIndividualDeductibleBeenMetResolver<TParent>;\n  hasFamilyDeductibleBeenMet?: BenefitSpendingToHasFamilyDeductibleBeenMetResolver<TParent>;\n  hasIndividualOOPMaxBeenMet?: BenefitSpendingToHasIndividualOOPMaxBeenMetResolver<TParent>;\n  hasFamilyOOPMaxBeenMet?: BenefitSpendingToHasFamilyOOPMaxBeenMetResolver<TParent>;\n  hasIndividualBenefitCapBeenMet?: BenefitSpendingToHasIndividualBenefitCapBeenMetResolver<TParent>;\n  hasFamilyBenefitCapBeenMet?: BenefitSpendingToHasFamilyBenefitCapBeenMetResolver<TParent>;\n  hasIndividualSpecialCapBeenMet?: BenefitSpendingToHasIndividualSpecialCapBeenMetResolver<TParent>;\n  hasFamilySpecialCapBeenMet?: BenefitSpendingToHasFamilySpecialCapBeenMetResolver<TParent>;\n  plus1MOOPBenefitCapSpend?: BenefitSpendingToPlus1MOOPBenefitCapSpendResolver<TParent>;\n}\n\nexport interface BenefitSpendingToIndividualDeductibleSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToFamilyDeductibleSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToIndividualMOOPSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToFamilyMOOPSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToIndividualBenefitCapSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToFamilyBenefitCapSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToIndividualSpecialCapSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToFamilySpecialCapSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToPlus1DeductibleSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToPlus1BenefitCapSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToPlus1MOOPSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToHasIndividualDeductibleBeenMetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToHasFamilyDeductibleBeenMetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToHasIndividualOOPMaxBeenMetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToHasFamilyOOPMaxBeenMetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToHasIndividualBenefitCapBeenMetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToHasFamilyBenefitCapBeenMetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToHasIndividualSpecialCapBeenMetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToHasFamilySpecialCapBeenMetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BenefitSpendingToPlus1MOOPBenefitCapSpendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPricingDrugTypeResolver<TParent = any> {\n  drug?: PricingDrugToDrugResolver<TParent>;\n  pharmacyRadiusPricing?: PricingDrugToPharmacyRadiusPricingResolver<TParent>;\n}\n\nexport interface PricingDrugToDrugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PricingDrugToPharmacyRadiusPricingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPharmacyRadiusPricingTypeResolver<TParent = any> {\n  message?: PharmacyRadiusPricingToMessageResolver<TParent>;\n  response?: PharmacyRadiusPricingToResponseResolver<TParent>;\n}\n\nexport interface PharmacyRadiusPricingToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PharmacyRadiusPricingToResponseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITransactionTypeResolver<TParent = any> {\n  clientCode?: TransactionToClientCodeResolver<TParent>;\n  planCode?: TransactionToPlanCodeResolver<TParent>;\n  memberId?: TransactionToMemberIdResolver<TParent>;\n  externalGroupId?: TransactionToExternalGroupIdResolver<TParent>;\n  firstName?: TransactionToFirstNameResolver<TParent>;\n  lastName?: TransactionToLastNameResolver<TParent>;\n  dateOfBirth?: TransactionToDateOfBirthResolver<TParent>;\n  gender?: TransactionToGenderResolver<TParent>;\n  labelName?: TransactionToLabelNameResolver<TParent>;\n  nDC?: TransactionToNDCResolver<TParent>;\n  quantity?: TransactionToQuantityResolver<TParent>;\n  daysSupply?: TransactionToDaysSupplyResolver<TParent>;\n  pharmacyName?: TransactionToPharmacyNameResolver<TParent>;\n  prescriberName?: TransactionToPrescriberNameResolver<TParent>;\n  memberKey?: TransactionToMemberKeyResolver<TParent>;\n  personCode?: TransactionToPersonCodeResolver<TParent>;\n  nABP?: TransactionToNABPResolver<TParent>;\n}\n\nexport interface TransactionToClientCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToPlanCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToExternalGroupIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToDateOfBirthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToGenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToLabelNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToNDCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToDaysSupplyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToPharmacyNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToPrescriberNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToMemberKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToPersonCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionToNABPResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMenuTypeResolver<TParent = any> {\n  id?: MenuToIdResolver<TParent>;\n  name_for_guest?: MenuToName_for_guestResolver<TParent>;\n  combine_into_id?: MenuToCombine_into_idResolver<TParent>;\n  last_modified?: MenuToLast_modifiedResolver<TParent>;\n  display_position?: MenuToDisplay_positionResolver<TParent>;\n  menu_headings?: MenuToMenu_headingsResolver<TParent>;\n  menu_items?: MenuToMenu_itemsResolver<TParent>;\n}\n\nexport interface MenuToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuToName_for_guestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuToCombine_into_idResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuToLast_modifiedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuToDisplay_positionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuToMenu_headingsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuToMenu_itemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMenuHeadingTypeResolver<TParent = any> {\n  id?: MenuHeadingToIdResolver<TParent>;\n  heading_name?: MenuHeadingToHeading_nameResolver<TParent>;\n  display_position?: MenuHeadingToDisplay_positionResolver<TParent>;\n}\n\nexport interface MenuHeadingToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuHeadingToHeading_nameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuHeadingToDisplay_positionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMenuItemTypeResolver<TParent = any> {\n  id?: MenuItemToIdResolver<TParent>;\n  display_position?: MenuItemToDisplay_positionResolver<TParent>;\n  image_url?: MenuItemToImage_urlResolver<TParent>;\n  image_on_front_page?: MenuItemToImage_on_front_pageResolver<TParent>;\n  name_for_guest?: MenuItemToName_for_guestResolver<TParent>;\n  description?: MenuItemToDescriptionResolver<TParent>;\n  tax_cents?: MenuItemToTax_centsResolver<TParent>;\n  price_string?: MenuItemToPrice_stringResolver<TParent>;\n  pretax_cents?: MenuItemToPretax_centsResolver<TParent>;\n  tags?: MenuItemToTagsResolver<TParent>;\n  special_instructions_config?: MenuItemToSpecial_instructions_configResolver<TParent>;\n  most_loved?: MenuItemToMost_lovedResolver<TParent>;\n  menu_heading_id?: MenuItemToMenu_heading_idResolver<TParent>;\n  in_stock?: MenuItemToIn_stockResolver<TParent>;\n  image_on_item_page?: MenuItemToImage_on_item_pageResolver<TParent>;\n  modifiers_ids?: MenuItemToModifiers_idsResolver<TParent>;\n}\n\nexport interface MenuItemToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToDisplay_positionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToImage_urlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToImage_on_front_pageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToName_for_guestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToTax_centsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToPrice_stringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToPretax_centsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToTagsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToSpecial_instructions_configResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToMost_lovedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToMenu_heading_idResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToIn_stockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToImage_on_item_pageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MenuItemToModifiers_idsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRestaurantTypeResolver<TParent = any> {\n  id?: RestaurantToIdResolver<TParent>;\n  name_for_guest?: RestaurantToName_for_guestResolver<TParent>;\n  name_for_admin?: RestaurantToName_for_adminResolver<TParent>;\n  phone_for_guests?: RestaurantToPhone_for_guestsResolver<TParent>;\n}\n\nexport interface RestaurantToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RestaurantToName_for_guestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RestaurantToName_for_adminResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RestaurantToPhone_for_guestsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILegalTermCollectionSegmentTypeResolver<TParent = any> {\n  items?: LegalTermCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: LegalTermCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: LegalTermCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface LegalTermCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LegalTermCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LegalTermCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILegalTermTypeResolver<TParent = any> {\n  projectId?: LegalTermToProjectIdResolver<TParent>;\n  counter?: LegalTermToCounterResolver<TParent>;\n  keyName?: LegalTermToKeyNameResolver<TParent>;\n  title?: LegalTermToTitleResolver<TParent>;\n  description?: LegalTermToDescriptionResolver<TParent>;\n  id?: LegalTermToIdResolver<TParent>;\n  createdAt?: LegalTermToCreatedAtResolver<TParent>;\n  updatedAt?: LegalTermToUpdatedAtResolver<TParent>;\n}\n\nexport interface LegalTermToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LegalTermToCounterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LegalTermToKeyNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LegalTermToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LegalTermToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LegalTermToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LegalTermToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LegalTermToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStockAlertCollectionSegmentTypeResolver<TParent = any> {\n  items?: StockAlertCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: StockAlertCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: StockAlertCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface StockAlertCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StockAlertCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPurchaseQuoteTypeResolver<TParent = any> {\n  invoiceDate?: PurchaseQuoteToInvoiceDateResolver<TParent>;\n  expirationDate?: PurchaseQuoteToExpirationDateResolver<TParent>;\n  reference?: PurchaseQuoteToReferenceResolver<TParent>;\n  branchOfficeId?: PurchaseQuoteToBranchOfficeIdResolver<TParent>;\n  branchOffice?: PurchaseQuoteToBranchOfficeResolver<TParent>;\n  storeId?: PurchaseQuoteToStoreIdResolver<TParent>;\n  store?: PurchaseQuoteToStoreResolver<TParent>;\n  sellerId?: PurchaseQuoteToSellerIdResolver<TParent>;\n  customerId?: PurchaseQuoteToCustomerIdResolver<TParent>;\n  comment?: PurchaseQuoteToCommentResolver<TParent>;\n  products?: PurchaseQuoteToProductsResolver<TParent>;\n  discount?: PurchaseQuoteToDiscountResolver<TParent>;\n  subTotal?: PurchaseQuoteToSubTotalResolver<TParent>;\n  taxes?: PurchaseQuoteToTaxesResolver<TParent>;\n  detained?: PurchaseQuoteToDetainedResolver<TParent>;\n  total?: PurchaseQuoteToTotalResolver<TParent>;\n  purchaseQuoteStatus?: PurchaseQuoteToPurchaseQuoteStatusResolver<TParent>;\n  projectId?: PurchaseQuoteToProjectIdResolver<TParent>;\n  id?: PurchaseQuoteToIdResolver<TParent>;\n  createdAt?: PurchaseQuoteToCreatedAtResolver<TParent>;\n  updatedAt?: PurchaseQuoteToUpdatedAtResolver<TParent>;\n}\n\nexport interface PurchaseQuoteToInvoiceDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToExpirationDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToReferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToBranchOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToStoreIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToSellerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToCustomerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToCommentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToProductsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToTaxesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToDetainedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToPurchaseQuoteStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPurchaseQuoteProductTypeResolver<TParent = any> {\n  purchaseQuoteId?: PurchaseQuoteProductToPurchaseQuoteIdResolver<TParent>;\n  productId?: PurchaseQuoteProductToProductIdResolver<TParent>;\n  purchaseQuote?: PurchaseQuoteProductToPurchaseQuoteResolver<TParent>;\n  product?: PurchaseQuoteProductToProductResolver<TParent>;\n  id?: PurchaseQuoteProductToIdResolver<TParent>;\n  createdAt?: PurchaseQuoteProductToCreatedAtResolver<TParent>;\n  updatedAt?: PurchaseQuoteProductToUpdatedAtResolver<TParent>;\n}\n\nexport interface PurchaseQuoteProductToPurchaseQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteProductToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteProductToPurchaseQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteProductToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteProductToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteProductToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteProductToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPurchaseQuoteCollectionSegmentTypeResolver<TParent = any> {\n  items?: PurchaseQuoteCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PurchaseQuoteCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PurchaseQuoteCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PurchaseQuoteCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PurchaseQuoteCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITaxTypeResolver<TParent = any> {\n  projectId?: TaxToProjectIdResolver<TParent>;\n  name?: TaxToNameResolver<TParent>;\n  rate?: TaxToRateResolver<TParent>;\n  id?: TaxToIdResolver<TParent>;\n  createdAt?: TaxToCreatedAtResolver<TParent>;\n  updatedAt?: TaxToUpdatedAtResolver<TParent>;\n}\n\nexport interface TaxToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxToRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TaxToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductSellCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProductSellCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProductSellCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProductSellCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProductSellCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductSellTypeResolver<TParent = any> {\n  folio?: ProductSellToFolioResolver<TParent>;\n  projectId?: ProductSellToProjectIdResolver<TParent>;\n  invoiceDate?: ProductSellToInvoiceDateResolver<TParent>;\n  expirationDate?: ProductSellToExpirationDateResolver<TParent>;\n  currencyId?: ProductSellToCurrencyIdResolver<TParent>;\n  branchOfficeId?: ProductSellToBranchOfficeIdResolver<TParent>;\n  branchOffice?: ProductSellToBranchOfficeResolver<TParent>;\n  storeId?: ProductSellToStoreIdResolver<TParent>;\n  store?: ProductSellToStoreResolver<TParent>;\n  sellerId?: ProductSellToSellerIdResolver<TParent>;\n  routeId?: ProductSellToRouteIdResolver<TParent>;\n  customerId?: ProductSellToCustomerIdResolver<TParent>;\n  socialReason?: ProductSellToSocialReasonResolver<TParent>;\n  rfc?: ProductSellToRfcResolver<TParent>;\n  automaticInvoicing?: ProductSellToAutomaticInvoicingResolver<TParent>;\n  address?: ProductSellToAddressResolver<TParent>;\n  iva?: ProductSellToIvaResolver<TParent>;\n  total?: ProductSellToTotalResolver<TParent>;\n  subTotal?: ProductSellToSubTotalResolver<TParent>;\n  taxes?: ProductSellToTaxesResolver<TParent>;\n  discount?: ProductSellToDiscountResolver<TParent>;\n  products?: ProductSellToProductsResolver<TParent>;\n  isActive?: ProductSellToIsActiveResolver<TParent>;\n  id?: ProductSellToIdResolver<TParent>;\n  createdAt?: ProductSellToCreatedAtResolver<TParent>;\n  updatedAt?: ProductSellToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProductSellToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToInvoiceDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToExpirationDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToCurrencyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToBranchOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToStoreIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToSellerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToRouteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToCustomerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToSocialReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToRfcResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToAutomaticInvoicingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToIvaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToTaxesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToProductsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductSellItemTypeResolver<TParent = any> {\n  productSellId?: ProductSellItemToProductSellIdResolver<TParent>;\n  productSell?: ProductSellItemToProductSellResolver<TParent>;\n  quantity?: ProductSellItemToQuantityResolver<TParent>;\n  productId?: ProductSellItemToProductIdResolver<TParent>;\n  product?: ProductSellItemToProductResolver<TParent>;\n  priceId?: ProductSellItemToPriceIdResolver<TParent>;\n  discount?: ProductSellItemToDiscountResolver<TParent>;\n  finalPrice?: ProductSellItemToFinalPriceResolver<TParent>;\n  id?: ProductSellItemToIdResolver<TParent>;\n  createdAt?: ProductSellItemToCreatedAtResolver<TParent>;\n  updatedAt?: ProductSellItemToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProductSellItemToProductSellIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToProductSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToPriceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToFinalPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductSellItemToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRouteCollectionSegmentTypeResolver<TParent = any> {\n  items?: RouteCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: RouteCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: RouteCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface RouteCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRouteTypeResolver<TParent = any> {\n  projectId?: RouteToProjectIdResolver<TParent>;\n  key?: RouteToKeyResolver<TParent>;\n  title?: RouteToTitleResolver<TParent>;\n  description?: RouteToDescriptionResolver<TParent>;\n  branchOfficeId?: RouteToBranchOfficeIdResolver<TParent>;\n  routeType?: RouteToRouteTypeResolver<TParent>;\n  travelDays?: RouteToTravelDaysResolver<TParent>;\n  beginningDate?: RouteToBeginningDateResolver<TParent>;\n  sellers?: RouteToSellersResolver<TParent>;\n  customers?: RouteToCustomersResolver<TParent>;\n  itineraries?: RouteToItinerariesResolver<TParent>;\n  id?: RouteToIdResolver<TParent>;\n  createdAt?: RouteToCreatedAtResolver<TParent>;\n  updatedAt?: RouteToUpdatedAtResolver<TParent>;\n}\n\nexport interface RouteToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToBranchOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToRouteTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToTravelDaysResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToBeginningDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToSellersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToCustomersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToItinerariesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRouteSellerTypeResolver<TParent = any> {\n  projectId?: RouteSellerToProjectIdResolver<TParent>;\n  routeId?: RouteSellerToRouteIdResolver<TParent>;\n  route?: RouteSellerToRouteResolver<TParent>;\n  key?: RouteSellerToKeyResolver<TParent>;\n  branchOfficeId?: RouteSellerToBranchOfficeIdResolver<TParent>;\n  branchOffice?: RouteSellerToBranchOfficeResolver<TParent>;\n  storeId?: RouteSellerToStoreIdResolver<TParent>;\n  store?: RouteSellerToStoreResolver<TParent>;\n  sellerId?: RouteSellerToSellerIdResolver<TParent>;\n  id?: RouteSellerToIdResolver<TParent>;\n  createdAt?: RouteSellerToCreatedAtResolver<TParent>;\n  updatedAt?: RouteSellerToUpdatedAtResolver<TParent>;\n}\n\nexport interface RouteSellerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToRouteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToRouteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToBranchOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToStoreIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToSellerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteSellerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRouteCustomerTypeResolver<TParent = any> {\n  projectId?: RouteCustomerToProjectIdResolver<TParent>;\n  routeId?: RouteCustomerToRouteIdResolver<TParent>;\n  route?: RouteCustomerToRouteResolver<TParent>;\n  customerId?: RouteCustomerToCustomerIdResolver<TParent>;\n  address?: RouteCustomerToAddressResolver<TParent>;\n  id?: RouteCustomerToIdResolver<TParent>;\n  createdAt?: RouteCustomerToCreatedAtResolver<TParent>;\n  updatedAt?: RouteCustomerToUpdatedAtResolver<TParent>;\n}\n\nexport interface RouteCustomerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteCustomerToRouteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteCustomerToRouteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteCustomerToCustomerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteCustomerToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteCustomerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteCustomerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteCustomerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRouteItineraryTypeResolver<TParent = any> {\n  routeId?: RouteItineraryToRouteIdResolver<TParent>;\n  route?: RouteItineraryToRouteResolver<TParent>;\n  customerId?: RouteItineraryToCustomerIdResolver<TParent>;\n  description?: RouteItineraryToDescriptionResolver<TParent>;\n  address?: RouteItineraryToAddressResolver<TParent>;\n  id?: RouteItineraryToIdResolver<TParent>;\n  createdAt?: RouteItineraryToCreatedAtResolver<TParent>;\n  updatedAt?: RouteItineraryToUpdatedAtResolver<TParent>;\n}\n\nexport interface RouteItineraryToRouteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteItineraryToRouteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteItineraryToCustomerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteItineraryToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteItineraryToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteItineraryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteItineraryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RouteItineraryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMessageFixTypeResolver<TParent = any> {\n  value?: MessageFixToValueResolver<TParent>;\n}\n\nexport interface MessageFixToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IScheduleManagerDtoTypeResolver<TParent = any> {\n  scheduleManager?: ScheduleManagerDtoToScheduleManagerResolver<TParent>;\n  schedules?: ScheduleManagerDtoToSchedulesResolver<TParent>;\n}\n\nexport interface ScheduleManagerDtoToScheduleManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleManagerDtoToSchedulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IScheduleManagerTypeResolver<TParent = any> {\n  projectId?: ScheduleManagerToProjectIdResolver<TParent>;\n  memberId?: ScheduleManagerToMemberIdResolver<TParent>;\n  eventTypeId?: ScheduleManagerToEventTypeIdResolver<TParent>;\n  eventType?: ScheduleManagerToEventTypeResolver<TParent>;\n  schedules?: ScheduleManagerToSchedulesResolver<TParent>;\n  id?: ScheduleManagerToIdResolver<TParent>;\n  createdAt?: ScheduleManagerToCreatedAtResolver<TParent>;\n  updatedAt?: ScheduleManagerToUpdatedAtResolver<TParent>;\n}\n\nexport interface ScheduleManagerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleManagerToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleManagerToEventTypeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleManagerToEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleManagerToSchedulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleManagerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleManagerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleManagerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEventTypeTypeResolver<TParent = any> {\n  projectId?: EventTypeToProjectIdResolver<TParent>;\n  name?: EventTypeToNameResolver<TParent>;\n  price?: EventTypeToPriceResolver<TParent>;\n  subEventTypes?: EventTypeToSubEventTypesResolver<TParent>;\n  image?: EventTypeToImageResolver<TParent>;\n  description?: EventTypeToDescriptionResolver<TParent>;\n  id?: EventTypeToIdResolver<TParent>;\n  createdAt?: EventTypeToCreatedAtResolver<TParent>;\n  updatedAt?: EventTypeToUpdatedAtResolver<TParent>;\n}\n\nexport interface EventTypeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventTypeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventTypeToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventTypeToSubEventTypesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventTypeToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventTypeToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventTypeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventTypeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventTypeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISubEventTypeTypeResolver<TParent = any> {\n  name?: SubEventTypeToNameResolver<TParent>;\n  price?: SubEventTypeToPriceResolver<TParent>;\n  eventTypes?: SubEventTypeToEventTypesResolver<TParent>;\n  id?: SubEventTypeToIdResolver<TParent>;\n  createdAt?: SubEventTypeToCreatedAtResolver<TParent>;\n  updatedAt?: SubEventTypeToUpdatedAtResolver<TParent>;\n}\n\nexport interface SubEventTypeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubEventTypeToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubEventTypeToEventTypesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubEventTypeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubEventTypeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubEventTypeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IScheduleTypeResolver<TParent = any> {\n  scheduleManagerId?: ScheduleToScheduleManagerIdResolver<TParent>;\n  scheduleManager?: ScheduleToScheduleManagerResolver<TParent>;\n  day?: ScheduleToDayResolver<TParent>;\n  turn?: ScheduleToTurnResolver<TParent>;\n  weekDay?: ScheduleToWeekDayResolver<TParent>;\n  id?: ScheduleToIdResolver<TParent>;\n  createdAt?: ScheduleToCreatedAtResolver<TParent>;\n  updatedAt?: ScheduleToUpdatedAtResolver<TParent>;\n}\n\nexport interface ScheduleToScheduleManagerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleToScheduleManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleToDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleToTurnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleToWeekDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ScheduleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITurnTypeResolver<TParent = any> {\n  scheduleId?: TurnToScheduleIdResolver<TParent>;\n  schedule?: TurnToScheduleResolver<TParent>;\n  timeEnd?: TurnToTimeEndResolver<TParent>;\n  timeStart?: TurnToTimeStartResolver<TParent>;\n  timeStartString?: TurnToTimeStartStringResolver<TParent>;\n  timeEndString?: TurnToTimeEndStringResolver<TParent>;\n  isActive?: TurnToIsActiveResolver<TParent>;\n  id?: TurnToIdResolver<TParent>;\n  createdAt?: TurnToCreatedAtResolver<TParent>;\n  updatedAt?: TurnToUpdatedAtResolver<TParent>;\n}\n\nexport interface TurnToScheduleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TurnToScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TurnToTimeEndResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TurnToTimeStartResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TurnToTimeStartStringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TurnToTimeEndStringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TurnToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TurnToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TurnToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TurnToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEventTypeResolver<TParent = any> {\n  projectId?: EventToProjectIdResolver<TParent>;\n  memberId?: EventToMemberIdResolver<TParent>;\n  title?: EventToTitleResolver<TParent>;\n  location?: EventToLocationResolver<TParent>;\n  color?: EventToColorResolver<TParent>;\n  description?: EventToDescriptionResolver<TParent>;\n  file?: EventToFileResolver<TParent>;\n  roomId?: EventToRoomIdResolver<TParent>;\n  eventDate?: EventToEventDateResolver<TParent>;\n  finishDate?: EventToFinishDateResolver<TParent>;\n  eventMode?: EventToEventModeResolver<TParent>;\n  eventSessionId?: EventToEventSessionIdResolver<TParent>;\n  eventSession?: EventToEventSessionResolver<TParent>;\n  eventMembers?: EventToEventMembersResolver<TParent>;\n  sendDetails?: EventToSendDetailsResolver<TParent>;\n  sendRemember?: EventToSendRememberResolver<TParent>;\n  totalPrice?: EventToTotalPriceResolver<TParent>;\n  discount?: EventToDiscountResolver<TParent>;\n  visibility?: EventToVisibilityResolver<TParent>;\n  eventCharges?: EventToEventChargesResolver<TParent>;\n  eventTypeId?: EventToEventTypeIdResolver<TParent>;\n  eventType?: EventToEventTypeResolver<TParent>;\n  eventStatus?: EventToEventStatusResolver<TParent>;\n  isActive?: EventToIsActiveResolver<TParent>;\n  id?: EventToIdResolver<TParent>;\n  createdAt?: EventToCreatedAtResolver<TParent>;\n  updatedAt?: EventToUpdatedAtResolver<TParent>;\n  member?: EventToMemberResolver<TParent>;\n  listDiagnostic?: EventToListDiagnosticResolver<TParent>;\n}\n\nexport interface EventToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToLocationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToRoomIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToEventDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToFinishDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToEventModeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToEventSessionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToEventSessionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToEventMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToSendDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToSendRememberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToTotalPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToVisibilityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToEventChargesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToEventTypeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToEventStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventToListDiagnosticResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEventSessionTypeResolver<TParent = any> {\n  projectId?: EventSessionToProjectIdResolver<TParent>;\n  title?: EventSessionToTitleResolver<TParent>;\n  image?: EventSessionToImageResolver<TParent>;\n  price?: EventSessionToPriceResolver<TParent>;\n  description?: EventSessionToDescriptionResolver<TParent>;\n  duration?: EventSessionToDurationResolver<TParent>;\n  eventMode?: EventSessionToEventModeResolver<TParent>;\n  event?: EventSessionToEventResolver<TParent>;\n  id?: EventSessionToIdResolver<TParent>;\n  createdAt?: EventSessionToCreatedAtResolver<TParent>;\n  updatedAt?: EventSessionToUpdatedAtResolver<TParent>;\n}\n\nexport interface EventSessionToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToDurationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToEventModeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventSessionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEventMemberTypeResolver<TParent = any> {\n  eventId?: EventMemberToEventIdResolver<TParent>;\n  event?: EventMemberToEventResolver<TParent>;\n  memberId?: EventMemberToMemberIdResolver<TParent>;\n  id?: EventMemberToIdResolver<TParent>;\n  createdAt?: EventMemberToCreatedAtResolver<TParent>;\n  updatedAt?: EventMemberToUpdatedAtResolver<TParent>;\n  member?: EventMemberToMemberResolver<TParent>;\n}\n\nexport interface EventMemberToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventMemberToEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventMemberToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventMemberToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventMemberToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventMemberToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventMemberToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEventChargeTypeResolver<TParent = any> {\n  eventId?: EventChargeToEventIdResolver<TParent>;\n  event?: EventChargeToEventResolver<TParent>;\n  price?: EventChargeToPriceResolver<TParent>;\n  description?: EventChargeToDescriptionResolver<TParent>;\n  id?: EventChargeToIdResolver<TParent>;\n  createdAt?: EventChargeToCreatedAtResolver<TParent>;\n  updatedAt?: EventChargeToUpdatedAtResolver<TParent>;\n}\n\nexport interface EventChargeToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventChargeToEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventChargeToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventChargeToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventChargeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventChargeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventChargeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDiagnosticTypeResolver<TParent = any> {\n  medicines?: DiagnosticToMedicinesResolver<TParent>;\n  eventId?: DiagnosticToEventIdResolver<TParent>;\n  projectId?: DiagnosticToProjectIdResolver<TParent>;\n  memberId?: DiagnosticToMemberIdResolver<TParent>;\n  content?: DiagnosticToContentResolver<TParent>;\n  isVisible?: DiagnosticToIsVisibleResolver<TParent>;\n  id?: DiagnosticToIdResolver<TParent>;\n  createdAt?: DiagnosticToCreatedAtResolver<TParent>;\n  updatedAt?: DiagnosticToUpdatedAtResolver<TParent>;\n}\n\nexport interface DiagnosticToMedicinesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiagnosticToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiagnosticToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiagnosticToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiagnosticToContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiagnosticToIsVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiagnosticToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiagnosticToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DiagnosticToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMedicineTypeResolver<TParent = any> {\n  projectId?: MedicineToProjectIdResolver<TParent>;\n  memberId?: MedicineToMemberIdResolver<TParent>;\n  eventId?: MedicineToEventIdResolver<TParent>;\n  medicineName?: MedicineToMedicineNameResolver<TParent>;\n  take?: MedicineToTakeResolver<TParent>;\n  frecuency?: MedicineToFrecuencyResolver<TParent>;\n  duration?: MedicineToDurationResolver<TParent>;\n  isVisible?: MedicineToIsVisibleResolver<TParent>;\n  position?: MedicineToPositionResolver<TParent>;\n  id?: MedicineToIdResolver<TParent>;\n  createdAt?: MedicineToCreatedAtResolver<TParent>;\n  updatedAt?: MedicineToUpdatedAtResolver<TParent>;\n}\n\nexport interface MedicineToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToMedicineNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToTakeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToFrecuencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToDurationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToIsVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicineToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEventCollectionSegmentTypeResolver<TParent = any> {\n  items?: EventCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: EventCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: EventCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface EventCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResourceQuoteCollectionSegmentTypeResolver<TParent = any> {\n  items?: ResourceQuoteCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ResourceQuoteCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ResourceQuoteCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ResourceQuoteCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResourceQuoteDetailCollectionSegmentTypeResolver<TParent = any> {\n  items?: ResourceQuoteDetailCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ResourceQuoteDetailCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ResourceQuoteDetailCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ResourceQuoteDetailCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResourceQuoteDetailCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProposalCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProposalCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProposalCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProposalCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProposalCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProposalCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICollaboratorCollectionSegmentTypeResolver<TParent = any> {\n  items?: CollaboratorCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CollaboratorCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CollaboratorCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CollaboratorCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICollaboratorHoursCollectionSegmentTypeResolver<TParent = any> {\n  items?: CollaboratorHoursCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CollaboratorHoursCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CollaboratorHoursCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CollaboratorHoursCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CollaboratorHoursCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHoursReportedDTOTypeResolver<TParent = any> {\n  totalHours?: HoursReportedDTOToTotalHoursResolver<TParent>;\n  totalReportedHours?: HoursReportedDTOToTotalReportedHoursResolver<TParent>;\n  projectsActive?: HoursReportedDTOToProjectsActiveResolver<TParent>;\n}\n\nexport interface HoursReportedDTOToTotalHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HoursReportedDTOToTotalReportedHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HoursReportedDTOToProjectsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConfigurationTemplateTypeResolver<TParent = any> {\n  projectId?: ConfigurationTemplateToProjectIdResolver<TParent>;\n  templateType?: ConfigurationTemplateToTemplateTypeResolver<TParent>;\n  config?: ConfigurationTemplateToConfigResolver<TParent>;\n  id?: ConfigurationTemplateToIdResolver<TParent>;\n  createdAt?: ConfigurationTemplateToCreatedAtResolver<TParent>;\n  updatedAt?: ConfigurationTemplateToUpdatedAtResolver<TParent>;\n}\n\nexport interface ConfigurationTemplateToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationTemplateToTemplateTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationTemplateToConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationTemplateToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationTemplateToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConfigurationTemplateToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IComponentTypeResolver<TParent = any> {\n  keyName?: ComponentToKeyNameResolver<TParent>;\n  services?: ComponentToServicesResolver<TParent>;\n  description?: ComponentToDescriptionResolver<TParent>;\n  type?: ComponentToTypeResolver<TParent>;\n  id?: ComponentToIdResolver<TParent>;\n  createdAt?: ComponentToCreatedAtResolver<TParent>;\n  updatedAt?: ComponentToUpdatedAtResolver<TParent>;\n}\n\nexport interface ComponentToKeyNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComponentToServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComponentToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComponentToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComponentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComponentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComponentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWebsitePageTypeResolver<TParent = any> {\n  projectId?: WebsitePageToProjectIdResolver<TParent>;\n  name?: WebsitePageToNameResolver<TParent>;\n  url?: WebsitePageToUrlResolver<TParent>;\n  seoWebSitePage?: WebsitePageToSeoWebSitePageResolver<TParent>;\n  description?: WebsitePageToDescriptionResolver<TParent>;\n  isActive?: WebsitePageToIsActiveResolver<TParent>;\n  scriptHead?: WebsitePageToScriptHeadResolver<TParent>;\n  scriptFooter?: WebsitePageToScriptFooterResolver<TParent>;\n  position?: WebsitePageToPositionResolver<TParent>;\n  websitePageComponents?: WebsitePageToWebsitePageComponentsResolver<TParent>;\n  websitePageSeos?: WebsitePageToWebsitePageSeosResolver<TParent>;\n  id?: WebsitePageToIdResolver<TParent>;\n  createdAt?: WebsitePageToCreatedAtResolver<TParent>;\n  updatedAt?: WebsitePageToUpdatedAtResolver<TParent>;\n}\n\nexport interface WebsitePageToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToSeoWebSitePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToScriptHeadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToScriptFooterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToWebsitePageComponentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToWebsitePageSeosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWebsitePageComponentTypeResolver<TParent = any> {\n  websitePageId?: WebsitePageComponentToWebsitePageIdResolver<TParent>;\n  websitePage?: WebsitePageComponentToWebsitePageResolver<TParent>;\n  keyName?: WebsitePageComponentToKeyNameResolver<TParent>;\n  props?: WebsitePageComponentToPropsResolver<TParent>;\n  position?: WebsitePageComponentToPositionResolver<TParent>;\n  parentId?: WebsitePageComponentToParentIdResolver<TParent>;\n  id?: WebsitePageComponentToIdResolver<TParent>;\n  createdAt?: WebsitePageComponentToCreatedAtResolver<TParent>;\n  updatedAt?: WebsitePageComponentToUpdatedAtResolver<TParent>;\n}\n\nexport interface WebsitePageComponentToWebsitePageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageComponentToWebsitePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageComponentToKeyNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageComponentToPropsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageComponentToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageComponentToParentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageComponentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageComponentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageComponentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWebsitePageSeoTypeResolver<TParent = any> {\n  websitePageId?: WebsitePageSeoToWebsitePageIdResolver<TParent>;\n  websitePage?: WebsitePageSeoToWebsitePageResolver<TParent>;\n  title?: WebsitePageSeoToTitleResolver<TParent>;\n  description?: WebsitePageSeoToDescriptionResolver<TParent>;\n  keywords?: WebsitePageSeoToKeywordsResolver<TParent>;\n  canonicalUrl?: WebsitePageSeoToCanonicalUrlResolver<TParent>;\n  robots?: WebsitePageSeoToRobotsResolver<TParent>;\n  googlebot?: WebsitePageSeoToGooglebotResolver<TParent>;\n  author?: WebsitePageSeoToAuthorResolver<TParent>;\n  language?: WebsitePageSeoToLanguageResolver<TParent>;\n  twitterCard?: WebsitePageSeoToTwitterCardResolver<TParent>;\n  twitterSite?: WebsitePageSeoToTwitterSiteResolver<TParent>;\n  twitterCreator?: WebsitePageSeoToTwitterCreatorResolver<TParent>;\n  twitterTitle?: WebsitePageSeoToTwitterTitleResolver<TParent>;\n  twitterDescription?: WebsitePageSeoToTwitterDescriptionResolver<TParent>;\n  twitterUrl?: WebsitePageSeoToTwitterUrlResolver<TParent>;\n  twitterImageAlt?: WebsitePageSeoToTwitterImageAltResolver<TParent>;\n  twitterImageTitle?: WebsitePageSeoToTwitterImageTitleResolver<TParent>;\n  twitterImageWidth?: WebsitePageSeoToTwitterImageWidthResolver<TParent>;\n  twitterImageHeight?: WebsitePageSeoToTwitterImageHeightResolver<TParent>;\n  twitterImage?: WebsitePageSeoToTwitterImageResolver<TParent>;\n  openGraphTitle?: WebsitePageSeoToOpenGraphTitleResolver<TParent>;\n  openGraphDescription?: WebsitePageSeoToOpenGraphDescriptionResolver<TParent>;\n  openGraphUrl?: WebsitePageSeoToOpenGraphUrlResolver<TParent>;\n  openGraphImageAlt?: WebsitePageSeoToOpenGraphImageAltResolver<TParent>;\n  openGraphImageTitle?: WebsitePageSeoToOpenGraphImageTitleResolver<TParent>;\n  openGraphImageWidth?: WebsitePageSeoToOpenGraphImageWidthResolver<TParent>;\n  openGraphImageHeight?: WebsitePageSeoToOpenGraphImageHeightResolver<TParent>;\n  openGraphImage?: WebsitePageSeoToOpenGraphImageResolver<TParent>;\n  openGraphType?: WebsitePageSeoToOpenGraphTypeResolver<TParent>;\n  openGraphSiteName?: WebsitePageSeoToOpenGraphSiteNameResolver<TParent>;\n  openGraphFacebookAppId?: WebsitePageSeoToOpenGraphFacebookAppIdResolver<TParent>;\n  id?: WebsitePageSeoToIdResolver<TParent>;\n  createdAt?: WebsitePageSeoToCreatedAtResolver<TParent>;\n  updatedAt?: WebsitePageSeoToUpdatedAtResolver<TParent>;\n}\n\nexport interface WebsitePageSeoToWebsitePageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToWebsitePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToKeywordsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToCanonicalUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToRobotsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToGooglebotResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToAuthorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToLanguageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterSiteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterCreatorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterImageAltResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterImageTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterImageWidthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterImageHeightResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToTwitterImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphImageAltResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphImageTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphImageWidthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphImageHeightResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphSiteNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToOpenGraphFacebookAppIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WebsitePageSeoToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectPlanSubscriptionCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProjectPlanSubscriptionCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProjectPlanSubscriptionCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProjectPlanSubscriptionCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProjectPlanSubscriptionCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanSubscriptionCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBusinessCollectionSegmentTypeResolver<TParent = any> {\n  items?: BusinessCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BusinessCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BusinessCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BusinessCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBusinessTypeCollectionSegmentTypeResolver<TParent = any> {\n  items?: BusinessTypeCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BusinessTypeCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BusinessTypeCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BusinessTypeCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessTypeCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessTypeCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBusinessRuleCollectionSegmentTypeResolver<TParent = any> {\n  items?: BusinessRuleCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BusinessRuleCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BusinessRuleCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BusinessRuleCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BusinessRuleCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectPlanCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProjectPlanCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProjectPlanCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProjectPlanCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProjectPlanCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectPlanCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITemplateTypeResolver<TParent = any> {\n  projectId?: TemplateToProjectIdResolver<TParent>;\n  title?: TemplateToTitleResolver<TParent>;\n  message?: TemplateToMessageResolver<TParent>;\n  serviceName?: TemplateToServiceNameResolver<TParent>;\n  projectRoleId?: TemplateToProjectRoleIdResolver<TParent>;\n  templateType?: TemplateToTemplateTypeResolver<TParent>;\n  releaseDate?: TemplateToReleaseDateResolver<TParent>;\n  couponId?: TemplateToCouponIdResolver<TParent>;\n  coupon?: TemplateToCouponResolver<TParent>;\n  id?: TemplateToIdResolver<TParent>;\n  createdAt?: TemplateToCreatedAtResolver<TParent>;\n  updatedAt?: TemplateToUpdatedAtResolver<TParent>;\n  projectRole?: TemplateToProjectRoleResolver<TParent>;\n}\n\nexport interface TemplateToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToServiceNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToProjectRoleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToTemplateTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToReleaseDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToCouponIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToCouponResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplateToProjectRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICouponTypeResolver<TParent = any> {\n  projectId?: CouponToProjectIdResolver<TParent>;\n  beginingDate?: CouponToBeginingDateResolver<TParent>;\n  endDate?: CouponToEndDateResolver<TParent>;\n  code?: CouponToCodeResolver<TParent>;\n  roleType?: CouponToRoleTypeResolver<TParent>;\n  couponRuleType?: CouponToCouponRuleTypeResolver<TParent>;\n  itemToApplyTo?: CouponToItemToApplyToResolver<TParent>;\n  title?: CouponToTitleResolver<TParent>;\n  percentage?: CouponToPercentageResolver<TParent>;\n  ruleAppliesOn?: CouponToRuleAppliesOnResolver<TParent>;\n  id?: CouponToIdResolver<TParent>;\n  createdAt?: CouponToCreatedAtResolver<TParent>;\n  updatedAt?: CouponToUpdatedAtResolver<TParent>;\n}\n\nexport interface CouponToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToBeginingDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToEndDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToRoleTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToCouponRuleTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToItemToApplyToResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToPercentageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToRuleAppliesOnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IErrorPageTypeResolver<TParent = any> {\n  projectId?: ErrorPageToProjectIdResolver<TParent>;\n  page?: ErrorPageToPageResolver<TParent>;\n  description?: ErrorPageToDescriptionResolver<TParent>;\n  errorPageValidations?: ErrorPageToErrorPageValidationsResolver<TParent>;\n  id?: ErrorPageToIdResolver<TParent>;\n  createdAt?: ErrorPageToCreatedAtResolver<TParent>;\n  updatedAt?: ErrorPageToUpdatedAtResolver<TParent>;\n}\n\nexport interface ErrorPageToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageToPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageToErrorPageValidationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IErrorPageValidationTypeResolver<TParent = any> {\n  errorPageId?: ErrorPageValidationToErrorPageIdResolver<TParent>;\n  errorPage?: ErrorPageValidationToErrorPageResolver<TParent>;\n  keyName?: ErrorPageValidationToKeyNameResolver<TParent>;\n  title?: ErrorPageValidationToTitleResolver<TParent>;\n  textMessage?: ErrorPageValidationToTextMessageResolver<TParent>;\n  textAccept?: ErrorPageValidationToTextAcceptResolver<TParent>;\n  textCancel?: ErrorPageValidationToTextCancelResolver<TParent>;\n  id?: ErrorPageValidationToIdResolver<TParent>;\n  createdAt?: ErrorPageValidationToCreatedAtResolver<TParent>;\n  updatedAt?: ErrorPageValidationToUpdatedAtResolver<TParent>;\n}\n\nexport interface ErrorPageValidationToErrorPageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageValidationToErrorPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageValidationToKeyNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageValidationToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageValidationToTextMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageValidationToTextAcceptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageValidationToTextCancelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageValidationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageValidationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorPageValidationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICouponTemplateTypeResolver<TParent = any> {\n  projectId?: CouponTemplateToProjectIdResolver<TParent>;\n  templateId?: CouponTemplateToTemplateIdResolver<TParent>;\n  couponId?: CouponTemplateToCouponIdResolver<TParent>;\n  template?: CouponTemplateToTemplateResolver<TParent>;\n  coupon?: CouponTemplateToCouponResolver<TParent>;\n  id?: CouponTemplateToIdResolver<TParent>;\n  createdAt?: CouponTemplateToCreatedAtResolver<TParent>;\n  updatedAt?: CouponTemplateToUpdatedAtResolver<TParent>;\n}\n\nexport interface CouponTemplateToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponTemplateToTemplateIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponTemplateToCouponIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponTemplateToTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponTemplateToCouponResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponTemplateToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponTemplateToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CouponTemplateToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentCategoryCollectionSegmentTypeResolver<TParent = any> {\n  items?: DocumentCategoryCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DocumentCategoryCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: DocumentCategoryCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface DocumentCategoryCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentCategoryTypeResolver<TParent = any> {\n  documentCategoryDetails?: DocumentCategoryToDocumentCategoryDetailsResolver<TParent>;\n  name?: DocumentCategoryToNameResolver<TParent>;\n  description?: DocumentCategoryToDescriptionResolver<TParent>;\n  memberId?: DocumentCategoryToMemberIdResolver<TParent>;\n  projectId?: DocumentCategoryToProjectIdResolver<TParent>;\n  id?: DocumentCategoryToIdResolver<TParent>;\n  createdAt?: DocumentCategoryToCreatedAtResolver<TParent>;\n  updatedAt?: DocumentCategoryToUpdatedAtResolver<TParent>;\n}\n\nexport interface DocumentCategoryToDocumentCategoryDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentCategoryDetailTypeResolver<TParent = any> {\n  documentCategory?: DocumentCategoryDetailToDocumentCategoryResolver<TParent>;\n  document?: DocumentCategoryDetailToDocumentResolver<TParent>;\n  documentId?: DocumentCategoryDetailToDocumentIdResolver<TParent>;\n  documentCategoryId?: DocumentCategoryDetailToDocumentCategoryIdResolver<TParent>;\n  id?: DocumentCategoryDetailToIdResolver<TParent>;\n  createdAt?: DocumentCategoryDetailToCreatedAtResolver<TParent>;\n  updatedAt?: DocumentCategoryDetailToUpdatedAtResolver<TParent>;\n}\n\nexport interface DocumentCategoryDetailToDocumentCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryDetailToDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryDetailToDocumentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryDetailToDocumentCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCategoryDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentTypeResolver<TParent = any> {\n  documentTemplates?: DocumentToDocumentTemplatesResolver<TParent>;\n  documentCategoryDetails?: DocumentToDocumentCategoryDetailsResolver<TParent>;\n  name?: DocumentToNameResolver<TParent>;\n  url?: DocumentToUrlResolver<TParent>;\n  memberId?: DocumentToMemberIdResolver<TParent>;\n  projectId?: DocumentToProjectIdResolver<TParent>;\n  id?: DocumentToIdResolver<TParent>;\n  createdAt?: DocumentToCreatedAtResolver<TParent>;\n  updatedAt?: DocumentToUpdatedAtResolver<TParent>;\n}\n\nexport interface DocumentToDocumentTemplatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentToDocumentCategoryDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentTemplateTypeResolver<TParent = any> {\n  document?: DocumentTemplateToDocumentResolver<TParent>;\n  templatePages?: DocumentTemplateToTemplatePagesResolver<TParent>;\n  name?: DocumentTemplateToNameResolver<TParent>;\n  memberId?: DocumentTemplateToMemberIdResolver<TParent>;\n  documentId?: DocumentTemplateToDocumentIdResolver<TParent>;\n  id?: DocumentTemplateToIdResolver<TParent>;\n  createdAt?: DocumentTemplateToCreatedAtResolver<TParent>;\n  updatedAt?: DocumentTemplateToUpdatedAtResolver<TParent>;\n}\n\nexport interface DocumentTemplateToDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTemplateToTemplatePagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTemplateToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTemplateToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTemplateToDocumentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTemplateToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTemplateToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTemplateToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITemplatePageTypeResolver<TParent = any> {\n  documentTemplate?: TemplatePageToDocumentTemplateResolver<TParent>;\n  documentTags?: TemplatePageToDocumentTagsResolver<TParent>;\n  page?: TemplatePageToPageResolver<TParent>;\n  url?: TemplatePageToUrlResolver<TParent>;\n  templateId?: TemplatePageToTemplateIdResolver<TParent>;\n  id?: TemplatePageToIdResolver<TParent>;\n  createdAt?: TemplatePageToCreatedAtResolver<TParent>;\n  updatedAt?: TemplatePageToUpdatedAtResolver<TParent>;\n}\n\nexport interface TemplatePageToDocumentTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplatePageToDocumentTagsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplatePageToPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplatePageToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplatePageToTemplateIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplatePageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplatePageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplatePageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentTagTypeResolver<TParent = any> {\n  templatePage?: DocumentTagToTemplatePageResolver<TParent>;\n  documentScans?: DocumentTagToDocumentScansResolver<TParent>;\n  name?: DocumentTagToNameResolver<TParent>;\n  height?: DocumentTagToHeightResolver<TParent>;\n  width?: DocumentTagToWidthResolver<TParent>;\n  verticalAxis?: DocumentTagToVerticalAxisResolver<TParent>;\n  horizontalAxis?: DocumentTagToHorizontalAxisResolver<TParent>;\n  templatePageId?: DocumentTagToTemplatePageIdResolver<TParent>;\n  id?: DocumentTagToIdResolver<TParent>;\n  createdAt?: DocumentTagToCreatedAtResolver<TParent>;\n  updatedAt?: DocumentTagToUpdatedAtResolver<TParent>;\n}\n\nexport interface DocumentTagToTemplatePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToDocumentScansResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToHeightResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToWidthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToVerticalAxisResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToHorizontalAxisResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToTemplatePageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTagToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentScanTypeResolver<TParent = any> {\n  documentTag?: DocumentScanToDocumentTagResolver<TParent>;\n  documentRead?: DocumentScanToDocumentReadResolver<TParent>;\n  value?: DocumentScanToValueResolver<TParent>;\n  documentTagId?: DocumentScanToDocumentTagIdResolver<TParent>;\n  documentReadId?: DocumentScanToDocumentReadIdResolver<TParent>;\n  id?: DocumentScanToIdResolver<TParent>;\n  createdAt?: DocumentScanToCreatedAtResolver<TParent>;\n  updatedAt?: DocumentScanToUpdatedAtResolver<TParent>;\n}\n\nexport interface DocumentScanToDocumentTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentScanToDocumentReadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentScanToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentScanToDocumentTagIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentScanToDocumentReadIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentScanToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentScanToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentScanToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentReadTypeResolver<TParent = any> {\n  documentScans?: DocumentReadToDocumentScansResolver<TParent>;\n  memberId?: DocumentReadToMemberIdResolver<TParent>;\n  projectId?: DocumentReadToProjectIdResolver<TParent>;\n  url?: DocumentReadToUrlResolver<TParent>;\n  id?: DocumentReadToIdResolver<TParent>;\n  createdAt?: DocumentReadToCreatedAtResolver<TParent>;\n  updatedAt?: DocumentReadToUpdatedAtResolver<TParent>;\n}\n\nexport interface DocumentReadToDocumentScansResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentReadToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentReadToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentReadToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentReadToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentReadToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentReadToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentCollectionSegmentTypeResolver<TParent = any> {\n  items?: DocumentCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DocumentCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: DocumentCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface DocumentCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentTemplateCollectionSegmentTypeResolver<TParent = any> {\n  items?: DocumentTemplateCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DocumentTemplateCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: DocumentTemplateCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface DocumentTemplateCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTemplateCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentTemplateCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITemplatePageCollectionSegmentTypeResolver<TParent = any> {\n  items?: TemplatePageCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: TemplatePageCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: TemplatePageCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface TemplatePageCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplatePageCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TemplatePageCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentReadCollectionSegmentTypeResolver<TParent = any> {\n  items?: DocumentReadCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DocumentReadCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: DocumentReadCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface DocumentReadCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentReadCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DocumentReadCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVideoRoomTypeResolver<TParent = any> {\n  projectId?: VideoRoomToProjectIdResolver<TParent>;\n  sessionId?: VideoRoomToSessionIdResolver<TParent>;\n  sessionName?: VideoRoomToSessionNameResolver<TParent>;\n  url?: VideoRoomToUrlResolver<TParent>;\n  creatorName?: VideoRoomToCreatorNameResolver<TParent>;\n  creatorEmail?: VideoRoomToCreatorEmailResolver<TParent>;\n  dateScheduled?: VideoRoomToDateScheduledResolver<TParent>;\n  title?: VideoRoomToTitleResolver<TParent>;\n  memberId?: VideoRoomToMemberIdResolver<TParent>;\n  typeVideo?: VideoRoomToTypeVideoResolver<TParent>;\n  videoRoomMembers?: VideoRoomToVideoRoomMembersResolver<TParent>;\n  videoRoomRecords?: VideoRoomToVideoRoomRecordsResolver<TParent>;\n  id?: VideoRoomToIdResolver<TParent>;\n  createdAt?: VideoRoomToCreatedAtResolver<TParent>;\n  updatedAt?: VideoRoomToUpdatedAtResolver<TParent>;\n}\n\nexport interface VideoRoomToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToSessionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToSessionNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToCreatorNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToCreatorEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToDateScheduledResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToTypeVideoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToVideoRoomMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToVideoRoomRecordsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVideoRoomMemberTypeResolver<TParent = any> {\n  videoRoomId?: VideoRoomMemberToVideoRoomIdResolver<TParent>;\n  videoRoom?: VideoRoomMemberToVideoRoomResolver<TParent>;\n  fullName?: VideoRoomMemberToFullNameResolver<TParent>;\n  email?: VideoRoomMemberToEmailResolver<TParent>;\n  photo?: VideoRoomMemberToPhotoResolver<TParent>;\n  id?: VideoRoomMemberToIdResolver<TParent>;\n  createdAt?: VideoRoomMemberToCreatedAtResolver<TParent>;\n  updatedAt?: VideoRoomMemberToUpdatedAtResolver<TParent>;\n}\n\nexport interface VideoRoomMemberToVideoRoomIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomMemberToVideoRoomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomMemberToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomMemberToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomMemberToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomMemberToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomMemberToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomMemberToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVideoRoomRecordTypeResolver<TParent = any> {\n  roomName?: VideoRoomRecordToRoomNameResolver<TParent>;\n  memberId?: VideoRoomRecordToMemberIdResolver<TParent>;\n  status?: VideoRoomRecordToStatusResolver<TParent>;\n  name?: VideoRoomRecordToNameResolver<TParent>;\n  path?: VideoRoomRecordToPathResolver<TParent>;\n  livekitRecordingId?: VideoRoomRecordToLivekitRecordingIdResolver<TParent>;\n  videoRoomId?: VideoRoomRecordToVideoRoomIdResolver<TParent>;\n  videoRoom?: VideoRoomRecordToVideoRoomResolver<TParent>;\n  id?: VideoRoomRecordToIdResolver<TParent>;\n  createdAt?: VideoRoomRecordToCreatedAtResolver<TParent>;\n  updatedAt?: VideoRoomRecordToUpdatedAtResolver<TParent>;\n}\n\nexport interface VideoRoomRecordToRoomNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToPathResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToLivekitRecordingIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToVideoRoomIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToVideoRoomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoRoomRecordToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRoomTokenLiveKit2TypeResolver<TParent = any> {\n  createtAt?: RoomTokenLiveKit2ToCreatetAtResolver<TParent>;\n  roomName?: RoomTokenLiveKit2ToRoomNameResolver<TParent>;\n  token?: RoomTokenLiveKit2ToTokenResolver<TParent>;\n  participantIdentity?: RoomTokenLiveKit2ToParticipantIdentityResolver<TParent>;\n}\n\nexport interface RoomTokenLiveKit2ToCreatetAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoomTokenLiveKit2ToRoomNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoomTokenLiveKit2ToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoomTokenLiveKit2ToParticipantIdentityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVideoCallTypeResolver<TParent = any> {\n  projectId?: VideoCallToProjectIdResolver<TParent>;\n  memberId?: VideoCallToMemberIdResolver<TParent>;\n  sessionId?: VideoCallToSessionIdResolver<TParent>;\n  sessionName?: VideoCallToSessionNameResolver<TParent>;\n  url?: VideoCallToUrlResolver<TParent>;\n  members?: VideoCallToMembersResolver<TParent>;\n  services?: VideoCallToServicesResolver<TParent>;\n  id?: VideoCallToIdResolver<TParent>;\n  createdAt?: VideoCallToCreatedAtResolver<TParent>;\n  updatedAt?: VideoCallToUpdatedAtResolver<TParent>;\n}\n\nexport interface VideoCallToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallToSessionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallToSessionNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallToMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallToServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVideoCallMemberTypeResolver<TParent = any> {\n  videoCallId?: VideoCallMemberToVideoCallIdResolver<TParent>;\n  videoCall?: VideoCallMemberToVideoCallResolver<TParent>;\n  memberId?: VideoCallMemberToMemberIdResolver<TParent>;\n  id?: VideoCallMemberToIdResolver<TParent>;\n  createdAt?: VideoCallMemberToCreatedAtResolver<TParent>;\n  updatedAt?: VideoCallMemberToUpdatedAtResolver<TParent>;\n}\n\nexport interface VideoCallMemberToVideoCallIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallMemberToVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallMemberToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallMemberToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallMemberToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallMemberToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVideoCallServiceTypeResolver<TParent = any> {\n  videoCallId?: VideoCallServiceToVideoCallIdResolver<TParent>;\n  videoCall?: VideoCallServiceToVideoCallResolver<TParent>;\n  serviceCode?: VideoCallServiceToServiceCodeResolver<TParent>;\n  viewAdmin?: VideoCallServiceToViewAdminResolver<TParent>;\n  viewUser?: VideoCallServiceToViewUserResolver<TParent>;\n  id?: VideoCallServiceToIdResolver<TParent>;\n  createdAt?: VideoCallServiceToCreatedAtResolver<TParent>;\n  updatedAt?: VideoCallServiceToUpdatedAtResolver<TParent>;\n}\n\nexport interface VideoCallServiceToVideoCallIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallServiceToVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallServiceToServiceCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallServiceToViewAdminResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallServiceToViewUserResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallServiceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoCallServiceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVideoTypeResolver<TParent = any> {\n  sessionId?: VideoToSessionIdResolver<TParent>;\n  token?: VideoToTokenResolver<TParent>;\n  videoCall?: VideoToVideoCallResolver<TParent>;\n}\n\nexport interface VideoToSessionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VideoToVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContactEmailTypeResolver<TParent = any> {\n  fullName?: ContactEmailToFullNameResolver<TParent>;\n  email?: ContactEmailToEmailResolver<TParent>;\n  sendGridKey?: ContactEmailToSendGridKeyResolver<TParent>;\n  fromEmail?: ContactEmailToFromEmailResolver<TParent>;\n  fromName?: ContactEmailToFromNameResolver<TParent>;\n  sendGridTemplateId?: ContactEmailToSendGridTemplateIdResolver<TParent>;\n  description?: ContactEmailToDescriptionResolver<TParent>;\n  projectId?: ContactEmailToProjectIdResolver<TParent>;\n  id?: ContactEmailToIdResolver<TParent>;\n  createdAt?: ContactEmailToCreatedAtResolver<TParent>;\n  updatedAt?: ContactEmailToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContactEmailToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToSendGridKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToFromEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToFromNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToSendGridTemplateIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactEmailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceCollectionSegmentTypeResolver<TParent = any> {\n  items?: ServiceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ServiceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ServiceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ServiceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAreaCollectionSegmentTypeResolver<TParent = any> {\n  items?: AreaCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: AreaCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: AreaCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface AreaCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AreaCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceQuizCollectionSegmentTypeResolver<TParent = any> {\n  items?: ServiceQuizCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ServiceQuizCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ServiceQuizCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ServiceQuizCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceQuizCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceQuizCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizSectionCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizSectionCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizSectionCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizSectionCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizSectionCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizSectionCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizQuestionCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizQuestionCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizQuestionCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizQuestionCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionAnswerCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizQuestionAnswerCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizQuestionAnswerCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizQuestionAnswerCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizQuestionAnswerCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionAnswerCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizAnswerCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizAnswerCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizAnswerCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizAnswerCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizAnswerCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizAnswerCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizAnswerCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizMemberCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizMemberCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizMemberCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizMemberCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberGroupedCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizMemberGroupedCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizMemberGroupedCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizMemberGroupedCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizMemberGroupedCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberGroupedCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberGroupedCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberGroupedTypeResolver<TParent = any> {\n  quizMembers?: QuizMemberGroupedToQuizMembersResolver<TParent>;\n  mail?: QuizMemberGroupedToMailResolver<TParent>;\n  manyTimes?: QuizMemberGroupedToManyTimesResolver<TParent>;\n}\n\nexport interface QuizMemberGroupedToQuizMembersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberGroupedToMailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberGroupedToManyTimesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionMemberCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizQuestionMemberCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizQuestionMemberCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizQuestionMemberCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizQuestionMemberCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizQuestionMemberCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberAnswerCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizMemberAnswerCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizMemberAnswerCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizMemberAnswerCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizMemberAnswerCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberAnswerCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberAnswerCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberDescriptionCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuizMemberDescriptionCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuizMemberDescriptionCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuizMemberDescriptionCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuizMemberDescriptionCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberDescriptionCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuizMemberDescriptionCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICatalogTypeResolver<TParent = any> {\n  catalogoJsonString?: CatalogToCatalogoJsonStringResolver<TParent>;\n  error?: CatalogToErrorResolver<TParent>;\n}\n\nexport interface CatalogToCatalogoJsonStringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CatalogToErrorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IErrorsTypeResolver<TParent = any> {\n  numero?: ErrorsToNumeroResolver<TParent>;\n  descripcion?: ErrorsToDescripcionResolver<TParent>;\n}\n\nexport interface ErrorsToNumeroResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorsToDescripcionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuotationResponseTypeResolver<TParent = any> {\n  jsonCotizacion?: QuotationResponseToJsonCotizacionResolver<TParent>;\n  estatus?: QuotationResponseToEstatusResolver<TParent>;\n  idCotizacion?: QuotationResponseToIdCotizacionResolver<TParent>;\n  error?: QuotationResponseToErrorResolver<TParent>;\n}\n\nexport interface QuotationResponseToJsonCotizacionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationResponseToEstatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationResponseToIdCotizacionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationResponseToErrorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageTypeResolver<TParent = any> {\n  cotizacionId?: CoverageToCotizacionIdResolver<TParent>;\n  agente?: CoverageToAgenteResolver<TParent>;\n  telefono?: CoverageToTelefonoResolver<TParent>;\n  email?: CoverageToEmailResolver<TParent>;\n  subramo?: CoverageToSubramoResolver<TParent>;\n  detallesPorAseguradora?: CoverageToDetallesPorAseguradoraResolver<TParent>;\n}\n\nexport interface CoverageToCotizacionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageToAgenteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageToTelefonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageToSubramoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageToDetallesPorAseguradoraResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDetailsInsurerTypeResolver<TParent = any> {\n  aseguradoraSubRamoId?: DetailsInsurerToAseguradoraSubRamoIdResolver<TParent>;\n  claveVehiculo?: DetailsInsurerToClaveVehiculoResolver<TParent>;\n  detallesPorProducto?: DetailsInsurerToDetallesPorProductoResolver<TParent>;\n  id?: DetailsInsurerToIdResolver<TParent>;\n  createdAt?: DetailsInsurerToCreatedAtResolver<TParent>;\n  updatedAt?: DetailsInsurerToUpdatedAtResolver<TParent>;\n}\n\nexport interface DetailsInsurerToAseguradoraSubRamoIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsInsurerToClaveVehiculoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsInsurerToDetallesPorProductoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsInsurerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsInsurerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsInsurerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDetailsProductTypeResolver<TParent = any> {\n  productoId?: DetailsProductToProductoIdResolver<TParent>;\n  productoNombre?: DetailsProductToProductoNombreResolver<TParent>;\n  condicionesCoberturas?: DetailsProductToCondicionesCoberturasResolver<TParent>;\n  especificaciones?: DetailsProductToEspecificacionesResolver<TParent>;\n  detallesPorCobertura?: DetailsProductToDetallesPorCoberturaResolver<TParent>;\n  detailsInsurerId?: DetailsProductToDetailsInsurerIdResolver<TParent>;\n  detallesPorAseguradora?: DetailsProductToDetallesPorAseguradoraResolver<TParent>;\n  id?: DetailsProductToIdResolver<TParent>;\n  createdAt?: DetailsProductToCreatedAtResolver<TParent>;\n  updatedAt?: DetailsProductToUpdatedAtResolver<TParent>;\n}\n\nexport interface DetailsProductToProductoIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsProductToProductoNombreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsProductToCondicionesCoberturasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsProductToEspecificacionesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsProductToDetallesPorCoberturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsProductToDetailsInsurerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsProductToDetallesPorAseguradoraResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsProductToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsProductToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsProductToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConditionsProductTypeResolver<TParent = any> {\n  id?: ConditionsProductToIdResolver<TParent>;\n  nombre?: ConditionsProductToNombreResolver<TParent>;\n  valor?: ConditionsProductToValorResolver<TParent>;\n  orden?: ConditionsProductToOrdenResolver<TParent>;\n  deducibleAplica?: ConditionsProductToDeducibleAplicaResolver<TParent>;\n  deducibleValor?: ConditionsProductToDeducibleValorResolver<TParent>;\n  detailsProductId?: ConditionsProductToDetailsProductIdResolver<TParent>;\n  detallesPorCobertura?: ConditionsProductToDetallesPorCoberturaResolver<TParent>;\n  createdAt?: ConditionsProductToCreatedAtResolver<TParent>;\n  updatedAt?: ConditionsProductToUpdatedAtResolver<TParent>;\n}\n\nexport interface ConditionsProductToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConditionsProductToNombreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConditionsProductToValorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConditionsProductToOrdenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConditionsProductToDeducibleAplicaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConditionsProductToDeducibleValorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConditionsProductToDetailsProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConditionsProductToDetallesPorCoberturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConditionsProductToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConditionsProductToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISpecsTypeResolver<TParent = any> {\n  id?: SpecsToIdResolver<TParent>;\n  nombre?: SpecsToNombreResolver<TParent>;\n  valor?: SpecsToValorResolver<TParent>;\n  orden?: SpecsToOrdenResolver<TParent>;\n  detailsProductId?: SpecsToDetailsProductIdResolver<TParent>;\n  detallesPorCobertura?: SpecsToDetallesPorCoberturaResolver<TParent>;\n  createdAt?: SpecsToCreatedAtResolver<TParent>;\n  updatedAt?: SpecsToUpdatedAtResolver<TParent>;\n}\n\nexport interface SpecsToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpecsToNombreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpecsToValorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpecsToOrdenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpecsToDetailsProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpecsToDetallesPorCoberturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpecsToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpecsToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDetailsCoverageTypeResolver<TParent = any> {\n  coberturaId?: DetailsCoverageToCoberturaIdResolver<TParent>;\n  coberturaNombre?: DetailsCoverageToCoberturaNombreResolver<TParent>;\n  coberturaOrden?: DetailsCoverageToCoberturaOrdenResolver<TParent>;\n  detalles?: DetailsCoverageToDetallesResolver<TParent>;\n  detailsProductId?: DetailsCoverageToDetailsProductIdResolver<TParent>;\n  detallesPorCobertura?: DetailsCoverageToDetallesPorCoberturaResolver<TParent>;\n  id?: DetailsCoverageToIdResolver<TParent>;\n  createdAt?: DetailsCoverageToCreatedAtResolver<TParent>;\n  updatedAt?: DetailsCoverageToUpdatedAtResolver<TParent>;\n}\n\nexport interface DetailsCoverageToCoberturaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsCoverageToCoberturaNombreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsCoverageToCoberturaOrdenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsCoverageToDetallesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsCoverageToDetailsProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsCoverageToDetallesPorCoberturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsCoverageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsCoverageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsCoverageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDetailsTypeResolver<TParent = any> {\n  detalleId?: DetailsToDetalleIdResolver<TParent>;\n  detalleNombre?: DetailsToDetalleNombreResolver<TParent>;\n  detalleValor?: DetailsToDetalleValorResolver<TParent>;\n  coberturaOrden?: DetailsToCoberturaOrdenResolver<TParent>;\n  detailsCoverageId?: DetailsToDetailsCoverageIdResolver<TParent>;\n  detallesPorCobertura?: DetailsToDetallesPorCoberturaResolver<TParent>;\n  id?: DetailsToIdResolver<TParent>;\n  createdAt?: DetailsToCreatedAtResolver<TParent>;\n  updatedAt?: DetailsToUpdatedAtResolver<TParent>;\n}\n\nexport interface DetailsToDetalleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsToDetalleNombreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsToDetalleValorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsToCoberturaOrdenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsToDetailsCoverageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsToDetallesPorCoberturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DetailsToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITransactionCollectionSegmentTypeResolver<TParent = any> {\n  items?: TransactionCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: TransactionCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: TransactionCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface TransactionCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TransactionCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Ipayment_TransactionTypeResolver<TParent = any> {\n  companyId?: payment_TransactionToCompanyIdResolver<TParent>;\n  projectId?: payment_TransactionToProjectIdResolver<TParent>;\n  memberId?: payment_TransactionToMemberIdResolver<TParent>;\n  transactionNumber?: payment_TransactionToTransactionNumberResolver<TParent>;\n  transactionRequest?: payment_TransactionToTransactionRequestResolver<TParent>;\n  transactionToken?: payment_TransactionToTransactionTokenResolver<TParent>;\n  transactionType?: payment_TransactionToTransactionTypeResolver<TParent>;\n  transactionStatus?: payment_TransactionToTransactionStatusResolver<TParent>;\n  amount?: payment_TransactionToAmountResolver<TParent>;\n  trasactionResponse?: payment_TransactionToTrasactionResponseResolver<TParent>;\n  invoiceId?: payment_TransactionToInvoiceIdResolver<TParent>;\n  invoice?: payment_TransactionToInvoiceResolver<TParent>;\n  methodPaymentId?: payment_TransactionToMethodPaymentIdResolver<TParent>;\n  methodPayment?: payment_TransactionToMethodPaymentResolver<TParent>;\n  id?: payment_TransactionToIdResolver<TParent>;\n  createdAt?: payment_TransactionToCreatedAtResolver<TParent>;\n  updatedAt?: payment_TransactionToUpdatedAtResolver<TParent>;\n}\n\nexport interface payment_TransactionToCompanyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToTransactionNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToTransactionRequestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToTransactionTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToTransactionTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToTransactionStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToTrasactionResponseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToInvoiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToInvoiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToMethodPaymentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToMethodPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_TransactionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMethodPaymentTypeResolver<TParent = any> {\n  companyId?: MethodPaymentToCompanyIdResolver<TParent>;\n  projectId?: MethodPaymentToProjectIdResolver<TParent>;\n  memberId?: MethodPaymentToMemberIdResolver<TParent>;\n  alias?: MethodPaymentToAliasResolver<TParent>;\n  privateKey?: MethodPaymentToPrivateKeyResolver<TParent>;\n  publicKey?: MethodPaymentToPublicKeyResolver<TParent>;\n  active?: MethodPaymentToActiveResolver<TParent>;\n  servicePayment?: MethodPaymentToServicePaymentResolver<TParent>;\n  id?: MethodPaymentToIdResolver<TParent>;\n  createdAt?: MethodPaymentToCreatedAtResolver<TParent>;\n  updatedAt?: MethodPaymentToUpdatedAtResolver<TParent>;\n}\n\nexport interface MethodPaymentToCompanyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToAliasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToPrivateKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToPublicKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToServicePaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMethodPaymentCollectionSegmentTypeResolver<TParent = any> {\n  items?: MethodPaymentCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MethodPaymentCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MethodPaymentCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MethodPaymentCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MethodPaymentCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPlanCollectionSegmentTypeResolver<TParent = any> {\n  items?: PlanCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PlanCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PlanCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PlanCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PlanCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Ipayment_PlanTypeResolver<TParent = any> {\n  projectId?: payment_PlanToProjectIdResolver<TParent>;\n  description?: payment_PlanToDescriptionResolver<TParent>;\n  code?: payment_PlanToCodeResolver<TParent>;\n  codeStripe?: payment_PlanToCodeStripeResolver<TParent>;\n  status?: payment_PlanToStatusResolver<TParent>;\n  amount?: payment_PlanToAmountResolver<TParent>;\n  productId?: payment_PlanToProductIdResolver<TParent>;\n  id?: payment_PlanToIdResolver<TParent>;\n  createdAt?: payment_PlanToCreatedAtResolver<TParent>;\n  updatedAt?: payment_PlanToUpdatedAtResolver<TParent>;\n}\n\nexport interface payment_PlanToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_PlanToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_PlanToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_PlanToCodeStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_PlanToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_PlanToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_PlanToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_PlanToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_PlanToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface payment_PlanToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInvoiceCollectionSegmentTypeResolver<TParent = any> {\n  items?: InvoiceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InvoiceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InvoiceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InvoiceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvoiceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICustomerSuscriptionTypeResolver<TParent = any> {\n  memberId?: CustomerSuscriptionToMemberIdResolver<TParent>;\n  planId?: CustomerSuscriptionToPlanIdResolver<TParent>;\n  plan?: CustomerSuscriptionToPlanResolver<TParent>;\n  id?: CustomerSuscriptionToIdResolver<TParent>;\n  createdAt?: CustomerSuscriptionToCreatedAtResolver<TParent>;\n  updatedAt?: CustomerSuscriptionToUpdatedAtResolver<TParent>;\n}\n\nexport interface CustomerSuscriptionToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerSuscriptionToPlanIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerSuscriptionToPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerSuscriptionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerSuscriptionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerSuscriptionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProductStripeTypeResolver<TParent = any> {\n  projectId?: ProductStripeToProjectIdResolver<TParent>;\n  productId?: ProductStripeToProductIdResolver<TParent>;\n  stripeId?: ProductStripeToStripeIdResolver<TParent>;\n  id?: ProductStripeToIdResolver<TParent>;\n  createdAt?: ProductStripeToCreatedAtResolver<TParent>;\n  updatedAt?: ProductStripeToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProductStripeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductStripeToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductStripeToStripeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductStripeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductStripeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProductStripeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAccountKeyCollectionSegmentTypeResolver<TParent = any> {\n  items?: AccountKeyCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: AccountKeyCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: AccountKeyCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface AccountKeyCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AccountKeyCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardMethodDTOTypeResolver<TParent = any> {\n  paymentMethodId?: CardMethodDTOToPaymentMethodIdResolver<TParent>;\n  createdAt?: CardMethodDTOToCreatedAtResolver<TParent>;\n  default?: CardMethodDTOToDefaultResolver<TParent>;\n  brand?: CardMethodDTOToBrandResolver<TParent>;\n  last4?: CardMethodDTOToLast4Resolver<TParent>;\n  expYear?: CardMethodDTOToExpYearResolver<TParent>;\n  expMonth?: CardMethodDTOToExpMonthResolver<TParent>;\n}\n\nexport interface CardMethodDTOToPaymentMethodIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardMethodDTOToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardMethodDTOToDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardMethodDTOToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardMethodDTOToLast4Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardMethodDTOToExpYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardMethodDTOToExpMonthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogHdiCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogHdiCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogHdiCodeYearToYearResolver<TParent>;\n  cHdi?: VehiclesCarCatalogHdiCodeYearToCHdiResolver<TParent>;\n  carId?: VehiclesCarCatalogHdiCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogHdiCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogHdiCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogHdiCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogHdiCodeYearToCHdiResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogHdiCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogHdiCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogHdiTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogHdiToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogHdiToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogHdiToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogHdiToDescriptionResolver<TParent>;\n  vehiclesCarCatalogHdiCodeYears?: VehiclesCarCatalogHdiToVehiclesCarCatalogHdiCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogHdiToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogHdiToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogHdiToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogHdiToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogHdiToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogHdiToVehiclesCarCatalogHdiCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogHdiToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCodeRelationTypeResolver<TParent = any> {\n  id?: VehiclesCarCodeRelationToIdResolver<TParent>;\n  abaCodeId?: VehiclesCarCodeRelationToAbaCodeIdResolver<TParent>;\n  afirmeCodeId?: VehiclesCarCodeRelationToAfirmeCodeIdResolver<TParent>;\n  aigCodeId?: VehiclesCarCodeRelationToAigCodeIdResolver<TParent>;\n  anaCodeId?: VehiclesCarCodeRelationToAnaCodeIdResolver<TParent>;\n  atlasCodeId?: VehiclesCarCodeRelationToAtlasCodeIdResolver<TParent>;\n  axaCodeId?: VehiclesCarCodeRelationToAxaCodeIdResolver<TParent>;\n  banorteCodeId?: VehiclesCarCodeRelationToBanorteCodeIdResolver<TParent>;\n  gnpCodeId?: VehiclesCarCodeRelationToGnpCodeIdResolver<TParent>;\n  hdiCodeId?: VehiclesCarCodeRelationToHdiCodeIdResolver<TParent>;\n  potosiCodeId?: VehiclesCarCodeRelationToPotosiCodeIdResolver<TParent>;\n  psCodeId?: VehiclesCarCodeRelationToPsCodeIdResolver<TParent>;\n  qualitasCodeId?: VehiclesCarCodeRelationToQualitasCodeIdResolver<TParent>;\n  zurichCodeId?: VehiclesCarCodeRelationToZurichCodeIdResolver<TParent>;\n  mapfreCodeId?: VehiclesCarCodeRelationToMapfreCodeIdResolver<TParent>;\n  abaCode?: VehiclesCarCodeRelationToAbaCodeResolver<TParent>;\n  afirmeCode?: VehiclesCarCodeRelationToAfirmeCodeResolver<TParent>;\n  aigCode?: VehiclesCarCodeRelationToAigCodeResolver<TParent>;\n  anaCode?: VehiclesCarCodeRelationToAnaCodeResolver<TParent>;\n  atlasCode?: VehiclesCarCodeRelationToAtlasCodeResolver<TParent>;\n  axaCode?: VehiclesCarCodeRelationToAxaCodeResolver<TParent>;\n  banorteCode?: VehiclesCarCodeRelationToBanorteCodeResolver<TParent>;\n  gnpCode?: VehiclesCarCodeRelationToGnpCodeResolver<TParent>;\n  hdiCode?: VehiclesCarCodeRelationToHdiCodeResolver<TParent>;\n  mapfreCode?: VehiclesCarCodeRelationToMapfreCodeResolver<TParent>;\n  potosiCode?: VehiclesCarCodeRelationToPotosiCodeResolver<TParent>;\n  psCode?: VehiclesCarCodeRelationToPsCodeResolver<TParent>;\n  qualitasCode?: VehiclesCarCodeRelationToQualitasCodeResolver<TParent>;\n  zurichCode?: VehiclesCarCodeRelationToZurichCodeResolver<TParent>;\n}\n\nexport interface VehiclesCarCodeRelationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAbaCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAfirmeCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAigCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAnaCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAtlasCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAxaCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToBanorteCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToGnpCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToHdiCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToPotosiCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToPsCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToQualitasCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToZurichCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToMapfreCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAbaCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAfirmeCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAigCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAnaCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAtlasCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToAxaCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToBanorteCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToGnpCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToHdiCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToMapfreCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToPotosiCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToPsCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToQualitasCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCodeRelationToZurichCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAbaTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAbaToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogAbaToBrandResolver<TParent>;\n  description?: VehiclesCarCatalogAbaToDescriptionResolver<TParent>;\n  subbrand?: VehiclesCarCatalogAbaToSubbrandResolver<TParent>;\n  occupants?: VehiclesCarCatalogAbaToOccupantsResolver<TParent>;\n  type?: VehiclesCarCatalogAbaToTypeResolver<TParent>;\n  vehiclesCarCatalogAbaCodeYears?: VehiclesCarCatalogAbaToVehiclesCarCatalogAbaCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogAbaToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAbaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaToOccupantsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaToVehiclesCarCatalogAbaCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAbaCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAbaCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogAbaCodeYearToYearResolver<TParent>;\n  cveveh?: VehiclesCarCatalogAbaCodeYearToCvevehResolver<TParent>;\n  carId?: VehiclesCarCatalogAbaCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogAbaCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAbaCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaCodeYearToCvevehResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAbaCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAfirmeTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAfirmeToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogAfirmeToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogAfirmeToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogAfirmeToDescriptionResolver<TParent>;\n  vehiclesCarCatalogAfirmeCodeYears?: VehiclesCarCatalogAfirmeToVehiclesCarCatalogAfirmeCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogAfirmeToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAfirmeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAfirmeToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAfirmeToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAfirmeToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAfirmeToVehiclesCarCatalogAfirmeCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAfirmeToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAfirmeCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAfirmeCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogAfirmeCodeYearToYearResolver<TParent>;\n  cAfirme?: VehiclesCarCatalogAfirmeCodeYearToCAfirmeResolver<TParent>;\n  carId?: VehiclesCarCatalogAfirmeCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogAfirmeCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAfirmeCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAfirmeCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAfirmeCodeYearToCAfirmeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAfirmeCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAfirmeCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAigTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAigToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogAigToBrandResolver<TParent>;\n  year?: VehiclesCarCatalogAigToYearResolver<TParent>;\n  description?: VehiclesCarCatalogAigToDescriptionResolver<TParent>;\n  subbrand?: VehiclesCarCatalogAigToSubbrandResolver<TParent>;\n  vehiclesCarcoderelations?: VehiclesCarCatalogAigToVehiclesCarcoderelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAigToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAigToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAigToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAigToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAigToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAigToVehiclesCarcoderelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAnaTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAnaToIdResolver<TParent>;\n  subbrand?: VehiclesCarCatalogAnaToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogAnaToDescriptionResolver<TParent>;\n  brand?: VehiclesCarCatalogAnaToBrandResolver<TParent>;\n  vehiclesCarCatalogAnaCodeYears?: VehiclesCarCatalogAnaToVehiclesCarCatalogAnaCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogAnaToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAnaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAnaToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAnaToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAnaToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAnaToVehiclesCarCatalogAnaCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAnaToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAnaCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAnaCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogAnaCodeYearToYearResolver<TParent>;\n  cAna?: VehiclesCarCatalogAnaCodeYearToCAnaResolver<TParent>;\n  carId?: VehiclesCarCatalogAnaCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogAnaCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAnaCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAnaCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAnaCodeYearToCAnaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAnaCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAnaCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAtlaTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAtlaToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogAtlaToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogAtlaToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogAtlaToDescriptionResolver<TParent>;\n  vehiclesCarCatalogAtlasCodeYears?: VehiclesCarCatalogAtlaToVehiclesCarCatalogAtlasCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogAtlaToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAtlaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAtlaToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAtlaToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAtlaToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAtlaToVehiclesCarCatalogAtlasCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAtlaToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAtlasCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAtlasCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogAtlasCodeYearToYearResolver<TParent>;\n  cAtlas?: VehiclesCarCatalogAtlasCodeYearToCAtlasResolver<TParent>;\n  carId?: VehiclesCarCatalogAtlasCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogAtlasCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAtlasCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAtlasCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAtlasCodeYearToCAtlasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAtlasCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAtlasCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAxaTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAxaToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogAxaToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogAxaToSubbrandResolver<TParent>;\n  descriptionLinea?: VehiclesCarCatalogAxaToDescriptionLineaResolver<TParent>;\n  description?: VehiclesCarCatalogAxaToDescriptionResolver<TParent>;\n  camis?: VehiclesCarCatalogAxaToCamisResolver<TParent>;\n  categoria?: VehiclesCarCatalogAxaToCategoriaResolver<TParent>;\n  segmento?: VehiclesCarCatalogAxaToSegmentoResolver<TParent>;\n  brandId?: VehiclesCarCatalogAxaToBrandIdResolver<TParent>;\n  versionId?: VehiclesCarCatalogAxaToVersionIdResolver<TParent>;\n  versionIdSec?: VehiclesCarCatalogAxaToVersionIdSecResolver<TParent>;\n  categoriaId?: VehiclesCarCatalogAxaToCategoriaIdResolver<TParent>;\n  lineaId?: VehiclesCarCatalogAxaToLineaIdResolver<TParent>;\n  vehiclesCarCatalogAxaCodeYears?: VehiclesCarCatalogAxaToVehiclesCarCatalogAxaCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogAxaToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAxaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToDescriptionLineaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToCamisResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToCategoriaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToSegmentoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToBrandIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToVersionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToVersionIdSecResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToCategoriaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToLineaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToVehiclesCarCatalogAxaCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogAxaCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogAxaCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogAxaCodeYearToYearResolver<TParent>;\n  cAxa?: VehiclesCarCatalogAxaCodeYearToCAxaResolver<TParent>;\n  carId?: VehiclesCarCatalogAxaCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogAxaCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogAxaCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaCodeYearToCAxaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogAxaCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogBanorteTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogBanorteToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogBanorteToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogBanorteToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogBanorteToDescriptionResolver<TParent>;\n  vehiclesCarCatalogBanorteCodeYears?: VehiclesCarCatalogBanorteToVehiclesCarCatalogBanorteCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogBanorteToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogBanorteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogBanorteToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogBanorteToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogBanorteToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogBanorteToVehiclesCarCatalogBanorteCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogBanorteToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogBanorteCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogBanorteCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogBanorteCodeYearToYearResolver<TParent>;\n  cBanorte?: VehiclesCarCatalogBanorteCodeYearToCBanorteResolver<TParent>;\n  carId?: VehiclesCarCatalogBanorteCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogBanorteCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogBanorteCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogBanorteCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogBanorteCodeYearToCBanorteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogBanorteCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogBanorteCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogGnpTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogGnpToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogGnpToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogGnpToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogGnpToDescriptionResolver<TParent>;\n  vehiclesCarCatalogGnpCodeYears?: VehiclesCarCatalogGnpToVehiclesCarCatalogGnpCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogGnpToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogGnpToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogGnpToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogGnpToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogGnpToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogGnpToVehiclesCarCatalogGnpCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogGnpToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogGnpCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogGnpCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogGnpCodeYearToYearResolver<TParent>;\n  cGnp?: VehiclesCarCatalogGnpCodeYearToCGnpResolver<TParent>;\n  carId?: VehiclesCarCatalogGnpCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogGnpCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogGnpCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogGnpCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogGnpCodeYearToCGnpResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogGnpCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogGnpCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogMapfreTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogMapfreToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogMapfreToBrandResolver<TParent>;\n  description?: VehiclesCarCatalogMapfreToDescriptionResolver<TParent>;\n  subbrand?: VehiclesCarCatalogMapfreToSubbrandResolver<TParent>;\n  vehiclesCarCatalogMapfreCodeYears?: VehiclesCarCatalogMapfreToVehiclesCarCatalogMapfreCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogMapfreToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogMapfreToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreToVehiclesCarCatalogMapfreCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogMapfreCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogMapfreCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogMapfreCodeYearToYearResolver<TParent>;\n  cMapfre?: VehiclesCarCatalogMapfreCodeYearToCMapfreResolver<TParent>;\n  brand?: VehiclesCarCatalogMapfreCodeYearToBrandResolver<TParent>;\n  carId?: VehiclesCarCatalogMapfreCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogMapfreCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogMapfreCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreCodeYearToCMapfreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreCodeYearToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogMapfreCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogPotosiTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogPotosiToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogPotosiToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogPotosiToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogPotosiToDescriptionResolver<TParent>;\n  cPotosi?: VehiclesCarCatalogPotosiToCPotosiResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogPotosiToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogPotosiToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPotosiToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPotosiToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPotosiToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPotosiToCPotosiResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPotosiToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogPTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogPToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogPToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogPToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogPToDescriptionResolver<TParent>;\n  cPs?: VehiclesCarCatalogPToCPsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogPToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogPToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPToCPsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogPToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogQualitaTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogQualitaToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogQualitaToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogQualitaToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogQualitaToDescriptionResolver<TParent>;\n  brandCode?: VehiclesCarCatalogQualitaToBrandCodeResolver<TParent>;\n  vehiclesCarCatalogQualitasCodeYears?: VehiclesCarCatalogQualitaToVehiclesCarCatalogQualitasCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogQualitaToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogQualitaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitaToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitaToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitaToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitaToBrandCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitaToVehiclesCarCatalogQualitasCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitaToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogQualitasCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogQualitasCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogQualitasCodeYearToYearResolver<TParent>;\n  cQualitas?: VehiclesCarCatalogQualitasCodeYearToCQualitasResolver<TParent>;\n  carId?: VehiclesCarCatalogQualitasCodeYearToCarIdResolver<TParent>;\n  car?: VehiclesCarCatalogQualitasCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogQualitasCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitasCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitasCodeYearToCQualitasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitasCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogQualitasCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogZurichTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogZurichToIdResolver<TParent>;\n  brand?: VehiclesCarCatalogZurichToBrandResolver<TParent>;\n  subbrand?: VehiclesCarCatalogZurichToSubbrandResolver<TParent>;\n  description?: VehiclesCarCatalogZurichToDescriptionResolver<TParent>;\n  vehiclesCarCatalogZurichCodeYears?: VehiclesCarCatalogZurichToVehiclesCarCatalogZurichCodeYearsResolver<TParent>;\n  vehiclesCarCodeRelations?: VehiclesCarCatalogZurichToVehiclesCarCodeRelationsResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogZurichToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogZurichToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogZurichToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogZurichToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogZurichToVehiclesCarCatalogZurichCodeYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogZurichToVehiclesCarCodeRelationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVehiclesCarCatalogZurichCodeYearTypeResolver<TParent = any> {\n  id?: VehiclesCarCatalogZurichCodeYearToIdResolver<TParent>;\n  year?: VehiclesCarCatalogZurichCodeYearToYearResolver<TParent>;\n  carId?: VehiclesCarCatalogZurichCodeYearToCarIdResolver<TParent>;\n  cZurich?: VehiclesCarCatalogZurichCodeYearToCZurichResolver<TParent>;\n  car?: VehiclesCarCatalogZurichCodeYearToCarResolver<TParent>;\n}\n\nexport interface VehiclesCarCatalogZurichCodeYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogZurichCodeYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogZurichCodeYearToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogZurichCodeYearToCZurichResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VehiclesCarCatalogZurichCodeYearToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuotationCoverageTypeResolver<TParent = any> {\n  name?: QuotationCoverageToNameResolver<TParent>;\n  code?: QuotationCoverageToCodeResolver<TParent>;\n  sumAssured?: QuotationCoverageToSumAssuredResolver<TParent>;\n  sumType?: QuotationCoverageToSumTypeResolver<TParent>;\n  deductible?: QuotationCoverageToDeductibleResolver<TParent>;\n  total?: QuotationCoverageToTotalResolver<TParent>;\n  neto?: QuotationCoverageToNetoResolver<TParent>;\n  priority?: QuotationCoverageToPriorityResolver<TParent>;\n  quoteId?: QuotationCoverageToQuoteIdResolver<TParent>;\n  quote?: QuotationCoverageToQuoteResolver<TParent>;\n  insurerServiceId?: QuotationCoverageToInsurerServiceIdResolver<TParent>;\n  insurerService?: QuotationCoverageToInsurerServiceResolver<TParent>;\n  insurerPackageStatus?: QuotationCoverageToInsurerPackageStatusResolver<TParent>;\n  id?: QuotationCoverageToIdResolver<TParent>;\n  createdAt?: QuotationCoverageToCreatedAtResolver<TParent>;\n  updatedAt?: QuotationCoverageToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuotationCoverageToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToSumAssuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToSumTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToNetoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToInsurerServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToInsurerServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToInsurerPackageStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationCoverageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoteTypeResolver<TParent = any> {\n  car?: QuoteToCarResolver<TParent>;\n  projectId?: QuoteToProjectIdResolver<TParent>;\n  memberId?: QuoteToMemberIdResolver<TParent>;\n  firstName?: QuoteToFirstNameResolver<TParent>;\n  lastName?: QuoteToLastNameResolver<TParent>;\n  rFC?: QuoteToRFCResolver<TParent>;\n  phone?: QuoteToPhoneResolver<TParent>;\n  email?: QuoteToEmailResolver<TParent>;\n  address?: QuoteToAddressResolver<TParent>;\n  hiredSame?: QuoteToHiredSameResolver<TParent>;\n  hiredFirstName?: QuoteToHiredFirstNameResolver<TParent>;\n  hiredLastName?: QuoteToHiredLastNameResolver<TParent>;\n  hiredPhone?: QuoteToHiredPhoneResolver<TParent>;\n  hiredEmail?: QuoteToHiredEmailResolver<TParent>;\n  hiredAddress?: QuoteToHiredAddressResolver<TParent>;\n  frecuency?: QuoteToFrecuencyResolver<TParent>;\n  packageName?: QuoteToPackageNameResolver<TParent>;\n  gender?: QuoteToGenderResolver<TParent>;\n  zipCode?: QuoteToZipCodeResolver<TParent>;\n  dateOfBirth?: QuoteToDateOfBirthResolver<TParent>;\n  carCode?: QuoteToCarCodeResolver<TParent>;\n  startValidity?: QuoteToStartValidityResolver<TParent>;\n  endValidity?: QuoteToEndValidityResolver<TParent>;\n  year?: QuoteToYearResolver<TParent>;\n  discount?: QuoteToDiscountResolver<TParent>;\n  coverage?: QuoteToCoverageResolver<TParent>;\n  primalTotal?: QuoteToPrimalTotalResolver<TParent>;\n  deductible?: QuoteToDeductibleResolver<TParent>;\n  typeFrecuency?: QuoteToTypeFrecuencyResolver<TParent>;\n  firstPay?: QuoteToFirstPayResolver<TParent>;\n  secondPay?: QuoteToSecondPayResolver<TParent>;\n  status?: QuoteToStatusResolver<TParent>;\n  plaque?: QuoteToPlaqueResolver<TParent>;\n  compensationValue?: QuoteToCompensationValueResolver<TParent>;\n  serialNumber?: QuoteToSerialNumberResolver<TParent>;\n  carId?: QuoteToCarIdResolver<TParent>;\n  colony?: QuoteToColonyResolver<TParent>;\n  town?: QuoteToTownResolver<TParent>;\n  state?: QuoteToStateResolver<TParent>;\n  stateId?: QuoteToStateIdResolver<TParent>;\n  brand?: QuoteToBrandResolver<TParent>;\n  subBrand?: QuoteToSubBrandResolver<TParent>;\n  description?: QuoteToDescriptionResolver<TParent>;\n  folio?: QuoteToFolioResolver<TParent>;\n  totalAmount?: QuoteToTotalAmountResolver<TParent>;\n  netAmount?: QuoteToNetAmountResolver<TParent>;\n  iva?: QuoteToIvaResolver<TParent>;\n  surcharge?: QuoteToSurchargeResolver<TParent>;\n  derecho?: QuoteToDerechoResolver<TParent>;\n  police?: QuoteToPoliceResolver<TParent>;\n  service?: QuoteToServiceResolver<TParent>;\n  insurerServiceId?: QuoteToInsurerServiceIdResolver<TParent>;\n  coverages?: QuoteToCoveragesResolver<TParent>;\n  quoteServices?: QuoteToQuoteServicesResolver<TParent>;\n  id?: QuoteToIdResolver<TParent>;\n  createdAt?: QuoteToCreatedAtResolver<TParent>;\n  updatedAt?: QuoteToUpdatedAtResolver<TParent>;\n  member?: QuoteToMemberResolver<TParent>;\n}\n\nexport interface QuoteToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToRFCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToHiredSameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToHiredFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToHiredLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToHiredPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToHiredEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToHiredAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToFrecuencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToPackageNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToGenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToZipCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToDateOfBirthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToCarCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToStartValidityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToEndValidityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToPrimalTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToTypeFrecuencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToFirstPayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToSecondPayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToPlaqueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToCompensationValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToSerialNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToColonyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToTownResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToStateIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToSubBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToTotalAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToNetAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToIvaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToSurchargeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToDerechoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToInsurerServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToQuoteServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICarQuotationTypeResolver<TParent = any> {\n  id?: CarQuotationToIdResolver<TParent>;\n  brand?: CarQuotationToBrandResolver<TParent>;\n  description?: CarQuotationToDescriptionResolver<TParent>;\n  subbrand?: CarQuotationToSubbrandResolver<TParent>;\n}\n\nexport interface CarQuotationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarQuotationToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarQuotationToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarQuotationToSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerServiceTypeResolver<TParent = any> {\n  name?: InsurerServiceToNameResolver<TParent>;\n  codeName?: InsurerServiceToCodeNameResolver<TParent>;\n  script?: InsurerServiceToScriptResolver<TParent>;\n  template?: InsurerServiceToTemplateResolver<TParent>;\n  autos?: InsurerServiceToAutosResolver<TParent>;\n  type?: InsurerServiceToTypeResolver<TParent>;\n  module?: InsurerServiceToModuleResolver<TParent>;\n  priority?: InsurerServiceToPriorityResolver<TParent>;\n  color?: InsurerServiceToColorResolver<TParent>;\n  logo?: InsurerServiceToLogoResolver<TParent>;\n  insurerServiceCredentials?: InsurerServiceToInsurerServiceCredentialsResolver<TParent>;\n  insurerServiceEnvironments?: InsurerServiceToInsurerServiceEnvironmentsResolver<TParent>;\n  insurers?: InsurerServiceToInsurersResolver<TParent>;\n  quoteServices?: InsurerServiceToQuoteServicesResolver<TParent>;\n  quotationCoverages?: InsurerServiceToQuotationCoveragesResolver<TParent>;\n  id?: InsurerServiceToIdResolver<TParent>;\n  createdAt?: InsurerServiceToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerServiceToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerServiceToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToScriptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToAutosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToLogoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToInsurerServiceCredentialsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToInsurerServiceEnvironmentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToInsurersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToQuoteServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToQuotationCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerServiceCredentialTypeResolver<TParent = any> {\n  projectId?: InsurerServiceCredentialToProjectIdResolver<TParent>;\n  insurerServiceId?: InsurerServiceCredentialToInsurerServiceIdResolver<TParent>;\n  insurerService?: InsurerServiceCredentialToInsurerServiceResolver<TParent>;\n  conduit?: InsurerServiceCredentialToConduitResolver<TParent>;\n  username?: InsurerServiceCredentialToUsernameResolver<TParent>;\n  password?: InsurerServiceCredentialToPasswordResolver<TParent>;\n  rate?: InsurerServiceCredentialToRateResolver<TParent>;\n  agent?: InsurerServiceCredentialToAgentResolver<TParent>;\n  group?: InsurerServiceCredentialToGroupResolver<TParent>;\n  deal?: InsurerServiceCredentialToDealResolver<TParent>;\n  office?: InsurerServiceCredentialToOfficeResolver<TParent>;\n  cprogram?: InsurerServiceCredentialToCprogramResolver<TParent>;\n  default?: InsurerServiceCredentialToDefaultResolver<TParent>;\n  active?: InsurerServiceCredentialToActiveResolver<TParent>;\n  extra?: InsurerServiceCredentialToExtraResolver<TParent>;\n  discount?: InsurerServiceCredentialToDiscountResolver<TParent>;\n  owner?: InsurerServiceCredentialToOwnerResolver<TParent>;\n  token?: InsurerServiceCredentialToTokenResolver<TParent>;\n  environment?: InsurerServiceCredentialToEnvironmentResolver<TParent>;\n  id?: InsurerServiceCredentialToIdResolver<TParent>;\n  createdAt?: InsurerServiceCredentialToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerServiceCredentialToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerServiceCredentialToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToInsurerServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToInsurerServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToConduitResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToUsernameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToPasswordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToAgentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToDealResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToCprogramResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToExtraResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToOwnerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToEnvironmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceCredentialToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerServiceEnvironmentTypeResolver<TParent = any> {\n  insurerServiceId?: InsurerServiceEnvironmentToInsurerServiceIdResolver<TParent>;\n  insurerService?: InsurerServiceEnvironmentToInsurerServiceResolver<TParent>;\n  environment?: InsurerServiceEnvironmentToEnvironmentResolver<TParent>;\n  reference?: InsurerServiceEnvironmentToReferenceResolver<TParent>;\n  endPoint?: InsurerServiceEnvironmentToEndPointResolver<TParent>;\n  id?: InsurerServiceEnvironmentToIdResolver<TParent>;\n  createdAt?: InsurerServiceEnvironmentToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerServiceEnvironmentToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerServiceEnvironmentToInsurerServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceEnvironmentToInsurerServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceEnvironmentToEnvironmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceEnvironmentToReferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceEnvironmentToEndPointResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceEnvironmentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceEnvironmentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerServiceEnvironmentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerTypeResolver<TParent = any> {\n  projectId?: InsurerToProjectIdResolver<TParent>;\n  insurerServiceId?: InsurerToInsurerServiceIdResolver<TParent>;\n  insurerService?: InsurerToInsurerServiceResolver<TParent>;\n  name?: InsurerToNameResolver<TParent>;\n  percentageMax?: InsurerToPercentageMaxResolver<TParent>;\n  id?: InsurerToIdResolver<TParent>;\n  createdAt?: InsurerToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerToInsurerServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerToInsurerServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerToPercentageMaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoteServiceTypeResolver<TParent = any> {\n  quoteId?: QuoteServiceToQuoteIdResolver<TParent>;\n  quote?: QuoteServiceToQuoteResolver<TParent>;\n  serviceId?: QuoteServiceToServiceIdResolver<TParent>;\n  insurerService?: QuoteServiceToInsurerServiceResolver<TParent>;\n  discount?: QuoteServiceToDiscountResolver<TParent>;\n  deductible?: QuoteServiceToDeductibleResolver<TParent>;\n  firstPay?: QuoteServiceToFirstPayResolver<TParent>;\n  secondPay?: QuoteServiceToSecondPayResolver<TParent>;\n  status?: QuoteServiceToStatusResolver<TParent>;\n  folio?: QuoteServiceToFolioResolver<TParent>;\n  totalAmount?: QuoteServiceToTotalAmountResolver<TParent>;\n  netAmount?: QuoteServiceToNetAmountResolver<TParent>;\n  derecho?: QuoteServiceToDerechoResolver<TParent>;\n  police?: QuoteServiceToPoliceResolver<TParent>;\n  id?: QuoteServiceToIdResolver<TParent>;\n  createdAt?: QuoteServiceToCreatedAtResolver<TParent>;\n  updatedAt?: QuoteServiceToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuoteServiceToQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToInsurerServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToFirstPayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToSecondPayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToTotalAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToNetAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToDerechoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteServiceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStaffQuoteTypeResolver<TParent = any> {\n  proposals?: StaffQuoteToProposalsResolver<TParent>;\n  collaborators?: StaffQuoteToCollaboratorsResolver<TParent>;\n  solicitorId?: StaffQuoteToSolicitorIdResolver<TParent>;\n  serviceId?: StaffQuoteToServiceIdResolver<TParent>;\n  projectId?: StaffQuoteToProjectIdResolver<TParent>;\n  status?: StaffQuoteToStatusResolver<TParent>;\n  id?: StaffQuoteToIdResolver<TParent>;\n  createdAt?: StaffQuoteToCreatedAtResolver<TParent>;\n  updatedAt?: StaffQuoteToUpdatedAtResolver<TParent>;\n}\n\nexport interface StaffQuoteToProposalsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StaffQuoteToCollaboratorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StaffQuoteToSolicitorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StaffQuoteToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StaffQuoteToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StaffQuoteToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StaffQuoteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StaffQuoteToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StaffQuoteToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Imultiquoter_ProposalTypeResolver<TParent = any> {\n  staffQuote?: multiquoter_ProposalToStaffQuoteResolver<TParent>;\n  staffQuoteId?: multiquoter_ProposalToStaffQuoteIdResolver<TParent>;\n  methodology?: multiquoter_ProposalToMethodologyResolver<TParent>;\n  status?: multiquoter_ProposalToStatusResolver<TParent>;\n  id?: multiquoter_ProposalToIdResolver<TParent>;\n  createdAt?: multiquoter_ProposalToCreatedAtResolver<TParent>;\n  updatedAt?: multiquoter_ProposalToUpdatedAtResolver<TParent>;\n}\n\nexport interface multiquoter_ProposalToStaffQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_ProposalToStaffQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_ProposalToMethodologyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_ProposalToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_ProposalToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_ProposalToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_ProposalToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Imultiquoter_CollaboratorTypeResolver<TParent = any> {\n  staffQuote?: multiquoter_CollaboratorToStaffQuoteResolver<TParent>;\n  memberId?: multiquoter_CollaboratorToMemberIdResolver<TParent>;\n  projectRoleId?: multiquoter_CollaboratorToProjectRoleIdResolver<TParent>;\n  staffQuoteId?: multiquoter_CollaboratorToStaffQuoteIdResolver<TParent>;\n  estimatedTime?: multiquoter_CollaboratorToEstimatedTimeResolver<TParent>;\n  amount?: multiquoter_CollaboratorToAmountResolver<TParent>;\n  id?: multiquoter_CollaboratorToIdResolver<TParent>;\n  createdAt?: multiquoter_CollaboratorToCreatedAtResolver<TParent>;\n  updatedAt?: multiquoter_CollaboratorToUpdatedAtResolver<TParent>;\n}\n\nexport interface multiquoter_CollaboratorToStaffQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CollaboratorToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CollaboratorToProjectRoleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CollaboratorToStaffQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CollaboratorToEstimatedTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CollaboratorToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CollaboratorToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CollaboratorToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CollaboratorToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerCoverageProjectTypeResolver<TParent = any> {\n  projectId?: InsurerCoverageProjectToProjectIdResolver<TParent>;\n  insurerServiceId?: InsurerCoverageProjectToInsurerServiceIdResolver<TParent>;\n  insurerService?: InsurerCoverageProjectToInsurerServiceResolver<TParent>;\n  insurerCoverageId?: InsurerCoverageProjectToInsurerCoverageIdResolver<TParent>;\n  insurerCoverage?: InsurerCoverageProjectToInsurerCoverageResolver<TParent>;\n  insurerPackages?: InsurerCoverageProjectToInsurerPackagesResolver<TParent>;\n  sumAssured?: InsurerCoverageProjectToSumAssuredResolver<TParent>;\n  sumType?: InsurerCoverageProjectToSumTypeResolver<TParent>;\n  deductible?: InsurerCoverageProjectToDeductibleResolver<TParent>;\n  prima?: InsurerCoverageProjectToPrimaResolver<TParent>;\n  deductibleOptions?: InsurerCoverageProjectToDeductibleOptionsResolver<TParent>;\n  sumAssuredOptions?: InsurerCoverageProjectToSumAssuredOptionsResolver<TParent>;\n  isActive?: InsurerCoverageProjectToIsActiveResolver<TParent>;\n  visible?: InsurerCoverageProjectToVisibleResolver<TParent>;\n  priority?: InsurerCoverageProjectToPriorityResolver<TParent>;\n  ampliaAvailable?: InsurerCoverageProjectToAmpliaAvailableResolver<TParent>;\n  limitadaAvailable?: InsurerCoverageProjectToLimitadaAvailableResolver<TParent>;\n  rCAvailable?: InsurerCoverageProjectToRCAvailableResolver<TParent>;\n  id?: InsurerCoverageProjectToIdResolver<TParent>;\n  createdAt?: InsurerCoverageProjectToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerCoverageProjectToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerCoverageProjectToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToInsurerServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToInsurerServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToInsurerCoverageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToInsurerCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToInsurerPackagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToSumAssuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToSumTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToPrimaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToDeductibleOptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToSumAssuredOptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToAmpliaAvailableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToLimitadaAvailableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToRCAvailableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageProjectToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerCoverageTypeResolver<TParent = any> {\n  code?: InsurerCoverageToCodeResolver<TParent>;\n  name?: InsurerCoverageToNameResolver<TParent>;\n  description?: InsurerCoverageToDescriptionResolver<TParent>;\n  insurerServiceId?: InsurerCoverageToInsurerServiceIdResolver<TParent>;\n  insurerService?: InsurerCoverageToInsurerServiceResolver<TParent>;\n  id?: InsurerCoverageToIdResolver<TParent>;\n  createdAt?: InsurerCoverageToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerCoverageToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerCoverageToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageToInsurerServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageToInsurerServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCoverageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICotizacionPackageTypeResolver<TParent = any> {\n  id?: CotizacionPackageToIdResolver<TParent>;\n  sumassured?: CotizacionPackageToSumassuredResolver<TParent>;\n  deductible?: CotizacionPackageToDeductibleResolver<TParent>;\n  isbase?: CotizacionPackageToIsbaseResolver<TParent>;\n  isactive?: CotizacionPackageToIsactiveResolver<TParent>;\n  peroccupant?: CotizacionPackageToPeroccupantResolver<TParent>;\n  coverageId?: CotizacionPackageToCoverageIdResolver<TParent>;\n  packageId?: CotizacionPackageToPackageIdResolver<TParent>;\n  serviceId?: CotizacionPackageToServiceIdResolver<TParent>;\n  deductibleoptions?: CotizacionPackageToDeductibleoptionsResolver<TParent>;\n  sumassuredoptions?: CotizacionPackageToSumassuredoptionsResolver<TParent>;\n  priority?: CotizacionPackageToPriorityResolver<TParent>;\n  coverage?: CotizacionPackageToCoverageResolver<TParent>;\n  package?: CotizacionPackageToPackageResolver<TParent>;\n  service?: CotizacionPackageToServiceResolver<TParent>;\n}\n\nexport interface CotizacionPackageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToSumassuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToIsbaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToIsactiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToPeroccupantResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToCoverageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToPackageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToDeductibleoptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToSumassuredoptionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToPackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionPackageToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoveragesCoverageTypeResolver<TParent = any> {\n  id?: CoveragesCoverageToIdResolver<TParent>;\n  code?: CoveragesCoverageToCodeResolver<TParent>;\n  name?: CoveragesCoverageToNameResolver<TParent>;\n  description?: CoveragesCoverageToDescriptionResolver<TParent>;\n  insuranceId?: CoveragesCoverageToInsuranceIdResolver<TParent>;\n  abbreviation?: CoveragesCoverageToAbbreviationResolver<TParent>;\n  insurance?: CoveragesCoverageToInsuranceResolver<TParent>;\n  cotizacionPackages?: CoveragesCoverageToCotizacionPackagesResolver<TParent>;\n}\n\nexport interface CoveragesCoverageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesCoverageToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesCoverageToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesCoverageToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesCoverageToInsuranceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesCoverageToAbbreviationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesCoverageToInsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesCoverageToCotizacionPackagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGenericsServiceTypeResolver<TParent = any> {\n  registerUser?: GenericsServiceToRegisterUserResolver<TParent>;\n  runEmision?: GenericsServiceToRunEmisionResolver<TParent>;\n  printPolice?: GenericsServiceToPrintPoliceResolver<TParent>;\n  id?: GenericsServiceToIdResolver<TParent>;\n  name?: GenericsServiceToNameResolver<TParent>;\n  script?: GenericsServiceToScriptResolver<TParent>;\n  template?: GenericsServiceToTemplateResolver<TParent>;\n  autos?: GenericsServiceToAutosResolver<TParent>;\n  type?: GenericsServiceToTypeResolver<TParent>;\n  module?: GenericsServiceToModuleResolver<TParent>;\n  priority?: GenericsServiceToPriorityResolver<TParent>;\n  color?: GenericsServiceToColorResolver<TParent>;\n  logo?: GenericsServiceToLogoResolver<TParent>;\n  cotizacionCredentials?: GenericsServiceToCotizacionCredentialsResolver<TParent>;\n  cotizacionPackages?: GenericsServiceToCotizacionPackagesResolver<TParent>;\n  cotizacionQuotes?: GenericsServiceToCotizacionQuotesResolver<TParent>;\n  coveragesCoverages?: GenericsServiceToCoveragesCoveragesResolver<TParent>;\n}\n\nexport interface GenericsServiceToRegisterUserArgs {\n  data: string;\n}\nexport interface GenericsServiceToRegisterUserResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: GenericsServiceToRegisterUserArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToRunEmisionArgs {\n  data: string;\n}\nexport interface GenericsServiceToRunEmisionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: GenericsServiceToRunEmisionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToPrintPoliceArgs {\n  quoteId: string;\n}\nexport interface GenericsServiceToPrintPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: GenericsServiceToPrintPoliceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToScriptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToAutosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToLogoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToCotizacionCredentialsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToCotizacionPackagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToCotizacionQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GenericsServiceToCoveragesCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceProcessPayloadTypeResolver<TParent = any> {\n  name?: ServiceProcessPayloadToNameResolver<TParent>;\n  error?: ServiceProcessPayloadToErrorResolver<TParent>;\n  success?: ServiceProcessPayloadToSuccessResolver<TParent>;\n  result?: ServiceProcessPayloadToResultResolver<TParent>;\n}\n\nexport interface ServiceProcessPayloadToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceProcessPayloadToErrorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceProcessPayloadToSuccessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceProcessPayloadToResultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICotizacionCredentialTypeResolver<TParent = any> {\n  id?: CotizacionCredentialToIdResolver<TParent>;\n  conduit?: CotizacionCredentialToConduitResolver<TParent>;\n  username?: CotizacionCredentialToUsernameResolver<TParent>;\n  password?: CotizacionCredentialToPasswordResolver<TParent>;\n  rate?: CotizacionCredentialToRateResolver<TParent>;\n  agent?: CotizacionCredentialToAgentResolver<TParent>;\n  group?: CotizacionCredentialToGroupResolver<TParent>;\n  deal?: CotizacionCredentialToDealResolver<TParent>;\n  office?: CotizacionCredentialToOfficeResolver<TParent>;\n  cprogram?: CotizacionCredentialToCprogramResolver<TParent>;\n  default?: CotizacionCredentialToDefaultResolver<TParent>;\n  active?: CotizacionCredentialToActiveResolver<TParent>;\n  extra?: CotizacionCredentialToExtraResolver<TParent>;\n  serviceId?: CotizacionCredentialToServiceIdResolver<TParent>;\n  discount?: CotizacionCredentialToDiscountResolver<TParent>;\n  owner?: CotizacionCredentialToOwnerResolver<TParent>;\n  production?: CotizacionCredentialToProductionResolver<TParent>;\n  service?: CotizacionCredentialToServiceResolver<TParent>;\n}\n\nexport interface CotizacionCredentialToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToConduitResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToUsernameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToPasswordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToAgentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToDealResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToCprogramResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToExtraResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToOwnerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToProductionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCredentialToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICotizacionQuoteTypeResolver<TParent = any> {\n  issued?: CotizacionQuoteToIssuedResolver<TParent>;\n  id?: CotizacionQuoteToIdResolver<TParent>;\n  createdAt?: CotizacionQuoteToCreatedAtResolver<TParent>;\n  updatedAt?: CotizacionQuoteToUpdatedAtResolver<TParent>;\n  paymentfrequency?: CotizacionQuoteToPaymentfrequencyResolver<TParent>;\n  startvigency?: CotizacionQuoteToStartvigencyResolver<TParent>;\n  endvigency?: CotizacionQuoteToEndvigencyResolver<TParent>;\n  cardescription?: CotizacionQuoteToCardescriptionResolver<TParent>;\n  totalamount?: CotizacionQuoteToTotalamountResolver<TParent>;\n  surcharge?: CotizacionQuoteToSurchargeResolver<TParent>;\n  folioquote?: CotizacionQuoteToFolioquoteResolver<TParent>;\n  police?: CotizacionQuoteToPoliceResolver<TParent>;\n  derecho?: CotizacionQuoteToDerechoResolver<TParent>;\n  pdf?: CotizacionQuoteToPdfResolver<TParent>;\n  receiptpdf?: CotizacionQuoteToReceiptpdfResolver<TParent>;\n  package?: CotizacionQuoteToPackageResolver<TParent>;\n  iva?: CotizacionQuoteToIvaResolver<TParent>;\n  netAmount?: CotizacionQuoteToNetAmountResolver<TParent>;\n  selected?: CotizacionQuoteToSelectedResolver<TParent>;\n  carCompanyCode?: CotizacionQuoteToCarCompanyCodeResolver<TParent>;\n  carFormId?: CotizacionQuoteToCarFormIdResolver<TParent>;\n  serviceId?: CotizacionQuoteToServiceIdResolver<TParent>;\n  status?: CotizacionQuoteToStatusResolver<TParent>;\n  extra?: CotizacionQuoteToExtraResolver<TParent>;\n  carForm?: CotizacionQuoteToCarFormResolver<TParent>;\n  service?: CotizacionQuoteToServiceResolver<TParent>;\n  cotizacionQuoteCoverages?: CotizacionQuoteToCotizacionQuoteCoveragesResolver<TParent>;\n  cotizacionQuotePayForms?: CotizacionQuoteToCotizacionQuotePayFormsResolver<TParent>;\n}\n\nexport interface CotizacionQuoteToIssuedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToPaymentfrequencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToStartvigencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToEndvigencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToCardescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToTotalamountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToSurchargeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToFolioquoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToDerechoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToPdfResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToReceiptpdfResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToPackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToIvaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToNetAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToSelectedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToCarCompanyCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToCarFormIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToServiceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToExtraResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToCarFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToCotizacionQuoteCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteToCotizacionQuotePayFormsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICotizacionCarFormTypeResolver<TParent = any> {\n  id?: CotizacionCarFormToIdResolver<TParent>;\n  createdAt?: CotizacionCarFormToCreatedAtResolver<TParent>;\n  updatedAt?: CotizacionCarFormToUpdatedAtResolver<TParent>;\n  cardescription?: CotizacionCarFormToCardescriptionResolver<TParent>;\n  carId?: CotizacionCarFormToCarIdResolver<TParent>;\n  year?: CotizacionCarFormToYearResolver<TParent>;\n  code?: CotizacionCarFormToCodeResolver<TParent>;\n  serialNumber?: CotizacionCarFormToSerialNumberResolver<TParent>;\n  engineNumber?: CotizacionCarFormToEngineNumberResolver<TParent>;\n  paymentMethod?: CotizacionCarFormToPaymentMethodResolver<TParent>;\n  plates?: CotizacionCarFormToPlatesResolver<TParent>;\n  owner?: CotizacionCarFormToOwnerResolver<TParent>;\n  clientId?: CotizacionCarFormToClientIdResolver<TParent>;\n  origin?: CotizacionCarFormToOriginResolver<TParent>;\n  client?: CotizacionCarFormToClientResolver<TParent>;\n  cotizacionQuotes?: CotizacionCarFormToCotizacionQuotesResolver<TParent>;\n}\n\nexport interface CotizacionCarFormToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToCardescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToSerialNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToEngineNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToPaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToPlatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToOwnerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToClientIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToOriginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToClientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionCarFormToCotizacionQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IClientsClientTypeResolver<TParent = any> {\n  id?: ClientsClientToIdResolver<TParent>;\n  createdAt?: ClientsClientToCreatedAtResolver<TParent>;\n  updatedAt?: ClientsClientToUpdatedAtResolver<TParent>;\n  firstname?: ClientsClientToFirstnameResolver<TParent>;\n  lastname?: ClientsClientToLastnameResolver<TParent>;\n  age?: ClientsClientToAgeResolver<TParent>;\n  email?: ClientsClientToEmailResolver<TParent>;\n  phone?: ClientsClientToPhoneResolver<TParent>;\n  taxpayerid?: ClientsClientToTaxpayeridResolver<TParent>;\n  secondlastname?: ClientsClientToSecondlastnameResolver<TParent>;\n  birthdate?: ClientsClientToBirthdateResolver<TParent>;\n  civilStatus?: ClientsClientToCivilStatusResolver<TParent>;\n  gender?: ClientsClientToGenderResolver<TParent>;\n  clientsAddresses?: ClientsClientToClientsAddressesResolver<TParent>;\n  cotizacionCarForms?: ClientsClientToCotizacionCarFormsResolver<TParent>;\n}\n\nexport interface ClientsClientToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToFirstnameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToLastnameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToAgeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToTaxpayeridResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToSecondlastnameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToBirthdateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToCivilStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToGenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToClientsAddressesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsClientToCotizacionCarFormsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IClientsAddressTypeResolver<TParent = any> {\n  id?: ClientsAddressToIdResolver<TParent>;\n  city?: ClientsAddressToCityResolver<TParent>;\n  state?: ClientsAddressToStateResolver<TParent>;\n  zipcode?: ClientsAddressToZipcodeResolver<TParent>;\n  clientId?: ClientsAddressToClientIdResolver<TParent>;\n  suburb?: ClientsAddressToSuburbResolver<TParent>;\n  internalnumber?: ClientsAddressToInternalnumberResolver<TParent>;\n  number?: ClientsAddressToNumberResolver<TParent>;\n  street?: ClientsAddressToStreetResolver<TParent>;\n  country?: ClientsAddressToCountryResolver<TParent>;\n  client?: ClientsAddressToClientResolver<TParent>;\n}\n\nexport interface ClientsAddressToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToZipcodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToClientIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToSuburbResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToInternalnumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToStreetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToCountryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientsAddressToClientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICotizacionQuoteCoverageTypeResolver<TParent = any> {\n  id?: CotizacionQuoteCoverageToIdResolver<TParent>;\n  createdAt?: CotizacionQuoteCoverageToCreatedAtResolver<TParent>;\n  updatedAt?: CotizacionQuoteCoverageToUpdatedAtResolver<TParent>;\n  name?: CotizacionQuoteCoverageToNameResolver<TParent>;\n  cobId?: CotizacionQuoteCoverageToCobIdResolver<TParent>;\n  sumassured?: CotizacionQuoteCoverageToSumassuredResolver<TParent>;\n  deductible?: CotizacionQuoteCoverageToDeductibleResolver<TParent>;\n  total?: CotizacionQuoteCoverageToTotalResolver<TParent>;\n  neto?: CotizacionQuoteCoverageToNetoResolver<TParent>;\n  quoteId?: CotizacionQuoteCoverageToQuoteIdResolver<TParent>;\n  priority?: CotizacionQuoteCoverageToPriorityResolver<TParent>;\n  quote?: CotizacionQuoteCoverageToQuoteResolver<TParent>;\n}\n\nexport interface CotizacionQuoteCoverageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToCobIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToSumassuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToNetoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuoteCoverageToQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICotizacionQuotePayFormTypeResolver<TParent = any> {\n  id?: CotizacionQuotePayFormToIdResolver<TParent>;\n  netamount?: CotizacionQuotePayFormToNetamountResolver<TParent>;\n  firstinstalment?: CotizacionQuotePayFormToFirstinstalmentResolver<TParent>;\n  model?: CotizacionQuotePayFormToModelResolver<TParent>;\n  iva?: CotizacionQuotePayFormToIvaResolver<TParent>;\n  subsecuentinstalments?: CotizacionQuotePayFormToSubsecuentinstalmentsResolver<TParent>;\n  rpf?: CotizacionQuotePayFormToRpfResolver<TParent>;\n  totalamount?: CotizacionQuotePayFormToTotalamountResolver<TParent>;\n  startvigency?: CotizacionQuotePayFormToStartvigencyResolver<TParent>;\n  endvigency?: CotizacionQuotePayFormToEndvigencyResolver<TParent>;\n  quoteId?: CotizacionQuotePayFormToQuoteIdResolver<TParent>;\n  quantity?: CotizacionQuotePayFormToQuantityResolver<TParent>;\n  quote?: CotizacionQuotePayFormToQuoteResolver<TParent>;\n}\n\nexport interface CotizacionQuotePayFormToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToNetamountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToFirstinstalmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToIvaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToSubsecuentinstalmentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToRpfResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToTotalamountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToStartvigencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToEndvigencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CotizacionQuotePayFormToQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoveragesPackagesListTypeResolver<TParent = any> {\n  id?: CoveragesPackagesListToIdResolver<TParent>;\n  name?: CoveragesPackagesListToNameResolver<TParent>;\n  description?: CoveragesPackagesListToDescriptionResolver<TParent>;\n  ramo?: CoveragesPackagesListToRamoResolver<TParent>;\n  active?: CoveragesPackagesListToActiveResolver<TParent>;\n  cotizacionPackages?: CoveragesPackagesListToCotizacionPackagesResolver<TParent>;\n}\n\nexport interface CoveragesPackagesListToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesPackagesListToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesPackagesListToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesPackagesListToRamoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesPackagesListToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragesPackagesListToCotizacionPackagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRunServicePayloadTypeResolver<TParent = any> {\n  quoterResponse?: RunServicePayloadToQuoterResponseResolver<TParent>;\n}\n\nexport interface RunServicePayloadToQuoterResponseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoterResponseTypeResolver<TParent = any> {\n  primaTotal?: QuoterResponseToPrimaTotalResolver<TParent>;\n  coverages?: QuoterResponseToCoveragesResolver<TParent>;\n  quoteId?: QuoterResponseToQuoteIdResolver<TParent>;\n  package?: QuoterResponseToPackageResolver<TParent>;\n  product?: QuoterResponseToProductResolver<TParent>;\n  quoteFolio?: QuoterResponseToQuoteFolioResolver<TParent>;\n  beginDate?: QuoterResponseToBeginDateResolver<TParent>;\n  endDate?: QuoterResponseToEndDateResolver<TParent>;\n  carCompanyCode?: QuoterResponseToCarCompanyCodeResolver<TParent>;\n  parentId?: QuoterResponseToParentIdResolver<TParent>;\n  responseQuoter?: QuoterResponseToResponseQuoterResolver<TParent>;\n}\n\nexport interface QuoterResponseToPrimaTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToPackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToQuoteFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToBeginDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToEndDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToCarCompanyCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToParentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterResponseToResponseQuoterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageServiceTypeResolver<TParent = any> {\n  coverageName?: CoverageServiceToCoverageNameResolver<TParent>;\n  cobId?: CoverageServiceToCobIdResolver<TParent>;\n  coverageSum?: CoverageServiceToCoverageSumResolver<TParent>;\n  coverageDeductible?: CoverageServiceToCoverageDeductibleResolver<TParent>;\n  total?: CoverageServiceToTotalResolver<TParent>;\n}\n\nexport interface CoverageServiceToCoverageNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageServiceToCobIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageServiceToCoverageSumResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageServiceToCoverageDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageServiceToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResponseApiInsurerTypeResolver<TParent = any> {\n  id?: ResponseApiInsurerToIdResolver<TParent>;\n  parent_car_form?: ResponseApiInsurerToParent_car_formResolver<TParent>;\n  prima_total?: ResponseApiInsurerToPrima_totalResolver<TParent>;\n  quote_selected?: ResponseApiInsurerToQuote_selectedResolver<TParent>;\n  emitido?: ResponseApiInsurerToEmitidoResolver<TParent>;\n  url?: ResponseApiInsurerToUrlResolver<TParent>;\n  paquete?: ResponseApiInsurerToPaqueteResolver<TParent>;\n  frecuencia_pago?: ResponseApiInsurerToFrecuencia_pagoResolver<TParent>;\n  dER?: ResponseApiInsurerToDERResolver<TParent>;\n  cVE?: ResponseApiInsurerToCVEResolver<TParent>;\n  iVA?: ResponseApiInsurerToIVAResolver<TParent>;\n  rEC?: ResponseApiInsurerToRECResolver<TParent>;\n  car_descr?: ResponseApiInsurerToCar_descrResolver<TParent>;\n  folio_quote?: ResponseApiInsurerToFolio_quoteResolver<TParent>;\n  fecha_inicio?: ResponseApiInsurerToFecha_inicioResolver<TParent>;\n  fecha_fin?: ResponseApiInsurerToFecha_finResolver<TParent>;\n  car_company_code?: ResponseApiInsurerToCar_company_codeResolver<TParent>;\n  parent_id?: ResponseApiInsurerToParent_idResolver<TParent>;\n  service?: ResponseApiInsurerToServiceResolver<TParent>;\n  quote_coverages?: ResponseApiInsurerToQuote_coveragesResolver<TParent>;\n  quote_pay_frecuency?: ResponseApiInsurerToQuote_pay_frecuencyResolver<TParent>;\n  discount_services?: ResponseApiInsurerToDiscount_servicesResolver<TParent>;\n}\n\nexport interface ResponseApiInsurerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToParent_car_formResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToPrima_totalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToQuote_selectedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToEmitidoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToPaqueteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToFrecuencia_pagoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToDERResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToCVEResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToIVAResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToRECResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToCar_descrResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToFolio_quoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToFecha_inicioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToFecha_finResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToCar_company_codeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToParent_idResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToQuote_coveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToQuote_pay_frecuencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponseApiInsurerToDiscount_servicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceTypeResolver<TParent = any> {\n  url?: ServiceToUrlResolver<TParent>;\n  name?: ServiceToNameResolver<TParent>;\n  id?: ServiceToIdResolver<TParent>;\n}\n\nexport interface ServiceToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoteCoverageTypeResolver<TParent = any> {\n  coverage_name?: QuoteCoverageToCoverage_nameResolver<TParent>;\n  cob_id?: QuoteCoverageToCob_idResolver<TParent>;\n  sum_coverage?: QuoteCoverageToSum_coverageResolver<TParent>;\n  deductible_coverage?: QuoteCoverageToDeductible_coverageResolver<TParent>;\n  total?: QuoteCoverageToTotalResolver<TParent>;\n}\n\nexport interface QuoteCoverageToCoverage_nameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteCoverageToCob_idResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteCoverageToSum_coverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteCoverageToDeductible_coverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteCoverageToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuotePayFrecuencyTypeResolver<TParent = any> {\n  id?: QuotePayFrecuencyToIdResolver<TParent>;\n  first_pay?: QuotePayFrecuencyToFirst_payResolver<TParent>;\n  tipe?: QuotePayFrecuencyToTipeResolver<TParent>;\n  second_pay?: QuotePayFrecuencyToSecond_payResolver<TParent>;\n  total_amount?: QuotePayFrecuencyToTotal_amountResolver<TParent>;\n  fecha_inicio?: QuotePayFrecuencyToFecha_inicioResolver<TParent>;\n  fecha_fin?: QuotePayFrecuencyToFecha_finResolver<TParent>;\n}\n\nexport interface QuotePayFrecuencyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotePayFrecuencyToFirst_payResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotePayFrecuencyToTipeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotePayFrecuencyToSecond_payResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotePayFrecuencyToTotal_amountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotePayFrecuencyToFecha_inicioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotePayFrecuencyToFecha_finResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDiscountServiceTypeResolver<TParent = any> {\n  percentage?: DiscountServiceToPercentageResolver<TParent>;\n}\n\nexport interface DiscountServiceToPercentageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStadisticsResultTypeResolver<TParent = any> {\n  name?: StadisticsResultToNameResolver<TParent>;\n  hg?: StadisticsResultToHgResolver<TParent>;\n  percentaje?: StadisticsResultToPercentajeResolver<TParent>;\n  color?: StadisticsResultToColorResolver<TParent>;\n}\n\nexport interface StadisticsResultToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StadisticsResultToHgResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StadisticsResultToPercentajeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StadisticsResultToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListRQuoterProfilesByProjectIdConnectionTypeResolver<TParent = any> {\n  pageInfo?: ListRQuoterProfilesByProjectIdConnectionToPageInfoResolver<TParent>;\n  edges?: ListRQuoterProfilesByProjectIdConnectionToEdgesResolver<TParent>;\n  nodes?: ListRQuoterProfilesByProjectIdConnectionToNodesResolver<TParent>;\n  totalCount?: ListRQuoterProfilesByProjectIdConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ListRQuoterProfilesByProjectIdConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListRQuoterProfilesByProjectIdConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListRQuoterProfilesByProjectIdConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListRQuoterProfilesByProjectIdConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListRQuoterProfilesByProjectIdEdgeTypeResolver<TParent = any> {\n  cursor?: ListRQuoterProfilesByProjectIdEdgeToCursorResolver<TParent>;\n  node?: ListRQuoterProfilesByProjectIdEdgeToNodeResolver<TParent>;\n}\n\nexport interface ListRQuoterProfilesByProjectIdEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListRQuoterProfilesByProjectIdEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoterProfileTypeResolver<TParent = any> {\n  projectId?: QuoterProfileToProjectIdResolver<TParent>;\n  name?: QuoterProfileToNameResolver<TParent>;\n  officeId?: QuoterProfileToOfficeIdResolver<TParent>;\n  office?: QuoterProfileToOfficeResolver<TParent>;\n  quoterProfileInsurers?: QuoterProfileToQuoterProfileInsurersResolver<TParent>;\n  id?: QuoterProfileToIdResolver<TParent>;\n  createdAt?: QuoterProfileToCreatedAtResolver<TParent>;\n  updatedAt?: QuoterProfileToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuoterProfileToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileToOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileToOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileToQuoterProfileInsurersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IOfficeTypeResolver<TParent = any> {\n  projectId?: OfficeToProjectIdResolver<TParent>;\n  name?: OfficeToNameResolver<TParent>;\n  description?: OfficeToDescriptionResolver<TParent>;\n  id?: OfficeToIdResolver<TParent>;\n  createdAt?: OfficeToCreatedAtResolver<TParent>;\n  updatedAt?: OfficeToUpdatedAtResolver<TParent>;\n}\n\nexport interface OfficeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OfficeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OfficeToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OfficeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OfficeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OfficeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoterProfileInsurerTypeResolver<TParent = any> {\n  projectId?: QuoterProfileInsurerToProjectIdResolver<TParent>;\n  quoterProfileId?: QuoterProfileInsurerToQuoterProfileIdResolver<TParent>;\n  quoterProfile?: QuoterProfileInsurerToQuoterProfileResolver<TParent>;\n  insurerId?: QuoterProfileInsurerToInsurerIdResolver<TParent>;\n  insurer?: QuoterProfileInsurerToInsurerResolver<TParent>;\n  percentageBase?: QuoterProfileInsurerToPercentageBaseResolver<TParent>;\n  percentageMax?: QuoterProfileInsurerToPercentageMaxResolver<TParent>;\n  portalAgentQuote?: QuoterProfileInsurerToPortalAgentQuoteResolver<TParent>;\n  portalAgentEmits?: QuoterProfileInsurerToPortalAgentEmitsResolver<TParent>;\n  portalPublicQuote?: QuoterProfileInsurerToPortalPublicQuoteResolver<TParent>;\n  portalPublicEmits?: QuoterProfileInsurerToPortalPublicEmitsResolver<TParent>;\n  id?: QuoterProfileInsurerToIdResolver<TParent>;\n  createdAt?: QuoterProfileInsurerToCreatedAtResolver<TParent>;\n  updatedAt?: QuoterProfileInsurerToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuoterProfileInsurerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToQuoterProfileIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToQuoterProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToInsurerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToPercentageBaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToPercentageMaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToPortalAgentQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToPortalAgentEmitsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToPortalPublicQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToPortalPublicEmitsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileInsurerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListRQuoterProfilesInsurerByProjectIdConnectionTypeResolver<TParent = any> {\n  pageInfo?: ListRQuoterProfilesInsurerByProjectIdConnectionToPageInfoResolver<TParent>;\n  edges?: ListRQuoterProfilesInsurerByProjectIdConnectionToEdgesResolver<TParent>;\n  nodes?: ListRQuoterProfilesInsurerByProjectIdConnectionToNodesResolver<TParent>;\n  totalCount?: ListRQuoterProfilesInsurerByProjectIdConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ListRQuoterProfilesInsurerByProjectIdConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListRQuoterProfilesInsurerByProjectIdConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListRQuoterProfilesInsurerByProjectIdConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListRQuoterProfilesInsurerByProjectIdConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListRQuoterProfilesInsurerByProjectIdEdgeTypeResolver<TParent = any> {\n  cursor?: ListRQuoterProfilesInsurerByProjectIdEdgeToCursorResolver<TParent>;\n  node?: ListRQuoterProfilesInsurerByProjectIdEdgeToNodeResolver<TParent>;\n}\n\nexport interface ListRQuoterProfilesInsurerByProjectIdEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListRQuoterProfilesInsurerByProjectIdEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHomologatorTypeResolver<TParent = any> {\n  abaCodeId?: HomologatorToAbaCodeIdResolver<TParent>;\n  afirmeCodeId?: HomologatorToAfirmeCodeIdResolver<TParent>;\n  aigCodeId?: HomologatorToAigCodeIdResolver<TParent>;\n  anaCodeId?: HomologatorToAnaCodeIdResolver<TParent>;\n  atlasCodeId?: HomologatorToAtlasCodeIdResolver<TParent>;\n  axaCodeId?: HomologatorToAxaCodeIdResolver<TParent>;\n  banorteCodeId?: HomologatorToBanorteCodeIdResolver<TParent>;\n  gnpCodeId?: HomologatorToGnpCodeIdResolver<TParent>;\n  hdiCodeId?: HomologatorToHdiCodeIdResolver<TParent>;\n  potosiCodeId?: HomologatorToPotosiCodeIdResolver<TParent>;\n  psCodeId?: HomologatorToPsCodeIdResolver<TParent>;\n  qualitasCodeId?: HomologatorToQualitasCodeIdResolver<TParent>;\n  zurichCodeId?: HomologatorToZurichCodeIdResolver<TParent>;\n  mapfreCodeId?: HomologatorToMapfreCodeIdResolver<TParent>;\n  id?: HomologatorToIdResolver<TParent>;\n  createdAt?: HomologatorToCreatedAtResolver<TParent>;\n  updatedAt?: HomologatorToUpdatedAtResolver<TParent>;\n}\n\nexport interface HomologatorToAbaCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToAfirmeCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToAigCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToAnaCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToAtlasCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToAxaCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToBanorteCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToGnpCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToHdiCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToPotosiCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToPsCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToQualitasCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToZurichCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToMapfreCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologatorToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoteCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuoteCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuoteCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuoteCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuoteCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoteCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoteCountTypeResolver<TParent = any> {\n  count?: QuoteCountToCountResolver<TParent>;\n}\n\nexport interface QuoteCountToCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRegistrationTypeResolver<TParent = any> {\n  projectId?: RegistrationToProjectIdResolver<TParent>;\n  name?: RegistrationToNameResolver<TParent>;\n  email?: RegistrationToEmailResolver<TParent>;\n  state?: RegistrationToStateResolver<TParent>;\n  city?: RegistrationToCityResolver<TParent>;\n  tradename?: RegistrationToTradenameResolver<TParent>;\n  company?: RegistrationToCompanyResolver<TParent>;\n  interests?: RegistrationToInterestsResolver<TParent>;\n  id?: RegistrationToIdResolver<TParent>;\n  createdAt?: RegistrationToCreatedAtResolver<TParent>;\n  updatedAt?: RegistrationToUpdatedAtResolver<TParent>;\n}\n\nexport interface RegistrationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToTradenameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToInterestsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistrationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoterTypeResolver<TParent = any> {\n  quote?: QuoterToQuoteResolver<TParent>;\n  services?: QuoterToServicesResolver<TParent>;\n}\n\nexport interface QuoterToQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterToServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGenderDTOTypeResolver<TParent = any> {\n  name?: GenderDTOToNameResolver<TParent>;\n}\n\nexport interface GenderDTOToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICarTypeDTOTypeResolver<TParent = any> {\n  name?: CarTypeDTOToNameResolver<TParent>;\n}\n\nexport interface CarTypeDTOToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListBrandDTOTypeResolver<TParent = any> {\n  name?: ListBrandDTOToNameResolver<TParent>;\n  insurer?: ListBrandDTOToInsurerResolver<TParent>;\n}\n\nexport interface ListBrandDTOToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListBrandDTOToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListSubBrandDTOTypeResolver<TParent = any> {\n  name?: ListSubBrandDTOToNameResolver<TParent>;\n  insurer?: ListSubBrandDTOToInsurerResolver<TParent>;\n}\n\nexport interface ListSubBrandDTOToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListSubBrandDTOToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListYearDTOTypeResolver<TParent = any> {\n  year?: ListYearDTOToYearResolver<TParent>;\n  insurer?: ListYearDTOToInsurerResolver<TParent>;\n}\n\nexport interface ListYearDTOToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListYearDTOToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListVersionDTOTypeResolver<TParent = any> {\n  carId?: ListVersionDTOToCarIdResolver<TParent>;\n  version?: ListVersionDTOToVersionResolver<TParent>;\n  cveveh?: ListVersionDTOToCvevehResolver<TParent>;\n  insurer?: ListVersionDTOToInsurerResolver<TParent>;\n}\n\nexport interface ListVersionDTOToCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListVersionDTOToVersionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListVersionDTOToCvevehResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListVersionDTOToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHomologationServiceTypeResolver<TParent = any> {\n  homologated?: HomologationServiceToHomologatedResolver<TParent>;\n  name?: HomologationServiceToNameResolver<TParent>;\n  codeName?: HomologationServiceToCodeNameResolver<TParent>;\n  homologateDescription?: HomologationServiceToHomologateDescriptionResolver<TParent>;\n  color?: HomologationServiceToColorResolver<TParent>;\n  logo?: HomologationServiceToLogoResolver<TParent>;\n}\n\nexport interface HomologationServiceToHomologatedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologationServiceToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologationServiceToCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologationServiceToHomologateDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologationServiceToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface HomologationServiceToLogoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IColoniaDTOTypeResolver<TParent = any> {\n  colonias?: ColoniaDTOToColoniasResolver<TParent>;\n  estado?: ColoniaDTOToEstadoResolver<TParent>;\n  municipio?: ColoniaDTOToMunicipioResolver<TParent>;\n  munid?: ColoniaDTOToMunidResolver<TParent>;\n}\n\nexport interface ColoniaDTOToColoniasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColoniaDTOToEstadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColoniaDTOToMunicipioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ColoniaDTOToMunidResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEstadoDTOTypeResolver<TParent = any> {\n  name?: EstadoDTOToNameResolver<TParent>;\n  value?: EstadoDTOToValueResolver<TParent>;\n}\n\nexport interface EstadoDTOToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EstadoDTOToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageDTOTypeResolver<TParent = any> {\n  servicename?: CoverageDTOToServicenameResolver<TParent>;\n  type?: CoverageDTOToTypeResolver<TParent>;\n  obligatory?: CoverageDTOToObligatoryResolver<TParent>;\n  optional?: CoverageDTOToOptionalResolver<TParent>;\n}\n\nexport interface CoverageDTOToServicenameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDTOToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDTOToObligatoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDTOToOptionalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICatalogCollectionSegmentTypeResolver<TParent = any> {\n  items?: CatalogCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CatalogCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CatalogCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CatalogCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CatalogCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CatalogCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Imultiquoter_CatalogTypeResolver<TParent = any> {\n  brand?: multiquoter_CatalogToBrandResolver<TParent>;\n  description?: multiquoter_CatalogToDescriptionResolver<TParent>;\n  subBrand?: multiquoter_CatalogToSubBrandResolver<TParent>;\n  catalogType?: multiquoter_CatalogToCatalogTypeResolver<TParent>;\n  oldId?: multiquoter_CatalogToOldIdResolver<TParent>;\n  years?: multiquoter_CatalogToYearsResolver<TParent>;\n  id?: multiquoter_CatalogToIdResolver<TParent>;\n  createdAt?: multiquoter_CatalogToCreatedAtResolver<TParent>;\n  updatedAt?: multiquoter_CatalogToUpdatedAtResolver<TParent>;\n}\n\nexport interface multiquoter_CatalogToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CatalogToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CatalogToSubBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CatalogToCatalogTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CatalogToOldIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CatalogToYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CatalogToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CatalogToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface multiquoter_CatalogToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICatalogByYearTypeResolver<TParent = any> {\n  year?: CatalogByYearToYearResolver<TParent>;\n  cveveh?: CatalogByYearToCvevehResolver<TParent>;\n  catalogId?: CatalogByYearToCatalogIdResolver<TParent>;\n  catalog?: CatalogByYearToCatalogResolver<TParent>;\n  id?: CatalogByYearToIdResolver<TParent>;\n  createdAt?: CatalogByYearToCreatedAtResolver<TParent>;\n  updatedAt?: CatalogByYearToUpdatedAtResolver<TParent>;\n}\n\nexport interface CatalogByYearToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CatalogByYearToCvevehResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CatalogByYearToCatalogIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CatalogByYearToCatalogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CatalogByYearToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CatalogByYearToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CatalogByYearToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IOfficeCollectionSegmentTypeResolver<TParent = any> {\n  items?: OfficeCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: OfficeCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: OfficeCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface OfficeCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OfficeCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OfficeCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuoterProfileCollectionSegmentTypeResolver<TParent = any> {\n  items?: QuoterProfileCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: QuoterProfileCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: QuoterProfileCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface QuoterProfileCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuoterProfileCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IApiServiceTypeResolver<TParent = any> {\n  projectId?: ApiServiceToProjectIdResolver<TParent>;\n  label?: ApiServiceToLabelResolver<TParent>;\n  serviceCode?: ApiServiceToServiceCodeResolver<TParent>;\n  secretKey?: ApiServiceToSecretKeyResolver<TParent>;\n  expiration?: ApiServiceToExpirationResolver<TParent>;\n  url?: ApiServiceToUrlResolver<TParent>;\n  id?: ApiServiceToIdResolver<TParent>;\n  createdAt?: ApiServiceToCreatedAtResolver<TParent>;\n  updatedAt?: ApiServiceToUpdatedAtResolver<TParent>;\n}\n\nexport interface ApiServiceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ApiServiceToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ApiServiceToServiceCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ApiServiceToSecretKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ApiServiceToExpirationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ApiServiceToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ApiServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ApiServiceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ApiServiceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicPageTypeResolver<TParent = any> {\n  dynamicSections?: DynamicPageToDynamicSectionsResolver<TParent>;\n  projectId?: DynamicPageToProjectIdResolver<TParent>;\n  name?: DynamicPageToNameResolver<TParent>;\n  label?: DynamicPageToLabelResolver<TParent>;\n  id?: DynamicPageToIdResolver<TParent>;\n  createdAt?: DynamicPageToCreatedAtResolver<TParent>;\n  updatedAt?: DynamicPageToUpdatedAtResolver<TParent>;\n}\n\nexport interface DynamicPageToDynamicSectionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicPageToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicPageToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicPageToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicPageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicPageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicPageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicSectionTypeResolver<TParent = any> {\n  dynamicPage?: DynamicSectionToDynamicPageResolver<TParent>;\n  dynamicTabs?: DynamicSectionToDynamicTabsResolver<TParent>;\n  position?: DynamicSectionToPositionResolver<TParent>;\n  isPrimary?: DynamicSectionToIsPrimaryResolver<TParent>;\n  dynamicPageId?: DynamicSectionToDynamicPageIdResolver<TParent>;\n  id?: DynamicSectionToIdResolver<TParent>;\n  createdAt?: DynamicSectionToCreatedAtResolver<TParent>;\n  updatedAt?: DynamicSectionToUpdatedAtResolver<TParent>;\n}\n\nexport interface DynamicSectionToDynamicPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionToDynamicTabsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionToIsPrimaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionToDynamicPageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicTabTypeResolver<TParent = any> {\n  dynamicSection?: DynamicTabToDynamicSectionResolver<TParent>;\n  dynamicSectionBlocks?: DynamicTabToDynamicSectionBlocksResolver<TParent>;\n  name?: DynamicTabToNameResolver<TParent>;\n  position?: DynamicTabToPositionResolver<TParent>;\n  dynamicSectionId?: DynamicTabToDynamicSectionIdResolver<TParent>;\n  id?: DynamicTabToIdResolver<TParent>;\n  createdAt?: DynamicTabToCreatedAtResolver<TParent>;\n  updatedAt?: DynamicTabToUpdatedAtResolver<TParent>;\n}\n\nexport interface DynamicTabToDynamicSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicTabToDynamicSectionBlocksResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicTabToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicTabToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicTabToDynamicSectionIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicTabToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicTabToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicTabToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicSectionBlockTypeResolver<TParent = any> {\n  dynamicTab?: DynamicSectionBlockToDynamicTabResolver<TParent>;\n  dynamicBlock?: DynamicSectionBlockToDynamicBlockResolver<TParent>;\n  dynamicCustomMetas?: DynamicSectionBlockToDynamicCustomMetasResolver<TParent>;\n  label?: DynamicSectionBlockToLabelResolver<TParent>;\n  position?: DynamicSectionBlockToPositionResolver<TParent>;\n  style?: DynamicSectionBlockToStyleResolver<TParent>;\n  dynamicBlockId?: DynamicSectionBlockToDynamicBlockIdResolver<TParent>;\n  dynamicTabId?: DynamicSectionBlockToDynamicTabIdResolver<TParent>;\n  id?: DynamicSectionBlockToIdResolver<TParent>;\n  createdAt?: DynamicSectionBlockToCreatedAtResolver<TParent>;\n  updatedAt?: DynamicSectionBlockToUpdatedAtResolver<TParent>;\n}\n\nexport interface DynamicSectionBlockToDynamicTabResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToDynamicBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToDynamicCustomMetasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToStyleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToDynamicBlockIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToDynamicTabIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicBlockTypeResolver<TParent = any> {\n  dynamicSectionBlocks?: DynamicBlockToDynamicSectionBlocksResolver<TParent>;\n  codeName?: DynamicBlockToCodeNameResolver<TParent>;\n  description?: DynamicBlockToDescriptionResolver<TParent>;\n  services?: DynamicBlockToServicesResolver<TParent>;\n  components?: DynamicBlockToComponentsResolver<TParent>;\n  style?: DynamicBlockToStyleResolver<TParent>;\n  id?: DynamicBlockToIdResolver<TParent>;\n  createdAt?: DynamicBlockToCreatedAtResolver<TParent>;\n  updatedAt?: DynamicBlockToUpdatedAtResolver<TParent>;\n}\n\nexport interface DynamicBlockToDynamicSectionBlocksResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicBlockToCodeNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicBlockToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicBlockToServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicBlockToComponentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicBlockToStyleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicBlockToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicBlockToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicBlockToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicCustomMetaTypeResolver<TParent = any> {\n  dynamicSectionBlocks?: DynamicCustomMetaToDynamicSectionBlocksResolver<TParent>;\n  dynamicCustomValues?: DynamicCustomMetaToDynamicCustomValuesResolver<TParent>;\n  metaKey?: DynamicCustomMetaToMetaKeyResolver<TParent>;\n  metaType?: DynamicCustomMetaToMetaTypeResolver<TParent>;\n  label?: DynamicCustomMetaToLabelResolver<TParent>;\n  description?: DynamicCustomMetaToDescriptionResolver<TParent>;\n  position?: DynamicCustomMetaToPositionResolver<TParent>;\n  dynamicSectionBlockId?: DynamicCustomMetaToDynamicSectionBlockIdResolver<TParent>;\n  id?: DynamicCustomMetaToIdResolver<TParent>;\n  createdAt?: DynamicCustomMetaToCreatedAtResolver<TParent>;\n  updatedAt?: DynamicCustomMetaToUpdatedAtResolver<TParent>;\n}\n\nexport interface DynamicCustomMetaToDynamicSectionBlocksResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToDynamicCustomValuesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToMetaKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToMetaTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToDynamicSectionBlockIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicCustomValueTypeResolver<TParent = any> {\n  dynamicCustomMetas?: DynamicCustomValueToDynamicCustomMetasResolver<TParent>;\n  memberId?: DynamicCustomValueToMemberIdResolver<TParent>;\n  dynamicCustomMetaId?: DynamicCustomValueToDynamicCustomMetaIdResolver<TParent>;\n  value?: DynamicCustomValueToValueResolver<TParent>;\n  id?: DynamicCustomValueToIdResolver<TParent>;\n  createdAt?: DynamicCustomValueToCreatedAtResolver<TParent>;\n  updatedAt?: DynamicCustomValueToUpdatedAtResolver<TParent>;\n}\n\nexport interface DynamicCustomValueToDynamicCustomMetasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomValueToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomValueToDynamicCustomMetaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomValueToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomValueToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomValueToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomValueToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicBlockCollectionSegmentTypeResolver<TParent = any> {\n  items?: DynamicBlockCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DynamicBlockCollectionSegmentToPageInfoResolver<TParent>;\n}\n\nexport interface DynamicBlockCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicBlockCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicSectionCollectionSegmentTypeResolver<TParent = any> {\n  items?: DynamicSectionCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DynamicSectionCollectionSegmentToPageInfoResolver<TParent>;\n}\n\nexport interface DynamicSectionCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicTabCollectionSegmentTypeResolver<TParent = any> {\n  items?: DynamicTabCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DynamicTabCollectionSegmentToPageInfoResolver<TParent>;\n}\n\nexport interface DynamicTabCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicTabCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicSectionBlockCollectionSegmentTypeResolver<TParent = any> {\n  items?: DynamicSectionBlockCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DynamicSectionBlockCollectionSegmentToPageInfoResolver<TParent>;\n}\n\nexport interface DynamicSectionBlockCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicSectionBlockCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicCustomMetaCollectionSegmentTypeResolver<TParent = any> {\n  items?: DynamicCustomMetaCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DynamicCustomMetaCollectionSegmentToPageInfoResolver<TParent>;\n}\n\nexport interface DynamicCustomMetaCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomMetaCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicCustomValueCollectionSegmentTypeResolver<TParent = any> {\n  items?: DynamicCustomValueCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DynamicCustomValueCollectionSegmentToPageInfoResolver<TParent>;\n}\n\nexport interface DynamicCustomValueCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DynamicCustomValueCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IChargeCollectionSegmentTypeResolver<TParent = any> {\n  items?: ChargeCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ChargeCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ChargeCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ChargeCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ChargeCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ChargeCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IChargeTypeResolver<TParent = any> {\n  projectId?: ChargeToProjectIdResolver<TParent>;\n  eventId?: ChargeToEventIdResolver<TParent>;\n  memberId?: ChargeToMemberIdResolver<TParent>;\n  total?: ChargeToTotalResolver<TParent>;\n  id?: ChargeToIdResolver<TParent>;\n  createdAt?: ChargeToCreatedAtResolver<TParent>;\n  updatedAt?: ChargeToUpdatedAtResolver<TParent>;\n}\n\nexport interface ChargeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ChargeToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ChargeToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ChargeToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ChargeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ChargeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ChargeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IClinicHistoryTypeResolver<TParent = any> {\n  projectId?: ClinicHistoryToProjectIdResolver<TParent>;\n  eventId?: ClinicHistoryToEventIdResolver<TParent>;\n  memberId?: ClinicHistoryToMemberIdResolver<TParent>;\n  notes?: ClinicHistoryToNotesResolver<TParent>;\n  isVisible?: ClinicHistoryToIsVisibleResolver<TParent>;\n  position?: ClinicHistoryToPositionResolver<TParent>;\n  id?: ClinicHistoryToIdResolver<TParent>;\n  createdAt?: ClinicHistoryToCreatedAtResolver<TParent>;\n  updatedAt?: ClinicHistoryToUpdatedAtResolver<TParent>;\n}\n\nexport interface ClinicHistoryToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryToNotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryToIsVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClinicHistoryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEventDetailCollectionSegmentTypeResolver<TParent = any> {\n  items?: EventDetailCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: EventDetailCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: EventDetailCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface EventDetailCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EventDetailCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMedicalServiceTypeResolver<TParent = any> {\n  projectId?: MedicalServiceToProjectIdResolver<TParent>;\n  state?: MedicalServiceToStateResolver<TParent>;\n  name?: MedicalServiceToNameResolver<TParent>;\n  mode?: MedicalServiceToModeResolver<TParent>;\n  cost?: MedicalServiceToCostResolver<TParent>;\n  imgRoute?: MedicalServiceToImgRouteResolver<TParent>;\n  description?: MedicalServiceToDescriptionResolver<TParent>;\n  id?: MedicalServiceToIdResolver<TParent>;\n  createdAt?: MedicalServiceToCreatedAtResolver<TParent>;\n  updatedAt?: MedicalServiceToUpdatedAtResolver<TParent>;\n}\n\nexport interface MedicalServiceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalServiceToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalServiceToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalServiceToModeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalServiceToCostResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalServiceToImgRouteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalServiceToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalServiceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalServiceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMedicalConfigTypeResolver<TParent = any> {\n  projectId?: MedicalConfigToProjectIdResolver<TParent>;\n  patologis?: MedicalConfigToPatologisResolver<TParent>;\n  id?: MedicalConfigToIdResolver<TParent>;\n  createdAt?: MedicalConfigToCreatedAtResolver<TParent>;\n  updatedAt?: MedicalConfigToUpdatedAtResolver<TParent>;\n}\n\nexport interface MedicalConfigToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalConfigToPatologisResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalConfigToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalConfigToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MedicalConfigToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRegistSesionTypeResolver<TParent = any> {\n  projectId?: RegistSesionToProjectIdResolver<TParent>;\n  therapyId?: RegistSesionToTherapyIdResolver<TParent>;\n  therapy?: RegistSesionToTherapyResolver<TParent>;\n  title?: RegistSesionToTitleResolver<TParent>;\n  namePacient?: RegistSesionToNamePacientResolver<TParent>;\n  terapist?: RegistSesionToTerapistResolver<TParent>;\n  dateSesion?: RegistSesionToDateSesionResolver<TParent>;\n  comments?: RegistSesionToCommentsResolver<TParent>;\n  electronicsign?: RegistSesionToElectronicsignResolver<TParent>;\n  legalType?: RegistSesionToLegalTypeResolver<TParent>;\n  id?: RegistSesionToIdResolver<TParent>;\n  createdAt?: RegistSesionToCreatedAtResolver<TParent>;\n  updatedAt?: RegistSesionToUpdatedAtResolver<TParent>;\n}\n\nexport interface RegistSesionToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToTherapyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToTherapyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToNamePacientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToTerapistResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToDateSesionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToCommentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToElectronicsignResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToLegalTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RegistSesionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITherapyTypeResolver<TParent = any> {\n  projectId?: TherapyToProjectIdResolver<TParent>;\n  eventId?: TherapyToEventIdResolver<TParent>;\n  memberId?: TherapyToMemberIdResolver<TParent>;\n  numSesion?: TherapyToNumSesionResolver<TParent>;\n  content?: TherapyToContentResolver<TParent>;\n  isVisible?: TherapyToIsVisibleResolver<TParent>;\n  position?: TherapyToPositionResolver<TParent>;\n  id?: TherapyToIdResolver<TParent>;\n  createdAt?: TherapyToCreatedAtResolver<TParent>;\n  updatedAt?: TherapyToUpdatedAtResolver<TParent>;\n}\n\nexport interface TherapyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyToNumSesionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyToContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyToIsVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITherapyCollectionSegmentTypeResolver<TParent = any> {\n  items?: TherapyCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: TherapyCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: TherapyCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface TherapyCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TherapyCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRecipeConfigTypeResolver<TParent = any> {\n  projectId?: RecipeConfigToProjectIdResolver<TParent>;\n  medicRecipeId?: RecipeConfigToMedicRecipeIdResolver<TParent>;\n  medicRecipe?: RecipeConfigToMedicRecipeResolver<TParent>;\n  isActiveAllPacients?: RecipeConfigToIsActiveAllPacientsResolver<TParent>;\n  isAccessDataPacient?: RecipeConfigToIsAccessDataPacientResolver<TParent>;\n  id?: RecipeConfigToIdResolver<TParent>;\n  createdAt?: RecipeConfigToCreatedAtResolver<TParent>;\n  updatedAt?: RecipeConfigToUpdatedAtResolver<TParent>;\n}\n\nexport interface RecipeConfigToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecipeConfigToMedicRecipeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecipeConfigToMedicRecipeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecipeConfigToIsActiveAllPacientsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecipeConfigToIsAccessDataPacientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecipeConfigToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecipeConfigToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecipeConfigToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConsultNoteTypeResolver<TParent = any> {\n  eventId?: ConsultNoteToEventIdResolver<TParent>;\n  projectId?: ConsultNoteToProjectIdResolver<TParent>;\n  memberId?: ConsultNoteToMemberIdResolver<TParent>;\n  note?: ConsultNoteToNoteResolver<TParent>;\n  isVisible?: ConsultNoteToIsVisibleResolver<TParent>;\n  id?: ConsultNoteToIdResolver<TParent>;\n  createdAt?: ConsultNoteToCreatedAtResolver<TParent>;\n  updatedAt?: ConsultNoteToUpdatedAtResolver<TParent>;\n}\n\nexport interface ConsultNoteToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultNoteToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultNoteToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultNoteToNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultNoteToIsVisibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultNoteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultNoteToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultNoteToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBillingRequestTypeResolver<TParent = any> {\n  projectId?: BillingRequestToProjectIdResolver<TParent>;\n  memberId?: BillingRequestToMemberIdResolver<TParent>;\n  eventId?: BillingRequestToEventIdResolver<TParent>;\n  socialReason?: BillingRequestToSocialReasonResolver<TParent>;\n  rfc?: BillingRequestToRfcResolver<TParent>;\n  cFDI?: BillingRequestToCFDIResolver<TParent>;\n  socialRegiment?: BillingRequestToSocialRegimentResolver<TParent>;\n  cP?: BillingRequestToCPResolver<TParent>;\n  email?: BillingRequestToEmailResolver<TParent>;\n  status?: BillingRequestToStatusResolver<TParent>;\n  billingUrl?: BillingRequestToBillingUrlResolver<TParent>;\n  emailContent?: BillingRequestToEmailContentResolver<TParent>;\n  id?: BillingRequestToIdResolver<TParent>;\n  createdAt?: BillingRequestToCreatedAtResolver<TParent>;\n  updatedAt?: BillingRequestToUpdatedAtResolver<TParent>;\n}\n\nexport interface BillingRequestToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToEventIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToSocialReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToRfcResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToCFDIResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToSocialRegimentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToCPResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToBillingUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToEmailContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BillingRequestToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConsultDtoTypeResolver<TParent = any> {\n  consultNote?: ConsultDtoToConsultNoteResolver<TParent>;\n  fisicExam?: ConsultDtoToFisicExamResolver<TParent>;\n  diagnostic?: ConsultDtoToDiagnosticResolver<TParent>;\n  therapy?: ConsultDtoToTherapyResolver<TParent>;\n  patientVitalSignsResponse?: ConsultDtoToPatientVitalSignsResponseResolver<TParent>;\n  medicine?: ConsultDtoToMedicineResolver<TParent>;\n  pacientNote?: ConsultDtoToPacientNoteResolver<TParent>;\n}\n\nexport interface ConsultDtoToConsultNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultDtoToFisicExamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultDtoToDiagnosticResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultDtoToTherapyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultDtoToPatientVitalSignsResponseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultDtoToMedicineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultDtoToPacientNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISpaceCollectionSegmentTypeResolver<TParent = any> {\n  items?: SpaceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SpaceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SpaceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SpaceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SpaceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardStatusCollectionSegmentTypeResolver<TParent = any> {\n  items?: BoardStatusCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BoardStatusCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BoardStatusCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BoardStatusCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardStatusCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardCollectionSegmentTypeResolver<TParent = any> {\n  items?: BoardCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BoardCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BoardCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BoardCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardListCollectionSegmentTypeResolver<TParent = any> {\n  items?: BoardListCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BoardListCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BoardListCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BoardListCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardListCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardReplyCollectionSegmentTypeResolver<TParent = any> {\n  items?: CardReplyCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CardReplyCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CardReplyCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CardReplyCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardReplyCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardCollectionSegmentTypeResolver<TParent = any> {\n  items?: CardCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CardCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CardCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CardCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INestedFileCollectionSegmentTypeResolver<TParent = any> {\n  items?: NestedFileCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: NestedFileCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: NestedFileCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface NestedFileCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NestedFileCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NestedFileCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberCardCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberCardCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberCardCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberCardCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberCardCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCardCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberCardCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberBoardCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberBoardCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberBoardCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberBoardCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberBoardCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberSpaceCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberSpaceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberSpaceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberSpaceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberSpaceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberSpaceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListMemberSpaceOnValueConnectionTypeResolver<TParent = any> {\n  pageInfo?: ListMemberSpaceOnValueConnectionToPageInfoResolver<TParent>;\n  edges?: ListMemberSpaceOnValueConnectionToEdgesResolver<TParent>;\n  nodes?: ListMemberSpaceOnValueConnectionToNodesResolver<TParent>;\n  totalCount?: ListMemberSpaceOnValueConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ListMemberSpaceOnValueConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberSpaceOnValueConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberSpaceOnValueConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberSpaceOnValueConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListMemberSpaceOnValueEdgeTypeResolver<TParent = any> {\n  cursor?: ListMemberSpaceOnValueEdgeToCursorResolver<TParent>;\n  node?: ListMemberSpaceOnValueEdgeToNodeResolver<TParent>;\n}\n\nexport interface ListMemberSpaceOnValueEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberSpaceOnValueEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListMemberSpaceOnCardConnectionTypeResolver<TParent = any> {\n  pageInfo?: ListMemberSpaceOnCardConnectionToPageInfoResolver<TParent>;\n  edges?: ListMemberSpaceOnCardConnectionToEdgesResolver<TParent>;\n  nodes?: ListMemberSpaceOnCardConnectionToNodesResolver<TParent>;\n  totalCount?: ListMemberSpaceOnCardConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ListMemberSpaceOnCardConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberSpaceOnCardConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberSpaceOnCardConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberSpaceOnCardConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListMemberSpaceOnCardEdgeTypeResolver<TParent = any> {\n  cursor?: ListMemberSpaceOnCardEdgeToCursorResolver<TParent>;\n  node?: ListMemberSpaceOnCardEdgeToNodeResolver<TParent>;\n}\n\nexport interface ListMemberSpaceOnCardEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberSpaceOnCardEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListMemberBoardOnValueConnectionTypeResolver<TParent = any> {\n  pageInfo?: ListMemberBoardOnValueConnectionToPageInfoResolver<TParent>;\n  edges?: ListMemberBoardOnValueConnectionToEdgesResolver<TParent>;\n  nodes?: ListMemberBoardOnValueConnectionToNodesResolver<TParent>;\n  totalCount?: ListMemberBoardOnValueConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ListMemberBoardOnValueConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberBoardOnValueConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberBoardOnValueConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberBoardOnValueConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListMemberBoardOnValueEdgeTypeResolver<TParent = any> {\n  cursor?: ListMemberBoardOnValueEdgeToCursorResolver<TParent>;\n  node?: ListMemberBoardOnValueEdgeToNodeResolver<TParent>;\n}\n\nexport interface ListMemberBoardOnValueEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberBoardOnValueEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListMemberBoardOnCardConnectionTypeResolver<TParent = any> {\n  pageInfo?: ListMemberBoardOnCardConnectionToPageInfoResolver<TParent>;\n  edges?: ListMemberBoardOnCardConnectionToEdgesResolver<TParent>;\n  nodes?: ListMemberBoardOnCardConnectionToNodesResolver<TParent>;\n  totalCount?: ListMemberBoardOnCardConnectionToTotalCountResolver<TParent>;\n}\n\nexport interface ListMemberBoardOnCardConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberBoardOnCardConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberBoardOnCardConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberBoardOnCardConnectionToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListMemberBoardOnCardEdgeTypeResolver<TParent = any> {\n  cursor?: ListMemberBoardOnCardEdgeToCursorResolver<TParent>;\n  node?: ListMemberBoardOnCardEdgeToNodeResolver<TParent>;\n}\n\nexport interface ListMemberBoardOnCardEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListMemberBoardOnCardEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardColumnTypeCollectionSegmentTypeResolver<TParent = any> {\n  items?: BoardColumnTypeCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BoardColumnTypeCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BoardColumnTypeCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BoardColumnTypeCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardColumnTypeCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberBoardDTOTypeResolver<TParent = any> {\n  memberSpace?: MemberBoardDTOToMemberSpaceResolver<TParent>;\n  memberBoards?: MemberBoardDTOToMemberBoardsResolver<TParent>;\n}\n\nexport interface MemberBoardDTOToMemberSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberBoardDTOToMemberBoardsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardColumnValueCollectionSegmentTypeResolver<TParent = any> {\n  items?: CardColumnValueCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CardColumnValueCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CardColumnValueCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CardColumnValueCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardColumnValueCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CardColumnValueCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardMemberReferenceCollectionSegmentTypeResolver<TParent = any> {\n  items?: BoardMemberReferenceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BoardMemberReferenceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BoardMemberReferenceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BoardMemberReferenceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BoardMemberReferenceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAttributeTypeResolver<TParent = any> {\n  value?: AttributeToValueResolver<TParent>;\n  projectId?: AttributeToProjectIdResolver<TParent>;\n  attributesValues?: AttributeToAttributesValuesResolver<TParent>;\n  id?: AttributeToIdResolver<TParent>;\n  createdAt?: AttributeToCreatedAtResolver<TParent>;\n  updatedAt?: AttributeToUpdatedAtResolver<TParent>;\n}\n\nexport interface AttributeToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeToAttributesValuesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAttributeValueTypeResolver<TParent = any> {\n  value?: AttributeValueToValueResolver<TParent>;\n  projectId?: AttributeValueToProjectIdResolver<TParent>;\n  attributeId?: AttributeValueToAttributeIdResolver<TParent>;\n  attribute?: AttributeValueToAttributeResolver<TParent>;\n  materialCombinationAttributes?: AttributeValueToMaterialCombinationAttributesResolver<TParent>;\n  id?: AttributeValueToIdResolver<TParent>;\n  createdAt?: AttributeValueToCreatedAtResolver<TParent>;\n  updatedAt?: AttributeValueToUpdatedAtResolver<TParent>;\n}\n\nexport interface AttributeValueToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeValueToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeValueToAttributeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeValueToAttributeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeValueToMaterialCombinationAttributesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeValueToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeValueToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttributeValueToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialCombinationAttributeTypeResolver<TParent = any> {\n  projectId?: MaterialCombinationAttributeToProjectIdResolver<TParent>;\n  materialCombinationId?: MaterialCombinationAttributeToMaterialCombinationIdResolver<TParent>;\n  attributeValueId?: MaterialCombinationAttributeToAttributeValueIdResolver<TParent>;\n  materialCombination?: MaterialCombinationAttributeToMaterialCombinationResolver<TParent>;\n  attributeValue?: MaterialCombinationAttributeToAttributeValueResolver<TParent>;\n  id?: MaterialCombinationAttributeToIdResolver<TParent>;\n  createdAt?: MaterialCombinationAttributeToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialCombinationAttributeToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialCombinationAttributeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationAttributeToMaterialCombinationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationAttributeToAttributeValueIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationAttributeToMaterialCombinationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationAttributeToAttributeValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationAttributeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationAttributeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationAttributeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialCombinationTypeResolver<TParent = any> {\n  projectId?: MaterialCombinationToProjectIdResolver<TParent>;\n  materialId?: MaterialCombinationToMaterialIdResolver<TParent>;\n  provCode?: MaterialCombinationToProvCodeResolver<TParent>;\n  intCode?: MaterialCombinationToIntCodeResolver<TParent>;\n  price?: MaterialCombinationToPriceResolver<TParent>;\n  material?: MaterialCombinationToMaterialResolver<TParent>;\n  materialCombinationAttributes?: MaterialCombinationToMaterialCombinationAttributesResolver<TParent>;\n  materialStocks?: MaterialCombinationToMaterialStocksResolver<TParent>;\n  id?: MaterialCombinationToIdResolver<TParent>;\n  createdAt?: MaterialCombinationToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialCombinationToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialCombinationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToMaterialIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToProvCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToIntCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToMaterialCombinationAttributesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToMaterialStocksResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCombinationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialTypeResolver<TParent = any> {\n  projectId?: MaterialToProjectIdResolver<TParent>;\n  measureUnityId?: MaterialToMeasureUnityIdResolver<TParent>;\n  materialCategoryId?: MaterialToMaterialCategoryIdResolver<TParent>;\n  materialCategory?: MaterialToMaterialCategoryResolver<TParent>;\n  measureUnity?: MaterialToMeasureUnityResolver<TParent>;\n  measureValues?: MaterialToMeasureValuesResolver<TParent>;\n  materialModules?: MaterialToMaterialModulesResolver<TParent>;\n  materialCombinations?: MaterialToMaterialCombinationsResolver<TParent>;\n  materialStocks?: MaterialToMaterialStocksResolver<TParent>;\n  name?: MaterialToNameResolver<TParent>;\n  provCode?: MaterialToProvCodeResolver<TParent>;\n  intCode?: MaterialToIntCodeResolver<TParent>;\n  descMaterial?: MaterialToDescMaterialResolver<TParent>;\n  id?: MaterialToIdResolver<TParent>;\n  createdAt?: MaterialToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToMeasureUnityIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToMaterialCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToMaterialCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToMeasureUnityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToMeasureValuesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToMaterialModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToMaterialCombinationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToMaterialStocksResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToProvCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToIntCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToDescMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialCategoryTypeResolver<TParent = any> {\n  projectId?: MaterialCategoryToProjectIdResolver<TParent>;\n  nombreCategoria?: MaterialCategoryToNombreCategoriaResolver<TParent>;\n  materials?: MaterialCategoryToMaterialsResolver<TParent>;\n  id?: MaterialCategoryToIdResolver<TParent>;\n  createdAt?: MaterialCategoryToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialCategoryToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialCategoryToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCategoryToNombreCategoriaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCategoryToMaterialsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCategoryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCategoryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCategoryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMeasureUnityTypeResolver<TParent = any> {\n  projectId?: MeasureUnityToProjectIdResolver<TParent>;\n  name?: MeasureUnityToNameResolver<TParent>;\n  abbreviation?: MeasureUnityToAbbreviationResolver<TParent>;\n  materials?: MeasureUnityToMaterialsResolver<TParent>;\n  measureUnitiesTwo?: MeasureUnityToMeasureUnitiesTwoResolver<TParent>;\n  id?: MeasureUnityToIdResolver<TParent>;\n  createdAt?: MeasureUnityToCreatedAtResolver<TParent>;\n  updatedAt?: MeasureUnityToUpdatedAtResolver<TParent>;\n}\n\nexport interface MeasureUnityToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityToAbbreviationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityToMaterialsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityToMeasureUnitiesTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMeasureUnityTwoTypeResolver<TParent = any> {\n  projectId?: MeasureUnityTwoToProjectIdResolver<TParent>;\n  measureUnityId?: MeasureUnityTwoToMeasureUnityIdResolver<TParent>;\n  measureId?: MeasureUnityTwoToMeasureIdResolver<TParent>;\n  measure?: MeasureUnityTwoToMeasureResolver<TParent>;\n  measureUnity?: MeasureUnityTwoToMeasureUnityResolver<TParent>;\n  id?: MeasureUnityTwoToIdResolver<TParent>;\n  createdAt?: MeasureUnityTwoToCreatedAtResolver<TParent>;\n  updatedAt?: MeasureUnityTwoToUpdatedAtResolver<TParent>;\n}\n\nexport interface MeasureUnityTwoToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityTwoToMeasureUnityIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityTwoToMeasureIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityTwoToMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityTwoToMeasureUnityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityTwoToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityTwoToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureUnityTwoToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMeasureTypeResolver<TParent = any> {\n  projectId?: MeasureToProjectIdResolver<TParent>;\n  name?: MeasureToNameResolver<TParent>;\n  abbreviation?: MeasureToAbbreviationResolver<TParent>;\n  measureUnityTwo?: MeasureToMeasureUnityTwoResolver<TParent>;\n  measureValue?: MeasureToMeasureValueResolver<TParent>;\n  id?: MeasureToIdResolver<TParent>;\n  createdAt?: MeasureToCreatedAtResolver<TParent>;\n  updatedAt?: MeasureToUpdatedAtResolver<TParent>;\n}\n\nexport interface MeasureToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureToAbbreviationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureToMeasureUnityTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureToMeasureValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMeasureValueTypeResolver<TParent = any> {\n  projectId?: MeasureValueToProjectIdResolver<TParent>;\n  measureId?: MeasureValueToMeasureIdResolver<TParent>;\n  materialId?: MeasureValueToMaterialIdResolver<TParent>;\n  measure?: MeasureValueToMeasureResolver<TParent>;\n  material?: MeasureValueToMaterialResolver<TParent>;\n  id?: MeasureValueToIdResolver<TParent>;\n  createdAt?: MeasureValueToCreatedAtResolver<TParent>;\n  updatedAt?: MeasureValueToUpdatedAtResolver<TParent>;\n}\n\nexport interface MeasureValueToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureValueToMeasureIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureValueToMaterialIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureValueToMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureValueToMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureValueToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureValueToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MeasureValueToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialModuleTypeResolver<TParent = any> {\n  projectId?: MaterialModuleToProjectIdResolver<TParent>;\n  moduleId?: MaterialModuleToModuleIdResolver<TParent>;\n  materialCategoryId?: MaterialModuleToMaterialCategoryIdResolver<TParent>;\n  materialId?: MaterialModuleToMaterialIdResolver<TParent>;\n  formule?: MaterialModuleToFormuleResolver<TParent>;\n  formuleOpe?: MaterialModuleToFormuleOpeResolver<TParent>;\n  variables?: MaterialModuleToVariablesResolver<TParent>;\n  module?: MaterialModuleToModuleResolver<TParent>;\n  material?: MaterialModuleToMaterialResolver<TParent>;\n  materialVariableModules?: MaterialModuleToMaterialVariableModulesResolver<TParent>;\n  materialCategory?: MaterialModuleToMaterialCategoryResolver<TParent>;\n  id?: MaterialModuleToIdResolver<TParent>;\n  createdAt?: MaterialModuleToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialModuleToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialModuleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToMaterialCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToMaterialIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToFormuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToFormuleOpeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToVariablesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToMaterialVariableModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToMaterialCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialModuleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IModuleTypeResolver<TParent = any> {\n  projectId?: ModuleToProjectIdResolver<TParent>;\n  moduleCategoryId?: ModuleToModuleCategoryIdResolver<TParent>;\n  name?: ModuleToNameResolver<TParent>;\n  descModule?: ModuleToDescModuleResolver<TParent>;\n  formule?: ModuleToFormuleResolver<TParent>;\n  materialModules?: ModuleToMaterialModulesResolver<TParent>;\n  quotationModules?: ModuleToQuotationModulesResolver<TParent>;\n  moduleCategory?: ModuleToModuleCategoryResolver<TParent>;\n  id?: ModuleToIdResolver<TParent>;\n  createdAt?: ModuleToCreatedAtResolver<TParent>;\n  updatedAt?: ModuleToUpdatedAtResolver<TParent>;\n}\n\nexport interface ModuleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToModuleCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToDescModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToFormuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToMaterialModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToQuotationModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToModuleCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuotationModuleTypeResolver<TParent = any> {\n  projectId?: QuotationModuleToProjectIdResolver<TParent>;\n  quotationId?: QuotationModuleToQuotationIdResolver<TParent>;\n  moduleCategoryId?: QuotationModuleToModuleCategoryIdResolver<TParent>;\n  moduleId?: QuotationModuleToModuleIdResolver<TParent>;\n  quantity?: QuotationModuleToQuantityResolver<TParent>;\n  price?: QuotationModuleToPriceResolver<TParent>;\n  image?: QuotationModuleToImageResolver<TParent>;\n  materialQuotations?: QuotationModuleToMaterialQuotationsResolver<TParent>;\n  quotation?: QuotationModuleToQuotationResolver<TParent>;\n  module?: QuotationModuleToModuleResolver<TParent>;\n  moduleCategory?: QuotationModuleToModuleCategoryResolver<TParent>;\n  id?: QuotationModuleToIdResolver<TParent>;\n  createdAt?: QuotationModuleToCreatedAtResolver<TParent>;\n  updatedAt?: QuotationModuleToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuotationModuleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToQuotationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToModuleCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToMaterialQuotationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToModuleCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationModuleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialQuotationTypeResolver<TParent = any> {\n  projectId?: MaterialQuotationToProjectIdResolver<TParent>;\n  moduleQuotationId?: MaterialQuotationToModuleQuotationIdResolver<TParent>;\n  materialId?: MaterialQuotationToMaterialIdResolver<TParent>;\n  materialModuleId?: MaterialQuotationToMaterialModuleIdResolver<TParent>;\n  materialCombinationId?: MaterialQuotationToMaterialCombinationIdResolver<TParent>;\n  materialVariableQuotations?: MaterialQuotationToMaterialVariableQuotationsResolver<TParent>;\n  quotationModule?: MaterialQuotationToQuotationModuleResolver<TParent>;\n  material?: MaterialQuotationToMaterialResolver<TParent>;\n  materialCombination?: MaterialQuotationToMaterialCombinationResolver<TParent>;\n  materialModules?: MaterialQuotationToMaterialModulesResolver<TParent>;\n  measureValue?: MaterialQuotationToMeasureValueResolver<TParent>;\n  id?: MaterialQuotationToIdResolver<TParent>;\n  createdAt?: MaterialQuotationToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialQuotationToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialQuotationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToModuleQuotationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToMaterialIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToMaterialModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToMaterialCombinationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToMaterialVariableQuotationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToQuotationModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToMaterialCombinationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToMaterialModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToMeasureValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialQuotationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialVariableQuotationTypeResolver<TParent = any> {\n  projectId?: MaterialVariableQuotationToProjectIdResolver<TParent>;\n  materialQuotationId?: MaterialVariableQuotationToMaterialQuotationIdResolver<TParent>;\n  variableId?: MaterialVariableQuotationToVariableIdResolver<TParent>;\n  value?: MaterialVariableQuotationToValueResolver<TParent>;\n  materialQuotation?: MaterialVariableQuotationToMaterialQuotationResolver<TParent>;\n  variable?: MaterialVariableQuotationToVariableResolver<TParent>;\n  id?: MaterialVariableQuotationToIdResolver<TParent>;\n  createdAt?: MaterialVariableQuotationToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialVariableQuotationToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialVariableQuotationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableQuotationToMaterialQuotationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableQuotationToVariableIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableQuotationToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableQuotationToMaterialQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableQuotationToVariableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableQuotationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableQuotationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableQuotationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVariableTypeResolver<TParent = any> {\n  projectId?: VariableToProjectIdResolver<TParent>;\n  value?: VariableToValueResolver<TParent>;\n  materialVariableModules?: VariableToMaterialVariableModulesResolver<TParent>;\n  materialVariableQuotations?: VariableToMaterialVariableQuotationsResolver<TParent>;\n  id?: VariableToIdResolver<TParent>;\n  createdAt?: VariableToCreatedAtResolver<TParent>;\n  updatedAt?: VariableToUpdatedAtResolver<TParent>;\n}\n\nexport interface VariableToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VariableToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VariableToMaterialVariableModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VariableToMaterialVariableQuotationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VariableToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VariableToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface VariableToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialVariableModuleTypeResolver<TParent = any> {\n  projectId?: MaterialVariableModuleToProjectIdResolver<TParent>;\n  materialModuleId?: MaterialVariableModuleToMaterialModuleIdResolver<TParent>;\n  variableId?: MaterialVariableModuleToVariableIdResolver<TParent>;\n  variable?: MaterialVariableModuleToVariableResolver<TParent>;\n  materialModule?: MaterialVariableModuleToMaterialModuleResolver<TParent>;\n  id?: MaterialVariableModuleToIdResolver<TParent>;\n  createdAt?: MaterialVariableModuleToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialVariableModuleToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialVariableModuleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableModuleToMaterialModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableModuleToVariableIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableModuleToVariableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableModuleToMaterialModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableModuleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableModuleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialVariableModuleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuotationTypeResolver<TParent = any> {\n  projectId?: QuotationToProjectIdResolver<TParent>;\n  madreQuotationId?: QuotationToMadreQuotationIdResolver<TParent>;\n  memberId?: QuotationToMemberIdResolver<TParent>;\n  buildingSiteName?: QuotationToBuildingSiteNameResolver<TParent>;\n  folio?: QuotationToFolioResolver<TParent>;\n  isOptimized?: QuotationToIsOptimizedResolver<TParent>;\n  quotationModules?: QuotationToQuotationModulesResolver<TParent>;\n  madreQuotation?: QuotationToMadreQuotationResolver<TParent>;\n  buildingSiteAddress?: QuotationToBuildingSiteAddressResolver<TParent>;\n  id?: QuotationToIdResolver<TParent>;\n  createdAt?: QuotationToCreatedAtResolver<TParent>;\n  updatedAt?: QuotationToUpdatedAtResolver<TParent>;\n}\n\nexport interface QuotationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToMadreQuotationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToBuildingSiteNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToIsOptimizedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToQuotationModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToMadreQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToBuildingSiteAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMadreQuotationTypeResolver<TParent = any> {\n  projectId?: MadreQuotationToProjectIdResolver<TParent>;\n  memberId?: MadreQuotationToMemberIdResolver<TParent>;\n  userCustomerId?: MadreQuotationToUserCustomerIdResolver<TParent>;\n  folio?: MadreQuotationToFolioResolver<TParent>;\n  userCustomer?: MadreQuotationToUserCustomerResolver<TParent>;\n  quotations?: MadreQuotationToQuotationsResolver<TParent>;\n  id?: MadreQuotationToIdResolver<TParent>;\n  createdAt?: MadreQuotationToCreatedAtResolver<TParent>;\n  updatedAt?: MadreQuotationToUpdatedAtResolver<TParent>;\n}\n\nexport interface MadreQuotationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MadreQuotationToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MadreQuotationToUserCustomerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MadreQuotationToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MadreQuotationToUserCustomerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MadreQuotationToQuotationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MadreQuotationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MadreQuotationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MadreQuotationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUserCustomerTypeResolver<TParent = any> {\n  projectId?: UserCustomerToProjectIdResolver<TParent>;\n  memberId?: UserCustomerToMemberIdResolver<TParent>;\n  madreQuotations?: UserCustomerToMadreQuotationsResolver<TParent>;\n  customers?: UserCustomerToCustomersResolver<TParent>;\n  id?: UserCustomerToIdResolver<TParent>;\n  createdAt?: UserCustomerToCreatedAtResolver<TParent>;\n  updatedAt?: UserCustomerToUpdatedAtResolver<TParent>;\n}\n\nexport interface UserCustomerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UserCustomerToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UserCustomerToMadreQuotationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UserCustomerToCustomersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UserCustomerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UserCustomerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UserCustomerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICustomerTypeResolver<TParent = any> {\n  projectId?: CustomerToProjectIdResolver<TParent>;\n  name?: CustomerToNameResolver<TParent>;\n  firstName?: CustomerToFirstNameResolver<TParent>;\n  lastName?: CustomerToLastNameResolver<TParent>;\n  email?: CustomerToEmailResolver<TParent>;\n  company?: CustomerToCompanyResolver<TParent>;\n  id?: CustomerToIdResolver<TParent>;\n  createdAt?: CustomerToCreatedAtResolver<TParent>;\n  updatedAt?: CustomerToUpdatedAtResolver<TParent>;\n}\n\nexport interface CustomerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerToCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CustomerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBuildingSiteAddressTypeResolver<TParent = any> {\n  projectId?: BuildingSiteAddressToProjectIdResolver<TParent>;\n  quotationId?: BuildingSiteAddressToQuotationIdResolver<TParent>;\n  countryId?: BuildingSiteAddressToCountryIdResolver<TParent>;\n  stateId?: BuildingSiteAddressToStateIdResolver<TParent>;\n  street?: BuildingSiteAddressToStreetResolver<TParent>;\n  externalNumber?: BuildingSiteAddressToExternalNumberResolver<TParent>;\n  internalNumber?: BuildingSiteAddressToInternalNumberResolver<TParent>;\n  colony?: BuildingSiteAddressToColonyResolver<TParent>;\n  municipality?: BuildingSiteAddressToMunicipalityResolver<TParent>;\n  quotation?: BuildingSiteAddressToQuotationResolver<TParent>;\n  id?: BuildingSiteAddressToIdResolver<TParent>;\n  createdAt?: BuildingSiteAddressToCreatedAtResolver<TParent>;\n  updatedAt?: BuildingSiteAddressToUpdatedAtResolver<TParent>;\n}\n\nexport interface BuildingSiteAddressToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToQuotationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToStateIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToStreetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToExternalNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToInternalNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToColonyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToMunicipalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BuildingSiteAddressToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IModuleCategoryTypeResolver<TParent = any> {\n  projectId?: ModuleCategoryToProjectIdResolver<TParent>;\n  name?: ModuleCategoryToNameResolver<TParent>;\n  descCategory?: ModuleCategoryToDescCategoryResolver<TParent>;\n  modules?: ModuleCategoryToModulesResolver<TParent>;\n  id?: ModuleCategoryToIdResolver<TParent>;\n  createdAt?: ModuleCategoryToCreatedAtResolver<TParent>;\n  updatedAt?: ModuleCategoryToUpdatedAtResolver<TParent>;\n}\n\nexport interface ModuleCategoryToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleCategoryToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleCategoryToDescCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleCategoryToModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleCategoryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleCategoryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModuleCategoryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialStockTypeResolver<TParent = any> {\n  projectId?: MaterialStockToProjectIdResolver<TParent>;\n  materialId?: MaterialStockToMaterialIdResolver<TParent>;\n  materialCombinationId?: MaterialStockToMaterialCombinationIdResolver<TParent>;\n  material?: MaterialStockToMaterialResolver<TParent>;\n  materialCombination?: MaterialStockToMaterialCombinationResolver<TParent>;\n  materialStockMeasures?: MaterialStockToMaterialStockMeasuresResolver<TParent>;\n  id?: MaterialStockToIdResolver<TParent>;\n  createdAt?: MaterialStockToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialStockToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialStockToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockToMaterialIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockToMaterialCombinationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockToMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockToMaterialCombinationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockToMaterialStockMeasuresResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialStockMeasureTypeResolver<TParent = any> {\n  projectId?: MaterialStockMeasureToProjectIdResolver<TParent>;\n  materialStockId?: MaterialStockMeasureToMaterialStockIdResolver<TParent>;\n  quotationId?: MaterialStockMeasureToQuotationIdResolver<TParent>;\n  value?: MaterialStockMeasureToValueResolver<TParent>;\n  formule?: MaterialStockMeasureToFormuleResolver<TParent>;\n  isActive?: MaterialStockMeasureToIsActiveResolver<TParent>;\n  quotationIdUsed?: MaterialStockMeasureToQuotationIdUsedResolver<TParent>;\n  materialStock?: MaterialStockMeasureToMaterialStockResolver<TParent>;\n  materialStockQuotation?: MaterialStockMeasureToMaterialStockQuotationResolver<TParent>;\n  quotationStockUsed?: MaterialStockMeasureToQuotationStockUsedResolver<TParent>;\n  id?: MaterialStockMeasureToIdResolver<TParent>;\n  createdAt?: MaterialStockMeasureToCreatedAtResolver<TParent>;\n  updatedAt?: MaterialStockMeasureToUpdatedAtResolver<TParent>;\n}\n\nexport interface MaterialStockMeasureToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToMaterialStockIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToQuotationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToFormuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToQuotationIdUsedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToMaterialStockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToMaterialStockQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToQuotationStockUsedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialStockMeasureToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialCategoriesConnectionTypeResolver<TParent = any> {\n  pageInfo?: MaterialCategoriesConnectionToPageInfoResolver<TParent>;\n  edges?: MaterialCategoriesConnectionToEdgesResolver<TParent>;\n  nodes?: MaterialCategoriesConnectionToNodesResolver<TParent>;\n}\n\nexport interface MaterialCategoriesConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCategoriesConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCategoriesConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMaterialCategoriesEdgeTypeResolver<TParent = any> {\n  cursor?: MaterialCategoriesEdgeToCursorResolver<TParent>;\n  node?: MaterialCategoriesEdgeToNodeResolver<TParent>;\n}\n\nexport interface MaterialCategoriesEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MaterialCategoriesEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBrandsHermerTypeResolver<TParent = any> {\n  brands?: BrandsHermerToBrandsResolver<TParent>;\n}\n\nexport interface BrandsHermerToBrandsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IModelsHermerTypeResolver<TParent = any> {\n  carModels?: ModelsHermerToCarModelsResolver<TParent>;\n}\n\nexport interface ModelsHermerToCarModelsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IYearsHermerTypeResolver<TParent = any> {\n  carYears?: YearsHermerToCarYearsResolver<TParent>;\n}\n\nexport interface YearsHermerToCarYearsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IModelLobatoHermerTypeResolver<TParent = any> {\n  id?: ModelLobatoHermerToIdResolver<TParent>;\n  idLobato?: ModelLobatoHermerToIdLobatoResolver<TParent>;\n  brand?: ModelLobatoHermerToBrandResolver<TParent>;\n  newUsed?: ModelLobatoHermerToNewUsedResolver<TParent>;\n  yearModel?: ModelLobatoHermerToYearModelResolver<TParent>;\n  subBrand?: ModelLobatoHermerToSubBrandResolver<TParent>;\n  version?: ModelLobatoHermerToVersionResolver<TParent>;\n  salePrice?: ModelLobatoHermerToSalePriceResolver<TParent>;\n  buyingPrice?: ModelLobatoHermerToBuyingPriceResolver<TParent>;\n  newListPrice?: ModelLobatoHermerToNewListPriceResolver<TParent>;\n  type?: ModelLobatoHermerToTypeResolver<TParent>;\n  intermeditePrice?: ModelLobatoHermerToIntermeditePriceResolver<TParent>;\n  priceCertificateAgency?: ModelLobatoHermerToPriceCertificateAgencyResolver<TParent>;\n  brandCatalog?: ModelLobatoHermerToBrandCatalogResolver<TParent>;\n}\n\nexport interface ModelLobatoHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToIdLobatoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToNewUsedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToYearModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToSubBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToVersionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToSalePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToBuyingPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToNewListPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToIntermeditePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToPriceCertificateAgencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelLobatoHermerToBrandCatalogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IModelMercadoLibreResultHermerTypeResolver<TParent = any> {\n  consultId?: ModelMercadoLibreResultHermerToConsultIdResolver<TParent>;\n  results?: ModelMercadoLibreResultHermerToResultsResolver<TParent>;\n  compared?: ModelMercadoLibreResultHermerToComparedResolver<TParent>;\n}\n\nexport interface ModelMercadoLibreResultHermerToConsultIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreResultHermerToResultsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreResultHermerToComparedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IModelMercadoLibreHermerTypeResolver<TParent = any> {\n  id?: ModelMercadoLibreHermerToIdResolver<TParent>;\n  idMercadoLibre?: ModelMercadoLibreHermerToIdMercadoLibreResolver<TParent>;\n  siteId?: ModelMercadoLibreHermerToSiteIdResolver<TParent>;\n  title?: ModelMercadoLibreHermerToTitleResolver<TParent>;\n  price?: ModelMercadoLibreHermerToPriceResolver<TParent>;\n  salePrice?: ModelMercadoLibreHermerToSalePriceResolver<TParent>;\n  currencyId?: ModelMercadoLibreHermerToCurrencyIdResolver<TParent>;\n  availableQuantity?: ModelMercadoLibreHermerToAvailableQuantityResolver<TParent>;\n  soldQuantity?: ModelMercadoLibreHermerToSoldQuantityResolver<TParent>;\n  buyingMode?: ModelMercadoLibreHermerToBuyingModeResolver<TParent>;\n  listingTypeId?: ModelMercadoLibreHermerToListingTypeIdResolver<TParent>;\n  stopTime?: ModelMercadoLibreHermerToStopTimeResolver<TParent>;\n  condition?: ModelMercadoLibreHermerToConditionResolver<TParent>;\n  permaLink?: ModelMercadoLibreHermerToPermaLinkResolver<TParent>;\n  thumbnail?: ModelMercadoLibreHermerToThumbnailResolver<TParent>;\n  thumbnailId?: ModelMercadoLibreHermerToThumbnailIdResolver<TParent>;\n  acceptsMercadopago?: ModelMercadoLibreHermerToAcceptsMercadopagoResolver<TParent>;\n  installments?: ModelMercadoLibreHermerToInstallmentsResolver<TParent>;\n  originalPrice?: ModelMercadoLibreHermerToOriginalPriceResolver<TParent>;\n  categoryId?: ModelMercadoLibreHermerToCategoryIdResolver<TParent>;\n  officialStoreId?: ModelMercadoLibreHermerToOfficialStoreIdResolver<TParent>;\n  domainId?: ModelMercadoLibreHermerToDomainIdResolver<TParent>;\n  catalogProductId?: ModelMercadoLibreHermerToCatalogProductIdResolver<TParent>;\n  orderBackend?: ModelMercadoLibreHermerToOrderBackendResolver<TParent>;\n  useThumbnailId?: ModelMercadoLibreHermerToUseThumbnailIdResolver<TParent>;\n  offerScore?: ModelMercadoLibreHermerToOfferScoreResolver<TParent>;\n  offerShare?: ModelMercadoLibreHermerToOfferShareResolver<TParent>;\n  matchScore?: ModelMercadoLibreHermerToMatchScoreResolver<TParent>;\n  winnerItemId?: ModelMercadoLibreHermerToWinnerItemIdResolver<TParent>;\n  melicoin?: ModelMercadoLibreHermerToMelicoinResolver<TParent>;\n  discounts?: ModelMercadoLibreHermerToDiscountsResolver<TParent>;\n  ano?: ModelMercadoLibreHermerToAnoResolver<TParent>;\n  marca?: ModelMercadoLibreHermerToMarcaResolver<TParent>;\n  modelo?: ModelMercadoLibreHermerToModeloResolver<TParent>;\n  version?: ModelMercadoLibreHermerToVersionResolver<TParent>;\n  kilometraje?: ModelMercadoLibreHermerToKilometrajeResolver<TParent>;\n  ultimaActualizacionDePrecio?: ModelMercadoLibreHermerToUltimaActualizacionDePrecioResolver<TParent>;\n  idVendedor?: ModelMercadoLibreHermerToIdVendedorResolver<TParent>;\n  primeraAparicion?: ModelMercadoLibreHermerToPrimeraAparicionResolver<TParent>;\n  ultimaActualizacion?: ModelMercadoLibreHermerToUltimaActualizacionResolver<TParent>;\n  publicadoHace?: ModelMercadoLibreHermerToPublicadoHaceResolver<TParent>;\n  marcaCatalogo?: ModelMercadoLibreHermerToMarcaCatalogoResolver<TParent>;\n  year?: ModelMercadoLibreHermerToYearResolver<TParent>;\n}\n\nexport interface ModelMercadoLibreHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToIdMercadoLibreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToSiteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToSalePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToCurrencyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToAvailableQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToSoldQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToBuyingModeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToListingTypeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToStopTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToConditionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToPermaLinkResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToThumbnailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToThumbnailIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToAcceptsMercadopagoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToInstallmentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToOriginalPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToOfficialStoreIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToDomainIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToCatalogProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToOrderBackendResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToUseThumbnailIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToOfferScoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToOfferShareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToMatchScoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToWinnerItemIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToMelicoinResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToDiscountsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToAnoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToMarcaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToModeloResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToVersionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToKilometrajeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToUltimaActualizacionDePrecioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToIdVendedorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToPrimeraAparicionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToUltimaActualizacionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToPublicadoHaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToMarcaCatalogoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ModelMercadoLibreHermerToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IComparedMercadoLibreHermerTypeResolver<TParent = any> {\n  comparedId?: ComparedMercadoLibreHermerToComparedIdResolver<TParent>;\n  results?: ComparedMercadoLibreHermerToResultsResolver<TParent>;\n}\n\nexport interface ComparedMercadoLibreHermerToComparedIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedMercadoLibreHermerToResultsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResultConsultHermerTypeResolver<TParent = any> {\n  count?: ResultConsultHermerToCountResolver<TParent>;\n  next?: ResultConsultHermerToNextResolver<TParent>;\n  previous?: ResultConsultHermerToPreviousResolver<TParent>;\n  results?: ResultConsultHermerToResultsResolver<TParent>;\n}\n\nexport interface ResultConsultHermerToCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResultConsultHermerToNextResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResultConsultHermerToPreviousResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResultConsultHermerToResultsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConsultShortHermerTypeResolver<TParent = any> {\n  vinNum?: ConsultShortHermerToVinNumResolver<TParent>;\n  milage?: ConsultShortHermerToMilageResolver<TParent>;\n  valuador?: ConsultShortHermerToValuadorResolver<TParent>;\n  brand?: ConsultShortHermerToBrandResolver<TParent>;\n  model?: ConsultShortHermerToModelResolver<TParent>;\n  year?: ConsultShortHermerToYearResolver<TParent>;\n  properties?: ConsultShortHermerToPropertiesResolver<TParent>;\n  lobatoId?: ConsultShortHermerToLobatoIdResolver<TParent>;\n  client?: ConsultShortHermerToClientResolver<TParent>;\n  carmercadoConsult?: ConsultShortHermerToCarmercadoConsultResolver<TParent>;\n  id?: ConsultShortHermerToIdResolver<TParent>;\n  createdAt?: ConsultShortHermerToCreatedAtResolver<TParent>;\n  updatedAt?: ConsultShortHermerToUpdatedAtResolver<TParent>;\n}\n\nexport interface ConsultShortHermerToVinNumResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToMilageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToValuadorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToPropertiesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToLobatoIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToClientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToCarmercadoConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultShortHermerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICarMercadoHermerShortTypeResolver<TParent = any> {\n  id?: CarMercadoHermerShortToIdResolver<TParent>;\n  analysisCarmercado?: CarMercadoHermerShortToAnalysisCarmercadoResolver<TParent>;\n}\n\nexport interface CarMercadoHermerShortToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarMercadoHermerShortToAnalysisCarmercadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAnalysisCarMercadoHermerShortTypeResolver<TParent = any> {\n  lobatoBuyingPrice?: AnalysisCarMercadoHermerShortToLobatoBuyingPriceResolver<TParent>;\n  lobatoSalePrice?: AnalysisCarMercadoHermerShortToLobatoSalePriceResolver<TParent>;\n  estimatedEarning?: AnalysisCarMercadoHermerShortToEstimatedEarningResolver<TParent>;\n  damage?: AnalysisCarMercadoHermerShortToDamageResolver<TParent>;\n  advisedSalePriceWithKmRounded?: AnalysisCarMercadoHermerShortToAdvisedSalePriceWithKmRoundedResolver<TParent>;\n  advisedBuyingPriceWithKmRounded?: AnalysisCarMercadoHermerShortToAdvisedBuyingPriceWithKmRoundedResolver<TParent>;\n  id?: AnalysisCarMercadoHermerShortToIdResolver<TParent>;\n  createdAt?: AnalysisCarMercadoHermerShortToCreatedAtResolver<TParent>;\n  updatedAt?: AnalysisCarMercadoHermerShortToUpdatedAtResolver<TParent>;\n}\n\nexport interface AnalysisCarMercadoHermerShortToLobatoBuyingPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerShortToLobatoSalePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerShortToEstimatedEarningResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerShortToDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerShortToAdvisedSalePriceWithKmRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerShortToAdvisedBuyingPriceWithKmRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerShortToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerShortToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerShortToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResultConsultAllHermerTypeResolver<TParent = any> {\n  count?: ResultConsultAllHermerToCountResolver<TParent>;\n  next?: ResultConsultAllHermerToNextResolver<TParent>;\n  previous?: ResultConsultAllHermerToPreviousResolver<TParent>;\n  results?: ResultConsultAllHermerToResultsResolver<TParent>;\n}\n\nexport interface ResultConsultAllHermerToCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResultConsultAllHermerToNextResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResultConsultAllHermerToPreviousResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResultConsultAllHermerToResultsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConsultHermerTypeResolver<TParent = any> {\n  vinNum?: ConsultHermerToVinNumResolver<TParent>;\n  milage?: ConsultHermerToMilageResolver<TParent>;\n  valuador?: ConsultHermerToValuadorResolver<TParent>;\n  brand?: ConsultHermerToBrandResolver<TParent>;\n  model?: ConsultHermerToModelResolver<TParent>;\n  year?: ConsultHermerToYearResolver<TParent>;\n  properties?: ConsultHermerToPropertiesResolver<TParent>;\n  lobatoId?: ConsultHermerToLobatoIdResolver<TParent>;\n  lobatoIdData?: ConsultHermerToLobatoIdDataResolver<TParent>;\n  client?: ConsultHermerToClientResolver<TParent>;\n  comparedConsult?: ConsultHermerToComparedConsultResolver<TParent>;\n  carmercadoConsult?: ConsultHermerToCarmercadoConsultResolver<TParent>;\n  id?: ConsultHermerToIdResolver<TParent>;\n  createdAt?: ConsultHermerToCreatedAtResolver<TParent>;\n  updatedAt?: ConsultHermerToUpdatedAtResolver<TParent>;\n}\n\nexport interface ConsultHermerToVinNumResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToMilageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToValuadorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToPropertiesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToLobatoIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToLobatoIdDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToClientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToComparedConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToCarmercadoConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultHermerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IlobatoHermerDataTypeResolver<TParent = any> {\n  idLobato?: lobatoHermerDataToIdLobatoResolver<TParent>;\n  marca?: lobatoHermerDataToMarcaResolver<TParent>;\n  nuevoUsado?: lobatoHermerDataToNuevoUsadoResolver<TParent>;\n  anoModelo?: lobatoHermerDataToAnoModeloResolver<TParent>;\n  submarca?: lobatoHermerDataToSubmarcaResolver<TParent>;\n  version?: lobatoHermerDataToVersionResolver<TParent>;\n  precioVenta?: lobatoHermerDataToPrecioVentaResolver<TParent>;\n  precioCompra?: lobatoHermerDataToPrecioCompraResolver<TParent>;\n  precioDeListaNuevo?: lobatoHermerDataToPrecioDeListaNuevoResolver<TParent>;\n  tipo?: lobatoHermerDataToTipoResolver<TParent>;\n  precioIntermedio?: lobatoHermerDataToPrecioIntermedioResolver<TParent>;\n  precioAgenciaCertificados?: lobatoHermerDataToPrecioAgenciaCertificadosResolver<TParent>;\n  id?: lobatoHermerDataToIdResolver<TParent>;\n  createdAt?: lobatoHermerDataToCreatedAtResolver<TParent>;\n  updatedAt?: lobatoHermerDataToUpdatedAtResolver<TParent>;\n}\n\nexport interface lobatoHermerDataToIdLobatoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToMarcaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToNuevoUsadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToAnoModeloResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToSubmarcaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToVersionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToPrecioVentaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToPrecioCompraResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToPrecioDeListaNuevoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToTipoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToPrecioIntermedioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToPrecioAgenciaCertificadosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface lobatoHermerDataToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IClientHermerTypeResolver<TParent = any> {\n  firstName?: ClientHermerToFirstNameResolver<TParent>;\n  lastName?: ClientHermerToLastNameResolver<TParent>;\n  phone?: ClientHermerToPhoneResolver<TParent>;\n  email?: ClientHermerToEmailResolver<TParent>;\n  id?: ClientHermerToIdResolver<TParent>;\n  createdAt?: ClientHermerToCreatedAtResolver<TParent>;\n  updatedAt?: ClientHermerToUpdatedAtResolver<TParent>;\n}\n\nexport interface ClientHermerToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientHermerToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientHermerToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientHermerToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientHermerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClientHermerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IComparedHermerTypeResolver<TParent = any> {\n  brand?: ComparedHermerToBrandResolver<TParent>;\n  model?: ComparedHermerToModelResolver<TParent>;\n  year?: ComparedHermerToYearResolver<TParent>;\n  properties?: ComparedHermerToPropertiesResolver<TParent>;\n  lobatoId?: ComparedHermerToLobatoIdResolver<TParent>;\n  lobatoIdData?: ComparedHermerToLobatoIdDataResolver<TParent>;\n  consult?: ComparedHermerToConsultResolver<TParent>;\n  carmercadoCompared?: ComparedHermerToCarmercadoComparedResolver<TParent>;\n  id?: ComparedHermerToIdResolver<TParent>;\n  createdAt?: ComparedHermerToCreatedAtResolver<TParent>;\n  updatedAt?: ComparedHermerToUpdatedAtResolver<TParent>;\n}\n\nexport interface ComparedHermerToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToPropertiesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToLobatoIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToLobatoIdDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToCarmercadoComparedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComparedHermerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICarMercadoHermerTypeResolver<TParent = any> {\n  analysisCarmercado?: CarMercadoHermerToAnalysisCarmercadoResolver<TParent>;\n  mercadolibreIds?: CarMercadoHermerToMercadolibreIdsResolver<TParent>;\n  mercadolibreIdsData?: CarMercadoHermerToMercadolibreIdsDataResolver<TParent>;\n  manualDevaluation?: CarMercadoHermerToManualDevaluationResolver<TParent>;\n  consult?: CarMercadoHermerToConsultResolver<TParent>;\n  compared?: CarMercadoHermerToComparedResolver<TParent>;\n  id?: CarMercadoHermerToIdResolver<TParent>;\n  createdAt?: CarMercadoHermerToCreatedAtResolver<TParent>;\n  updatedAt?: CarMercadoHermerToUpdatedAtResolver<TParent>;\n}\n\nexport interface CarMercadoHermerToAnalysisCarmercadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarMercadoHermerToMercadolibreIdsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarMercadoHermerToMercadolibreIdsDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarMercadoHermerToManualDevaluationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarMercadoHermerToConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarMercadoHermerToComparedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarMercadoHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarMercadoHermerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CarMercadoHermerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAnalysisCarMercadoHermerTypeResolver<TParent = any> {\n  carMercado?: AnalysisCarMercadoHermerToCarMercadoResolver<TParent>;\n  meanSalePrice?: AnalysisCarMercadoHermerToMeanSalePriceResolver<TParent>;\n  lobatoSalePrice?: AnalysisCarMercadoHermerToLobatoSalePriceResolver<TParent>;\n  meanPriceKm?: AnalysisCarMercadoHermerToMeanPriceKmResolver<TParent>;\n  meanPublishedTime?: AnalysisCarMercadoHermerToMeanPublishedTimeResolver<TParent>;\n  maxPublishedTime?: AnalysisCarMercadoHermerToMaxPublishedTimeResolver<TParent>;\n  minPublishedTime?: AnalysisCarMercadoHermerToMinPublishedTimeResolver<TParent>;\n  estimatedEarning?: AnalysisCarMercadoHermerToEstimatedEarningResolver<TParent>;\n  salePriceWithoutKm?: AnalysisCarMercadoHermerToSalePriceWithoutKmResolver<TParent>;\n  advisedBuyingPriceWithoutKm?: AnalysisCarMercadoHermerToAdvisedBuyingPriceWithoutKmResolver<TParent>;\n  lobatoBuyingPrice?: AnalysisCarMercadoHermerToLobatoBuyingPriceResolver<TParent>;\n  meanKm?: AnalysisCarMercadoHermerToMeanKmResolver<TParent>;\n  advisedSalePriceWithKm?: AnalysisCarMercadoHermerToAdvisedSalePriceWithKmResolver<TParent>;\n  advisedBuyingPriceWithKm?: AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmResolver<TParent>;\n  slopeOfPredictiveLine?: AnalysisCarMercadoHermerToSlopeOfPredictiveLineResolver<TParent>;\n  pointOfPredictiveLine?: AnalysisCarMercadoHermerToPointOfPredictiveLineResolver<TParent>;\n  meanSalePriceCarToCompare?: AnalysisCarMercadoHermerToMeanSalePriceCarToCompareResolver<TParent>;\n  lobatoSalePriceCarToCompare?: AnalysisCarMercadoHermerToLobatoSalePriceCarToCompareResolver<TParent>;\n  meanPriceKmCarToCompare?: AnalysisCarMercadoHermerToMeanPriceKmCarToCompareResolver<TParent>;\n  meanPublishedTimeCarToCompare?: AnalysisCarMercadoHermerToMeanPublishedTimeCarToCompareResolver<TParent>;\n  maxPublishedTimeCarToCompare?: AnalysisCarMercadoHermerToMaxPublishedTimeCarToCompareResolver<TParent>;\n  minPublishedTimeCarToCompare?: AnalysisCarMercadoHermerToMinPublishedTimeCarToCompareResolver<TParent>;\n  estimatedEarningCarToCompare?: AnalysisCarMercadoHermerToEstimatedEarningCarToCompareResolver<TParent>;\n  salePriceWithoutKmCarToCompare?: AnalysisCarMercadoHermerToSalePriceWithoutKmCarToCompareResolver<TParent>;\n  lobatoBuyingPriceCarToCompare?: AnalysisCarMercadoHermerToLobatoBuyingPriceCarToCompareResolver<TParent>;\n  meanKmCarToCompare?: AnalysisCarMercadoHermerToMeanKmCarToCompareResolver<TParent>;\n  advisedSalePriceWithKmCarToCompare?: AnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareResolver<TParent>;\n  advisedBuyingPriceWithKmCarToCompare?: AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareResolver<TParent>;\n  slopeOfPredictiveLineCarToCompare?: AnalysisCarMercadoHermerToSlopeOfPredictiveLineCarToCompareResolver<TParent>;\n  pointOfPredictiveLineCarToCompare?: AnalysisCarMercadoHermerToPointOfPredictiveLineCarToCompareResolver<TParent>;\n  priceDiferenceByLobato?: AnalysisCarMercadoHermerToPriceDiferenceByLobatoResolver<TParent>;\n  meanSalePriceCarToCompareMinusPriceDiference?: AnalysisCarMercadoHermerToMeanSalePriceCarToCompareMinusPriceDiferenceResolver<TParent>;\n  salePriceWithoutKmCarToCompareMinusPriceDiference?: AnalysisCarMercadoHermerToSalePriceWithoutKmCarToCompareMinusPriceDiferenceResolver<TParent>;\n  advisedSalePriceWithKmCarToCompareMinusPriceDiference?: AnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareMinusPriceDiferenceResolver<TParent>;\n  advisedBuyingPriceWithKmCarToCompareMinusPriceDiference?: AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceResolver<TParent>;\n  damage?: AnalysisCarMercadoHermerToDamageResolver<TParent>;\n  advisedSalePriceWithKmRounded?: AnalysisCarMercadoHermerToAdvisedSalePriceWithKmRoundedResolver<TParent>;\n  advisedBuyingPriceWithKmRounded?: AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmRoundedResolver<TParent>;\n  advisedSalePriceWithKmCarToCompareRounded?: AnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareRoundedResolver<TParent>;\n  advisedBuyingPriceWithKmCarToCompareRounded?: AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareRoundedResolver<TParent>;\n  advisedSalePriceWithKmCarToCompareMinusPriceDiferenceRounded?: AnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareMinusPriceDiferenceRoundedResolver<TParent>;\n  advisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceRounded?: AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceRoundedResolver<TParent>;\n  id?: AnalysisCarMercadoHermerToIdResolver<TParent>;\n  createdAt?: AnalysisCarMercadoHermerToCreatedAtResolver<TParent>;\n  updatedAt?: AnalysisCarMercadoHermerToUpdatedAtResolver<TParent>;\n}\n\nexport interface AnalysisCarMercadoHermerToCarMercadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMeanSalePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToLobatoSalePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMeanPriceKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMeanPublishedTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMaxPublishedTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMinPublishedTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToEstimatedEarningResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToSalePriceWithoutKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedBuyingPriceWithoutKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToLobatoBuyingPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMeanKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedSalePriceWithKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToSlopeOfPredictiveLineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToPointOfPredictiveLineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMeanSalePriceCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToLobatoSalePriceCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMeanPriceKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMeanPublishedTimeCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMaxPublishedTimeCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMinPublishedTimeCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToEstimatedEarningCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToSalePriceWithoutKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToLobatoBuyingPriceCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMeanKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToSlopeOfPredictiveLineCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToPointOfPredictiveLineCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToPriceDiferenceByLobatoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToMeanSalePriceCarToCompareMinusPriceDiferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToSalePriceWithoutKmCarToCompareMinusPriceDiferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareMinusPriceDiferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedSalePriceWithKmRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareMinusPriceDiferenceRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AnalysisCarMercadoHermerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResultConsultLastAnalysisHermerTypeResolver<TParent = any> {\n  count?: ResultConsultLastAnalysisHermerToCountResolver<TParent>;\n  next?: ResultConsultLastAnalysisHermerToNextResolver<TParent>;\n  previous?: ResultConsultLastAnalysisHermerToPreviousResolver<TParent>;\n  results?: ResultConsultLastAnalysisHermerToResultsResolver<TParent>;\n}\n\nexport interface ResultConsultLastAnalysisHermerToCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResultConsultLastAnalysisHermerToNextResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResultConsultLastAnalysisHermerToPreviousResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResultConsultLastAnalysisHermerToResultsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConsultLastAnalysisHermerTypeResolver<TParent = any> {\n  vinNum?: ConsultLastAnalysisHermerToVinNumResolver<TParent>;\n  milage?: ConsultLastAnalysisHermerToMilageResolver<TParent>;\n  valuador?: ConsultLastAnalysisHermerToValuadorResolver<TParent>;\n  brand?: ConsultLastAnalysisHermerToBrandResolver<TParent>;\n  model?: ConsultLastAnalysisHermerToModelResolver<TParent>;\n  year?: ConsultLastAnalysisHermerToYearResolver<TParent>;\n  properties?: ConsultLastAnalysisHermerToPropertiesResolver<TParent>;\n  lobatoId?: ConsultLastAnalysisHermerToLobatoIdResolver<TParent>;\n  appraisal?: ConsultLastAnalysisHermerToAppraisalResolver<TParent>;\n  lobatoIdData?: ConsultLastAnalysisHermerToLobatoIdDataResolver<TParent>;\n  client?: ConsultLastAnalysisHermerToClientResolver<TParent>;\n  lastAnalysis?: ConsultLastAnalysisHermerToLastAnalysisResolver<TParent>;\n  id?: ConsultLastAnalysisHermerToIdResolver<TParent>;\n  createdAt?: ConsultLastAnalysisHermerToCreatedAtResolver<TParent>;\n  updatedAt?: ConsultLastAnalysisHermerToUpdatedAtResolver<TParent>;\n}\n\nexport interface ConsultLastAnalysisHermerToVinNumResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToMilageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToValuadorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToPropertiesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToLobatoIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToAppraisalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToLobatoIdDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToClientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToLastAnalysisResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConsultLastAnalysisHermerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILastAnalysisCarMercadoHermerTypeResolver<TParent = any> {\n  carmercado?: LastAnalysisCarMercadoHermerToCarmercadoResolver<TParent>;\n  meanSalePrice?: LastAnalysisCarMercadoHermerToMeanSalePriceResolver<TParent>;\n  lobatoSalePrice?: LastAnalysisCarMercadoHermerToLobatoSalePriceResolver<TParent>;\n  meanPriceKm?: LastAnalysisCarMercadoHermerToMeanPriceKmResolver<TParent>;\n  meanPublishedTime?: LastAnalysisCarMercadoHermerToMeanPublishedTimeResolver<TParent>;\n  maxPublishedTime?: LastAnalysisCarMercadoHermerToMaxPublishedTimeResolver<TParent>;\n  minPublishedTime?: LastAnalysisCarMercadoHermerToMinPublishedTimeResolver<TParent>;\n  estimatedEarning?: LastAnalysisCarMercadoHermerToEstimatedEarningResolver<TParent>;\n  salePriceWithoutKm?: LastAnalysisCarMercadoHermerToSalePriceWithoutKmResolver<TParent>;\n  advisedBuyingPriceWithoutKm?: LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithoutKmResolver<TParent>;\n  lobatoBuyingPrice?: LastAnalysisCarMercadoHermerToLobatoBuyingPriceResolver<TParent>;\n  meanKm?: LastAnalysisCarMercadoHermerToMeanKmResolver<TParent>;\n  advisedSalePriceWithKm?: LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmResolver<TParent>;\n  advisedBuyingPriceWithKm?: LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmResolver<TParent>;\n  slopeOfPredictiveLine?: LastAnalysisCarMercadoHermerToSlopeOfPredictiveLineResolver<TParent>;\n  pointOfPredictiveLine?: LastAnalysisCarMercadoHermerToPointOfPredictiveLineResolver<TParent>;\n  meanSalePriceCarToCompare?: LastAnalysisCarMercadoHermerToMeanSalePriceCarToCompareResolver<TParent>;\n  lobatoSalePriceCarToCompare?: LastAnalysisCarMercadoHermerToLobatoSalePriceCarToCompareResolver<TParent>;\n  meanPriceKmCarToCompare?: LastAnalysisCarMercadoHermerToMeanPriceKmCarToCompareResolver<TParent>;\n  meanPublishedTimeCarToCompare?: LastAnalysisCarMercadoHermerToMeanPublishedTimeCarToCompareResolver<TParent>;\n  maxPublishedTimeCarToCompare?: LastAnalysisCarMercadoHermerToMaxPublishedTimeCarToCompareResolver<TParent>;\n  minPublishedTimeCarToCompare?: LastAnalysisCarMercadoHermerToMinPublishedTimeCarToCompareResolver<TParent>;\n  estimatedEarningCarToCompare?: LastAnalysisCarMercadoHermerToEstimatedEarningCarToCompareResolver<TParent>;\n  salePriceWithoutKmCarToCompare?: LastAnalysisCarMercadoHermerToSalePriceWithoutKmCarToCompareResolver<TParent>;\n  lobatoBuyingPriceCarToCompare?: LastAnalysisCarMercadoHermerToLobatoBuyingPriceCarToCompareResolver<TParent>;\n  meanKmCarToCompare?: LastAnalysisCarMercadoHermerToMeanKmCarToCompareResolver<TParent>;\n  advisedSalePriceWithKmCarToCompare?: LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareResolver<TParent>;\n  advisedBuyingPriceWithKmCarToCompare?: LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareResolver<TParent>;\n  slopeOfPredictiveLineCarToCompare?: LastAnalysisCarMercadoHermerToSlopeOfPredictiveLineCarToCompareResolver<TParent>;\n  pointOfPredictiveLineCarToCompare?: LastAnalysisCarMercadoHermerToPointOfPredictiveLineCarToCompareResolver<TParent>;\n  priceDiferenceByLobato?: LastAnalysisCarMercadoHermerToPriceDiferenceByLobatoResolver<TParent>;\n  meanSalePriceCarToCompareMinusPriceDiference?: LastAnalysisCarMercadoHermerToMeanSalePriceCarToCompareMinusPriceDiferenceResolver<TParent>;\n  salePriceWithoutKmCarToCompareMinusPriceDiference?: LastAnalysisCarMercadoHermerToSalePriceWithoutKmCarToCompareMinusPriceDiferenceResolver<TParent>;\n  advisedSalePriceWithKmCarToCompareMinusPriceDiference?: LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareMinusPriceDiferenceResolver<TParent>;\n  advisedBuyingPriceWithKmCarToCompareMinusPriceDiference?: LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceResolver<TParent>;\n  damage?: LastAnalysisCarMercadoHermerToDamageResolver<TParent>;\n  advisedSalePriceWithKmRounded?: LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmRoundedResolver<TParent>;\n  advisedBuyingPriceWithKmRounded?: LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmRoundedResolver<TParent>;\n  advisedSalePriceWithKmCarToCompareRounded?: LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareRoundedResolver<TParent>;\n  advisedBuyingPriceWithKmCarToCompareRounded?: LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareRoundedResolver<TParent>;\n  advisedSalePriceWithKmCarToCompareMinusPriceDiferenceRounded?: LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareMinusPriceDiferenceRoundedResolver<TParent>;\n  advisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceRounded?: LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceRoundedResolver<TParent>;\n  id?: LastAnalysisCarMercadoHermerToIdResolver<TParent>;\n  createdAt?: LastAnalysisCarMercadoHermerToCreatedAtResolver<TParent>;\n  updatedAt?: LastAnalysisCarMercadoHermerToUpdatedAtResolver<TParent>;\n}\n\nexport interface LastAnalysisCarMercadoHermerToCarmercadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMeanSalePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToLobatoSalePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMeanPriceKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMeanPublishedTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMaxPublishedTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMinPublishedTimeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToEstimatedEarningResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToSalePriceWithoutKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithoutKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToLobatoBuyingPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMeanKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToSlopeOfPredictiveLineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToPointOfPredictiveLineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMeanSalePriceCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToLobatoSalePriceCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMeanPriceKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMeanPublishedTimeCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMaxPublishedTimeCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMinPublishedTimeCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToEstimatedEarningCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToSalePriceWithoutKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToLobatoBuyingPriceCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMeanKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToSlopeOfPredictiveLineCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToPointOfPredictiveLineCarToCompareResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToPriceDiferenceByLobatoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToMeanSalePriceCarToCompareMinusPriceDiferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToSalePriceWithoutKmCarToCompareMinusPriceDiferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareMinusPriceDiferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedSalePriceWithKmCarToCompareMinusPriceDiferenceRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToAdvisedBuyingPriceWithKmCarToCompareMinusPriceDiferenceRoundedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastAnalysisCarMercadoHermerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILastCarMercadoHermerTypeResolver<TParent = any> {\n  mercadolibreIds?: LastCarMercadoHermerToMercadolibreIdsResolver<TParent>;\n  manualDevaluation?: LastCarMercadoHermerToManualDevaluationResolver<TParent>;\n  consult?: LastCarMercadoHermerToConsultResolver<TParent>;\n  compared?: LastCarMercadoHermerToComparedResolver<TParent>;\n  id?: LastCarMercadoHermerToIdResolver<TParent>;\n  createdAt?: LastCarMercadoHermerToCreatedAtResolver<TParent>;\n  updatedAt?: LastCarMercadoHermerToUpdatedAtResolver<TParent>;\n}\n\nexport interface LastCarMercadoHermerToMercadolibreIdsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastCarMercadoHermerToManualDevaluationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastCarMercadoHermerToConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastCarMercadoHermerToComparedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastCarMercadoHermerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastCarMercadoHermerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LastCarMercadoHermerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDownloadFileTypeResolver<TParent = any> {\n  url?: DownloadFileToUrlResolver<TParent>;\n}\n\nexport interface DownloadFileToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListFoldersConnectionTypeResolver<TParent = any> {\n  pageInfo?: ListFoldersConnectionToPageInfoResolver<TParent>;\n  edges?: ListFoldersConnectionToEdgesResolver<TParent>;\n  nodes?: ListFoldersConnectionToNodesResolver<TParent>;\n}\n\nexport interface ListFoldersConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListFoldersConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListFoldersConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IListFoldersEdgeTypeResolver<TParent = any> {\n  cursor?: ListFoldersEdgeToCursorResolver<TParent>;\n  node?: ListFoldersEdgeToNodeResolver<TParent>;\n}\n\nexport interface ListFoldersEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ListFoldersEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFoldersListConnectionTypeResolver<TParent = any> {\n  pageInfo?: FoldersListConnectionToPageInfoResolver<TParent>;\n  edges?: FoldersListConnectionToEdgesResolver<TParent>;\n  nodes?: FoldersListConnectionToNodesResolver<TParent>;\n}\n\nexport interface FoldersListConnectionToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FoldersListConnectionToEdgesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FoldersListConnectionToNodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFoldersListEdgeTypeResolver<TParent = any> {\n  cursor?: FoldersListEdgeToCursorResolver<TParent>;\n  node?: FoldersListEdgeToNodeResolver<TParent>;\n}\n\nexport interface FoldersListEdgeToCursorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FoldersListEdgeToNodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISharedFilesFromFolderDtoTypeResolver<TParent = any> {\n  totalCount?: SharedFilesFromFolderDtoToTotalCountResolver<TParent>;\n  files?: SharedFilesFromFolderDtoToFilesResolver<TParent>;\n}\n\nexport interface SharedFilesFromFolderDtoToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SharedFilesFromFolderDtoToFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFileCollectionSegmentTypeResolver<TParent = any> {\n  items?: FileCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: FileCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: FileCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface FileCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FileCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFolderCollectionSegmentTypeResolver<TParent = any> {\n  items?: FolderCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: FolderCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: FolderCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface FolderCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FolderCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IOutstandingFilesTypeResolver<TParent = any> {\n  files?: OutstandingFilesToFilesResolver<TParent>;\n  folders?: OutstandingFilesToFoldersResolver<TParent>;\n}\n\nexport interface OutstandingFilesToFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OutstandingFilesToFoldersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConversationReplyTypeResolver<TParent = any> {\n  memberId?: ConversationReplyToMemberIdResolver<TParent>;\n  reply?: ConversationReplyToReplyResolver<TParent>;\n  registerDate?: ConversationReplyToRegisterDateResolver<TParent>;\n  status?: ConversationReplyToStatusResolver<TParent>;\n  conversationId?: ConversationReplyToConversationIdResolver<TParent>;\n  conversation?: ConversationReplyToConversationResolver<TParent>;\n  id?: ConversationReplyToIdResolver<TParent>;\n  createdAt?: ConversationReplyToCreatedAtResolver<TParent>;\n  updatedAt?: ConversationReplyToUpdatedAtResolver<TParent>;\n  member?: ConversationReplyToMemberResolver<TParent>;\n}\n\nexport interface ConversationReplyToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationReplyToReplyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationReplyToRegisterDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationReplyToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationReplyToConversationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationReplyToConversationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationReplyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationReplyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationReplyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationReplyToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IConversationTypeResolver<TParent = any> {\n  projectId?: ConversationToProjectIdResolver<TParent>;\n  memberOne?: ConversationToMemberOneResolver<TParent>;\n  memberTwo?: ConversationToMemberTwoResolver<TParent>;\n  registerDate?: ConversationToRegisterDateResolver<TParent>;\n  status?: ConversationToStatusResolver<TParent>;\n  replies?: ConversationToRepliesResolver<TParent>;\n  id?: ConversationToIdResolver<TParent>;\n  createdAt?: ConversationToCreatedAtResolver<TParent>;\n  updatedAt?: ConversationToUpdatedAtResolver<TParent>;\n}\n\nexport interface ConversationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationToMemberOneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationToMemberTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationToRegisterDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationToRepliesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ConversationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberConversationTypeResolver<TParent = any> {\n  memberId?: MemberConversationToMemberIdResolver<TParent>;\n  conversationId?: MemberConversationToConversationIdResolver<TParent>;\n  member?: MemberConversationToMemberResolver<TParent>;\n}\n\nexport interface MemberConversationToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberConversationToConversationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberConversationToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEWalletCollectionSegmentTypeResolver<TParent = any> {\n  items?: EWalletCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: EWalletCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: EWalletCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface EWalletCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EWalletCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberWalletCollectionSegmentTypeResolver<TParent = any> {\n  items?: MemberWalletCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MemberWalletCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MemberWalletCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MemberWalletCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberWalletCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberWalletCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionCollectionSegmentTypeResolver<TParent = any> {\n  items?: WalletTransactionCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: WalletTransactionCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: WalletTransactionCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface WalletTransactionCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionStatusCollectionSegmentTypeResolver<TParent = any> {\n  items?: WalletTransactionStatusCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: WalletTransactionStatusCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: WalletTransactionStatusCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface WalletTransactionStatusCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionStatusCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionStatusCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionMemberRelationCollectionSegmentTypeResolver<TParent = any> {\n  items?: WalletTransactionMemberRelationCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: WalletTransactionMemberRelationCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: WalletTransactionMemberRelationCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface WalletTransactionMemberRelationCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberRelationCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberRelationCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionMemberDetailCollectionSegmentTypeResolver<TParent = any> {\n  items?: WalletTransactionMemberDetailCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: WalletTransactionMemberDetailCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: WalletTransactionMemberDetailCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface WalletTransactionMemberDetailCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberDetailCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionMemberDetailCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionSummaryTypeResolver<TParent = any> {\n  walletId?: WalletTransactionSummaryToWalletIdResolver<TParent>;\n  walletMemberId?: WalletTransactionSummaryToWalletMemberIdResolver<TParent>;\n  receptorId?: WalletTransactionSummaryToReceptorIdResolver<TParent>;\n  receptorMemberId?: WalletTransactionSummaryToReceptorMemberIdResolver<TParent>;\n  amount?: WalletTransactionSummaryToAmountResolver<TParent>;\n  transactions?: WalletTransactionSummaryToTransactionsResolver<TParent>;\n  memberRelationSummary?: WalletTransactionSummaryToMemberRelationSummaryResolver<TParent>;\n  amountSummary?: WalletTransactionSummaryToAmountSummaryResolver<TParent>;\n  receptorMember?: WalletTransactionSummaryToReceptorMemberResolver<TParent>;\n  walletMember?: WalletTransactionSummaryToWalletMemberResolver<TParent>;\n}\n\nexport interface WalletTransactionSummaryToWalletIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryToWalletMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryToReceptorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryToReceptorMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryToTransactionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryToMemberRelationSummaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryToAmountSummaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryToReceptorMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryToWalletMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionSummaryMemberRelationTypeResolver<TParent = any> {\n  transactions?: WalletTransactionSummaryMemberRelationToTransactionsResolver<TParent>;\n  memberRelationId?: WalletTransactionSummaryMemberRelationToMemberRelationIdResolver<TParent>;\n  amount?: WalletTransactionSummaryMemberRelationToAmountResolver<TParent>;\n  transactionToPrincipal?: WalletTransactionSummaryMemberRelationToTransactionToPrincipalResolver<TParent>;\n  memberRelation?: WalletTransactionSummaryMemberRelationToMemberRelationResolver<TParent>;\n}\n\nexport interface WalletTransactionSummaryMemberRelationToTransactionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryMemberRelationToMemberRelationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryMemberRelationToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryMemberRelationToTransactionToPrincipalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSummaryMemberRelationToMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionSumaryPrincipalTypeResolver<TParent = any> {\n  transactions?: WalletTransactionSumaryPrincipalToTransactionsResolver<TParent>;\n  amount?: WalletTransactionSumaryPrincipalToAmountResolver<TParent>;\n  createdAt?: WalletTransactionSumaryPrincipalToCreatedAtResolver<TParent>;\n}\n\nexport interface WalletTransactionSumaryPrincipalToTransactionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSumaryPrincipalToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionSumaryPrincipalToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICertificateMovementTypeResolver<TParent = any> {\n  certificateId?: CertificateMovementToCertificateIdResolver<TParent>;\n  certificate?: CertificateMovementToCertificateResolver<TParent>;\n  certificateMovementType?: CertificateMovementToCertificateMovementTypeResolver<TParent>;\n  reasons?: CertificateMovementToReasonsResolver<TParent>;\n  memberId?: CertificateMovementToMemberIdResolver<TParent>;\n  id?: CertificateMovementToIdResolver<TParent>;\n  createdAt?: CertificateMovementToCreatedAtResolver<TParent>;\n  updatedAt?: CertificateMovementToUpdatedAtResolver<TParent>;\n}\n\nexport interface CertificateMovementToCertificateIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementToCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementToCertificateMovementTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementToReasonsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICertificateTypeResolver<TParent = any> {\n  insurerId?: CertificateToInsurerIdResolver<TParent>;\n  insurer?: CertificateToInsurerResolver<TParent>;\n  contractorId?: CertificateToContractorIdResolver<TParent>;\n  branchOfficeId?: CertificateToBranchOfficeIdResolver<TParent>;\n  merchandiseDetailId?: CertificateToMerchandiseDetailIdResolver<TParent>;\n  trafficDetailId?: CertificateToTrafficDetailIdResolver<TParent>;\n  merchandiseDetail?: CertificateToMerchandiseDetailResolver<TParent>;\n  trafficDetail?: CertificateToTrafficDetailResolver<TParent>;\n  projectId?: CertificateToProjectIdResolver<TParent>;\n  additionalComments?: CertificateToAdditionalCommentsResolver<TParent>;\n  createdBy?: CertificateToCreatedByResolver<TParent>;\n  isActive?: CertificateToIsActiveResolver<TParent>;\n  cancellationReason?: CertificateToCancellationReasonResolver<TParent>;\n  insurerFeeId?: CertificateToInsurerFeeIdResolver<TParent>;\n  insurerFee?: CertificateToInsurerFeeResolver<TParent>;\n  issueStatus?: CertificateToIssueStatusResolver<TParent>;\n  files?: CertificateToFilesResolver<TParent>;\n  policyModuleId?: CertificateToPolicyModuleIdResolver<TParent>;\n  policyModule?: CertificateToPolicyModuleResolver<TParent>;\n  statusFrom?: CertificateToStatusFromResolver<TParent>;\n  beneficiaries?: CertificateToBeneficiariesResolver<TParent>;\n  shipmentDate?: CertificateToShipmentDateResolver<TParent>;\n  shippingTransport?: CertificateToShippingTransportResolver<TParent>;\n  estimatedArrivingDate?: CertificateToEstimatedArrivingDateResolver<TParent>;\n  history?: CertificateToHistoryResolver<TParent>;\n  externalIdentifier?: CertificateToExternalIdentifierResolver<TParent>;\n  internalIdentifier?: CertificateToInternalIdentifierResolver<TParent>;\n  id?: CertificateToIdResolver<TParent>;\n  createdAt?: CertificateToCreatedAtResolver<TParent>;\n  updatedAt?: CertificateToUpdatedAtResolver<TParent>;\n  contractor?: CertificateToContractorResolver<TParent>;\n}\n\nexport interface CertificateToInsurerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToBranchOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToMerchandiseDetailIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToTrafficDetailIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToMerchandiseDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToTrafficDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToAdditionalCommentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToCreatedByResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToCancellationReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToInsurerFeeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToInsurerFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToIssueStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToStatusFromResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToBeneficiariesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToShipmentDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToShippingTransportResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToEstimatedArrivingDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToHistoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToExternalIdentifierResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToInternalIdentifierResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerModuleTypeResolver<TParent = any> {\n  insurerSinisterContactId?: InsurerModuleToInsurerSinisterContactIdResolver<TParent>;\n  insurerSinisterContact?: InsurerModuleToInsurerSinisterContactResolver<TParent>;\n  insurerAdjusterContactId?: InsurerModuleToInsurerAdjusterContactIdResolver<TParent>;\n  insurerAdjusterContact?: InsurerModuleToInsurerAdjusterContactResolver<TParent>;\n  logo?: InsurerModuleToLogoResolver<TParent>;\n  content?: InsurerModuleToContentResolver<TParent>;\n  descriptionCoverages?: InsurerModuleToDescriptionCoveragesResolver<TParent>;\n  certificateType?: InsurerModuleToCertificateTypeResolver<TParent>;\n  projectId?: InsurerModuleToProjectIdResolver<TParent>;\n  name?: InsurerModuleToNameResolver<TParent>;\n  placeInsurer?: InsurerModuleToPlaceInsurerResolver<TParent>;\n  insurerType?: InsurerModuleToInsurerTypeResolver<TParent>;\n  originCountryId?: InsurerModuleToOriginCountryIdResolver<TParent>;\n  countries?: InsurerModuleToCountriesResolver<TParent>;\n  isActive?: InsurerModuleToIsActiveResolver<TParent>;\n  insurerCompanyModules?: InsurerModuleToInsurerCompanyModulesResolver<TParent>;\n  insurerContacts?: InsurerModuleToInsurerContactsResolver<TParent>;\n  insurerBranchId?: InsurerModuleToInsurerBranchIdResolver<TParent>;\n  insurerBranch?: InsurerModuleToInsurerBranchResolver<TParent>;\n  insurerAddresses?: InsurerModuleToInsurerAddressesResolver<TParent>;\n  servicesToShow?: InsurerModuleToServicesToShowResolver<TParent>;\n  merchandiseLegalTermsHTML?: InsurerModuleToMerchandiseLegalTermsHTMLResolver<TParent>;\n  merchandiseLegalTermsJSON?: InsurerModuleToMerchandiseLegalTermsJSONResolver<TParent>;\n  containerLegalTermsHTML?: InsurerModuleToContainerLegalTermsHTMLResolver<TParent>;\n  containerLegalTermsJSON?: InsurerModuleToContainerLegalTermsJSONResolver<TParent>;\n  id?: InsurerModuleToIdResolver<TParent>;\n  createdAt?: InsurerModuleToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerModuleToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerModuleToInsurerSinisterContactIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToInsurerSinisterContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToInsurerAdjusterContactIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToInsurerAdjusterContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToLogoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToDescriptionCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToCertificateTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToPlaceInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToInsurerTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToOriginCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToCountriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToInsurerCompanyModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToInsurerContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToInsurerBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToInsurerBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToInsurerAddressesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToServicesToShowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToMerchandiseLegalTermsHTMLResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToMerchandiseLegalTermsJSONResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToContainerLegalTermsHTMLResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToContainerLegalTermsJSONResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerSinisterContactTypeResolver<TParent = any> {\n  insurerModuleId?: InsurerSinisterContactToInsurerModuleIdResolver<TParent>;\n  contactName?: InsurerSinisterContactToContactNameResolver<TParent>;\n  officePhoneNumber?: InsurerSinisterContactToOfficePhoneNumberResolver<TParent>;\n  afterHoursPhoneNumber?: InsurerSinisterContactToAfterHoursPhoneNumberResolver<TParent>;\n  emailOne?: InsurerSinisterContactToEmailOneResolver<TParent>;\n  emailTwo?: InsurerSinisterContactToEmailTwoResolver<TParent>;\n  id?: InsurerSinisterContactToIdResolver<TParent>;\n  createdAt?: InsurerSinisterContactToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerSinisterContactToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerSinisterContactToInsurerModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSinisterContactToContactNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSinisterContactToOfficePhoneNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSinisterContactToAfterHoursPhoneNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSinisterContactToEmailOneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSinisterContactToEmailTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSinisterContactToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSinisterContactToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSinisterContactToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerAdjusterContactTypeResolver<TParent = any> {\n  name?: InsurerAdjusterContactToNameResolver<TParent>;\n  emailOne?: InsurerAdjusterContactToEmailOneResolver<TParent>;\n  emailTwo?: InsurerAdjusterContactToEmailTwoResolver<TParent>;\n  phoneNumber?: InsurerAdjusterContactToPhoneNumberResolver<TParent>;\n  insurerModuleId?: InsurerAdjusterContactToInsurerModuleIdResolver<TParent>;\n  id?: InsurerAdjusterContactToIdResolver<TParent>;\n  createdAt?: InsurerAdjusterContactToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerAdjusterContactToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerAdjusterContactToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAdjusterContactToEmailOneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAdjusterContactToEmailTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAdjusterContactToPhoneNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAdjusterContactToInsurerModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAdjusterContactToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAdjusterContactToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAdjusterContactToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerCompanyModuleTypeResolver<TParent = any> {\n  insurerModuleId?: InsurerCompanyModuleToInsurerModuleIdResolver<TParent>;\n  insurerModule?: InsurerCompanyModuleToInsurerModuleResolver<TParent>;\n  key?: InsurerCompanyModuleToKeyResolver<TParent>;\n  name?: InsurerCompanyModuleToNameResolver<TParent>;\n  typeValue?: InsurerCompanyModuleToTypeValueResolver<TParent>;\n  id?: InsurerCompanyModuleToIdResolver<TParent>;\n  createdAt?: InsurerCompanyModuleToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerCompanyModuleToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerCompanyModuleToInsurerModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyModuleToInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyModuleToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyModuleToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyModuleToTypeValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyModuleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyModuleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyModuleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerContactTypeResolver<TParent = any> {\n  insurerModuleId?: InsurerContactToInsurerModuleIdResolver<TParent>;\n  insurerModule?: InsurerContactToInsurerModuleResolver<TParent>;\n  name?: InsurerContactToNameResolver<TParent>;\n  email?: InsurerContactToEmailResolver<TParent>;\n  department?: InsurerContactToDepartmentResolver<TParent>;\n  phone?: InsurerContactToPhoneResolver<TParent>;\n  id?: InsurerContactToIdResolver<TParent>;\n  createdAt?: InsurerContactToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerContactToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerContactToInsurerModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerContactToInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerContactToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerContactToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerContactToDepartmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerContactToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerContactToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerContactToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerContactToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerBranchTypeResolver<TParent = any> {\n  insurerModuleId?: InsurerBranchToInsurerModuleIdResolver<TParent>;\n  insurerModule?: InsurerBranchToInsurerModuleResolver<TParent>;\n  life?: InsurerBranchToLifeResolver<TParent>;\n  accidentAndDisease?: InsurerBranchToAccidentAndDiseaseResolver<TParent>;\n  cars?: InsurerBranchToCarsResolver<TParent>;\n  damages?: InsurerBranchToDamagesResolver<TParent>;\n  id?: InsurerBranchToIdResolver<TParent>;\n  createdAt?: InsurerBranchToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerBranchToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerBranchToInsurerModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBranchToInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBranchToLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBranchToAccidentAndDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBranchToCarsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBranchToDamagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBranchToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBranchToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBranchToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerAddressTypeResolver<TParent = any> {\n  insurerModuleId?: InsurerAddressToInsurerModuleIdResolver<TParent>;\n  insurerModule?: InsurerAddressToInsurerModuleResolver<TParent>;\n  stateName?: InsurerAddressToStateNameResolver<TParent>;\n  municipality?: InsurerAddressToMunicipalityResolver<TParent>;\n  streetName?: InsurerAddressToStreetNameResolver<TParent>;\n  id?: InsurerAddressToIdResolver<TParent>;\n  createdAt?: InsurerAddressToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerAddressToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerAddressToInsurerModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAddressToInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAddressToStateNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAddressToMunicipalityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAddressToStreetNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAddressToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAddressToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerAddressToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMerchandiseDetailTypeResolver<TParent = any> {\n  contractorId?: MerchandiseDetailToContractorIdResolver<TParent>;\n  officeId?: MerchandiseDetailToOfficeIdResolver<TParent>;\n  merchandiseCategoryId?: MerchandiseDetailToMerchandiseCategoryIdResolver<TParent>;\n  merchandiseId?: MerchandiseDetailToMerchandiseIdResolver<TParent>;\n  merchandise?: MerchandiseDetailToMerchandiseResolver<TParent>;\n  countryOrigin?: MerchandiseDetailToCountryOriginResolver<TParent>;\n  countryDestiny?: MerchandiseDetailToCountryDestinyResolver<TParent>;\n  projectId?: MerchandiseDetailToProjectIdResolver<TParent>;\n  id?: MerchandiseDetailToIdResolver<TParent>;\n  createdAt?: MerchandiseDetailToCreatedAtResolver<TParent>;\n  updatedAt?: MerchandiseDetailToUpdatedAtResolver<TParent>;\n}\n\nexport interface MerchandiseDetailToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToMerchandiseCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToMerchandiseIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToMerchandiseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToCountryOriginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToCountryDestinyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMerchandiseTypeResolver<TParent = any> {\n  name?: MerchandiseToNameResolver<TParent>;\n  merchandiseType?: MerchandiseToMerchandiseTypeResolver<TParent>;\n  categoryId?: MerchandiseToCategoryIdResolver<TParent>;\n  insurerId?: MerchandiseToInsurerIdResolver<TParent>;\n  insurer?: MerchandiseToInsurerResolver<TParent>;\n  merchandiseStatus?: MerchandiseToMerchandiseStatusResolver<TParent>;\n  projectId?: MerchandiseToProjectIdResolver<TParent>;\n  id?: MerchandiseToIdResolver<TParent>;\n  createdAt?: MerchandiseToCreatedAtResolver<TParent>;\n  updatedAt?: MerchandiseToUpdatedAtResolver<TParent>;\n  category?: MerchandiseToCategoryResolver<TParent>;\n}\n\nexport interface MerchandiseToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToMerchandiseTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToInsurerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToMerchandiseStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseToCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITrafficDetailTypeResolver<TParent = any> {\n  currencyId?: TrafficDetailToCurrencyIdResolver<TParent>;\n  beneficiaryId?: TrafficDetailToBeneficiaryIdResolver<TParent>;\n  activityDescription?: TrafficDetailToActivityDescriptionResolver<TParent>;\n  origin?: TrafficDetailToOriginResolver<TParent>;\n  destiny?: TrafficDetailToDestinyResolver<TParent>;\n  sumAssured?: TrafficDetailToSumAssuredResolver<TParent>;\n  transportMode?: TrafficDetailToTransportModeResolver<TParent>;\n  number?: TrafficDetailToNumberResolver<TParent>;\n  showPrice?: TrafficDetailToShowPriceResolver<TParent>;\n  minimumSell?: TrafficDetailToMinimumSellResolver<TParent>;\n  priceToShow?: TrafficDetailToPriceToShowResolver<TParent>;\n  projectId?: TrafficDetailToProjectIdResolver<TParent>;\n  typeCoverage?: TrafficDetailToTypeCoverageResolver<TParent>;\n  id?: TrafficDetailToIdResolver<TParent>;\n  createdAt?: TrafficDetailToCreatedAtResolver<TParent>;\n  updatedAt?: TrafficDetailToUpdatedAtResolver<TParent>;\n  currency?: TrafficDetailToCurrencyResolver<TParent>;\n}\n\nexport interface TrafficDetailToCurrencyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToBeneficiaryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToActivityDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToOriginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToDestinyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToSumAssuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToTransportModeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToShowPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToMinimumSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToPriceToShowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToTypeCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface TrafficDetailToCurrencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerFeeTypeResolver<TParent = any> {\n  isActive?: InsurerFeeToIsActiveResolver<TParent>;\n  contractorId?: InsurerFeeToContractorIdResolver<TParent>;\n  projectId?: InsurerFeeToProjectIdResolver<TParent>;\n  insurerModuleId?: InsurerFeeToInsurerModuleIdResolver<TParent>;\n  merchandises?: InsurerFeeToMerchandisesResolver<TParent>;\n  insurerModule?: InsurerFeeToInsurerModuleResolver<TParent>;\n  policyModuleId?: InsurerFeeToPolicyModuleIdResolver<TParent>;\n  policyModule?: InsurerFeeToPolicyModuleResolver<TParent>;\n  originCountries?: InsurerFeeToOriginCountriesResolver<TParent>;\n  destinyConutries?: InsurerFeeToDestinyConutriesResolver<TParent>;\n  feeId?: InsurerFeeToFeeIdResolver<TParent>;\n  fee?: InsurerFeeToFeeResolver<TParent>;\n  files?: InsurerFeeToFilesResolver<TParent>;\n  startVigency?: InsurerFeeToStartVigencyResolver<TParent>;\n  vigencyLimit?: InsurerFeeToVigencyLimitResolver<TParent>;\n  id?: InsurerFeeToIdResolver<TParent>;\n  createdAt?: InsurerFeeToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerFeeToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerFeeToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToInsurerModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToMerchandisesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToOriginCountriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToDestinyConutriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToFeeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToStartVigencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToVigencyLimitResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyModuleTypeResolver<TParent = any> {\n  projectId?: PolicyModuleToProjectIdResolver<TParent>;\n  policyNumber?: PolicyModuleToPolicyNumberResolver<TParent>;\n  insurerModuleId?: PolicyModuleToInsurerModuleIdResolver<TParent>;\n  insurer?: PolicyModuleToInsurerResolver<TParent>;\n  policyType?: PolicyModuleToPolicyTypeResolver<TParent>;\n  address?: PolicyModuleToAddressResolver<TParent>;\n  paymentResponsable?: PolicyModuleToPaymentResponsableResolver<TParent>;\n  phoneNumber?: PolicyModuleToPhoneNumberResolver<TParent>;\n  startDateVigency?: PolicyModuleToStartDateVigencyResolver<TParent>;\n  endDatevigency?: PolicyModuleToEndDatevigencyResolver<TParent>;\n  moneySymbols?: PolicyModuleToMoneySymbolsResolver<TParent>;\n  dateLimitVigency?: PolicyModuleToDateLimitVigencyResolver<TParent>;\n  description?: PolicyModuleToDescriptionResolver<TParent>;\n  hasRateByPolicy?: PolicyModuleToHasRateByPolicyResolver<TParent>;\n  policyDeductibleId?: PolicyModuleToPolicyDeductibleIdResolver<TParent>;\n  deductibles?: PolicyModuleToDeductiblesResolver<TParent>;\n  declarations?: PolicyModuleToDeclarationsResolver<TParent>;\n  policyPrimaId?: PolicyModuleToPolicyPrimaIdResolver<TParent>;\n  policyPrima?: PolicyModuleToPolicyPrimaResolver<TParent>;\n  policyFrequencyPaymentId?: PolicyModuleToPolicyFrequencyPaymentIdResolver<TParent>;\n  policyFrequencyPayment?: PolicyModuleToPolicyFrequencyPaymentResolver<TParent>;\n  products?: PolicyModuleToProductsResolver<TParent>;\n  modules?: PolicyModuleToModulesResolver<TParent>;\n  policyFiles?: PolicyModuleToPolicyFilesResolver<TParent>;\n  policyCoverageId?: PolicyModuleToPolicyCoverageIdResolver<TParent>;\n  policyCoverage?: PolicyModuleToPolicyCoverageResolver<TParent>;\n  contracts?: PolicyModuleToContractsResolver<TParent>;\n  id?: PolicyModuleToIdResolver<TParent>;\n  createdAt?: PolicyModuleToCreatedAtResolver<TParent>;\n  updatedAt?: PolicyModuleToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicyModuleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToInsurerModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPaymentResponsableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPhoneNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToStartDateVigencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToEndDatevigencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToMoneySymbolsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToDateLimitVigencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToHasRateByPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyDeductibleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToDeductiblesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToDeclarationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyPrimaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyPrimaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyFrequencyPaymentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyFrequencyPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToProductsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToModulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyCoverageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToPolicyCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToContractsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMoneySymbolTypeResolver<TParent = any> {\n  policyModuleId?: MoneySymbolToPolicyModuleIdResolver<TParent>;\n  policyModule?: MoneySymbolToPolicyModuleResolver<TParent>;\n  keyName?: MoneySymbolToKeyNameResolver<TParent>;\n  value?: MoneySymbolToValueResolver<TParent>;\n  label?: MoneySymbolToLabelResolver<TParent>;\n  id?: MoneySymbolToIdResolver<TParent>;\n  createdAt?: MoneySymbolToCreatedAtResolver<TParent>;\n  updatedAt?: MoneySymbolToUpdatedAtResolver<TParent>;\n}\n\nexport interface MoneySymbolToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneySymbolToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneySymbolToKeyNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneySymbolToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneySymbolToLabelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneySymbolToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneySymbolToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneySymbolToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyDeductibleTypeResolver<TParent = any> {\n  policyModuleId?: PolicyDeductibleToPolicyModuleIdResolver<TParent>;\n  policyModule?: PolicyDeductibleToPolicyModuleResolver<TParent>;\n  deductibleTheft?: PolicyDeductibleToDeductibleTheftResolver<TParent>;\n  deductibleMerchandiseSensibility?: PolicyDeductibleToDeductibleMerchandiseSensibilityResolver<TParent>;\n  deductibleRefrigeratedMerchandise?: PolicyDeductibleToDeductibleRefrigeratedMerchandiseResolver<TParent>;\n  minimumDeductible?: PolicyDeductibleToMinimumDeductibleResolver<TParent>;\n  damageDeductible?: PolicyDeductibleToDamageDeductibleResolver<TParent>;\n  minimumPurchase?: PolicyDeductibleToMinimumPurchaseResolver<TParent>;\n  purchaseRate?: PolicyDeductibleToPurchaseRateResolver<TParent>;\n  id?: PolicyDeductibleToIdResolver<TParent>;\n  createdAt?: PolicyDeductibleToCreatedAtResolver<TParent>;\n  updatedAt?: PolicyDeductibleToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicyDeductibleToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToDeductibleTheftResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToDeductibleMerchandiseSensibilityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToDeductibleRefrigeratedMerchandiseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToMinimumDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToDamageDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToMinimumPurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToPurchaseRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeductibleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyDeclarationTypeResolver<TParent = any> {\n  policyModuleId?: PolicyDeclarationToPolicyModuleIdResolver<TParent>;\n  policyModule?: PolicyDeclarationToPolicyModuleResolver<TParent>;\n  email?: PolicyDeclarationToEmailResolver<TParent>;\n  name?: PolicyDeclarationToNameResolver<TParent>;\n  id?: PolicyDeclarationToIdResolver<TParent>;\n  createdAt?: PolicyDeclarationToCreatedAtResolver<TParent>;\n  updatedAt?: PolicyDeclarationToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicyDeclarationToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeclarationToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeclarationToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeclarationToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeclarationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeclarationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyDeclarationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyPrimaTypeResolver<TParent = any> {\n  policyModuleId?: PolicyPrimaToPolicyModuleIdResolver<TParent>;\n  policyModule?: PolicyPrimaToPolicyModuleResolver<TParent>;\n  primaNeta?: PolicyPrimaToPrimaNetaResolver<TParent>;\n  discounts?: PolicyPrimaToDiscountsResolver<TParent>;\n  surchargerPayments?: PolicyPrimaToSurchargerPaymentsResolver<TParent>;\n  policyRights?: PolicyPrimaToPolicyRightsResolver<TParent>;\n  subTotal?: PolicyPrimaToSubTotalResolver<TParent>;\n  iva?: PolicyPrimaToIvaResolver<TParent>;\n  primaTotal?: PolicyPrimaToPrimaTotalResolver<TParent>;\n  id?: PolicyPrimaToIdResolver<TParent>;\n  createdAt?: PolicyPrimaToCreatedAtResolver<TParent>;\n  updatedAt?: PolicyPrimaToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicyPrimaToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToPrimaNetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToDiscountsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToSurchargerPaymentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToPolicyRightsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToIvaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToPrimaTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPrimaToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyFrequencyPaymentTypeResolver<TParent = any> {\n  policyModuleId?: PolicyFrequencyPaymentToPolicyModuleIdResolver<TParent>;\n  policyModule?: PolicyFrequencyPaymentToPolicyModuleResolver<TParent>;\n  monthly?: PolicyFrequencyPaymentToMonthlyResolver<TParent>;\n  bimonthly?: PolicyFrequencyPaymentToBimonthlyResolver<TParent>;\n  quarterly?: PolicyFrequencyPaymentToQuarterlyResolver<TParent>;\n  halfYearly?: PolicyFrequencyPaymentToHalfYearlyResolver<TParent>;\n  annual?: PolicyFrequencyPaymentToAnnualResolver<TParent>;\n  cash?: PolicyFrequencyPaymentToCashResolver<TParent>;\n  buyRate?: PolicyFrequencyPaymentToBuyRateResolver<TParent>;\n  minimumBuys?: PolicyFrequencyPaymentToMinimumBuysResolver<TParent>;\n  id?: PolicyFrequencyPaymentToIdResolver<TParent>;\n  createdAt?: PolicyFrequencyPaymentToCreatedAtResolver<TParent>;\n  updatedAt?: PolicyFrequencyPaymentToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicyFrequencyPaymentToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToMonthlyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToBimonthlyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToQuarterlyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToHalfYearlyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToAnnualResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToCashResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToBuyRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToMinimumBuysResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFrequencyPaymentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyProductTypeResolver<TParent = any> {\n  policyModuleId?: PolicyProductToPolicyModuleIdResolver<TParent>;\n  policyModule?: PolicyProductToPolicyModuleResolver<TParent>;\n  name?: PolicyProductToNameResolver<TParent>;\n  category?: PolicyProductToCategoryResolver<TParent>;\n  insurerBuy?: PolicyProductToInsurerBuyResolver<TParent>;\n  insurerMinimum?: PolicyProductToInsurerMinimumResolver<TParent>;\n  policySell?: PolicyProductToPolicySellResolver<TParent>;\n  policyMinimumSell?: PolicyProductToPolicyMinimumSellResolver<TParent>;\n  productId?: PolicyProductToProductIdResolver<TParent>;\n  id?: PolicyProductToIdResolver<TParent>;\n  createdAt?: PolicyProductToCreatedAtResolver<TParent>;\n  updatedAt?: PolicyProductToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicyProductToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToInsurerBuyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToInsurerMinimumResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToPolicySellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToPolicyMinimumSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyProductToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Iitus_ModuleTypeResolver<TParent = any> {\n  policyModuleId?: itus_ModuleToPolicyModuleIdResolver<TParent>;\n  insurerModule?: itus_ModuleToInsurerModuleResolver<TParent>;\n  key?: itus_ModuleToKeyResolver<TParent>;\n  typeValue?: itus_ModuleToTypeValueResolver<TParent>;\n  name?: itus_ModuleToNameResolver<TParent>;\n  id?: itus_ModuleToIdResolver<TParent>;\n  createdAt?: itus_ModuleToCreatedAtResolver<TParent>;\n  updatedAt?: itus_ModuleToUpdatedAtResolver<TParent>;\n}\n\nexport interface itus_ModuleToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_ModuleToInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_ModuleToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_ModuleToTypeValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_ModuleToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_ModuleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_ModuleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_ModuleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyFileTypeResolver<TParent = any> {\n  policyModuleId?: PolicyFileToPolicyModuleIdResolver<TParent>;\n  policyModule?: PolicyFileToPolicyModuleResolver<TParent>;\n  fileId?: PolicyFileToFileIdResolver<TParent>;\n  url?: PolicyFileToUrlResolver<TParent>;\n  message?: PolicyFileToMessageResolver<TParent>;\n  token?: PolicyFileToTokenResolver<TParent>;\n  partialUrl?: PolicyFileToPartialUrlResolver<TParent>;\n  name?: PolicyFileToNameResolver<TParent>;\n  fileName?: PolicyFileToFileNameResolver<TParent>;\n  size?: PolicyFileToSizeResolver<TParent>;\n  type?: PolicyFileToTypeResolver<TParent>;\n  id?: PolicyFileToIdResolver<TParent>;\n  createdAt?: PolicyFileToCreatedAtResolver<TParent>;\n  updatedAt?: PolicyFileToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicyFileToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToFileIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToPartialUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToFileNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToSizeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyFileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyCoverageTypeResolver<TParent = any> {\n  policyModuleId?: PolicyCoverageToPolicyModuleIdResolver<TParent>;\n  policyModule?: PolicyCoverageToPolicyModuleResolver<TParent>;\n  originCountries?: PolicyCoverageToOriginCountriesResolver<TParent>;\n  destinyCountries?: PolicyCoverageToDestinyCountriesResolver<TParent>;\n  id?: PolicyCoverageToIdResolver<TParent>;\n  createdAt?: PolicyCoverageToCreatedAtResolver<TParent>;\n  updatedAt?: PolicyCoverageToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicyCoverageToPolicyModuleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyCoverageToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyCoverageToOriginCountriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyCoverageToDestinyCountriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyCoverageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyCoverageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyCoverageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFeeTypeResolver<TParent = any> {\n  insurerId?: FeeToInsurerIdResolver<TParent>;\n  insurer?: FeeToInsurerResolver<TParent>;\n  purchaseRates?: FeeToPurchaseRatesResolver<TParent>;\n  minimumPurchase?: FeeToMinimumPurchaseResolver<TParent>;\n  sellRates?: FeeToSellRatesResolver<TParent>;\n  maximumSells?: FeeToMaximumSellsResolver<TParent>;\n  projectId?: FeeToProjectIdResolver<TParent>;\n  minimumSells?: FeeToMinimumSellsResolver<TParent>;\n  id?: FeeToIdResolver<TParent>;\n  createdAt?: FeeToCreatedAtResolver<TParent>;\n  updatedAt?: FeeToUpdatedAtResolver<TParent>;\n}\n\nexport interface FeeToInsurerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToPurchaseRatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToMinimumPurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToSellRatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToMaximumSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToMinimumSellsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FeeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerFeeFileTypeResolver<TParent = any> {\n  insurerFeeId?: InsurerFeeFileToInsurerFeeIdResolver<TParent>;\n  insurerFee?: InsurerFeeFileToInsurerFeeResolver<TParent>;\n  fileId?: InsurerFeeFileToFileIdResolver<TParent>;\n  id?: InsurerFeeFileToIdResolver<TParent>;\n  createdAt?: InsurerFeeFileToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerFeeFileToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerFeeFileToInsurerFeeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeFileToInsurerFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeFileToFileIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeFileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeFileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeFileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICertificateFileTypeResolver<TParent = any> {\n  projectId?: CertificateFileToProjectIdResolver<TParent>;\n  certificateId?: CertificateFileToCertificateIdResolver<TParent>;\n  certificate?: CertificateFileToCertificateResolver<TParent>;\n  fileId?: CertificateFileToFileIdResolver<TParent>;\n  id?: CertificateFileToIdResolver<TParent>;\n  createdAt?: CertificateFileToCreatedAtResolver<TParent>;\n  updatedAt?: CertificateFileToUpdatedAtResolver<TParent>;\n}\n\nexport interface CertificateFileToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateFileToCertificateIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateFileToCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateFileToFileIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateFileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateFileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateFileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICertificateBeneficiaryTypeResolver<TParent = any> {\n  certificateId?: CertificateBeneficiaryToCertificateIdResolver<TParent>;\n  certificate?: CertificateBeneficiaryToCertificateResolver<TParent>;\n  beneficiaryId?: CertificateBeneficiaryToBeneficiaryIdResolver<TParent>;\n  beneficiary?: CertificateBeneficiaryToBeneficiaryResolver<TParent>;\n  id?: CertificateBeneficiaryToIdResolver<TParent>;\n  createdAt?: CertificateBeneficiaryToCreatedAtResolver<TParent>;\n  updatedAt?: CertificateBeneficiaryToUpdatedAtResolver<TParent>;\n}\n\nexport interface CertificateBeneficiaryToCertificateIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateBeneficiaryToCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateBeneficiaryToBeneficiaryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateBeneficiaryToBeneficiaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateBeneficiaryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateBeneficiaryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateBeneficiaryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBeneficiaryTypeResolver<TParent = any> {\n  name?: BeneficiaryToNameResolver<TParent>;\n  rfc?: BeneficiaryToRfcResolver<TParent>;\n  countryId?: BeneficiaryToCountryIdResolver<TParent>;\n  isActive?: BeneficiaryToIsActiveResolver<TParent>;\n  projectId?: BeneficiaryToProjectIdResolver<TParent>;\n  contractId?: BeneficiaryToContractIdResolver<TParent>;\n  id?: BeneficiaryToIdResolver<TParent>;\n  createdAt?: BeneficiaryToCreatedAtResolver<TParent>;\n  updatedAt?: BeneficiaryToUpdatedAtResolver<TParent>;\n}\n\nexport interface BeneficiaryToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryToRfcResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryToCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryToContractIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICertificateMovementReasonTypeResolver<TParent = any> {\n  certificateMovementId?: CertificateMovementReasonToCertificateMovementIdResolver<TParent>;\n  certificateMovement?: CertificateMovementReasonToCertificateMovementResolver<TParent>;\n  reason?: CertificateMovementReasonToReasonResolver<TParent>;\n  reasonDescription?: CertificateMovementReasonToReasonDescriptionResolver<TParent>;\n  id?: CertificateMovementReasonToIdResolver<TParent>;\n  createdAt?: CertificateMovementReasonToCreatedAtResolver<TParent>;\n  updatedAt?: CertificateMovementReasonToUpdatedAtResolver<TParent>;\n}\n\nexport interface CertificateMovementReasonToCertificateMovementIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementReasonToCertificateMovementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementReasonToReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementReasonToReasonDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementReasonToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementReasonToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateMovementReasonToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICountryRequestTypeResolver<TParent = any> {\n  insurerCompanyId?: CountryRequestToInsurerCompanyIdResolver<TParent>;\n  insurerCompany?: CountryRequestToInsurerCompanyResolver<TParent>;\n  countryId?: CountryRequestToCountryIdResolver<TParent>;\n  projectId?: CountryRequestToProjectIdResolver<TParent>;\n  id?: CountryRequestToIdResolver<TParent>;\n  createdAt?: CountryRequestToCreatedAtResolver<TParent>;\n  updatedAt?: CountryRequestToUpdatedAtResolver<TParent>;\n}\n\nexport interface CountryRequestToInsurerCompanyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryRequestToInsurerCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryRequestToCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryRequestToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryRequestToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryRequestToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CountryRequestToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerCompanyTypeResolver<TParent = any> {\n  name?: InsurerCompanyToNameResolver<TParent>;\n  countries?: InsurerCompanyToCountriesResolver<TParent>;\n  contractorId?: InsurerCompanyToContractorIdResolver<TParent>;\n  contractor?: InsurerCompanyToContractorResolver<TParent>;\n  isActive?: InsurerCompanyToIsActiveResolver<TParent>;\n  projectId?: InsurerCompanyToProjectIdResolver<TParent>;\n  id?: InsurerCompanyToIdResolver<TParent>;\n  createdAt?: InsurerCompanyToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerCompanyToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerCompanyToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyToCountriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorTypeResolver<TParent = any> {\n  name?: ContractorToNameResolver<TParent>;\n  countryId?: ContractorToCountryIdResolver<TParent>;\n  company?: ContractorToCompanyResolver<TParent>;\n  postalCode?: ContractorToPostalCodeResolver<TParent>;\n  location?: ContractorToLocationResolver<TParent>;\n  city?: ContractorToCityResolver<TParent>;\n  colony?: ContractorToColonyResolver<TParent>;\n  extNumber?: ContractorToExtNumberResolver<TParent>;\n  phone?: ContractorToPhoneResolver<TParent>;\n  typeOfBusiness?: ContractorToTypeOfBusinessResolver<TParent>;\n  webSite?: ContractorToWebSiteResolver<TParent>;\n  rfc?: ContractorToRfcResolver<TParent>;\n  auxiliaryCode?: ContractorToAuxiliaryCodeResolver<TParent>;\n  paymentMethod?: ContractorToPaymentMethodResolver<TParent>;\n  usesCFDI?: ContractorToUsesCFDIResolver<TParent>;\n  paymentTerm?: ContractorToPaymentTermResolver<TParent>;\n  invoicingMethod?: ContractorToInvoicingMethodResolver<TParent>;\n  creditDays?: ContractorToCreditDaysResolver<TParent>;\n  creditAmount?: ContractorToCreditAmountResolver<TParent>;\n  invoicingPeriod?: ContractorToInvoicingPeriodResolver<TParent>;\n  companysRfc?: ContractorToCompanysRfcResolver<TParent>;\n  registration?: ContractorToRegistrationResolver<TParent>;\n  constitutiveAct?: ContractorToConstitutiveActResolver<TParent>;\n  powerOfAttorney?: ContractorToPowerOfAttorneyResolver<TParent>;\n  idCopy?: ContractorToIdCopyResolver<TParent>;\n  proofOfAddress?: ContractorToProofOfAddressResolver<TParent>;\n  positiveOpinionSat?: ContractorToPositiveOpinionSatResolver<TParent>;\n  taxSituationCertificate?: ContractorToTaxSituationCertificateResolver<TParent>;\n  isActive?: ContractorToIsActiveResolver<TParent>;\n  projectId?: ContractorToProjectIdResolver<TParent>;\n  officeId?: ContractorToOfficeIdResolver<TParent>;\n  office?: ContractorToOfficeResolver<TParent>;\n  beneficiaries?: ContractorToBeneficiariesResolver<TParent>;\n  contractorPolicies?: ContractorToContractorPoliciesResolver<TParent>;\n  id?: ContractorToIdResolver<TParent>;\n  createdAt?: ContractorToCreatedAtResolver<TParent>;\n  updatedAt?: ContractorToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContractorToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToPostalCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToLocationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToColonyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToExtNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToTypeOfBusinessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToWebSiteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToRfcResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToAuxiliaryCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToPaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToUsesCFDIResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToPaymentTermResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToInvoicingMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToCreditDaysResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToCreditAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToInvoicingPeriodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToCompanysRfcResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToRegistrationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToConstitutiveActResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToPowerOfAttorneyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToIdCopyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToProofOfAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToPositiveOpinionSatResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToTaxSituationCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToBeneficiariesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToContractorPoliciesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Iitus_OfficeTypeResolver<TParent = any> {\n  name?: itus_OfficeToNameResolver<TParent>;\n  contractorId?: itus_OfficeToContractorIdResolver<TParent>;\n  contractor?: itus_OfficeToContractorResolver<TParent>;\n  countryId?: itus_OfficeToCountryIdResolver<TParent>;\n  state?: itus_OfficeToStateResolver<TParent>;\n  projectId?: itus_OfficeToProjectIdResolver<TParent>;\n  id?: itus_OfficeToIdResolver<TParent>;\n  createdAt?: itus_OfficeToCreatedAtResolver<TParent>;\n  updatedAt?: itus_OfficeToUpdatedAtResolver<TParent>;\n}\n\nexport interface itus_OfficeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_OfficeToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_OfficeToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_OfficeToCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_OfficeToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_OfficeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_OfficeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_OfficeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_OfficeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorPolicyTypeResolver<TParent = any> {\n  contractorId?: ContractorPolicyToContractorIdResolver<TParent>;\n  policyId?: ContractorPolicyToPolicyIdResolver<TParent>;\n  contractor?: ContractorPolicyToContractorResolver<TParent>;\n  policy?: ContractorPolicyToPolicyResolver<TParent>;\n  projectId?: ContractorPolicyToProjectIdResolver<TParent>;\n  id?: ContractorPolicyToIdResolver<TParent>;\n  createdAt?: ContractorPolicyToCreatedAtResolver<TParent>;\n  updatedAt?: ContractorPolicyToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContractorPolicyToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorPolicyToPolicyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorPolicyToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorPolicyToPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorPolicyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorPolicyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorPolicyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorPolicyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Iitus_PolicyTypeResolver<TParent = any> {\n  countryId?: itus_PolicyToCountryIdResolver<TParent>;\n  insurerId?: itus_PolicyToInsurerIdResolver<TParent>;\n  document?: itus_PolicyToDocumentResolver<TParent>;\n  number?: itus_PolicyToNumberResolver<TParent>;\n  policyType?: itus_PolicyToPolicyTypeResolver<TParent>;\n  description?: itus_PolicyToDescriptionResolver<TParent>;\n  startValidityDate?: itus_PolicyToStartValidityDateResolver<TParent>;\n  expirationDate?: itus_PolicyToExpirationDateResolver<TParent>;\n  limitDeclarationDate?: itus_PolicyToLimitDeclarationDateResolver<TParent>;\n  damageDeductible?: itus_PolicyToDamageDeductibleResolver<TParent>;\n  robberyDeductible?: itus_PolicyToRobberyDeductibleResolver<TParent>;\n  crackDeductible?: itus_PolicyToCrackDeductibleResolver<TParent>;\n  merchandiseDeductible?: itus_PolicyToMerchandiseDeductibleResolver<TParent>;\n  declarationResponsible?: itus_PolicyToDeclarationResponsibleResolver<TParent>;\n  projectId?: itus_PolicyToProjectIdResolver<TParent>;\n  clientPaysItus?: itus_PolicyToClientPaysItusResolver<TParent>;\n  contractorType?: itus_PolicyToContractorTypeResolver<TParent>;\n  insurerPaysItus?: itus_PolicyToInsurerPaysItusResolver<TParent>;\n  currencies?: itus_PolicyToCurrenciesResolver<TParent>;\n  policyStatus?: itus_PolicyToPolicyStatusResolver<TParent>;\n  id?: itus_PolicyToIdResolver<TParent>;\n  createdAt?: itus_PolicyToCreatedAtResolver<TParent>;\n  updatedAt?: itus_PolicyToUpdatedAtResolver<TParent>;\n}\n\nexport interface itus_PolicyToCountryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToInsurerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToPolicyTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToStartValidityDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToExpirationDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToLimitDeclarationDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToDamageDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToRobberyDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToCrackDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToMerchandiseDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToDeclarationResponsibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToClientPaysItusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToContractorTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToInsurerPaysItusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToCurrenciesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToPolicyStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface itus_PolicyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICertificateCollectionSegmentTypeResolver<TParent = any> {\n  items?: CertificateCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CertificateCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CertificateCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CertificateCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CertificateCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBeneficiaryCollectionSegmentTypeResolver<TParent = any> {\n  items?: BeneficiaryCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BeneficiaryCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BeneficiaryCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BeneficiaryCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiaryCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerCompanyCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerCompanyCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerCompanyCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerCompanyCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerCompanyCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCompanyCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMerchandiseCollectionSegmentTypeResolver<TParent = any> {\n  items?: MerchandiseCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MerchandiseCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MerchandiseCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MerchandiseCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMerchandiseCategoryTypeResolver<TParent = any> {\n  name?: MerchandiseCategoryToNameResolver<TParent>;\n  projectId?: MerchandiseCategoryToProjectIdResolver<TParent>;\n  id?: MerchandiseCategoryToIdResolver<TParent>;\n  createdAt?: MerchandiseCategoryToCreatedAtResolver<TParent>;\n  updatedAt?: MerchandiseCategoryToUpdatedAtResolver<TParent>;\n}\n\nexport interface MerchandiseCategoryToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseCategoryToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseCategoryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseCategoryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MerchandiseCategoryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContactTypeResolver<TParent = any> {\n  contractorId?: ContactToContractorIdResolver<TParent>;\n  fullName?: ContactToFullNameResolver<TParent>;\n  jobPosition?: ContactToJobPositionResolver<TParent>;\n  email?: ContactToEmailResolver<TParent>;\n  phone?: ContactToPhoneResolver<TParent>;\n  contactType?: ContactToContactTypeResolver<TParent>;\n  projectId?: ContactToProjectIdResolver<TParent>;\n  id?: ContactToIdResolver<TParent>;\n  createdAt?: ContactToCreatedAtResolver<TParent>;\n  updatedAt?: ContactToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContactToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactToJobPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactToContactTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContactToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMoneyTypeResolver<TParent = any> {\n  name?: MoneyToNameResolver<TParent>;\n  code?: MoneyToCodeResolver<TParent>;\n  projectId?: MoneyToProjectIdResolver<TParent>;\n  id?: MoneyToIdResolver<TParent>;\n  createdAt?: MoneyToCreatedAtResolver<TParent>;\n  updatedAt?: MoneyToUpdatedAtResolver<TParent>;\n}\n\nexport interface MoneyToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyTypeResolver<TParent = any> {\n  user?: PolicyToUserResolver<TParent>;\n  device?: PolicyToDeviceResolver<TParent>;\n  token?: PolicyToTokenResolver<TParent>;\n  sNumeroPoliza?: PolicyToSNumeroPolizaResolver<TParent>;\n  idCotizacion?: PolicyToIdCotizacionResolver<TParent>;\n  idAseguradoraSubRamo?: PolicyToIdAseguradoraSubRamoResolver<TParent>;\n  idSubramo?: PolicyToIdSubramoResolver<TParent>;\n  agente?: PolicyToAgenteResolver<TParent>;\n  telefono?: PolicyToTelefonoResolver<TParent>;\n  email?: PolicyToEmailResolver<TParent>;\n  subramo?: PolicyToSubramoResolver<TParent>;\n  detallesPorAseguradora?: PolicyToDetallesPorAseguradoraResolver<TParent>;\n  projectId?: PolicyToProjectIdResolver<TParent>;\n  id?: PolicyToIdResolver<TParent>;\n  createdAt?: PolicyToCreatedAtResolver<TParent>;\n  updatedAt?: PolicyToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicyToUserResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToDeviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToSNumeroPolizaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToIdCotizacionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToIdAseguradoraSubRamoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToIdSubramoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToAgenteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToTelefonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToSubramoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToDetallesPorAseguradoraResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorOfficeTypeResolver<TParent = any> {\n  contractorId?: ContractorOfficeToContractorIdResolver<TParent>;\n  officeId?: ContractorOfficeToOfficeIdResolver<TParent>;\n  contractor?: ContractorOfficeToContractorResolver<TParent>;\n  office?: ContractorOfficeToOfficeResolver<TParent>;\n  projectId?: ContractorOfficeToProjectIdResolver<TParent>;\n  id?: ContractorOfficeToIdResolver<TParent>;\n  createdAt?: ContractorOfficeToCreatedAtResolver<TParent>;\n  updatedAt?: ContractorOfficeToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContractorOfficeToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorOfficeToOfficeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorOfficeToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorOfficeToOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorOfficeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorOfficeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorOfficeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorOfficeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorContactTypeResolver<TParent = any> {\n  contractorId?: ContractorContactToContractorIdResolver<TParent>;\n  contactId?: ContractorContactToContactIdResolver<TParent>;\n  contractor?: ContractorContactToContractorResolver<TParent>;\n  contact?: ContractorContactToContactResolver<TParent>;\n  projectId?: ContractorContactToProjectIdResolver<TParent>;\n  id?: ContractorContactToIdResolver<TParent>;\n  createdAt?: ContractorContactToCreatedAtResolver<TParent>;\n  updatedAt?: ContractorContactToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContractorContactToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorContactToContactIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorContactToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorContactToContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorContactToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorContactToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorContactToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorContactToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyModuleCollectionSegmentTypeResolver<TParent = any> {\n  items?: PolicyModuleCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PolicyModuleCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PolicyModuleCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PolicyModuleCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyModuleCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerModuleCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerModuleCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerModuleCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerModuleCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerModuleCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerModuleCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerFeeCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerFeeCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerFeeCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerFeeCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerFeeCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFeeCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISchoolCollectionSegmentTypeResolver<TParent = any> {\n  items?: SchoolCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SchoolCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SchoolCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SchoolCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISchoolTypeResolver<TParent = any> {\n  projectId?: SchoolToProjectIdResolver<TParent>;\n  photo?: SchoolToPhotoResolver<TParent>;\n  name?: SchoolToNameResolver<TParent>;\n  email?: SchoolToEmailResolver<TParent>;\n  phone?: SchoolToPhoneResolver<TParent>;\n  daysServices?: SchoolToDaysServicesResolver<TParent>;\n  levels?: SchoolToLevelsResolver<TParent>;\n  id?: SchoolToIdResolver<TParent>;\n  createdAt?: SchoolToCreatedAtResolver<TParent>;\n  updatedAt?: SchoolToUpdatedAtResolver<TParent>;\n}\n\nexport interface SchoolToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolToDaysServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolToLevelsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SchoolToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDayServiceTypeResolver<TParent = any> {\n  projectId?: DayServiceToProjectIdResolver<TParent>;\n  day?: DayServiceToDayResolver<TParent>;\n  isActive?: DayServiceToIsActiveResolver<TParent>;\n  schoolId?: DayServiceToSchoolIdResolver<TParent>;\n  school?: DayServiceToSchoolResolver<TParent>;\n  id?: DayServiceToIdResolver<TParent>;\n  createdAt?: DayServiceToCreatedAtResolver<TParent>;\n  updatedAt?: DayServiceToUpdatedAtResolver<TParent>;\n}\n\nexport interface DayServiceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayServiceToDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayServiceToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayServiceToSchoolIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayServiceToSchoolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayServiceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayServiceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DayServiceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILevelTypeResolver<TParent = any> {\n  projectId?: LevelToProjectIdResolver<TParent>;\n  name?: LevelToNameResolver<TParent>;\n  isActive?: LevelToIsActiveResolver<TParent>;\n  schoolId?: LevelToSchoolIdResolver<TParent>;\n  school?: LevelToSchoolResolver<TParent>;\n  grade?: LevelToGradeResolver<TParent>;\n  id?: LevelToIdResolver<TParent>;\n  createdAt?: LevelToCreatedAtResolver<TParent>;\n  updatedAt?: LevelToUpdatedAtResolver<TParent>;\n}\n\nexport interface LevelToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelToSchoolIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelToSchoolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelToGradeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGradeTypeResolver<TParent = any> {\n  projectId?: GradeToProjectIdResolver<TParent>;\n  name?: GradeToNameResolver<TParent>;\n  isActive?: GradeToIsActiveResolver<TParent>;\n  levelId?: GradeToLevelIdResolver<TParent>;\n  level?: GradeToLevelResolver<TParent>;\n  id?: GradeToIdResolver<TParent>;\n  createdAt?: GradeToCreatedAtResolver<TParent>;\n  updatedAt?: GradeToUpdatedAtResolver<TParent>;\n}\n\nexport interface GradeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GradeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GradeToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GradeToLevelIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GradeToLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GradeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GradeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GradeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IClassroomCollectionSegmentTypeResolver<TParent = any> {\n  items?: ClassroomCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ClassroomCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ClassroomCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ClassroomCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IClassroomTypeResolver<TParent = any> {\n  projectId?: ClassroomToProjectIdResolver<TParent>;\n  schoolId?: ClassroomToSchoolIdResolver<TParent>;\n  school?: ClassroomToSchoolResolver<TParent>;\n  gradeId?: ClassroomToGradeIdResolver<TParent>;\n  grade?: ClassroomToGradeResolver<TParent>;\n  levelId?: ClassroomToLevelIdResolver<TParent>;\n  level?: ClassroomToLevelResolver<TParent>;\n  group?: ClassroomToGroupResolver<TParent>;\n  isActive?: ClassroomToIsActiveResolver<TParent>;\n  teacherMemberId?: ClassroomToTeacherMemberIdResolver<TParent>;\n  students?: ClassroomToStudentsResolver<TParent>;\n  id?: ClassroomToIdResolver<TParent>;\n  createdAt?: ClassroomToCreatedAtResolver<TParent>;\n  updatedAt?: ClassroomToUpdatedAtResolver<TParent>;\n  teacherMember?: ClassroomToTeacherMemberResolver<TParent>;\n}\n\nexport interface ClassroomToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToSchoolIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToSchoolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToGradeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToGradeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToLevelIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToTeacherMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToStudentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ClassroomToTeacherMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStudentTypeResolver<TParent = any> {\n  projectId?: StudentToProjectIdResolver<TParent>;\n  classroomId?: StudentToClassroomIdResolver<TParent>;\n  classroom?: StudentToClassroomResolver<TParent>;\n  name?: StudentToNameResolver<TParent>;\n  lastName?: StudentToLastNameResolver<TParent>;\n  photo?: StudentToPhotoResolver<TParent>;\n  isActive?: StudentToIsActiveResolver<TParent>;\n  verify?: StudentToVerifyResolver<TParent>;\n  attendances?: StudentToAttendancesResolver<TParent>;\n  studentTutors?: StudentToStudentTutorsResolver<TParent>;\n  id?: StudentToIdResolver<TParent>;\n  createdAt?: StudentToCreatedAtResolver<TParent>;\n  updatedAt?: StudentToUpdatedAtResolver<TParent>;\n}\n\nexport interface StudentToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToClassroomIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToClassroomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToPhotoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToVerifyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToAttendancesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToStudentTutorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Ischool_AttendanceTypeResolver<TParent = any> {\n  projectId?: school_AttendanceToProjectIdResolver<TParent>;\n  status?: school_AttendanceToStatusResolver<TParent>;\n  studentId?: school_AttendanceToStudentIdResolver<TParent>;\n  student?: school_AttendanceToStudentResolver<TParent>;\n  id?: school_AttendanceToIdResolver<TParent>;\n  createdAt?: school_AttendanceToCreatedAtResolver<TParent>;\n  updatedAt?: school_AttendanceToUpdatedAtResolver<TParent>;\n}\n\nexport interface school_AttendanceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface school_AttendanceToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface school_AttendanceToStudentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface school_AttendanceToStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface school_AttendanceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface school_AttendanceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface school_AttendanceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStudentTutorTypeResolver<TParent = any> {\n  tutorMemberId?: StudentTutorToTutorMemberIdResolver<TParent>;\n  studentId?: StudentTutorToStudentIdResolver<TParent>;\n  student?: StudentTutorToStudentResolver<TParent>;\n  id?: StudentTutorToIdResolver<TParent>;\n  createdAt?: StudentTutorToCreatedAtResolver<TParent>;\n  updatedAt?: StudentTutorToUpdatedAtResolver<TParent>;\n  tutorMember?: StudentTutorToTutorMemberResolver<TParent>;\n}\n\nexport interface StudentTutorToTutorMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentTutorToStudentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentTutorToStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentTutorToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentTutorToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentTutorToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentTutorToTutorMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILevelCollectionSegmentTypeResolver<TParent = any> {\n  items?: LevelCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: LevelCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: LevelCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface LevelCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LevelCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGradeCollectionSegmentTypeResolver<TParent = any> {\n  items?: GradeCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: GradeCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: GradeCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface GradeCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GradeCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface GradeCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStudentCollectionSegmentTypeResolver<TParent = any> {\n  items?: StudentCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: StudentCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: StudentCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface StudentCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StudentCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAttendanceCollectionSegmentTypeResolver<TParent = any> {\n  items?: AttendanceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: AttendanceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: AttendanceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface AttendanceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttendanceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttendanceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAttendanceTypeResolver<TParent = any> {\n  conferenceId?: AttendanceToConferenceIdResolver<TParent>;\n  memberId?: AttendanceToMemberIdResolver<TParent>;\n  member?: AttendanceToMemberResolver<TParent>;\n  id?: AttendanceToIdResolver<TParent>;\n  createdAt?: AttendanceToCreatedAtResolver<TParent>;\n  updatedAt?: AttendanceToUpdatedAtResolver<TParent>;\n}\n\nexport interface AttendanceToConferenceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttendanceToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttendanceToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttendanceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttendanceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AttendanceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMyConversationCollectionSegmentTypeResolver<TParent = any> {\n  items?: MyConversationCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: MyConversationCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: MyConversationCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface MyConversationCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MyConversationCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MyConversationCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMyConversationTypeResolver<TParent = any> {\n  username?: MyConversationToUsernameResolver<TParent>;\n  phone?: MyConversationToPhoneResolver<TParent>;\n  updated_at?: MyConversationToUpdated_atResolver<TParent>;\n  messages?: MyConversationToMessagesResolver<TParent>;\n  key?: MyConversationToKeyResolver<TParent>;\n  value?: MyConversationToValueResolver<TParent>;\n}\n\nexport interface MyConversationToUsernameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MyConversationToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MyConversationToUpdated_atResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MyConversationToMessagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MyConversationToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MyConversationToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMyMessageTypeResolver<TParent = any> {\n  message?: MyMessageToMessageResolver<TParent>;\n  sender?: MyMessageToSenderResolver<TParent>;\n  createdAt?: MyMessageToCreatedAtResolver<TParent>;\n}\n\nexport interface MyMessageToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MyMessageToSenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MyMessageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentProviderBonoCollectionSegmentTypeResolver<TParent = any> {\n  items?: AgentProviderBonoCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: AgentProviderBonoCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: AgentProviderBonoCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface AgentProviderBonoCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentProviderBonoTypeResolver<TParent = any> {\n  agentKeyId?: AgentProviderBonoToAgentKeyIdResolver<TParent>;\n  startValidity?: AgentProviderBonoToStartValidityResolver<TParent>;\n  endValidity?: AgentProviderBonoToEndValidityResolver<TParent>;\n  quantity?: AgentProviderBonoToQuantityResolver<TParent>;\n  exchangeRate?: AgentProviderBonoToExchangeRateResolver<TParent>;\n  bono?: AgentProviderBonoToBonoResolver<TParent>;\n  projectId?: AgentProviderBonoToProjectIdResolver<TParent>;\n  factureNumber?: AgentProviderBonoToFactureNumberResolver<TParent>;\n  ownerId?: AgentProviderBonoToOwnerIdResolver<TParent>;\n  referrerId?: AgentProviderBonoToReferrerIdResolver<TParent>;\n  agentKey?: AgentProviderBonoToAgentKeyResolver<TParent>;\n  id?: AgentProviderBonoToIdResolver<TParent>;\n  createdAt?: AgentProviderBonoToCreatedAtResolver<TParent>;\n  updatedAt?: AgentProviderBonoToUpdatedAtResolver<TParent>;\n}\n\nexport interface AgentProviderBonoToAgentKeyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToStartValidityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToEndValidityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToExchangeRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToBonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToFactureNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToReferrerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToAgentKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderBonoToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentKeyTypeResolver<TParent = any> {\n  ownerId?: AgentKeyToOwnerIdResolver<TParent>;\n  name?: AgentKeyToNameResolver<TParent>;\n  key?: AgentKeyToKeyResolver<TParent>;\n  isActive?: AgentKeyToIsActiveResolver<TParent>;\n  projectAgentProviderId?: AgentKeyToProjectAgentProviderIdResolver<TParent>;\n  projectAgentProvider?: AgentKeyToProjectAgentProviderResolver<TParent>;\n  comissions?: AgentKeyToComissionsResolver<TParent>;\n  polices?: AgentKeyToPolicesResolver<TParent>;\n  agentProviderBono?: AgentKeyToAgentProviderBonoResolver<TParent>;\n  id?: AgentKeyToIdResolver<TParent>;\n  createdAt?: AgentKeyToCreatedAtResolver<TParent>;\n  updatedAt?: AgentKeyToUpdatedAtResolver<TParent>;\n}\n\nexport interface AgentKeyToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToProjectAgentProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToComissionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToPolicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToAgentProviderBonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectAgentProviderTypeResolver<TParent = any> {\n  projectId?: ProjectAgentProviderToProjectIdResolver<TParent>;\n  agentProviderId?: ProjectAgentProviderToAgentProviderIdResolver<TParent>;\n  agentProvider?: ProjectAgentProviderToAgentProviderResolver<TParent>;\n  observations?: ProjectAgentProviderToObservationsResolver<TParent>;\n  coveragePackages?: ProjectAgentProviderToCoveragePackagesResolver<TParent>;\n  agentProviderContact?: ProjectAgentProviderToAgentProviderContactResolver<TParent>;\n  insurerReminderProjectAgentProvider?: ProjectAgentProviderToInsurerReminderProjectAgentProviderResolver<TParent>;\n  projectAgentProviderEmailReminders?: ProjectAgentProviderToProjectAgentProviderEmailRemindersResolver<TParent>;\n  id?: ProjectAgentProviderToIdResolver<TParent>;\n  createdAt?: ProjectAgentProviderToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectAgentProviderToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProjectAgentProviderToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToAgentProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToCoveragePackagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToAgentProviderContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToInsurerReminderProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToProjectAgentProviderEmailRemindersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentProviderTypeResolver<TParent = any> {\n  companyName?: AgentProviderToCompanyNameResolver<TParent>;\n  alias?: AgentProviderToAliasResolver<TParent>;\n  rFC?: AgentProviderToRFCResolver<TParent>;\n  phone?: AgentProviderToPhoneResolver<TParent>;\n  website?: AgentProviderToWebsiteResolver<TParent>;\n  ownerId?: AgentProviderToOwnerIdResolver<TParent>;\n  typeAgentProvider?: AgentProviderToTypeAgentProviderResolver<TParent>;\n  projectAgentProviders?: AgentProviderToProjectAgentProvidersResolver<TParent>;\n  id?: AgentProviderToIdResolver<TParent>;\n  createdAt?: AgentProviderToCreatedAtResolver<TParent>;\n  updatedAt?: AgentProviderToUpdatedAtResolver<TParent>;\n}\n\nexport interface AgentProviderToCompanyNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToAliasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToRFCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToWebsiteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToTypeAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToProjectAgentProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoveragePackageTypeResolver<TParent = any> {\n  name?: CoveragePackageToNameResolver<TParent>;\n  description?: CoveragePackageToDescriptionResolver<TParent>;\n  projectAgentProviderBranchId?: CoveragePackageToProjectAgentProviderBranchIdResolver<TParent>;\n  typePackage?: CoveragePackageToTypePackageResolver<TParent>;\n  policy?: CoveragePackageToPolicyResolver<TParent>;\n  ownerId?: CoveragePackageToOwnerIdResolver<TParent>;\n  projectAgentProviderId?: CoveragePackageToProjectAgentProviderIdResolver<TParent>;\n  projectAgentProvider?: CoveragePackageToProjectAgentProviderResolver<TParent>;\n  projectAgentProviderBranch?: CoveragePackageToProjectAgentProviderBranchResolver<TParent>;\n  id?: CoveragePackageToIdResolver<TParent>;\n  createdAt?: CoveragePackageToCreatedAtResolver<TParent>;\n  updatedAt?: CoveragePackageToUpdatedAtResolver<TParent>;\n}\n\nexport interface CoveragePackageToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToProjectAgentProviderBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToTypePackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToProjectAgentProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectAgentProviderBranchTypeResolver<TParent = any> {\n  projectId?: ProjectAgentProviderBranchToProjectIdResolver<TParent>;\n  projectAgentProviderId?: ProjectAgentProviderBranchToProjectAgentProviderIdResolver<TParent>;\n  projectAgentProvider?: ProjectAgentProviderBranchToProjectAgentProviderResolver<TParent>;\n  branchId?: ProjectAgentProviderBranchToBranchIdResolver<TParent>;\n  branch?: ProjectAgentProviderBranchToBranchResolver<TParent>;\n  subBranchId?: ProjectAgentProviderBranchToSubBranchIdResolver<TParent>;\n  subBranch?: ProjectAgentProviderBranchToSubBranchResolver<TParent>;\n  projectAgentProviderBranches?: ProjectAgentProviderBranchToProjectAgentProviderBranchesResolver<TParent>;\n  polices?: ProjectAgentProviderBranchToPolicesResolver<TParent>;\n  comissions?: ProjectAgentProviderBranchToComissionsResolver<TParent>;\n  agentProviderContacts?: ProjectAgentProviderBranchToAgentProviderContactsResolver<TParent>;\n  referrerBranchs?: ProjectAgentProviderBranchToReferrerBranchsResolver<TParent>;\n  coveragePackages?: ProjectAgentProviderBranchToCoveragePackagesResolver<TParent>;\n  policeQuotes?: ProjectAgentProviderBranchToPoliceQuotesResolver<TParent>;\n  id?: ProjectAgentProviderBranchToIdResolver<TParent>;\n  createdAt?: ProjectAgentProviderBranchToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectAgentProviderBranchToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProjectAgentProviderBranchToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToProjectAgentProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToSubBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToProjectAgentProviderBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToPolicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToComissionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToAgentProviderContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToReferrerBranchsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToCoveragePackagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToPoliceQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBranchTypeResolver<TParent = any> {\n  branchName?: BranchToBranchNameResolver<TParent>;\n  branchCode?: BranchToBranchCodeResolver<TParent>;\n  typeAgentProviders?: BranchToTypeAgentProvidersResolver<TParent>;\n  subBranches?: BranchToSubBranchesResolver<TParent>;\n  projectAgentProviderBranches?: BranchToProjectAgentProviderBranchesResolver<TParent>;\n  id?: BranchToIdResolver<TParent>;\n  createdAt?: BranchToCreatedAtResolver<TParent>;\n  updatedAt?: BranchToUpdatedAtResolver<TParent>;\n}\n\nexport interface BranchToBranchNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchToBranchCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchToTypeAgentProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchToSubBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchToProjectAgentProviderBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISubBranchTypeResolver<TParent = any> {\n  subBranchName?: SubBranchToSubBranchNameResolver<TParent>;\n  subBranchCode?: SubBranchToSubBranchCodeResolver<TParent>;\n  branchId?: SubBranchToBranchIdResolver<TParent>;\n  branch?: SubBranchToBranchResolver<TParent>;\n  projectAgentProviderBranches?: SubBranchToProjectAgentProviderBranchesResolver<TParent>;\n  insurerBailTypes?: SubBranchToInsurerBailTypesResolver<TParent>;\n  id?: SubBranchToIdResolver<TParent>;\n  createdAt?: SubBranchToCreatedAtResolver<TParent>;\n  updatedAt?: SubBranchToUpdatedAtResolver<TParent>;\n}\n\nexport interface SubBranchToSubBranchNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchToSubBranchCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchToBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchToBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchToProjectAgentProviderBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchToInsurerBailTypesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerBailTypeTypeResolver<TParent = any> {\n  name?: InsurerBailTypeToNameResolver<TParent>;\n  code?: InsurerBailTypeToCodeResolver<TParent>;\n  ownerId?: InsurerBailTypeToOwnerIdResolver<TParent>;\n  projectId?: InsurerBailTypeToProjectIdResolver<TParent>;\n  subBranchId?: InsurerBailTypeToSubBranchIdResolver<TParent>;\n  subBranch?: InsurerBailTypeToSubBranchResolver<TParent>;\n  id?: InsurerBailTypeToIdResolver<TParent>;\n  createdAt?: InsurerBailTypeToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerBailTypeToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerBailTypeToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeToSubBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeToSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceTypeResolver<TParent = any> {\n  number?: PoliceToNumberResolver<TParent>;\n  startValidity?: PoliceToStartValidityResolver<TParent>;\n  endValidity?: PoliceToEndValidityResolver<TParent>;\n  formaDePago?: PoliceToFormaDePagoResolver<TParent>;\n  status?: PoliceToStatusResolver<TParent>;\n  observations?: PoliceToObservationsResolver<TParent>;\n  folio?: PoliceToFolioResolver<TParent>;\n  internalNumber?: PoliceToInternalNumberResolver<TParent>;\n  documentType?: PoliceToDocumentTypeResolver<TParent>;\n  addressId?: PoliceToAddressIdResolver<TParent>;\n  aseguradoraId?: PoliceToAseguradoraIdResolver<TParent>;\n  claveId?: PoliceToClaveIdResolver<TParent>;\n  ownerId?: PoliceToOwnerIdResolver<TParent>;\n  packageId?: PoliceToPackageIdResolver<TParent>;\n  projectAgentProviderBranchId?: PoliceToProjectAgentProviderBranchIdResolver<TParent>;\n  fCurrency?: PoliceToFCurrencyResolver<TParent>;\n  identifier?: PoliceToIdentifierResolver<TParent>;\n  rigth?: PoliceToRigthResolver<TParent>;\n  iVA?: PoliceToIVAResolver<TParent>;\n  pNeta?: PoliceToPNetaResolver<TParent>;\n  pTotal?: PoliceToPTotalResolver<TParent>;\n  rPF?: PoliceToRPFResolver<TParent>;\n  comision?: PoliceToComisionResolver<TParent>;\n  administrationType?: PoliceToAdministrationTypeResolver<TParent>;\n  caratule?: PoliceToCaratuleResolver<TParent>;\n  certificadoIncisoActivo?: PoliceToCertificadoIncisoActivoResolver<TParent>;\n  certificateNumber?: PoliceToCertificateNumberResolver<TParent>;\n  comisionPercent?: PoliceToComisionPercentResolver<TParent>;\n  hospitalLevel?: PoliceToHospitalLevelResolver<TParent>;\n  name?: PoliceToNameResolver<TParent>;\n  parentId?: PoliceToParentIdResolver<TParent>;\n  discount?: PoliceToDiscountResolver<TParent>;\n  isRenewable?: PoliceToIsRenewableResolver<TParent>;\n  reasonRen?: PoliceToReasonRenResolver<TParent>;\n  renewedStatus?: PoliceToRenewedStatusResolver<TParent>;\n  contact?: PoliceToContactResolver<TParent>;\n  fechaBajaInciso?: PoliceToFechaBajaIncisoResolver<TParent>;\n  reasonCancel?: PoliceToReasonCancelResolver<TParent>;\n  receiptsBy?: PoliceToReceiptsByResolver<TParent>;\n  responsableId?: PoliceToResponsableIdResolver<TParent>;\n  comisionGiven?: PoliceToComisionGivenResolver<TParent>;\n  recAntiquity?: PoliceToRecAntiquityResolver<TParent>;\n  collectionExecutiveId?: PoliceToCollectionExecutiveIdResolver<TParent>;\n  sucursalId?: PoliceToSucursalIdResolver<TParent>;\n  subTotal?: PoliceToSubTotalResolver<TParent>;\n  trackBitacora?: PoliceToTrackBitacoraResolver<TParent>;\n  accidentRate?: PoliceToAccidentRateResolver<TParent>;\n  scheme?: PoliceToSchemeResolver<TParent>;\n  steps?: PoliceToStepsResolver<TParent>;\n  totalReceipts?: PoliceToTotalReceiptsResolver<TParent>;\n  conceptAnnulment?: PoliceToConceptAnnulmentResolver<TParent>;\n  deductible?: PoliceToDeductibleResolver<TParent>;\n  emisionDate?: PoliceToEmisionDateResolver<TParent>;\n  emisionStatus?: PoliceToEmisionStatusResolver<TParent>;\n  fechaAnuencia?: PoliceToFechaAnuenciaResolver<TParent>;\n  fianzaTypeId?: PoliceToFianzaTypeIdResolver<TParent>;\n  gastoInvestigacion?: PoliceToGastoInvestigacionResolver<TParent>;\n  reasonRehabbilitate?: PoliceToReasonRehabbilitateResolver<TParent>;\n  bussinessLine?: PoliceToBussinessLineResolver<TParent>;\n  contratanteSubGroup?: PoliceToContratanteSubGroupResolver<TParent>;\n  celulaId?: PoliceToCelulaIdResolver<TParent>;\n  groupingLevelId?: PoliceToGroupingLevelIdResolver<TParent>;\n  typePolicy?: PoliceToTypePolicyResolver<TParent>;\n  conductoDePago?: PoliceToConductoDePagoResolver<TParent>;\n  tabulator?: PoliceToTabulatorResolver<TParent>;\n  bonoVariable?: PoliceToBonoVariableResolver<TParent>;\n  hasProgramaDeProveedores?: PoliceToHasProgramaDeProveedoresResolver<TParent>;\n  contractorId?: PoliceToContractorIdResolver<TParent>;\n  programaDeProveedoresContractorId?: PoliceToProgramaDeProveedoresContractorIdResolver<TParent>;\n  chargeDate?: PoliceToChargeDateResolver<TParent>;\n  comisionEarned?: PoliceToComisionEarnedResolver<TParent>;\n  comisionPercentEarned?: PoliceToComisionPercentEarnedResolver<TParent>;\n  rigthEarned?: PoliceToRigthEarnedResolver<TParent>;\n  discountEarned?: PoliceToDiscountEarnedResolver<TParent>;\n  ivaEarned?: PoliceToIvaEarnedResolver<TParent>;\n  pNetaEarned?: PoliceToPNetaEarnedResolver<TParent>;\n  pTotalEarned?: PoliceToPTotalEarnedResolver<TParent>;\n  rPFEarned?: PoliceToRPFEarnedResolver<TParent>;\n  subTotalEarned?: PoliceToSubTotalEarnedResolver<TParent>;\n  dateCancel?: PoliceToDateCancelResolver<TParent>;\n  amountCanceled?: PoliceToAmountCanceledResolver<TParent>;\n  stateCirculation?: PoliceToStateCirculationResolver<TParent>;\n  fechaPagoComision?: PoliceToFechaPagoComisionResolver<TParent>;\n  dateEmitionFactura?: PoliceToDateEmitionFacturaResolver<TParent>;\n  folioFactura?: PoliceToFolioFacturaResolver<TParent>;\n  monthFactura?: PoliceToMonthFacturaResolver<TParent>;\n  exchangeRate?: PoliceToExchangeRateResolver<TParent>;\n  projectAgentProviderBranch?: PoliceToProjectAgentProviderBranchResolver<TParent>;\n  agentKey?: PoliceToAgentKeyResolver<TParent>;\n  sucursal?: PoliceToSucursalResolver<TParent>;\n  parent?: PoliceToParentResolver<TParent>;\n  contractor?: PoliceToContractorResolver<TParent>;\n  polices?: PoliceToPolicesResolver<TParent>;\n  policeAssign?: PoliceToPoliceAssignResolver<TParent>;\n  policePendient?: PoliceToPolicePendientResolver<TParent>;\n  formAccidentDisease?: PoliceToFormAccidentDiseaseResolver<TParent>;\n  formAutomobileDamage?: PoliceToFormAutomobileDamageResolver<TParent>;\n  formDamage?: PoliceToFormDamageResolver<TParent>;\n  formLife?: PoliceToFormLifeResolver<TParent>;\n  personalInformation?: PoliceToPersonalInformationResolver<TParent>;\n  involvedReferrer?: PoliceToInvolvedReferrerResolver<TParent>;\n  oldPolices?: PoliceToOldPolicesResolver<TParent>;\n  newPolices?: PoliceToNewPolicesResolver<TParent>;\n  coverageInPolicies?: PoliceToCoverageInPoliciesResolver<TParent>;\n  endorsements?: PoliceToEndorsementsResolver<TParent>;\n  sinisters?: PoliceToSinistersResolver<TParent>;\n  policeReceipts?: PoliceToPoliceReceiptsResolver<TParent>;\n  policeFiles?: PoliceToPoliceFilesResolver<TParent>;\n  id?: PoliceToIdResolver<TParent>;\n  createdAt?: PoliceToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceToNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToStartValidityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToEndValidityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFormaDePagoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToInternalNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToDocumentTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToAddressIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToAseguradoraIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToClaveIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPackageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToProjectAgentProviderBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFCurrencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToIdentifierResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToRigthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToIVAResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPNetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToComisionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToAdministrationTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToCaratuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToCertificadoIncisoActivoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToCertificateNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToComisionPercentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToHospitalLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToParentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToIsRenewableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToReasonRenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToRenewedStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFechaBajaIncisoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToReasonCancelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToReceiptsByResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToResponsableIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToComisionGivenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToRecAntiquityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToCollectionExecutiveIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToSucursalIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToTrackBitacoraResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToAccidentRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToSchemeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToStepsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToTotalReceiptsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToConceptAnnulmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToEmisionDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToEmisionStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFechaAnuenciaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFianzaTypeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToGastoInvestigacionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToReasonRehabbilitateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToBussinessLineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToContratanteSubGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToCelulaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToGroupingLevelIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToTypePolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToConductoDePagoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToTabulatorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToBonoVariableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToHasProgramaDeProveedoresResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToProgramaDeProveedoresContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToChargeDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToComisionEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToComisionPercentEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToRigthEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToDiscountEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToIvaEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPNetaEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPTotalEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToRPFEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToSubTotalEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToDateCancelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToAmountCanceledResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToStateCirculationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFechaPagoComisionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToDateEmitionFacturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFolioFacturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToMonthFacturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToExchangeRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToAgentKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToSucursalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToParentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPolicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPoliceAssignResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPolicePendientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFormAccidentDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFormAutomobileDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFormDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToFormLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToInvolvedReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToOldPolicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToNewPolicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToCoverageInPoliciesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToEndorsementsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToSinistersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPoliceReceiptsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToPoliceFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISucursalTypeResolver<TParent = any> {\n  name?: SucursalToNameResolver<TParent>;\n  details?: SucursalToDetailsResolver<TParent>;\n  ownerId?: SucursalToOwnerIdResolver<TParent>;\n  projectId?: SucursalToProjectIdResolver<TParent>;\n  police?: SucursalToPoliceResolver<TParent>;\n  contractors?: SucursalToContractorsResolver<TParent>;\n  id?: SucursalToIdResolver<TParent>;\n  createdAt?: SucursalToCreatedAtResolver<TParent>;\n  updatedAt?: SucursalToUpdatedAtResolver<TParent>;\n}\n\nexport interface SucursalToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalToDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalToContractorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Isaam_ContractorTypeResolver<TParent = any> {\n  projectId?: saam_ContractorToProjectIdResolver<TParent>;\n  firstName?: saam_ContractorToFirstNameResolver<TParent>;\n  lastName?: saam_ContractorToLastNameResolver<TParent>;\n  secondLastName?: saam_ContractorToSecondLastNameResolver<TParent>;\n  socialReason?: saam_ContractorToSocialReasonResolver<TParent>;\n  fullName?: saam_ContractorToFullNameResolver<TParent>;\n  gender?: saam_ContractorToGenderResolver<TParent>;\n  birthDate?: saam_ContractorToBirthDateResolver<TParent>;\n  phoneNumber?: saam_ContractorToPhoneNumberResolver<TParent>;\n  rFC?: saam_ContractorToRFCResolver<TParent>;\n  description?: saam_ContractorToDescriptionResolver<TParent>;\n  email?: saam_ContractorToEmailResolver<TParent>;\n  active?: saam_ContractorToActiveResolver<TParent>;\n  contractorType?: saam_ContractorToContractorTypeResolver<TParent>;\n  sucursalId?: saam_ContractorToSucursalIdResolver<TParent>;\n  contractorClassificationId?: saam_ContractorToContractorClassificationIdResolver<TParent>;\n  contractorClassification?: saam_ContractorToContractorClassificationResolver<TParent>;\n  contractorGroupId?: saam_ContractorToContractorGroupIdResolver<TParent>;\n  contractorGroup?: saam_ContractorToContractorGroupResolver<TParent>;\n  contractorGroupingLevelId?: saam_ContractorToContractorGroupingLevelIdResolver<TParent>;\n  contractorGroupingLevel?: saam_ContractorToContractorGroupingLevelResolver<TParent>;\n  contractorCelulaId?: saam_ContractorToContractorCelulaIdResolver<TParent>;\n  contractorCelula?: saam_ContractorToContractorCelulaResolver<TParent>;\n  ownerId?: saam_ContractorToOwnerIdResolver<TParent>;\n  memberId?: saam_ContractorToMemberIdResolver<TParent>;\n  responsableId?: saam_ContractorToResponsableIdResolver<TParent>;\n  referrerId?: saam_ContractorToReferrerIdResolver<TParent>;\n  referrer?: saam_ContractorToReferrerResolver<TParent>;\n  sucursal?: saam_ContractorToSucursalResolver<TParent>;\n  contractorProcessDocuments?: saam_ContractorToContractorProcessDocumentsResolver<TParent>;\n  agentProviderContact?: saam_ContractorToAgentProviderContactResolver<TParent>;\n  policeQuotes?: saam_ContractorToPoliceQuotesResolver<TParent>;\n  polices?: saam_ContractorToPolicesResolver<TParent>;\n  id?: saam_ContractorToIdResolver<TParent>;\n  createdAt?: saam_ContractorToCreatedAtResolver<TParent>;\n  updatedAt?: saam_ContractorToUpdatedAtResolver<TParent>;\n}\n\nexport interface saam_ContractorToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToSecondLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToSocialReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToGenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToBirthDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToPhoneNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToRFCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToSucursalIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorClassificationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorClassificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorGroupIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorGroupingLevelIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorGroupingLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorCelulaIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorCelulaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToResponsableIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToReferrerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToSucursalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToContractorProcessDocumentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToAgentProviderContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToPoliceQuotesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToPolicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_ContractorToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorClassificationTypeResolver<TParent = any> {\n  name?: ContractorClassificationToNameResolver<TParent>;\n  description?: ContractorClassificationToDescriptionResolver<TParent>;\n  projectId?: ContractorClassificationToProjectIdResolver<TParent>;\n  ownerId?: ContractorClassificationToOwnerIdResolver<TParent>;\n  contractors?: ContractorClassificationToContractorsResolver<TParent>;\n  id?: ContractorClassificationToIdResolver<TParent>;\n  createdAt?: ContractorClassificationToCreatedAtResolver<TParent>;\n  updatedAt?: ContractorClassificationToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContractorClassificationToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorClassificationToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorClassificationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorClassificationToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorClassificationToContractorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorClassificationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorClassificationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorClassificationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorGroupTypeResolver<TParent = any> {\n  name?: ContractorGroupToNameResolver<TParent>;\n  description?: ContractorGroupToDescriptionResolver<TParent>;\n  ownerId?: ContractorGroupToOwnerIdResolver<TParent>;\n  parentId?: ContractorGroupToParentIdResolver<TParent>;\n  responsableId?: ContractorGroupToResponsableIdResolver<TParent>;\n  groupType?: ContractorGroupToGroupTypeResolver<TParent>;\n  parent?: ContractorGroupToParentResolver<TParent>;\n  contractorGroups?: ContractorGroupToContractorGroupsResolver<TParent>;\n  agentProviderContact?: ContractorGroupToAgentProviderContactResolver<TParent>;\n  id?: ContractorGroupToIdResolver<TParent>;\n  createdAt?: ContractorGroupToCreatedAtResolver<TParent>;\n  updatedAt?: ContractorGroupToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContractorGroupToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToParentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToResponsableIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToGroupTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToParentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToContractorGroupsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToAgentProviderContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentProviderContactTypeResolver<TParent = any> {\n  projectAgentProviderBranchId?: AgentProviderContactToProjectAgentProviderBranchIdResolver<TParent>;\n  name?: AgentProviderContactToNameResolver<TParent>;\n  email?: AgentProviderContactToEmailResolver<TParent>;\n  phone?: AgentProviderContactToPhoneResolver<TParent>;\n  department?: AgentProviderContactToDepartmentResolver<TParent>;\n  sinisterAccidentId?: AgentProviderContactToSinisterAccidentIdResolver<TParent>;\n  ownerId?: AgentProviderContactToOwnerIdResolver<TParent>;\n  contractorGroupId?: AgentProviderContactToContractorGroupIdResolver<TParent>;\n  contractorGroup?: AgentProviderContactToContractorGroupResolver<TParent>;\n  projectAgentProviderBranch?: AgentProviderContactToProjectAgentProviderBranchResolver<TParent>;\n  contractorId?: AgentProviderContactToContractorIdResolver<TParent>;\n  contractor?: AgentProviderContactToContractorResolver<TParent>;\n  projectAgentProviderId?: AgentProviderContactToProjectAgentProviderIdResolver<TParent>;\n  projectAgentProvider?: AgentProviderContactToProjectAgentProviderResolver<TParent>;\n  sinisterAccident?: AgentProviderContactToSinisterAccidentResolver<TParent>;\n  id?: AgentProviderContactToIdResolver<TParent>;\n  createdAt?: AgentProviderContactToCreatedAtResolver<TParent>;\n  updatedAt?: AgentProviderContactToUpdatedAtResolver<TParent>;\n}\n\nexport interface AgentProviderContactToProjectAgentProviderBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToDepartmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToSinisterAccidentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToContractorGroupIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToContractorGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToProjectAgentProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToSinisterAccidentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterAccidentTypeResolver<TParent = any> {\n  relationShip?: SinisterAccidentToRelationShipResolver<TParent>;\n  kindSinister?: SinisterAccidentToKindSinisterResolver<TParent>;\n  sinisterReason?: SinisterAccidentToSinisterReasonResolver<TParent>;\n  sinisterComplement?: SinisterAccidentToSinisterComplementResolver<TParent>;\n  sinisterType?: SinisterAccidentToSinisterTypeResolver<TParent>;\n  paymentType?: SinisterAccidentToPaymentTypeResolver<TParent>;\n  totalPayment?: SinisterAccidentToTotalPaymentResolver<TParent>;\n  totalProcedent?: SinisterAccidentToTotalProcedentResolver<TParent>;\n  totalCoaseguro?: SinisterAccidentToTotalCoaseguroResolver<TParent>;\n  totalDeductible?: SinisterAccidentToTotalDeductibleResolver<TParent>;\n  totalFinal?: SinisterAccidentToTotalFinalResolver<TParent>;\n  initial?: SinisterAccidentToInitialResolver<TParent>;\n  receiptStatus?: SinisterAccidentToReceiptStatusResolver<TParent>;\n  dependientId?: SinisterAccidentToDependientIdResolver<TParent>;\n  sinisterAilingId?: SinisterAccidentToSinisterAilingIdResolver<TParent>;\n  sinisterId?: SinisterAccidentToSinisterIdResolver<TParent>;\n  titularId?: SinisterAccidentToTitularIdResolver<TParent>;\n  ailment?: SinisterAccidentToAilmentResolver<TParent>;\n  anesthesiologist?: SinisterAccidentToAnesthesiologistResolver<TParent>;\n  helper?: SinisterAccidentToHelperResolver<TParent>;\n  surgeon?: SinisterAccidentToSurgeonResolver<TParent>;\n  coasHonorarios?: SinisterAccidentToCoasHonorariosResolver<TParent>;\n  coasHospital?: SinisterAccidentToCoasHospitalResolver<TParent>;\n  dedHonorarios?: SinisterAccidentToDedHonorariosResolver<TParent>;\n  dedHospital?: SinisterAccidentToDedHospitalResolver<TParent>;\n  montoHonorarios?: SinisterAccidentToMontoHonorariosResolver<TParent>;\n  montoHospital?: SinisterAccidentToMontoHospitalResolver<TParent>;\n  others?: SinisterAccidentToOthersResolver<TParent>;\n  surgeryDate?: SinisterAccidentToSurgeryDateResolver<TParent>;\n  hospital?: SinisterAccidentToHospitalResolver<TParent>;\n  affectedFullName?: SinisterAccidentToAffectedFullNameResolver<TParent>;\n  complementConsecutiveNumber?: SinisterAccidentToComplementConsecutiveNumberResolver<TParent>;\n  initialAccidentId?: SinisterAccidentToInitialAccidentIdResolver<TParent>;\n  projectId?: SinisterAccidentToProjectIdResolver<TParent>;\n  sinister?: SinisterAccidentToSinisterResolver<TParent>;\n  personalInformation?: SinisterAccidentToPersonalInformationResolver<TParent>;\n  dependient?: SinisterAccidentToDependientResolver<TParent>;\n  initialAccident?: SinisterAccidentToInitialAccidentResolver<TParent>;\n  sinisterAiling?: SinisterAccidentToSinisterAilingResolver<TParent>;\n  sinisterAccidents?: SinisterAccidentToSinisterAccidentsResolver<TParent>;\n  agentProviderContacts?: SinisterAccidentToAgentProviderContactsResolver<TParent>;\n  id?: SinisterAccidentToIdResolver<TParent>;\n  createdAt?: SinisterAccidentToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterAccidentToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterAccidentToRelationShipResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToKindSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSinisterReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSinisterComplementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSinisterTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToPaymentTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToTotalPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToTotalProcedentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToTotalCoaseguroResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToTotalDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToTotalFinalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToInitialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToReceiptStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToDependientIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSinisterAilingIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSinisterIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToTitularIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToAilmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToAnesthesiologistResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToHelperResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSurgeonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToCoasHonorariosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToCoasHospitalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToDedHonorariosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToDedHospitalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToMontoHonorariosResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToMontoHospitalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToOthersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSurgeryDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToHospitalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToAffectedFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToComplementConsecutiveNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToInitialAccidentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToPersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToDependientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToInitialAccidentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSinisterAilingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToSinisterAccidentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToAgentProviderContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterTypeResolver<TParent = any> {\n  companyFolio?: SinisterToCompanyFolioResolver<TParent>;\n  internFolio?: SinisterToInternFolioResolver<TParent>;\n  status?: SinisterToStatusResolver<TParent>;\n  promiseDate?: SinisterToPromiseDateResolver<TParent>;\n  affectedItem?: SinisterToAffectedItemResolver<TParent>;\n  sinisterNumber?: SinisterToSinisterNumberResolver<TParent>;\n  sinisterDate?: SinisterToSinisterDateResolver<TParent>;\n  typeSinisterGeneral?: SinisterToTypeSinisterGeneralResolver<TParent>;\n  reason?: SinisterToReasonResolver<TParent>;\n  observations?: SinisterToObservationsResolver<TParent>;\n  ownerId?: SinisterToOwnerIdResolver<TParent>;\n  policeId?: SinisterToPoliceIdResolver<TParent>;\n  ingressDate?: SinisterToIngressDateResolver<TParent>;\n  affectedAux?: SinisterToAffectedAuxResolver<TParent>;\n  compromiseDate?: SinisterToCompromiseDateResolver<TParent>;\n  affectedAuxRelationShip?: SinisterToAffectedAuxRelationShipResolver<TParent>;\n  insurerZipCodeSepomexId?: SinisterToInsurerZipCodeSepomexIdResolver<TParent>;\n  date?: SinisterToDateResolver<TParent>;\n  projectId?: SinisterToProjectIdResolver<TParent>;\n  terminationDate?: SinisterToTerminationDateResolver<TParent>;\n  fileLoadedDate?: SinisterToFileLoadedDateResolver<TParent>;\n  police?: SinisterToPoliceResolver<TParent>;\n  sinisterCars?: SinisterToSinisterCarsResolver<TParent>;\n  sinisterDamages?: SinisterToSinisterDamagesResolver<TParent>;\n  sinisterFacturas?: SinisterToSinisterFacturasResolver<TParent>;\n  sinisterLifes?: SinisterToSinisterLifesResolver<TParent>;\n  sinisterAccidents?: SinisterToSinisterAccidentsResolver<TParent>;\n  insurerZipCodeSepomex?: SinisterToInsurerZipCodeSepomexResolver<TParent>;\n  id?: SinisterToIdResolver<TParent>;\n  createdAt?: SinisterToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterToCompanyFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToInternFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToPromiseDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToAffectedItemResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToSinisterNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToSinisterDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToTypeSinisterGeneralResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToIngressDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToAffectedAuxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToCompromiseDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToAffectedAuxRelationShipResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToInsurerZipCodeSepomexIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToTerminationDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToFileLoadedDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToSinisterCarsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToSinisterDamagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToSinisterFacturasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToSinisterLifesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToSinisterAccidentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToInsurerZipCodeSepomexResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterCarTypeResolver<TParent = any> {\n  typeSinister?: SinisterCarToTypeSinisterResolver<TParent>;\n  explication?: SinisterCarToExplicationResolver<TParent>;\n  third?: SinisterCarToThirdResolver<TParent>;\n  imdemnization?: SinisterCarToImdemnizationResolver<TParent>;\n  sinisterId?: SinisterCarToSinisterIdResolver<TParent>;\n  driver?: SinisterCarToDriverResolver<TParent>;\n  coaseguro?: SinisterCarToCoaseguroResolver<TParent>;\n  deductible?: SinisterCarToDeductibleResolver<TParent>;\n  projectId?: SinisterCarToProjectIdResolver<TParent>;\n  firstSubTypeSinister?: SinisterCarToFirstSubTypeSinisterResolver<TParent>;\n  secondSubTypeSinister?: SinisterCarToSecondSubTypeSinisterResolver<TParent>;\n  sinister?: SinisterCarToSinisterResolver<TParent>;\n  sinisterCarContacts?: SinisterCarToSinisterCarContactsResolver<TParent>;\n  id?: SinisterCarToIdResolver<TParent>;\n  createdAt?: SinisterCarToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterCarToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterCarToTypeSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToExplicationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToThirdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToImdemnizationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToSinisterIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToDriverResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToCoaseguroResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToFirstSubTypeSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToSecondSubTypeSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToSinisterCarContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterCarContactTypeResolver<TParent = any> {\n  firstName?: SinisterCarContactToFirstNameResolver<TParent>;\n  lastName?: SinisterCarContactToLastNameResolver<TParent>;\n  secondLastName?: SinisterCarContactToSecondLastNameResolver<TParent>;\n  phone?: SinisterCarContactToPhoneResolver<TParent>;\n  email?: SinisterCarContactToEmailResolver<TParent>;\n  references?: SinisterCarContactToReferencesResolver<TParent>;\n  sinisterCarId?: SinisterCarContactToSinisterCarIdResolver<TParent>;\n  projectId?: SinisterCarContactToProjectIdResolver<TParent>;\n  sinisterCar?: SinisterCarContactToSinisterCarResolver<TParent>;\n  id?: SinisterCarContactToIdResolver<TParent>;\n  createdAt?: SinisterCarContactToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterCarContactToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterCarContactToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToSecondLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToReferencesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToSinisterCarIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToSinisterCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterDamageTypeResolver<TParent = any> {\n  insuredProperty?: SinisterDamageToInsuredPropertyResolver<TParent>;\n  lossEstimate?: SinisterDamageToLossEstimateResolver<TParent>;\n  claimCause?: SinisterDamageToClaimCauseResolver<TParent>;\n  affectedCoverage?: SinisterDamageToAffectedCoverageResolver<TParent>;\n  indemnization?: SinisterDamageToIndemnizationResolver<TParent>;\n  totalClaim?: SinisterDamageToTotalClaimResolver<TParent>;\n  sinisterId?: SinisterDamageToSinisterIdResolver<TParent>;\n  currency?: SinisterDamageToCurrencyResolver<TParent>;\n  exchangeRate?: SinisterDamageToExchangeRateResolver<TParent>;\n  totalCoaseguro?: SinisterDamageToTotalCoaseguroResolver<TParent>;\n  totalDeductible?: SinisterDamageToTotalDeductibleResolver<TParent>;\n  projectId?: SinisterDamageToProjectIdResolver<TParent>;\n  sinister?: SinisterDamageToSinisterResolver<TParent>;\n  sinisterDamageContacts?: SinisterDamageToSinisterDamageContactsResolver<TParent>;\n  id?: SinisterDamageToIdResolver<TParent>;\n  createdAt?: SinisterDamageToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterDamageToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterDamageToInsuredPropertyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToLossEstimateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToClaimCauseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToAffectedCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToIndemnizationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToTotalClaimResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToSinisterIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToCurrencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToExchangeRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToTotalCoaseguroResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToTotalDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToSinisterDamageContactsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterDamageContactTypeResolver<TParent = any> {\n  firstName?: SinisterDamageContactToFirstNameResolver<TParent>;\n  lastName?: SinisterDamageContactToLastNameResolver<TParent>;\n  secondLastName?: SinisterDamageContactToSecondLastNameResolver<TParent>;\n  phone?: SinisterDamageContactToPhoneResolver<TParent>;\n  email?: SinisterDamageContactToEmailResolver<TParent>;\n  references?: SinisterDamageContactToReferencesResolver<TParent>;\n  sinisterDamageId?: SinisterDamageContactToSinisterDamageIdResolver<TParent>;\n  projectId?: SinisterDamageContactToProjectIdResolver<TParent>;\n  sinisterDamage?: SinisterDamageContactToSinisterDamageResolver<TParent>;\n  id?: SinisterDamageContactToIdResolver<TParent>;\n  createdAt?: SinisterDamageContactToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterDamageContactToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterDamageContactToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToSecondLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToReferencesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToSinisterDamageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToSinisterDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterFacturaTypeResolver<TParent = any> {\n  facturaNumber?: SinisterFacturaToFacturaNumberResolver<TParent>;\n  provider?: SinisterFacturaToProviderResolver<TParent>;\n  facturaDate?: SinisterFacturaToFacturaDateResolver<TParent>;\n  import?: SinisterFacturaToImportResolver<TParent>;\n  iVA?: SinisterFacturaToIVAResolver<TParent>;\n  total?: SinisterFacturaToTotalResolver<TParent>;\n  procedent?: SinisterFacturaToProcedentResolver<TParent>;\n  observations?: SinisterFacturaToObservationsResolver<TParent>;\n  sinisterId?: SinisterFacturaToSinisterIdResolver<TParent>;\n  concept?: SinisterFacturaToConceptResolver<TParent>;\n  serie?: SinisterFacturaToSerieResolver<TParent>;\n  projectId?: SinisterFacturaToProjectIdResolver<TParent>;\n  sinister?: SinisterFacturaToSinisterResolver<TParent>;\n  id?: SinisterFacturaToIdResolver<TParent>;\n  createdAt?: SinisterFacturaToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterFacturaToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterFacturaToFacturaNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToFacturaDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToImportResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToIVAResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToProcedentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToSinisterIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToConceptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToSerieResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterLifeTypeResolver<TParent = any> {\n  sinisterReason?: SinisterLifeToSinisterReasonResolver<TParent>;\n  paymentType?: SinisterLifeToPaymentTypeResolver<TParent>;\n  sinisterId?: SinisterLifeToSinisterIdResolver<TParent>;\n  affectedName?: SinisterLifeToAffectedNameResolver<TParent>;\n  relationAffected?: SinisterLifeToRelationAffectedResolver<TParent>;\n  projectId?: SinisterLifeToProjectIdResolver<TParent>;\n  sinister?: SinisterLifeToSinisterResolver<TParent>;\n  sinisterLifes?: SinisterLifeToSinisterLifesResolver<TParent>;\n  id?: SinisterLifeToIdResolver<TParent>;\n  createdAt?: SinisterLifeToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterLifeToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterLifeToSinisterReasonResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToPaymentTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToSinisterIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToAffectedNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToRelationAffectedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToSinisterLifesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerZipCodeSepomexTypeResolver<TParent = any> {\n  zipCode?: InsurerZipCodeSepomexToZipCodeResolver<TParent>;\n  colony?: InsurerZipCodeSepomexToColonyResolver<TParent>;\n  city?: InsurerZipCodeSepomexToCityResolver<TParent>;\n  state?: InsurerZipCodeSepomexToStateResolver<TParent>;\n  code?: InsurerZipCodeSepomexToCodeResolver<TParent>;\n  cityId?: InsurerZipCodeSepomexToCityIdResolver<TParent>;\n  sinisters?: InsurerZipCodeSepomexToSinistersResolver<TParent>;\n  id?: InsurerZipCodeSepomexToIdResolver<TParent>;\n  createdAt?: InsurerZipCodeSepomexToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerZipCodeSepomexToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerZipCodeSepomexToZipCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexToColonyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexToCityIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexToSinistersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPersonalInformationTypeResolver<TParent = any> {\n  firstName?: PersonalInformationToFirstNameResolver<TParent>;\n  lastName?: PersonalInformationToLastNameResolver<TParent>;\n  secondLastName?: PersonalInformationToSecondLastNameResolver<TParent>;\n  birthDate?: PersonalInformationToBirthDateResolver<TParent>;\n  sex?: PersonalInformationToSexResolver<TParent>;\n  ownerId?: PersonalInformationToOwnerIdResolver<TParent>;\n  fullName?: PersonalInformationToFullNameResolver<TParent>;\n  email?: PersonalInformationToEmailResolver<TParent>;\n  salary?: PersonalInformationToSalaryResolver<TParent>;\n  sumAssured?: PersonalInformationToSumAssuredResolver<TParent>;\n  memberId?: PersonalInformationToMemberIdResolver<TParent>;\n  antiquity?: PersonalInformationToAntiquityResolver<TParent>;\n  policeId?: PersonalInformationToPoliceIdResolver<TParent>;\n  policyType?: PersonalInformationToPolicyTypeResolver<TParent>;\n  typeSA?: PersonalInformationToTypeSAResolver<TParent>;\n  certificate?: PersonalInformationToCertificateResolver<TParent>;\n  comision?: PersonalInformationToComisionResolver<TParent>;\n  rigth?: PersonalInformationToRigthResolver<TParent>;\n  iVA?: PersonalInformationToIVAResolver<TParent>;\n  projectId?: PersonalInformationToProjectIdResolver<TParent>;\n  pNeta?: PersonalInformationToPNetaResolver<TParent>;\n  pTotal?: PersonalInformationToPTotalResolver<TParent>;\n  rPF?: PersonalInformationToRPFResolver<TParent>;\n  discount?: PersonalInformationToDiscountResolver<TParent>;\n  gastosInvestigacion?: PersonalInformationToGastosInvestigacionResolver<TParent>;\n  subTotal?: PersonalInformationToSubTotalResolver<TParent>;\n  chargeDate?: PersonalInformationToChargeDateResolver<TParent>;\n  comisionEarned?: PersonalInformationToComisionEarnedResolver<TParent>;\n  comisionPercentEarned?: PersonalInformationToComisionPercentEarnedResolver<TParent>;\n  rigthEarned?: PersonalInformationToRigthEarnedResolver<TParent>;\n  discountEarned?: PersonalInformationToDiscountEarnedResolver<TParent>;\n  dischargeDate?: PersonalInformationToDischargeDateResolver<TParent>;\n  iVAEarned?: PersonalInformationToIVAEarnedResolver<TParent>;\n  pNetaEarned?: PersonalInformationToPNetaEarnedResolver<TParent>;\n  pTotalEarned?: PersonalInformationToPTotalEarnedResolver<TParent>;\n  rPFEarned?: PersonalInformationToRPFEarnedResolver<TParent>;\n  subTotalEarned?: PersonalInformationToSubTotalEarnedResolver<TParent>;\n  endDate?: PersonalInformationToEndDateResolver<TParent>;\n  initDate?: PersonalInformationToInitDateResolver<TParent>;\n  comisionPaymentDate?: PersonalInformationToComisionPaymentDateResolver<TParent>;\n  exchangeRate?: PersonalInformationToExchangeRateResolver<TParent>;\n  maquila?: PersonalInformationToMaquilaResolver<TParent>;\n  bonoDdate?: PersonalInformationToBonoDdateResolver<TParent>;\n  maquilaDate?: PersonalInformationToMaquilaDateResolver<TParent>;\n  facturaYear?: PersonalInformationToFacturaYearResolver<TParent>;\n  formAccidentDisease?: PersonalInformationToFormAccidentDiseaseResolver<TParent>;\n  formAutomobileDamage?: PersonalInformationToFormAutomobileDamageResolver<TParent>;\n  formDamage?: PersonalInformationToFormDamageResolver<TParent>;\n  formLife?: PersonalInformationToFormLifeResolver<TParent>;\n  police?: PersonalInformationToPoliceResolver<TParent>;\n  sinisterAccidents?: PersonalInformationToSinisterAccidentsResolver<TParent>;\n  id?: PersonalInformationToIdResolver<TParent>;\n  createdAt?: PersonalInformationToCreatedAtResolver<TParent>;\n  updatedAt?: PersonalInformationToUpdatedAtResolver<TParent>;\n}\n\nexport interface PersonalInformationToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToSecondLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToBirthDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToSexResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToSalaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToSumAssuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToAntiquityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToPolicyTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToTypeSAResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToComisionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToRigthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToIVAResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToPNetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToPTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToGastosInvestigacionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToChargeDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToComisionEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToComisionPercentEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToRigthEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToDiscountEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToDischargeDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToIVAEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToPNetaEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToPTotalEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToRPFEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToSubTotalEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToEndDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToInitDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToComisionPaymentDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToExchangeRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToMaquilaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToBonoDdateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToMaquilaDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToFacturaYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToFormAccidentDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToFormAutomobileDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToFormDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToFormLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToSinisterAccidentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormAccidentDiseaseTypeResolver<TParent = any> {\n  diseaseType?: FormAccidentDiseaseToDiseaseTypeResolver<TParent>;\n  coinsurance?: FormAccidentDiseaseToCoinsuranceResolver<TParent>;\n  documentType?: FormAccidentDiseaseToDocumentTypeResolver<TParent>;\n  ownerId?: FormAccidentDiseaseToOwnerIdResolver<TParent>;\n  personalId?: FormAccidentDiseaseToPersonalIdResolver<TParent>;\n  policeId?: FormAccidentDiseaseToPoliceIdResolver<TParent>;\n  projectId?: FormAccidentDiseaseToProjectIdResolver<TParent>;\n  personalInformation?: FormAccidentDiseaseToPersonalInformationResolver<TParent>;\n  police?: FormAccidentDiseaseToPoliceResolver<TParent>;\n  relationShips?: FormAccidentDiseaseToRelationShipsResolver<TParent>;\n  id?: FormAccidentDiseaseToIdResolver<TParent>;\n  createdAt?: FormAccidentDiseaseToCreatedAtResolver<TParent>;\n  updatedAt?: FormAccidentDiseaseToUpdatedAtResolver<TParent>;\n}\n\nexport interface FormAccidentDiseaseToDiseaseTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToCoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToDocumentTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToPersonalIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToPersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToRelationShipsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRelationShipTypeResolver<TParent = any> {\n  firstName?: RelationShipToFirstNameResolver<TParent>;\n  lastName?: RelationShipToLastNameResolver<TParent>;\n  secondLastName?: RelationShipToSecondLastNameResolver<TParent>;\n  birthDate?: RelationShipToBirthDateResolver<TParent>;\n  sex?: RelationShipToSexResolver<TParent>;\n  relationship?: RelationShipToRelationshipResolver<TParent>;\n  accidentId?: RelationShipToAccidentIdResolver<TParent>;\n  ownerId?: RelationShipToOwnerIdResolver<TParent>;\n  fullName?: RelationShipToFullNameResolver<TParent>;\n  isActive?: RelationShipToIsActiveResolver<TParent>;\n  endorsementId?: RelationShipToEndorsementIdResolver<TParent>;\n  antiquity?: RelationShipToAntiquityResolver<TParent>;\n  certificate?: RelationShipToCertificateResolver<TParent>;\n  comision?: RelationShipToComisionResolver<TParent>;\n  rigth?: RelationShipToRigthResolver<TParent>;\n  iVA?: RelationShipToIVAResolver<TParent>;\n  projectId?: RelationShipToProjectIdResolver<TParent>;\n  pNeta?: RelationShipToPNetaResolver<TParent>;\n  pTotal?: RelationShipToPTotalResolver<TParent>;\n  rPF?: RelationShipToRPFResolver<TParent>;\n  discount?: RelationShipToDiscountResolver<TParent>;\n  gastosInvestigacion?: RelationShipToGastosInvestigacionResolver<TParent>;\n  subTotal?: RelationShipToSubTotalResolver<TParent>;\n  chargeDate?: RelationShipToChargeDateResolver<TParent>;\n  comisionEarned?: RelationShipToComisionEarnedResolver<TParent>;\n  comisionPercentEarned?: RelationShipToComisionPercentEarnedResolver<TParent>;\n  rigthEarned?: RelationShipToRigthEarnedResolver<TParent>;\n  discountEarned?: RelationShipToDiscountEarnedResolver<TParent>;\n  dischangeDate?: RelationShipToDischangeDateResolver<TParent>;\n  iVAEarned?: RelationShipToIVAEarnedResolver<TParent>;\n  pNetaEarned?: RelationShipToPNetaEarnedResolver<TParent>;\n  pTotalEarned?: RelationShipToPTotalEarnedResolver<TParent>;\n  rPFEarned?: RelationShipToRPFEarnedResolver<TParent>;\n  subTotalEarned?: RelationShipToSubTotalEarnedResolver<TParent>;\n  comisionPaymentDate?: RelationShipToComisionPaymentDateResolver<TParent>;\n  exchangeRate?: RelationShipToExchangeRateResolver<TParent>;\n  maquila?: RelationShipToMaquilaResolver<TParent>;\n  bonoDate?: RelationShipToBonoDateResolver<TParent>;\n  maquilaDate?: RelationShipToMaquilaDateResolver<TParent>;\n  facturaYear?: RelationShipToFacturaYearResolver<TParent>;\n  formAccidentDisease?: RelationShipToFormAccidentDiseaseResolver<TParent>;\n  endorsement?: RelationShipToEndorsementResolver<TParent>;\n  endorsementCerts?: RelationShipToEndorsementCertsResolver<TParent>;\n  sinisterAccidents?: RelationShipToSinisterAccidentsResolver<TParent>;\n  id?: RelationShipToIdResolver<TParent>;\n  createdAt?: RelationShipToCreatedAtResolver<TParent>;\n  updatedAt?: RelationShipToUpdatedAtResolver<TParent>;\n}\n\nexport interface RelationShipToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToSecondLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToBirthDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToSexResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToRelationshipResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToAccidentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToEndorsementIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToAntiquityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToComisionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToRigthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToIVAResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToPNetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToPTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToGastosInvestigacionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToChargeDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToComisionEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToComisionPercentEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToRigthEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToDiscountEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToDischangeDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToIVAEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToPNetaEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToPTotalEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToRPFEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToSubTotalEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToComisionPaymentDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToExchangeRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToMaquilaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToBonoDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToMaquilaDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToFacturaYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToFormAccidentDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToEndorsementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToEndorsementCertsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToSinisterAccidentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEndorsementTypeResolver<TParent = any> {\n  type?: EndorsementToTypeResolver<TParent>;\n  status?: EndorsementToStatusResolver<TParent>;\n  initDate?: EndorsementToInitDateResolver<TParent>;\n  endDate?: EndorsementToEndDateResolver<TParent>;\n  numberEndorsement?: EndorsementToNumberEndorsementResolver<TParent>;\n  internalNumber?: EndorsementToInternalNumberResolver<TParent>;\n  concept?: EndorsementToConceptResolver<TParent>;\n  otherDesc?: EndorsementToOtherDescResolver<TParent>;\n  original?: EndorsementToOriginalResolver<TParent>;\n  change?: EndorsementToChangeResolver<TParent>;\n  observations?: EndorsementToObservationsResolver<TParent>;\n  pNeta?: EndorsementToPNetaResolver<TParent>;\n  rPF?: EndorsementToRPFResolver<TParent>;\n  rigth?: EndorsementToRigthResolver<TParent>;\n  iVA?: EndorsementToIVAResolver<TParent>;\n  pTotal?: EndorsementToPTotalResolver<TParent>;\n  comision?: EndorsementToComisionResolver<TParent>;\n  ownerId?: EndorsementToOwnerIdResolver<TParent>;\n  policeId?: EndorsementToPoliceIdResolver<TParent>;\n  comisionPercent?: EndorsementToComisionPercentResolver<TParent>;\n  anuency?: EndorsementToAnuencyResolver<TParent>;\n  projectId?: EndorsementToProjectIdResolver<TParent>;\n  discount?: EndorsementToDiscountResolver<TParent>;\n  researchCost?: EndorsementToResearchCostResolver<TParent>;\n  comisionPercentEarned?: EndorsementToComisionPercentEarnedResolver<TParent>;\n  discoutnEarned?: EndorsementToDiscoutnEarnedResolver<TParent>;\n  iVaEarned?: EndorsementToIVaEarnedResolver<TParent>;\n  pNETAEarned?: EndorsementToPNETAEarnedResolver<TParent>;\n  pTotalEarned?: EndorsementToPTotalEarnedResolver<TParent>;\n  rPFEarned?: EndorsementToRPFEarnedResolver<TParent>;\n  subTotalEarned?: EndorsementToSubTotalEarnedResolver<TParent>;\n  insuranceFolio?: EndorsementToInsuranceFolioResolver<TParent>;\n  comitionPatmentDate?: EndorsementToComitionPatmentDateResolver<TParent>;\n  exchangeRate?: EndorsementToExchangeRateResolver<TParent>;\n  maquila?: EndorsementToMaquilaResolver<TParent>;\n  bonoDate?: EndorsementToBonoDateResolver<TParent>;\n  variableBono?: EndorsementToVariableBonoResolver<TParent>;\n  emisionFacturaDate?: EndorsementToEmisionFacturaDateResolver<TParent>;\n  maquilaDate?: EndorsementToMaquilaDateResolver<TParent>;\n  folioFactura?: EndorsementToFolioFacturaResolver<TParent>;\n  monthFactura?: EndorsementToMonthFacturaResolver<TParent>;\n  fechaEntrega?: EndorsementToFechaEntregaResolver<TParent>;\n  police?: EndorsementToPoliceResolver<TParent>;\n  beneficiaries?: EndorsementToBeneficiariesResolver<TParent>;\n  relationShips?: EndorsementToRelationShipsResolver<TParent>;\n  endorsementCerts?: EndorsementToEndorsementCertsResolver<TParent>;\n  policeReceipts?: EndorsementToPoliceReceiptsResolver<TParent>;\n  id?: EndorsementToIdResolver<TParent>;\n  createdAt?: EndorsementToCreatedAtResolver<TParent>;\n  updatedAt?: EndorsementToUpdatedAtResolver<TParent>;\n}\n\nexport interface EndorsementToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToInitDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToEndDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToNumberEndorsementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToInternalNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToConceptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToOtherDescResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToOriginalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToChangeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToPNetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToRigthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToIVAResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToPTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToComisionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToComisionPercentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToAnuencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToDiscountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToResearchCostResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToComisionPercentEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToDiscoutnEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToIVaEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToPNETAEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToPTotalEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToRPFEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToSubTotalEarnedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToInsuranceFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToComitionPatmentDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToExchangeRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToMaquilaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToBonoDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToVariableBonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToEmisionFacturaDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToMaquilaDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToFolioFacturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToMonthFacturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToFechaEntregaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToBeneficiariesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToRelationShipsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToEndorsementCertsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToPoliceReceiptsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBeneficiarieTypeResolver<TParent = any> {\n  firstName?: BeneficiarieToFirstNameResolver<TParent>;\n  lastName?: BeneficiarieToLastNameResolver<TParent>;\n  secondLastName?: BeneficiarieToSecondLastNameResolver<TParent>;\n  birthDate?: BeneficiarieToBirthDateResolver<TParent>;\n  sex?: BeneficiarieToSexResolver<TParent>;\n  percentage?: BeneficiarieToPercentageResolver<TParent>;\n  optionalRelation?: BeneficiarieToOptionalRelationResolver<TParent>;\n  lifeId?: BeneficiarieToLifeIdResolver<TParent>;\n  ownerId?: BeneficiarieToOwnerIdResolver<TParent>;\n  fullName?: BeneficiarieToFullNameResolver<TParent>;\n  iSR?: BeneficiarieToISRResolver<TParent>;\n  procedente?: BeneficiarieToProcedenteResolver<TParent>;\n  clause?: BeneficiarieToClauseResolver<TParent>;\n  jName?: BeneficiarieToJNameResolver<TParent>;\n  rFC?: BeneficiarieToRFCResolver<TParent>;\n  active?: BeneficiarieToActiveResolver<TParent>;\n  endorsementId?: BeneficiarieToEndorsementIdResolver<TParent>;\n  antiquity?: BeneficiarieToAntiquityResolver<TParent>;\n  projectId?: BeneficiarieToProjectIdResolver<TParent>;\n  chargeDate?: BeneficiarieToChargeDateResolver<TParent>;\n  dishargeDate?: BeneficiarieToDishargeDateResolver<TParent>;\n  formLife?: BeneficiarieToFormLifeResolver<TParent>;\n  endorsement?: BeneficiarieToEndorsementResolver<TParent>;\n  endorsementCerts?: BeneficiarieToEndorsementCertsResolver<TParent>;\n  id?: BeneficiarieToIdResolver<TParent>;\n  createdAt?: BeneficiarieToCreatedAtResolver<TParent>;\n  updatedAt?: BeneficiarieToUpdatedAtResolver<TParent>;\n}\n\nexport interface BeneficiarieToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToSecondLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToBirthDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToSexResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToPercentageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToOptionalRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToLifeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToFullNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToISRResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToProcedenteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToClauseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToJNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToRFCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToEndorsementIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToAntiquityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToChargeDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToDishargeDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToFormLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToEndorsementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToEndorsementCertsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormLifeTypeResolver<TParent = any> {\n  smoker?: FormLifeToSmokerResolver<TParent>;\n  documentType?: FormLifeToDocumentTypeResolver<TParent>;\n  ownerId?: FormLifeToOwnerIdResolver<TParent>;\n  personalId?: FormLifeToPersonalIdResolver<TParent>;\n  policeId?: FormLifeToPoliceIdResolver<TParent>;\n  projectId?: FormLifeToProjectIdResolver<TParent>;\n  beneficiarie?: FormLifeToBeneficiarieResolver<TParent>;\n  personalInformation?: FormLifeToPersonalInformationResolver<TParent>;\n  police?: FormLifeToPoliceResolver<TParent>;\n  id?: FormLifeToIdResolver<TParent>;\n  createdAt?: FormLifeToCreatedAtResolver<TParent>;\n  updatedAt?: FormLifeToUpdatedAtResolver<TParent>;\n}\n\nexport interface FormLifeToSmokerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToDocumentTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToPersonalIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToBeneficiarieResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToPersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEndorsementCertTypeResolver<TParent = any> {\n  proceed?: EndorsementCertToProceedResolver<TParent>;\n  certificate?: EndorsementCertToCertificateResolver<TParent>;\n  endorsementId?: EndorsementCertToEndorsementIdResolver<TParent>;\n  projectId?: EndorsementCertToProjectIdResolver<TParent>;\n  beneficiarieId?: EndorsementCertToBeneficiarieIdResolver<TParent>;\n  relationShipId?: EndorsementCertToRelationShipIdResolver<TParent>;\n  endorsement?: EndorsementCertToEndorsementResolver<TParent>;\n  beneficiarie?: EndorsementCertToBeneficiarieResolver<TParent>;\n  relationShip?: EndorsementCertToRelationShipResolver<TParent>;\n  id?: EndorsementCertToIdResolver<TParent>;\n  createdAt?: EndorsementCertToCreatedAtResolver<TParent>;\n  updatedAt?: EndorsementCertToUpdatedAtResolver<TParent>;\n}\n\nexport interface EndorsementCertToProceedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToEndorsementIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToBeneficiarieIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToRelationShipIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToEndorsementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToBeneficiarieResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToRelationShipResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptTypeResolver<TParent = any> {\n  number?: PoliceReceiptToNumberResolver<TParent>;\n  primaNeta?: PoliceReceiptToPrimaNetaResolver<TParent>;\n  rPF?: PoliceReceiptToRPFResolver<TParent>;\n  right?: PoliceReceiptToRightResolver<TParent>;\n  iVA?: PoliceReceiptToIVAResolver<TParent>;\n  subTotal?: PoliceReceiptToSubTotalResolver<TParent>;\n  primaTotal?: PoliceReceiptToPrimaTotalResolver<TParent>;\n  status?: PoliceReceiptToStatusResolver<TParent>;\n  startDate?: PoliceReceiptToStartDateResolver<TParent>;\n  endDate?: PoliceReceiptToEndDateResolver<TParent>;\n  description?: PoliceReceiptToDescriptionResolver<TParent>;\n  folio?: PoliceReceiptToFolioResolver<TParent>;\n  type?: PoliceReceiptToTypeResolver<TParent>;\n  payForm?: PoliceReceiptToPayFormResolver<TParent>;\n  paymentDocument?: PoliceReceiptToPaymentDocumentResolver<TParent>;\n  isCopy?: PoliceReceiptToIsCopyResolver<TParent>;\n  isActive?: PoliceReceiptToIsActiveResolver<TParent>;\n  bank?: PoliceReceiptToBankResolver<TParent>;\n  ownerId?: PoliceReceiptToOwnerIdResolver<TParent>;\n  policeId?: PoliceReceiptToPoliceIdResolver<TParent>;\n  comision?: PoliceReceiptToComisionResolver<TParent>;\n  validityDate?: PoliceReceiptToValidityDateResolver<TParent>;\n  reconciledComision?: PoliceReceiptToReconciledComisionResolver<TParent>;\n  reconciledDate?: PoliceReceiptToReconciledDateResolver<TParent>;\n  reconciledObservation?: PoliceReceiptToReconciledObservationResolver<TParent>;\n  settlementFolio?: PoliceReceiptToSettlementFolioResolver<TParent>;\n  reconciledFolio?: PoliceReceiptToReconciledFolioResolver<TParent>;\n  settlementDate?: PoliceReceiptToSettlementDateResolver<TParent>;\n  reconcilationAccountId?: PoliceReceiptToReconcilationAccountIdResolver<TParent>;\n  paymentDate?: PoliceReceiptToPaymentDateResolver<TParent>;\n  endorsementId?: PoliceReceiptToEndorsementIdResolver<TParent>;\n  delivered?: PoliceReceiptToDeliveredResolver<TParent>;\n  paymentFolio?: PoliceReceiptToPaymentFolioResolver<TParent>;\n  settlementBank?: PoliceReceiptToSettlementBankResolver<TParent>;\n  settlementCurrRate?: PoliceReceiptToSettlementCurrRateResolver<TParent>;\n  settlementDoc?: PoliceReceiptToSettlementDocResolver<TParent>;\n  settlementForm?: PoliceReceiptToSettlementFormResolver<TParent>;\n  excedent?: PoliceReceiptToExcedentResolver<TParent>;\n  agentProviderBonoId?: PoliceReceiptToAgentProviderBonoIdResolver<TParent>;\n  changeReferrerComision?: PoliceReceiptToChangeReferrerComisionResolver<TParent>;\n  referrerComosion?: PoliceReceiptToReferrerComosionResolver<TParent>;\n  binnacleTrack?: PoliceReceiptToBinnacleTrackResolver<TParent>;\n  emailTrack?: PoliceReceiptToEmailTrackResolver<TParent>;\n  phoneTrack?: PoliceReceiptToPhoneTrackResolver<TParent>;\n  referrerClosedNew?: PoliceReceiptToReferrerClosedNewResolver<TParent>;\n  memberPaymentId?: PoliceReceiptToMemberPaymentIdResolver<TParent>;\n  paymentPromise?: PoliceReceiptToPaymentPromiseResolver<TParent>;\n  researchCost?: PoliceReceiptToResearchCostResolver<TParent>;\n  projectId?: PoliceReceiptToProjectIdResolver<TParent>;\n  conductPayment?: PoliceReceiptToConductPaymentResolver<TParent>;\n  exchangeRate?: PoliceReceiptToExchangeRateResolver<TParent>;\n  manualSerie?: PoliceReceiptToManualSerieResolver<TParent>;\n  settlementMethod?: PoliceReceiptToSettlementMethodResolver<TParent>;\n  memberSettlementId?: PoliceReceiptToMemberSettlementIdResolver<TParent>;\n  police?: PoliceReceiptToPoliceResolver<TParent>;\n  endorsement?: PoliceReceiptToEndorsementResolver<TParent>;\n  policeReceiptAccount?: PoliceReceiptToPoliceReceiptAccountResolver<TParent>;\n  agentProviderbono?: PoliceReceiptToAgentProviderbonoResolver<TParent>;\n  policeReceiptAccountStates?: PoliceReceiptToPoliceReceiptAccountStatesResolver<TParent>;\n  policeReceiptPayments?: PoliceReceiptToPoliceReceiptPaymentsResolver<TParent>;\n  id?: PoliceReceiptToIdResolver<TParent>;\n  createdAt?: PoliceReceiptToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceReceiptToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceReceiptToNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPrimaNetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToRightResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToIVAResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToSubTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPrimaTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToStartDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToEndDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPayFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPaymentDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToIsCopyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToIsActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToBankResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToComisionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToValidityDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToReconciledComisionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToReconciledDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToReconciledObservationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToSettlementFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToReconciledFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToSettlementDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToReconcilationAccountIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPaymentDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToEndorsementIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToDeliveredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPaymentFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToSettlementBankResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToSettlementCurrRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToSettlementDocResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToSettlementFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToExcedentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToAgentProviderBonoIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToChangeReferrerComisionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToReferrerComosionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToBinnacleTrackResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToEmailTrackResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPhoneTrackResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToReferrerClosedNewResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToMemberPaymentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPaymentPromiseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToResearchCostResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToConductPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToExchangeRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToManualSerieResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToSettlementMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToMemberSettlementIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToEndorsementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPoliceReceiptAccountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToAgentProviderbonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPoliceReceiptAccountStatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToPoliceReceiptPaymentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptAccountTypeResolver<TParent = any> {\n  name?: PoliceReceiptAccountToNameResolver<TParent>;\n  account?: PoliceReceiptAccountToAccountResolver<TParent>;\n  observations?: PoliceReceiptAccountToObservationsResolver<TParent>;\n  bank?: PoliceReceiptAccountToBankResolver<TParent>;\n  ownerId?: PoliceReceiptAccountToOwnerIdResolver<TParent>;\n  projectId?: PoliceReceiptAccountToProjectIdResolver<TParent>;\n  policeReceiptAccountStates?: PoliceReceiptAccountToPoliceReceiptAccountStatesResolver<TParent>;\n  policeReceipts?: PoliceReceiptAccountToPoliceReceiptsResolver<TParent>;\n  id?: PoliceReceiptAccountToIdResolver<TParent>;\n  createdAt?: PoliceReceiptAccountToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceReceiptAccountToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceReceiptAccountToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToAccountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToBankResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToPoliceReceiptAccountStatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToPoliceReceiptsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptAccountStateTypeResolver<TParent = any> {\n  policeReceiptAccountId?: PoliceReceiptAccountStateToPoliceReceiptAccountIdResolver<TParent>;\n  policeReceiptId?: PoliceReceiptAccountStateToPoliceReceiptIdResolver<TParent>;\n  policeReceipt?: PoliceReceiptAccountStateToPoliceReceiptResolver<TParent>;\n  policeReceiptAccount?: PoliceReceiptAccountStateToPoliceReceiptAccountResolver<TParent>;\n  id?: PoliceReceiptAccountStateToIdResolver<TParent>;\n  createdAt?: PoliceReceiptAccountStateToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceReceiptAccountStateToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceReceiptAccountStateToPoliceReceiptAccountIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountStateToPoliceReceiptIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountStateToPoliceReceiptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountStateToPoliceReceiptAccountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountStateToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountStateToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountStateToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptPaymentTypeResolver<TParent = any> {\n  paymentMethod?: PoliceReceiptPaymentToPaymentMethodResolver<TParent>;\n  paymentDocument?: PoliceReceiptPaymentToPaymentDocumentResolver<TParent>;\n  amount?: PoliceReceiptPaymentToAmountResolver<TParent>;\n  paymentDate?: PoliceReceiptPaymentToPaymentDateResolver<TParent>;\n  ownerId?: PoliceReceiptPaymentToOwnerIdResolver<TParent>;\n  policeReceiptId?: PoliceReceiptPaymentToPoliceReceiptIdResolver<TParent>;\n  projectId?: PoliceReceiptPaymentToProjectIdResolver<TParent>;\n  policeReceipt?: PoliceReceiptPaymentToPoliceReceiptResolver<TParent>;\n  id?: PoliceReceiptPaymentToIdResolver<TParent>;\n  createdAt?: PoliceReceiptPaymentToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceReceiptPaymentToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceReceiptPaymentToPaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToPaymentDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToPaymentDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToPoliceReceiptIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToPoliceReceiptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormAutomobileDamageTypeResolver<TParent = any> {\n  brand?: FormAutomobileDamageToBrandResolver<TParent>;\n  model?: FormAutomobileDamageToModelResolver<TParent>;\n  year?: FormAutomobileDamageToYearResolver<TParent>;\n  version?: FormAutomobileDamageToVersionResolver<TParent>;\n  serial?: FormAutomobileDamageToSerialResolver<TParent>;\n  engine?: FormAutomobileDamageToEngineResolver<TParent>;\n  color?: FormAutomobileDamageToColorResolver<TParent>;\n  licensePlates?: FormAutomobileDamageToLicensePlatesResolver<TParent>;\n  documentType?: FormAutomobileDamageToDocumentTypeResolver<TParent>;\n  ownerId?: FormAutomobileDamageToOwnerIdResolver<TParent>;\n  policeId?: FormAutomobileDamageToPoliceIdResolver<TParent>;\n  usage?: FormAutomobileDamageToUsageResolver<TParent>;\n  email?: FormAutomobileDamageToEmailResolver<TParent>;\n  beneficiaryAddress?: FormAutomobileDamageToBeneficiaryAddressResolver<TParent>;\n  beneficiaryName?: FormAutomobileDamageToBeneficiaryNameResolver<TParent>;\n  beneficiaryRFC?: FormAutomobileDamageToBeneficiaryRFCResolver<TParent>;\n  adjusment?: FormAutomobileDamageToAdjusmentResolver<TParent>;\n  drive?: FormAutomobileDamageToDriveResolver<TParent>;\n  montAdjustment?: FormAutomobileDamageToMontAdjustmentResolver<TParent>;\n  montSpecialTeam?: FormAutomobileDamageToMontSpecialTeamResolver<TParent>;\n  specialTeam?: FormAutomobileDamageToSpecialTeamResolver<TParent>;\n  service?: FormAutomobileDamageToServiceResolver<TParent>;\n  policyType?: FormAutomobileDamageToPolicyTypeResolver<TParent>;\n  chargeType?: FormAutomobileDamageToChargeTypeResolver<TParent>;\n  procedencia?: FormAutomobileDamageToProcedenciaResolver<TParent>;\n  personalId?: FormAutomobileDamageToPersonalIdResolver<TParent>;\n  preferencialBeneficiary?: FormAutomobileDamageToPreferencialBeneficiaryResolver<TParent>;\n  sumInsured?: FormAutomobileDamageToSumInsuredResolver<TParent>;\n  carOwner?: FormAutomobileDamageToCarOwnerResolver<TParent>;\n  noEmployee?: FormAutomobileDamageToNoEmployeeResolver<TParent>;\n  projectId?: FormAutomobileDamageToProjectIdResolver<TParent>;\n  personalInformation?: FormAutomobileDamageToPersonalInformationResolver<TParent>;\n  police?: FormAutomobileDamageToPoliceResolver<TParent>;\n  id?: FormAutomobileDamageToIdResolver<TParent>;\n  createdAt?: FormAutomobileDamageToCreatedAtResolver<TParent>;\n  updatedAt?: FormAutomobileDamageToUpdatedAtResolver<TParent>;\n}\n\nexport interface FormAutomobileDamageToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToVersionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToSerialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToEngineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToLicensePlatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToDocumentTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToUsageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToBeneficiaryAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToBeneficiaryNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToBeneficiaryRFCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToAdjusmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToDriveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToMontAdjustmentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToMontSpecialTeamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToSpecialTeamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToPolicyTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToChargeTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToProcedenciaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToPersonalIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToPreferencialBeneficiaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToSumInsuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToCarOwnerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToNoEmployeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToPersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormDamageTypeResolver<TParent = any> {\n  damageType?: FormDamageToDamageTypeResolver<TParent>;\n  insuredItem?: FormDamageToInsuredItemResolver<TParent>;\n  itemAddress?: FormDamageToItemAddressResolver<TParent>;\n  itemDetails?: FormDamageToItemDetailsResolver<TParent>;\n  coinsurance?: FormDamageToCoinsuranceResolver<TParent>;\n  documentType?: FormDamageToDocumentTypeResolver<TParent>;\n  ownerId?: FormDamageToOwnerIdResolver<TParent>;\n  policeId?: FormDamageToPoliceIdResolver<TParent>;\n  personalId?: FormDamageToPersonalIdResolver<TParent>;\n  brand?: FormDamageToBrandResolver<TParent>;\n  color?: FormDamageToColorResolver<TParent>;\n  constructionYear?: FormDamageToConstructionYearResolver<TParent>;\n  damOwner?: FormDamageToDamOwnerResolver<TParent>;\n  email?: FormDamageToEmailResolver<TParent>;\n  engine?: FormDamageToEngineResolver<TParent>;\n  fHMZone?: FormDamageToFHMZoneResolver<TParent>;\n  girp?: FormDamageToGirpResolver<TParent>;\n  matricula?: FormDamageToMatriculaResolver<TParent>;\n  model?: FormDamageToModelResolver<TParent>;\n  noEmployee?: FormDamageToNoEmployeeResolver<TParent>;\n  noLevels?: FormDamageToNoLevelsResolver<TParent>;\n  permiso?: FormDamageToPermisoResolver<TParent>;\n  purchaseValue?: FormDamageToPurchaseValueResolver<TParent>;\n  reconstructionYear?: FormDamageToReconstructionYearResolver<TParent>;\n  serial?: FormDamageToSerialResolver<TParent>;\n  sucursal?: FormDamageToSucursalResolver<TParent>;\n  tYEVZone?: FormDamageToTYEVZoneResolver<TParent>;\n  typeConstruction?: FormDamageToTypeConstructionResolver<TParent>;\n  usage?: FormDamageToUsageResolver<TParent>;\n  version?: FormDamageToVersionResolver<TParent>;\n  projectId?: FormDamageToProjectIdResolver<TParent>;\n  personalInformation?: FormDamageToPersonalInformationResolver<TParent>;\n  police?: FormDamageToPoliceResolver<TParent>;\n  id?: FormDamageToIdResolver<TParent>;\n  createdAt?: FormDamageToCreatedAtResolver<TParent>;\n  updatedAt?: FormDamageToUpdatedAtResolver<TParent>;\n}\n\nexport interface FormDamageToDamageTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToInsuredItemResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToItemAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToItemDetailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToCoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToDocumentTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToPersonalIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToConstructionYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToDamOwnerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToEngineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToFHMZoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToGirpResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToMatriculaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToNoEmployeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToNoLevelsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToPermisoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToPurchaseValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToReconstructionYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToSerialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToSucursalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToTYEVZoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToTypeConstructionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToUsageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToVersionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToPersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterAilingTypeResolver<TParent = any> {\n  code?: SinisterAilingToCodeResolver<TParent>;\n  description?: SinisterAilingToDescriptionResolver<TParent>;\n  sinisterAccidents?: SinisterAilingToSinisterAccidentsResolver<TParent>;\n  id?: SinisterAilingToIdResolver<TParent>;\n  createdAt?: SinisterAilingToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterAilingToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterAilingToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAilingToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAilingToSinisterAccidentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAilingToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAilingToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAilingToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorGroupingLevelTypeResolver<TParent = any> {\n  levelGrouping?: ContractorGroupingLevelToLevelGroupingResolver<TParent>;\n  description?: ContractorGroupingLevelToDescriptionResolver<TParent>;\n  ownerId?: ContractorGroupingLevelToOwnerIdResolver<TParent>;\n  parentId?: ContractorGroupingLevelToParentIdResolver<TParent>;\n  responsableId?: ContractorGroupingLevelToResponsableIdResolver<TParent>;\n  projectId?: ContractorGroupingLevelToProjectIdResolver<TParent>;\n  groupingType?: ContractorGroupingLevelToGroupingTypeResolver<TParent>;\n  contractors?: ContractorGroupingLevelToContractorsResolver<TParent>;\n  parent?: ContractorGroupingLevelToParentResolver<TParent>;\n  contractorGroupingLevels?: ContractorGroupingLevelToContractorGroupingLevelsResolver<TParent>;\n  id?: ContractorGroupingLevelToIdResolver<TParent>;\n  createdAt?: ContractorGroupingLevelToCreatedAtResolver<TParent>;\n  updatedAt?: ContractorGroupingLevelToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContractorGroupingLevelToLevelGroupingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToParentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToResponsableIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToGroupingTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToContractorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToParentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToContractorGroupingLevelsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorCelulaTypeResolver<TParent = any> {\n  celulaName?: ContractorCelulaToCelulaNameResolver<TParent>;\n  description?: ContractorCelulaToDescriptionResolver<TParent>;\n  active?: ContractorCelulaToActiveResolver<TParent>;\n  projectId?: ContractorCelulaToProjectIdResolver<TParent>;\n  ownerId?: ContractorCelulaToOwnerIdResolver<TParent>;\n  contractors?: ContractorCelulaToContractorsResolver<TParent>;\n  id?: ContractorCelulaToIdResolver<TParent>;\n  createdAt?: ContractorCelulaToCreatedAtResolver<TParent>;\n  updatedAt?: ContractorCelulaToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContractorCelulaToCelulaNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaToContractorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IReferrerTypeResolver<TParent = any> {\n  memberId?: ReferrerToMemberIdResolver<TParent>;\n  projectId?: ReferrerToProjectIdResolver<TParent>;\n  hiredDate?: ReferrerToHiredDateResolver<TParent>;\n  email?: ReferrerToEmailResolver<TParent>;\n  address?: ReferrerToAddressResolver<TParent>;\n  operationFactures?: ReferrerToOperationFacturesResolver<TParent>;\n  paymentType?: ReferrerToPaymentTypeResolver<TParent>;\n  paymentFrequency?: ReferrerToPaymentFrequencyResolver<TParent>;\n  referenceNumber?: ReferrerToReferenceNumberResolver<TParent>;\n  bank?: ReferrerToBankResolver<TParent>;\n  phones?: ReferrerToPhonesResolver<TParent>;\n  referrerAccountStates?: ReferrerToReferrerAccountStatesResolver<TParent>;\n  referrerBranches?: ReferrerToReferrerBranchesResolver<TParent>;\n  contractors?: ReferrerToContractorsResolver<TParent>;\n  involvedReferrer?: ReferrerToInvolvedReferrerResolver<TParent>;\n  id?: ReferrerToIdResolver<TParent>;\n  createdAt?: ReferrerToCreatedAtResolver<TParent>;\n  updatedAt?: ReferrerToUpdatedAtResolver<TParent>;\n}\n\nexport interface ReferrerToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToHiredDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToOperationFacturesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToPaymentTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToPaymentFrequencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToReferenceNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToBankResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToPhonesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToReferrerAccountStatesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToReferrerBranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToContractorsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToInvolvedReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IReferrerAccountStateTypeResolver<TParent = any> {\n  projectId?: ReferrerAccountStateToProjectIdResolver<TParent>;\n  ownerId?: ReferrerAccountStateToOwnerIdResolver<TParent>;\n  folio?: ReferrerAccountStateToFolioResolver<TParent>;\n  total?: ReferrerAccountStateToTotalResolver<TParent>;\n  printDate?: ReferrerAccountStateToPrintDateResolver<TParent>;\n  status?: ReferrerAccountStateToStatusResolver<TParent>;\n  transactionNumber?: ReferrerAccountStateToTransactionNumberResolver<TParent>;\n  reasonReject?: ReferrerAccountStateToReasonRejectResolver<TParent>;\n  observation?: ReferrerAccountStateToObservationResolver<TParent>;\n  referrerId?: ReferrerAccountStateToReferrerIdResolver<TParent>;\n  referrer?: ReferrerAccountStateToReferrerResolver<TParent>;\n  id?: ReferrerAccountStateToIdResolver<TParent>;\n  createdAt?: ReferrerAccountStateToCreatedAtResolver<TParent>;\n  updatedAt?: ReferrerAccountStateToUpdatedAtResolver<TParent>;\n}\n\nexport interface ReferrerAccountStateToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToTotalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToPrintDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToTransactionNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToReasonRejectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToObservationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToReferrerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IReferrerBranchTypeResolver<TParent = any> {\n  projectAgentProviderId?: ReferrerBranchToProjectAgentProviderIdResolver<TParent>;\n  projectAgentProviderBranchId?: ReferrerBranchToProjectAgentProviderBranchIdResolver<TParent>;\n  referrerId?: ReferrerBranchToReferrerIdResolver<TParent>;\n  comition?: ReferrerBranchToComitionResolver<TParent>;\n  referrer?: ReferrerBranchToReferrerResolver<TParent>;\n  projectAgentProvider?: ReferrerBranchToProjectAgentProviderResolver<TParent>;\n  projectAgentProviderBranch?: ReferrerBranchToProjectAgentProviderBranchResolver<TParent>;\n  id?: ReferrerBranchToIdResolver<TParent>;\n  createdAt?: ReferrerBranchToCreatedAtResolver<TParent>;\n  updatedAt?: ReferrerBranchToUpdatedAtResolver<TParent>;\n}\n\nexport interface ReferrerBranchToProjectAgentProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchToProjectAgentProviderBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchToReferrerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchToComitionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchToReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchToProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchToProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInvolvedReferrerTypeResolver<TParent = any> {\n  comisionVendedor?: InvolvedReferrerToComisionVendedorResolver<TParent>;\n  ownerId?: InvolvedReferrerToOwnerIdResolver<TParent>;\n  policeId?: InvolvedReferrerToPoliceIdResolver<TParent>;\n  referrerId?: InvolvedReferrerToReferrerIdResolver<TParent>;\n  projectId?: InvolvedReferrerToProjectIdResolver<TParent>;\n  referrer?: InvolvedReferrerToReferrerResolver<TParent>;\n  police?: InvolvedReferrerToPoliceResolver<TParent>;\n  id?: InvolvedReferrerToIdResolver<TParent>;\n  createdAt?: InvolvedReferrerToCreatedAtResolver<TParent>;\n  updatedAt?: InvolvedReferrerToUpdatedAtResolver<TParent>;\n}\n\nexport interface InvolvedReferrerToComisionVendedorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerToReferrerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerToReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorProcessDocumentTypeResolver<TParent = any> {\n  delivered?: ContractorProcessDocumentToDeliveredResolver<TParent>;\n  validated?: ContractorProcessDocumentToValidatedResolver<TParent>;\n  processDocumentId?: ContractorProcessDocumentToProcessDocumentIdResolver<TParent>;\n  contractorId?: ContractorProcessDocumentToContractorIdResolver<TParent>;\n  contractor?: ContractorProcessDocumentToContractorResolver<TParent>;\n  processDocument?: ContractorProcessDocumentToProcessDocumentResolver<TParent>;\n  id?: ContractorProcessDocumentToIdResolver<TParent>;\n  createdAt?: ContractorProcessDocumentToCreatedAtResolver<TParent>;\n  updatedAt?: ContractorProcessDocumentToUpdatedAtResolver<TParent>;\n}\n\nexport interface ContractorProcessDocumentToDeliveredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentToValidatedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentToProcessDocumentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentToProcessDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProcessDocumentTypeResolver<TParent = any> {\n  name?: ProcessDocumentToNameResolver<TParent>;\n  slug?: ProcessDocumentToSlugResolver<TParent>;\n  active?: ProcessDocumentToActiveResolver<TParent>;\n  typeAgentProvider?: ProcessDocumentToTypeAgentProviderResolver<TParent>;\n  contractorProcessDocuments?: ProcessDocumentToContractorProcessDocumentsResolver<TParent>;\n  id?: ProcessDocumentToIdResolver<TParent>;\n  createdAt?: ProcessDocumentToCreatedAtResolver<TParent>;\n  updatedAt?: ProcessDocumentToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProcessDocumentToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProcessDocumentToSlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProcessDocumentToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProcessDocumentToTypeAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProcessDocumentToContractorProcessDocumentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProcessDocumentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProcessDocumentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProcessDocumentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceQuoteTypeResolver<TParent = any> {\n  projectAgentProviderBranchId?: PoliceQuoteToProjectAgentProviderBranchIdResolver<TParent>;\n  ramoCode?: PoliceQuoteToRamoCodeResolver<TParent>;\n  subRamoCode?: PoliceQuoteToSubRamoCodeResolver<TParent>;\n  status?: PoliceQuoteToStatusResolver<TParent>;\n  firstName?: PoliceQuoteToFirstNameResolver<TParent>;\n  lastName?: PoliceQuoteToLastNameResolver<TParent>;\n  secondLastName?: PoliceQuoteToSecondLastNameResolver<TParent>;\n  email?: PoliceQuoteToEmailResolver<TParent>;\n  phone?: PoliceQuoteToPhoneResolver<TParent>;\n  car?: PoliceQuoteToCarResolver<TParent>;\n  observations?: PoliceQuoteToObservationsResolver<TParent>;\n  accidents?: PoliceQuoteToAccidentsResolver<TParent>;\n  damages?: PoliceQuoteToDamagesResolver<TParent>;\n  life?: PoliceQuoteToLifeResolver<TParent>;\n  isComplete?: PoliceQuoteToIsCompleteResolver<TParent>;\n  type?: PoliceQuoteToTypeResolver<TParent>;\n  ownerId?: PoliceQuoteToOwnerIdResolver<TParent>;\n  projectId?: PoliceQuoteToProjectIdResolver<TParent>;\n  mainParent?: PoliceQuoteToMainParentResolver<TParent>;\n  active?: PoliceQuoteToActiveResolver<TParent>;\n  prospectId?: PoliceQuoteToProspectIdResolver<TParent>;\n  agentProviders?: PoliceQuoteToAgentProvidersResolver<TParent>;\n  selectedAgentProvider?: PoliceQuoteToSelectedAgentProviderResolver<TParent>;\n  contractorId?: PoliceQuoteToContractorIdResolver<TParent>;\n  contractor?: PoliceQuoteToContractorResolver<TParent>;\n  projectAgentProviderBranch?: PoliceQuoteToProjectAgentProviderBranchResolver<TParent>;\n  policeQuotePrimas?: PoliceQuoteToPoliceQuotePrimasResolver<TParent>;\n  id?: PoliceQuoteToIdResolver<TParent>;\n  createdAt?: PoliceQuoteToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceQuoteToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceQuoteToProjectAgentProviderBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToRamoCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToSubRamoCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToSecondLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToAccidentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToDamagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToIsCompleteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToMainParentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToProspectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToAgentProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToSelectedAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToPoliceQuotePrimasResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceQuotePrimaTypeResolver<TParent = any> {\n  aseguradora?: PoliceQuotePrimaToAseguradoraResolver<TParent>;\n  prima?: PoliceQuotePrimaToPrimaResolver<TParent>;\n  checked?: PoliceQuotePrimaToCheckedResolver<TParent>;\n  projectId?: PoliceQuotePrimaToProjectIdResolver<TParent>;\n  policeQuoteId?: PoliceQuotePrimaToPoliceQuoteIdResolver<TParent>;\n  policeQuote?: PoliceQuotePrimaToPoliceQuoteResolver<TParent>;\n  id?: PoliceQuotePrimaToIdResolver<TParent>;\n  createdAt?: PoliceQuotePrimaToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceQuotePrimaToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceQuotePrimaToAseguradoraResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaToPrimaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaToCheckedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaToPoliceQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaToPoliceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceAssignTypeResolver<TParent = any> {\n  isOwner?: PoliceAssignToIsOwnerResolver<TParent>;\n  active?: PoliceAssignToActiveResolver<TParent>;\n  policeId?: PoliceAssignToPoliceIdResolver<TParent>;\n  memberId?: PoliceAssignToMemberIdResolver<TParent>;\n  police?: PoliceAssignToPoliceResolver<TParent>;\n  id?: PoliceAssignToIdResolver<TParent>;\n  createdAt?: PoliceAssignToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceAssignToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceAssignToIsOwnerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceAssignToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceAssignToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceAssignToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceAssignToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceAssignToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceAssignToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceAssignToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicePendientTypeResolver<TParent = any> {\n  email?: PolicePendientToEmailResolver<TParent>;\n  isOwner?: PolicePendientToIsOwnerResolver<TParent>;\n  active?: PolicePendientToActiveResolver<TParent>;\n  policeId?: PolicePendientToPoliceIdResolver<TParent>;\n  police?: PolicePendientToPoliceResolver<TParent>;\n  id?: PolicePendientToIdResolver<TParent>;\n  createdAt?: PolicePendientToCreatedAtResolver<TParent>;\n  updatedAt?: PolicePendientToUpdatedAtResolver<TParent>;\n}\n\nexport interface PolicePendientToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicePendientToIsOwnerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicePendientToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicePendientToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicePendientToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicePendientToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicePendientToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicePendientToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IOldPoliceTypeResolver<TParent = any> {\n  basePolicyId?: OldPoliceToBasePolicyIdResolver<TParent>;\n  ownerId?: OldPoliceToOwnerIdResolver<TParent>;\n  newPolicyId?: OldPoliceToNewPolicyIdResolver<TParent>;\n  projectId?: OldPoliceToProjectIdResolver<TParent>;\n  basePolice?: OldPoliceToBasePoliceResolver<TParent>;\n  newPolice?: OldPoliceToNewPoliceResolver<TParent>;\n  id?: OldPoliceToIdResolver<TParent>;\n  createdAt?: OldPoliceToCreatedAtResolver<TParent>;\n  updatedAt?: OldPoliceToUpdatedAtResolver<TParent>;\n}\n\nexport interface OldPoliceToBasePolicyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceToNewPolicyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceToBasePoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceToNewPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageInPolicyTypeResolver<TParent = any> {\n  name?: CoverageInPolicyToNameResolver<TParent>;\n  sumInsured?: CoverageInPolicyToSumInsuredResolver<TParent>;\n  deductible?: CoverageInPolicyToDeductibleResolver<TParent>;\n  prima?: CoverageInPolicyToPrimaResolver<TParent>;\n  coinsurance?: CoverageInPolicyToCoinsuranceResolver<TParent>;\n  topecoinsurance?: CoverageInPolicyToTopecoinsuranceResolver<TParent>;\n  priority?: CoverageInPolicyToPriorityResolver<TParent>;\n  ownerId?: CoverageInPolicyToOwnerIdResolver<TParent>;\n  projectId?: CoverageInPolicyToProjectIdResolver<TParent>;\n  policyId?: CoverageInPolicyToPolicyIdResolver<TParent>;\n  packageId?: CoverageInPolicyToPackageIdResolver<TParent>;\n  coveragePackage?: CoverageInPolicyToCoveragePackageResolver<TParent>;\n  police?: CoverageInPolicyToPoliceResolver<TParent>;\n  id?: CoverageInPolicyToIdResolver<TParent>;\n  createdAt?: CoverageInPolicyToCreatedAtResolver<TParent>;\n  updatedAt?: CoverageInPolicyToUpdatedAtResolver<TParent>;\n}\n\nexport interface CoverageInPolicyToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToSumInsuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToPrimaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToCoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToTopecoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToPolicyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToPackageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToCoveragePackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceFileTypeResolver<TParent = any> {\n  url?: PoliceFileToUrlResolver<TParent>;\n  ownerId?: PoliceFileToOwnerIdResolver<TParent>;\n  projectId?: PoliceFileToProjectIdResolver<TParent>;\n  name?: PoliceFileToNameResolver<TParent>;\n  sensible?: PoliceFileToSensibleResolver<TParent>;\n  shared?: PoliceFileToSharedResolver<TParent>;\n  documentType?: PoliceFileToDocumentTypeResolver<TParent>;\n  checked?: PoliceFileToCheckedResolver<TParent>;\n  active?: PoliceFileToActiveResolver<TParent>;\n  folio?: PoliceFileToFolioResolver<TParent>;\n  baseModel?: PoliceFileToBaseModelResolver<TParent>;\n  height?: PoliceFileToHeightResolver<TParent>;\n  width?: PoliceFileToWidthResolver<TParent>;\n  policeId?: PoliceFileToPoliceIdResolver<TParent>;\n  police?: PoliceFileToPoliceResolver<TParent>;\n  id?: PoliceFileToIdResolver<TParent>;\n  createdAt?: PoliceFileToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceFileToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceFileToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToSensibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToSharedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToDocumentTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToCheckedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToBaseModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToHeightResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToWidthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToPoliceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IComissionTypeResolver<TParent = any> {\n  projectAgentProviderBranchId?: ComissionToProjectAgentProviderBranchIdResolver<TParent>;\n  name?: ComissionToNameResolver<TParent>;\n  amount?: ComissionToAmountResolver<TParent>;\n  uDI?: ComissionToUDIResolver<TParent>;\n  other?: ComissionToOtherResolver<TParent>;\n  observations?: ComissionToObservationsResolver<TParent>;\n  efectiveDate?: ComissionToEfectiveDateResolver<TParent>;\n  expireDate?: ComissionToExpireDateResolver<TParent>;\n  commisionRPF?: ComissionToCommisionRPFResolver<TParent>;\n  otherRPF?: ComissionToOtherRPFResolver<TParent>;\n  rigth?: ComissionToRigthResolver<TParent>;\n  otherRigths?: ComissionToOtherRigthsResolver<TParent>;\n  initialPeriod?: ComissionToInitialPeriodResolver<TParent>;\n  subSequentPeriod?: ComissionToSubSequentPeriodResolver<TParent>;\n  anualRPF?: ComissionToAnualRPFResolver<TParent>;\n  bimestralRPF?: ComissionToBimestralRPFResolver<TParent>;\n  mensualRPF?: ComissionToMensualRPFResolver<TParent>;\n  trimestralRPF?: ComissionToTrimestralRPFResolver<TParent>;\n  rigthUDI?: ComissionToRigthUDIResolver<TParent>;\n  rigthComission?: ComissionToRigthComissionResolver<TParent>;\n  keyId?: ComissionToKeyIdResolver<TParent>;\n  projectAgentProviderBranch?: ComissionToProjectAgentProviderBranchResolver<TParent>;\n  agentKey?: ComissionToAgentKeyResolver<TParent>;\n  id?: ComissionToIdResolver<TParent>;\n  createdAt?: ComissionToCreatedAtResolver<TParent>;\n  updatedAt?: ComissionToUpdatedAtResolver<TParent>;\n}\n\nexport interface ComissionToProjectAgentProviderBranchIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToAmountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToUDIResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToOtherResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToEfectiveDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToExpireDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToCommisionRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToOtherRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToRigthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToOtherRigthsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToInitialPeriodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToSubSequentPeriodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToAnualRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToBimestralRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToMensualRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToTrimestralRPFResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToRigthUDIResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToRigthComissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToKeyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToAgentKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderProjectAgentProviderTypeResolver<TParent = any> {\n  insurerReminderId?: InsurerReminderProjectAgentProviderToInsurerReminderIdResolver<TParent>;\n  projectAgentProviderId?: InsurerReminderProjectAgentProviderToProjectAgentProviderIdResolver<TParent>;\n  projectId?: InsurerReminderProjectAgentProviderToProjectIdResolver<TParent>;\n  insurerReminder?: InsurerReminderProjectAgentProviderToInsurerReminderResolver<TParent>;\n  projectAgentProvider?: InsurerReminderProjectAgentProviderToProjectAgentProviderResolver<TParent>;\n  id?: InsurerReminderProjectAgentProviderToIdResolver<TParent>;\n  createdAt?: InsurerReminderProjectAgentProviderToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerReminderProjectAgentProviderToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerReminderProjectAgentProviderToInsurerReminderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderProjectAgentProviderToProjectAgentProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderProjectAgentProviderToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderProjectAgentProviderToInsurerReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderProjectAgentProviderToProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderProjectAgentProviderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderProjectAgentProviderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderProjectAgentProviderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderTypeResolver<TParent = any> {\n  name?: InsurerReminderToNameResolver<TParent>;\n  description?: InsurerReminderToDescriptionResolver<TParent>;\n  sended?: InsurerReminderToSendedResolver<TParent>;\n  type?: InsurerReminderToTypeResolver<TParent>;\n  instanceType?: InsurerReminderToInstanceTypeResolver<TParent>;\n  reminderDate?: InsurerReminderToReminderDateResolver<TParent>;\n  projectId?: InsurerReminderToProjectIdResolver<TParent>;\n  insurerReminderRecords?: InsurerReminderToInsurerReminderRecordsResolver<TParent>;\n  insurerReminderSubBranchs?: InsurerReminderToInsurerReminderSubBranchsResolver<TParent>;\n  insurerReminderProjectAgentProviders?: InsurerReminderToInsurerReminderProjectAgentProvidersResolver<TParent>;\n  id?: InsurerReminderToIdResolver<TParent>;\n  createdAt?: InsurerReminderToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerReminderToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerReminderToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToSendedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToInstanceTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToReminderDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToInsurerReminderRecordsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToInsurerReminderSubBranchsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToInsurerReminderProjectAgentProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderRecordTypeResolver<TParent = any> {\n  insurerReminderId?: InsurerReminderRecordToInsurerReminderIdResolver<TParent>;\n  seen?: InsurerReminderRecordToSeenResolver<TParent>;\n  projectId?: InsurerReminderRecordToProjectIdResolver<TParent>;\n  recordId?: InsurerReminderRecordToRecordIdResolver<TParent>;\n  recordModel?: InsurerReminderRecordToRecordModelResolver<TParent>;\n  insurerReminder?: InsurerReminderRecordToInsurerReminderResolver<TParent>;\n  id?: InsurerReminderRecordToIdResolver<TParent>;\n  createdAt?: InsurerReminderRecordToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerReminderRecordToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerReminderRecordToInsurerReminderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordToSeenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordToRecordIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordToRecordModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordToInsurerReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderSubBranchTypeResolver<TParent = any> {\n  insurerReminderId?: InsurerReminderSubBranchToInsurerReminderIdResolver<TParent>;\n  subBranch?: InsurerReminderSubBranchToSubBranchResolver<TParent>;\n  projectId?: InsurerReminderSubBranchToProjectIdResolver<TParent>;\n  insurerReminder?: InsurerReminderSubBranchToInsurerReminderResolver<TParent>;\n  id?: InsurerReminderSubBranchToIdResolver<TParent>;\n  createdAt?: InsurerReminderSubBranchToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerReminderSubBranchToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerReminderSubBranchToInsurerReminderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderSubBranchToSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderSubBranchToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderSubBranchToInsurerReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderSubBranchToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderSubBranchToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderSubBranchToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectAgentProviderEmailReminderTypeResolver<TParent = any> {\n  model?: ProjectAgentProviderEmailReminderToModelResolver<TParent>;\n  text?: ProjectAgentProviderEmailReminderToTextResolver<TParent>;\n  footer?: ProjectAgentProviderEmailReminderToFooterResolver<TParent>;\n  ownerId?: ProjectAgentProviderEmailReminderToOwnerIdResolver<TParent>;\n  frequency?: ProjectAgentProviderEmailReminderToFrequencyResolver<TParent>;\n  ramoCode?: ProjectAgentProviderEmailReminderToRamoCodeResolver<TParent>;\n  policyType?: ProjectAgentProviderEmailReminderToPolicyTypeResolver<TParent>;\n  chargeType?: ProjectAgentProviderEmailReminderToChargeTypeResolver<TParent>;\n  dateType?: ProjectAgentProviderEmailReminderToDateTypeResolver<TParent>;\n  projectAgentProviders?: ProjectAgentProviderEmailReminderToProjectAgentProvidersResolver<TParent>;\n  subbranches?: ProjectAgentProviderEmailReminderToSubbranchesResolver<TParent>;\n  projectAgentProviderId?: ProjectAgentProviderEmailReminderToProjectAgentProviderIdResolver<TParent>;\n  projectAgentProvider?: ProjectAgentProviderEmailReminderToProjectAgentProviderResolver<TParent>;\n  id?: ProjectAgentProviderEmailReminderToIdResolver<TParent>;\n  createdAt?: ProjectAgentProviderEmailReminderToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectAgentProviderEmailReminderToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProjectAgentProviderEmailReminderToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToTextResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToFooterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToFrequencyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToRamoCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToPolicyTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToChargeTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToDateTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToProjectAgentProvidersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToSubbranchesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToProjectAgentProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBeneficiarieCollectionSegmentTypeResolver<TParent = any> {\n  items?: BeneficiarieCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BeneficiarieCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BeneficiarieCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BeneficiarieCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeneficiarieCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormAccidentDiseaseCollectionSegmentTypeResolver<TParent = any> {\n  items?: FormAccidentDiseaseCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: FormAccidentDiseaseCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: FormAccidentDiseaseCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface FormAccidentDiseaseCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAccidentDiseaseCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormAutomobileDamageCollectionSegmentTypeResolver<TParent = any> {\n  items?: FormAutomobileDamageCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: FormAutomobileDamageCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: FormAutomobileDamageCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface FormAutomobileDamageCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormAutomobileDamageCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormCarCatalogCollectionSegmentTypeResolver<TParent = any> {\n  items?: FormCarCatalogCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: FormCarCatalogCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: FormCarCatalogCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface FormCarCatalogCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormCarCatalogTypeResolver<TParent = any> {\n  carModel?: FormCarCatalogToCarModelResolver<TParent>;\n  carBrand?: FormCarCatalogToCarBrandResolver<TParent>;\n  carYear?: FormCarCatalogToCarYearResolver<TParent>;\n  description?: FormCarCatalogToDescriptionResolver<TParent>;\n  carSubbrand?: FormCarCatalogToCarSubbrandResolver<TParent>;\n  shortDescription?: FormCarCatalogToShortDescriptionResolver<TParent>;\n  carType?: FormCarCatalogToCarTypeResolver<TParent>;\n  carOccupants?: FormCarCatalogToCarOccupantsResolver<TParent>;\n  carClass?: FormCarCatalogToCarClassResolver<TParent>;\n  carSearch?: FormCarCatalogToCarSearchResolver<TParent>;\n  id?: FormCarCatalogToIdResolver<TParent>;\n  createdAt?: FormCarCatalogToCreatedAtResolver<TParent>;\n  updatedAt?: FormCarCatalogToUpdatedAtResolver<TParent>;\n}\n\nexport interface FormCarCatalogToCarModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToCarBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToCarYearResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToCarSubbrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToShortDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToCarTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToCarOccupantsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToCarClassResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToCarSearchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormCarCatalogToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormDamageCollectionSegmentTypeResolver<TParent = any> {\n  items?: FormDamageCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: FormDamageCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: FormDamageCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface FormDamageCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormDamageCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormLifeCollectionSegmentTypeResolver<TParent = any> {\n  items?: FormLifeCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: FormLifeCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: FormLifeCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface FormLifeCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface FormLifeCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInvolvedReferrerCollectionSegmentTypeResolver<TParent = any> {\n  items?: InvolvedReferrerCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InvolvedReferrerCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InvolvedReferrerCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InvolvedReferrerCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InvolvedReferrerCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IOldPoliceCollectionSegmentTypeResolver<TParent = any> {\n  items?: OldPoliceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: OldPoliceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: OldPoliceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface OldPoliceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface OldPoliceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPersonalInformationCollectionSegmentTypeResolver<TParent = any> {\n  items?: PersonalInformationCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PersonalInformationCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PersonalInformationCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PersonalInformationCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PersonalInformationCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceAssignCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceAssignCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceAssignCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceAssignCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceAssignCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceAssignCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceAssignCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicePendientCollectionSegmentTypeResolver<TParent = any> {\n  items?: PolicePendientCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PolicePendientCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PolicePendientCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PolicePendientCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicePendientCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicePendientCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceQuoteCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceQuoteCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceQuoteCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceQuoteCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceQuoteCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuoteCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceQuotePrimaCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceQuotePrimaCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceQuotePrimaCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceQuotePrimaCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceQuotePrimaCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceQuotePrimaCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRelationShipCollectionSegmentTypeResolver<TParent = any> {\n  items?: RelationShipCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: RelationShipCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: RelationShipCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface RelationShipCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RelationShipCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISucursalCollectionSegmentTypeResolver<TParent = any> {\n  items?: SucursalCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SucursalCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SucursalCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SucursalCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SucursalCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEndorsementCollectionSegmentTypeResolver<TParent = any> {\n  items?: EndorsementCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: EndorsementCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: EndorsementCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface EndorsementCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEndorsementCertCollectionSegmentTypeResolver<TParent = any> {\n  items?: EndorsementCertCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: EndorsementCertCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: EndorsementCertCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface EndorsementCertCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface EndorsementCertCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterAccidentCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterAccidentCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterAccidentCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterAccidentCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterAccidentCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAccidentCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterAilingCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterAilingCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterAilingCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterAilingCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterAilingCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAilingCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterAilingCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterCarCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterCarCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterCarCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterCarCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterCarCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterCarContactCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterCarContactCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterCarContactCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterCarContactCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterCarContactCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterCarContactCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterDamageCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterDamageCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterDamageCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterDamageCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterDamageCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterDamageContactCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterDamageContactCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterDamageContactCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterDamageContactCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterDamageContactCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterDamageContactCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterFacturaCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterFacturaCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterFacturaCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterFacturaCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterFacturaCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterFacturaCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterHospitalCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterHospitalCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterHospitalCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterHospitalCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterHospitalCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterHospitalCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterHospitalCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterHospitalTypeResolver<TParent = any> {\n  description?: SinisterHospitalToDescriptionResolver<TParent>;\n  id?: SinisterHospitalToIdResolver<TParent>;\n  createdAt?: SinisterHospitalToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterHospitalToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterHospitalToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterHospitalToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterHospitalToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterHospitalToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterLifeCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterLifeCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterLifeCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterLifeCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterLifeCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterLifeContactCollectionSegmentTypeResolver<TParent = any> {\n  items?: SinisterLifeContactCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SinisterLifeContactCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SinisterLifeContactCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SinisterLifeContactCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterLifeContactTypeResolver<TParent = any> {\n  firstName?: SinisterLifeContactToFirstNameResolver<TParent>;\n  lastName?: SinisterLifeContactToLastNameResolver<TParent>;\n  secondLastName?: SinisterLifeContactToSecondLastNameResolver<TParent>;\n  phone?: SinisterLifeContactToPhoneResolver<TParent>;\n  email?: SinisterLifeContactToEmailResolver<TParent>;\n  references?: SinisterLifeContactToReferencesResolver<TParent>;\n  sinisterLifeId?: SinisterLifeContactToSinisterLifeIdResolver<TParent>;\n  projectId?: SinisterLifeContactToProjectIdResolver<TParent>;\n  sinisterLife?: SinisterLifeContactToSinisterLifeResolver<TParent>;\n  id?: SinisterLifeContactToIdResolver<TParent>;\n  createdAt?: SinisterLifeContactToCreatedAtResolver<TParent>;\n  updatedAt?: SinisterLifeContactToUpdatedAtResolver<TParent>;\n}\n\nexport interface SinisterLifeContactToFirstNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToSecondLastNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToReferencesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToSinisterLifeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToSinisterLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SinisterLifeContactToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceReceiptCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceReceiptCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceReceiptCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceReceiptCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptAccountCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceReceiptAccountCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceReceiptAccountCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceReceiptAccountCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceReceiptAccountCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptAccountStateCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceReceiptAccountStateCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceReceiptAccountStateCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceReceiptAccountStateCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceReceiptAccountStateCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountStateCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptAccountStateCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptFolioCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceReceiptFolioCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceReceiptFolioCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceReceiptFolioCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceReceiptFolioCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptFolioTypeResolver<TParent = any> {\n  paymentMethod?: PoliceReceiptFolioToPaymentMethodResolver<TParent>;\n  paymentDocument?: PoliceReceiptFolioToPaymentDocumentResolver<TParent>;\n  currentRate?: PoliceReceiptFolioToCurrentRateResolver<TParent>;\n  paymentDate?: PoliceReceiptFolioToPaymentDateResolver<TParent>;\n  folio?: PoliceReceiptFolioToFolioResolver<TParent>;\n  bank?: PoliceReceiptFolioToBankResolver<TParent>;\n  projectId?: PoliceReceiptFolioToProjectIdResolver<TParent>;\n  id?: PoliceReceiptFolioToIdResolver<TParent>;\n  createdAt?: PoliceReceiptFolioToCreatedAtResolver<TParent>;\n  updatedAt?: PoliceReceiptFolioToUpdatedAtResolver<TParent>;\n}\n\nexport interface PoliceReceiptFolioToPaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioToPaymentDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioToCurrentRateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioToPaymentDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioToFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioToBankResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptFolioToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptPaymentCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceReceiptPaymentCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceReceiptPaymentCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceReceiptPaymentCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceReceiptPaymentCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceReceiptPaymentCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceFileCollectionSegmentTypeResolver<TParent = any> {\n  items?: PoliceFileCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: PoliceFileCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: PoliceFileCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface PoliceFileCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PoliceFileCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerCommentCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerCommentCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerCommentCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerCommentCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerCommentCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerCommentTypeResolver<TParent = any> {\n  model?: InsurerCommentToModelResolver<TParent>;\n  modelId?: InsurerCommentToModelIdResolver<TParent>;\n  content?: InsurerCommentToContentResolver<TParent>;\n  isChild?: InsurerCommentToIsChildResolver<TParent>;\n  memberId?: InsurerCommentToMemberIdResolver<TParent>;\n  hasReminder?: InsurerCommentToHasReminderResolver<TParent>;\n  reminderDate?: InsurerCommentToReminderDateResolver<TParent>;\n  taskModel?: InsurerCommentToTaskModelResolver<TParent>;\n  projectId?: InsurerCommentToProjectIdResolver<TParent>;\n  parentId?: InsurerCommentToParentIdResolver<TParent>;\n  parent?: InsurerCommentToParentResolver<TParent>;\n  insurerComments?: InsurerCommentToInsurerCommentsResolver<TParent>;\n  insurerLogEmails?: InsurerCommentToInsurerLogEmailsResolver<TParent>;\n  insurerTickets?: InsurerCommentToInsurerTicketsResolver<TParent>;\n  id?: InsurerCommentToIdResolver<TParent>;\n  createdAt?: InsurerCommentToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerCommentToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerCommentToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToModelIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToIsChildResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToHasReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToReminderDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToTaskModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToParentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToParentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToInsurerCommentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToInsurerLogEmailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToInsurerTicketsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerCommentToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerLogEmailTypeResolver<TParent = any> {\n  moldel?: InsurerLogEmailToMoldelResolver<TParent>;\n  associatedId?: InsurerLogEmailToAssociatedIdResolver<TParent>;\n  to?: InsurerLogEmailToToResolver<TParent>;\n  cC?: InsurerLogEmailToCCResolver<TParent>;\n  cCO?: InsurerLogEmailToCCOResolver<TParent>;\n  subject?: InsurerLogEmailToSubjectResolver<TParent>;\n  body?: InsurerLogEmailToBodyResolver<TParent>;\n  file?: InsurerLogEmailToFileResolver<TParent>;\n  insurerCommentId?: InsurerLogEmailToInsurerCommentIdResolver<TParent>;\n  insurerLogId?: InsurerLogEmailToInsurerLogIdResolver<TParent>;\n  insurerComment?: InsurerLogEmailToInsurerCommentResolver<TParent>;\n  insurerLog?: InsurerLogEmailToInsurerLogResolver<TParent>;\n  id?: InsurerLogEmailToIdResolver<TParent>;\n  createdAt?: InsurerLogEmailToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerLogEmailToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerLogEmailToMoldelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToAssociatedIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToToResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToCCResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToCCOResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToSubjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToBodyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToInsurerCommentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToInsurerLogIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToInsurerCommentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToInsurerLogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerLogTypeResolver<TParent = any> {\n  moldel?: InsurerLogToMoldelResolver<TParent>;\n  event?: InsurerLogToEventResolver<TParent>;\n  associatedId?: InsurerLogToAssociatedIdResolver<TParent>;\n  identifier?: InsurerLogToIdentifierResolver<TParent>;\n  memberId?: InsurerLogToMemberIdResolver<TParent>;\n  projectId?: InsurerLogToProjectIdResolver<TParent>;\n  original?: InsurerLogToOriginalResolver<TParent>;\n  change?: InsurerLogToChangeResolver<TParent>;\n  insurerLogEmails?: InsurerLogToInsurerLogEmailsResolver<TParent>;\n  id?: InsurerLogToIdResolver<TParent>;\n  createdAt?: InsurerLogToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerLogToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerLogToMoldelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToAssociatedIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToIdentifierResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToOriginalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToChangeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToInsurerLogEmailsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerTicketTypeResolver<TParent = any> {\n  title?: InsurerTicketToTitleResolver<TParent>;\n  description?: InsurerTicketToDescriptionResolver<TParent>;\n  date?: InsurerTicketToDateResolver<TParent>;\n  priority?: InsurerTicketToPriorityResolver<TParent>;\n  closeDay?: InsurerTicketToCloseDayResolver<TParent>;\n  closed?: InsurerTicketToClosedResolver<TParent>;\n  identifier?: InsurerTicketToIdentifierResolver<TParent>;\n  assignedId?: InsurerTicketToAssignedIdResolver<TParent>;\n  ownerId?: InsurerTicketToOwnerIdResolver<TParent>;\n  archived?: InsurerTicketToArchivedResolver<TParent>;\n  associated?: InsurerTicketToAssociatedResolver<TParent>;\n  model?: InsurerTicketToModelResolver<TParent>;\n  route?: InsurerTicketToRouteResolver<TParent>;\n  concept?: InsurerTicketToConceptResolver<TParent>;\n  insurerCommentId?: InsurerTicketToInsurerCommentIdResolver<TParent>;\n  closedBy?: InsurerTicketToClosedByResolver<TParent>;\n  projectId?: InsurerTicketToProjectIdResolver<TParent>;\n  reassingBy?: InsurerTicketToReassingByResolver<TParent>;\n  reassignDate?: InsurerTicketToReassignDateResolver<TParent>;\n  insurerComment?: InsurerTicketToInsurerCommentResolver<TParent>;\n  insurerInvolved?: InsurerTicketToInsurerInvolvedResolver<TParent>;\n  id?: InsurerTicketToIdResolver<TParent>;\n  createdAt?: InsurerTicketToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerTicketToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerTicketToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToCloseDayResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToClosedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToIdentifierResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToAssignedIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToArchivedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToAssociatedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToRouteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToConceptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToInsurerCommentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToClosedByResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToReassingByResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToReassignDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToInsurerCommentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToInsurerInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerInvolvedTypeResolver<TParent = any> {\n  involvedId?: InsurerInvolvedToInvolvedIdResolver<TParent>;\n  ownerId?: InsurerInvolvedToOwnerIdResolver<TParent>;\n  personId?: InsurerInvolvedToPersonIdResolver<TParent>;\n  projetId?: InsurerInvolvedToProjetIdResolver<TParent>;\n  insurerTicket?: InsurerInvolvedToInsurerTicketResolver<TParent>;\n  id?: InsurerInvolvedToIdResolver<TParent>;\n  createdAt?: InsurerInvolvedToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerInvolvedToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerInvolvedToInvolvedIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerInvolvedToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerInvolvedToPersonIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerInvolvedToProjetIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerInvolvedToInsurerTicketResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerInvolvedToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerInvolvedToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerInvolvedToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerFileReadingCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerFileReadingCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerFileReadingCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerFileReadingCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerFileReadingCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerFileReadingTypeResolver<TParent = any> {\n  projectId?: InsurerFileReadingToProjectIdResolver<TParent>;\n  name?: InsurerFileReadingToNameResolver<TParent>;\n  policeType?: InsurerFileReadingToPoliceTypeResolver<TParent>;\n  insurer?: InsurerFileReadingToInsurerResolver<TParent>;\n  branch?: InsurerFileReadingToBranchResolver<TParent>;\n  subBranch?: InsurerFileReadingToSubBranchResolver<TParent>;\n  ownerId?: InsurerFileReadingToOwnerIdResolver<TParent>;\n  id?: InsurerFileReadingToIdResolver<TParent>;\n  createdAt?: InsurerFileReadingToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerFileReadingToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerFileReadingToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingToPoliceTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingToInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingToBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingToSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerFileReadingTagCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerFileReadingTagCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerFileReadingTagCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerFileReadingTagCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerFileReadingTagCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerFileReadingTagTypeResolver<TParent = any> {\n  area?: InsurerFileReadingTagToAreaResolver<TParent>;\n  cssClass?: InsurerFileReadingTagToCssClassResolver<TParent>;\n  height?: InsurerFileReadingTagToHeightResolver<TParent>;\n  width?: InsurerFileReadingTagToWidthResolver<TParent>;\n  name?: InsurerFileReadingTagToNameResolver<TParent>;\n  pageNumber?: InsurerFileReadingTagToPageNumberResolver<TParent>;\n  tag?: InsurerFileReadingTagToTagResolver<TParent>;\n  x?: InsurerFileReadingTagToXResolver<TParent>;\n  y?: InsurerFileReadingTagToYResolver<TParent>;\n  z?: InsurerFileReadingTagToZResolver<TParent>;\n  projectId?: InsurerFileReadingTagToProjectIdResolver<TParent>;\n  ownerId?: InsurerFileReadingTagToOwnerIdResolver<TParent>;\n  id?: InsurerFileReadingTagToIdResolver<TParent>;\n  createdAt?: InsurerFileReadingTagToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerFileReadingTagToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerFileReadingTagToAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToCssClassResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToHeightResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToWidthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToPageNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToXResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToYResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToZResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerFileReadingTagToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerInvolvedCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerInvolvedCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerInvolvedCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerInvolvedCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerInvolvedCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerInvolvedCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerInvolvedCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerLogCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerLogCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerLogCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerLogCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerLogCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerLogEmailCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerLogEmailCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerLogEmailCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerLogEmailCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerLogEmailCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerLogEmailCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerOrgInfoCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerOrgInfoCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerOrgInfoCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerOrgInfoCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerOrgInfoCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerOrgInfoTypeResolver<TParent = any> {\n  policeRequest?: InsurerOrgInfoToPoliceRequestResolver<TParent>;\n  endosoRequest?: InsurerOrgInfoToEndosoRequestResolver<TParent>;\n  renewal?: InsurerOrgInfoToRenewalResolver<TParent>;\n  policeRecord?: InsurerOrgInfoToPoliceRecordResolver<TParent>;\n  endosoRecord?: InsurerOrgInfoToEndosoRecordResolver<TParent>;\n  sinisterRequest?: InsurerOrgInfoToSinisterRequestResolver<TParent>;\n  sinisterEnd?: InsurerOrgInfoToSinisterEndResolver<TParent>;\n  coberageReminder?: InsurerOrgInfoToCoberageReminderResolver<TParent>;\n  renReminder?: InsurerOrgInfoToRenReminderResolver<TParent>;\n  collectionRemider?: InsurerOrgInfoToCollectionRemiderResolver<TParent>;\n  noteCreated?: InsurerOrgInfoToNoteCreatedResolver<TParent>;\n  noteApplied?: InsurerOrgInfoToNoteAppliedResolver<TParent>;\n  sinisterCancel?: InsurerOrgInfoToSinisterCancelResolver<TParent>;\n  sinisterReject?: InsurerOrgInfoToSinisterRejectResolver<TParent>;\n  sinisterOnHold?: InsurerOrgInfoToSinisterOnHoldResolver<TParent>;\n  sinisterInProcess?: InsurerOrgInfoToSinisterInProcessResolver<TParent>;\n  cumReminder?: InsurerOrgInfoToCumReminderResolver<TParent>;\n  projectId?: InsurerOrgInfoToProjectIdResolver<TParent>;\n  id?: InsurerOrgInfoToIdResolver<TParent>;\n  createdAt?: InsurerOrgInfoToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerOrgInfoToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerOrgInfoToPoliceRequestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToEndosoRequestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToRenewalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToPoliceRecordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToEndosoRecordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToSinisterRequestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToSinisterEndResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToCoberageReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToRenReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToCollectionRemiderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToNoteCreatedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToNoteAppliedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToSinisterCancelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToSinisterRejectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToSinisterOnHoldResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToSinisterInProcessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToCumReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerOrgInfoToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerTicketCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerTicketCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerTicketCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerTicketCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerTicketCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerTicketCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerScheduleCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerScheduleCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerScheduleCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerScheduleCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerScheduleCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerScheduleTypeResolver<TParent = any> {\n  title?: InsurerScheduleToTitleResolver<TParent>;\n  color?: InsurerScheduleToColorResolver<TParent>;\n  startsAt?: InsurerScheduleToStartsAtResolver<TParent>;\n  endsAt?: InsurerScheduleToEndsAtResolver<TParent>;\n  resizable?: InsurerScheduleToResizableResolver<TParent>;\n  draggable?: InsurerScheduleToDraggableResolver<TParent>;\n  ownerId?: InsurerScheduleToOwnerIdResolver<TParent>;\n  observations?: InsurerScheduleToObservationsResolver<TParent>;\n  projectId?: InsurerScheduleToProjectIdResolver<TParent>;\n  insurerScheduleParticipant?: InsurerScheduleToInsurerScheduleParticipantResolver<TParent>;\n  id?: InsurerScheduleToIdResolver<TParent>;\n  createdAt?: InsurerScheduleToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerScheduleToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerScheduleToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToColorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToStartsAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToEndsAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToResizableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToDraggableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToObservationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToInsurerScheduleParticipantResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerScheduleParticipantTypeResolver<TParent = any> {\n  insurerScheduleId?: InsurerScheduleParticipantToInsurerScheduleIdResolver<TParent>;\n  memberId?: InsurerScheduleParticipantToMemberIdResolver<TParent>;\n  insurerSchedule?: InsurerScheduleParticipantToInsurerScheduleResolver<TParent>;\n  id?: InsurerScheduleParticipantToIdResolver<TParent>;\n  createdAt?: InsurerScheduleParticipantToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerScheduleParticipantToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerScheduleParticipantToInsurerScheduleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleParticipantToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleParticipantToInsurerScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleParticipantToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleParticipantToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleParticipantToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerScheduleParticipantCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerScheduleParticipantCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerScheduleParticipantCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerScheduleParticipantCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerScheduleParticipantCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleParticipantCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerScheduleParticipantCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerNotificationCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerNotificationCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerNotificationCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerNotificationCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerNotificationCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerNotificationTypeResolver<TParent = any> {\n  model?: InsurerNotificationToModelResolver<TParent>;\n  modelId?: InsurerNotificationToModelIdResolver<TParent>;\n  title?: InsurerNotificationToTitleResolver<TParent>;\n  description?: InsurerNotificationToDescriptionResolver<TParent>;\n  seen?: InsurerNotificationToSeenResolver<TParent>;\n  involved?: InsurerNotificationToInvolvedResolver<TParent>;\n  assignedId?: InsurerNotificationToAssignedIdResolver<TParent>;\n  ownerId?: InsurerNotificationToOwnerIdResolver<TParent>;\n  areaInvolved?: InsurerNotificationToAreaInvolvedResolver<TParent>;\n  projectId?: InsurerNotificationToProjectIdResolver<TParent>;\n  contractorPolice?: InsurerNotificationToContractorPoliceResolver<TParent>;\n  policeGroupongLevel?: InsurerNotificationToPoliceGroupongLevelResolver<TParent>;\n  policeProvider?: InsurerNotificationToPoliceProviderResolver<TParent>;\n  policeBranch?: InsurerNotificationToPoliceBranchResolver<TParent>;\n  site?: InsurerNotificationToSiteResolver<TParent>;\n  startsAt?: InsurerNotificationToStartsAtResolver<TParent>;\n  type?: InsurerNotificationToTypeResolver<TParent>;\n  reminderRecordId?: InsurerNotificationToReminderRecordIdResolver<TParent>;\n  insurerReminderRecord?: InsurerNotificationToInsurerReminderRecordResolver<TParent>;\n  id?: InsurerNotificationToIdResolver<TParent>;\n  createdAt?: InsurerNotificationToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerNotificationToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerNotificationToModelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToModelIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToSeenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToAssignedIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToAreaInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToContractorPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToPoliceGroupongLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToPoliceProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToPoliceBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToSiteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToStartsAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToReminderRecordIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToInsurerReminderRecordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerNotificationToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerReminderCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerReminderCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerReminderCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerReminderCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderProjectAgentProviderCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerReminderProjectAgentProviderCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerReminderProjectAgentProviderCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerReminderProjectAgentProviderCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerReminderProjectAgentProviderCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderProjectAgentProviderCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderProjectAgentProviderCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderRecordCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerReminderRecordCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerReminderRecordCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerReminderRecordCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerReminderRecordCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderRecordCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderSubBranchCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerReminderSubBranchCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerReminderSubBranchCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerReminderSubBranchCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerReminderSubBranchCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderSubBranchCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerReminderSubBranchCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerBailTypeCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerBailTypeCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerBailTypeCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerBailTypeCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerBailTypeCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBailTypeCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerBirthDateTemplateCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerBirthDateTemplateCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerBirthDateTemplateCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerBirthDateTemplateCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerBirthDateTemplateCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBirthDateTemplateCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBirthDateTemplateCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerBirthDateTemplateTypeResolver<TParent = any> {\n  subject?: InsurerBirthDateTemplateToSubjectResolver<TParent>;\n  text?: InsurerBirthDateTemplateToTextResolver<TParent>;\n  enabled?: InsurerBirthDateTemplateToEnabledResolver<TParent>;\n  projectId?: InsurerBirthDateTemplateToProjectIdResolver<TParent>;\n  id?: InsurerBirthDateTemplateToIdResolver<TParent>;\n  createdAt?: InsurerBirthDateTemplateToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerBirthDateTemplateToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerBirthDateTemplateToSubjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBirthDateTemplateToTextResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBirthDateTemplateToEnabledResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBirthDateTemplateToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBirthDateTemplateToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBirthDateTemplateToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerBirthDateTemplateToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerDirectoryCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerDirectoryCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerDirectoryCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerDirectoryCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerDirectoryCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerDirectoryTypeResolver<TParent = any> {\n  name?: InsurerDirectoryToNameResolver<TParent>;\n  phone?: InsurerDirectoryToPhoneResolver<TParent>;\n  area?: InsurerDirectoryToAreaResolver<TParent>;\n  employment?: InsurerDirectoryToEmploymentResolver<TParent>;\n  branch?: InsurerDirectoryToBranchResolver<TParent>;\n  gender?: InsurerDirectoryToGenderResolver<TParent>;\n  projectId?: InsurerDirectoryToProjectIdResolver<TParent>;\n  id?: InsurerDirectoryToIdResolver<TParent>;\n  createdAt?: InsurerDirectoryToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerDirectoryToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerDirectoryToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryToAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryToEmploymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryToBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryToGenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerDirectoryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerExpenseCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerExpenseCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerExpenseCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerExpenseCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerExpenseCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerExpenseCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerExpenseCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerExpenseTypeResolver<TParent = any> {\n  quantity?: InsurerExpenseToQuantityResolver<TParent>;\n  concept?: InsurerExpenseToConceptResolver<TParent>;\n  month?: InsurerExpenseToMonthResolver<TParent>;\n  porjectId?: InsurerExpenseToPorjectIdResolver<TParent>;\n  id?: InsurerExpenseToIdResolver<TParent>;\n  createdAt?: InsurerExpenseToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerExpenseToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerExpenseToQuantityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerExpenseToConceptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerExpenseToMonthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerExpenseToPorjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerExpenseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerExpenseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerExpenseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerIbisFormCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerIbisFormCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerIbisFormCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerIbisFormCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerIbisFormCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisFormCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisFormCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerIbisFormTypeResolver<TParent = any> {\n  file?: InsurerIbisFormToFileResolver<TParent>;\n  name?: InsurerIbisFormToNameResolver<TParent>;\n  branch?: InsurerIbisFormToBranchResolver<TParent>;\n  projectId?: InsurerIbisFormToProjectIdResolver<TParent>;\n  id?: InsurerIbisFormToIdResolver<TParent>;\n  createdAt?: InsurerIbisFormToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerIbisFormToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerIbisFormToFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisFormToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisFormToBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisFormToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisFormToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisFormToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisFormToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerIbisProviderCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerIbisProviderCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerIbisProviderCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerIbisProviderCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerIbisProviderCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerIbisProviderTypeResolver<TParent = any> {\n  name?: InsurerIbisProviderToNameResolver<TParent>;\n  street?: InsurerIbisProviderToStreetResolver<TParent>;\n  number?: InsurerIbisProviderToNumberResolver<TParent>;\n  colony?: InsurerIbisProviderToColonyResolver<TParent>;\n  city?: InsurerIbisProviderToCityResolver<TParent>;\n  zipCode?: InsurerIbisProviderToZipCodeResolver<TParent>;\n  state?: InsurerIbisProviderToStateResolver<TParent>;\n  phone?: InsurerIbisProviderToPhoneResolver<TParent>;\n  latitude?: InsurerIbisProviderToLatitudeResolver<TParent>;\n  length?: InsurerIbisProviderToLengthResolver<TParent>;\n  branch?: InsurerIbisProviderToBranchResolver<TParent>;\n  type?: InsurerIbisProviderToTypeResolver<TParent>;\n  projectId?: InsurerIbisProviderToProjectIdResolver<TParent>;\n  id?: InsurerIbisProviderToIdResolver<TParent>;\n  createdAt?: InsurerIbisProviderToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerIbisProviderToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerIbisProviderToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToStreetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToNumberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToColonyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToCityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToZipCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToLatitudeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToLengthResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerIbisProviderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerSenderCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerSenderCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerSenderCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerSenderCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerSenderCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSenderCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSenderCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerSenderTypeResolver<TParent = any> {\n  email?: InsurerSenderToEmailResolver<TParent>;\n  passApp?: InsurerSenderToPassAppResolver<TParent>;\n  area?: InsurerSenderToAreaResolver<TParent>;\n  active?: InsurerSenderToActiveResolver<TParent>;\n  projectId?: InsurerSenderToProjectIdResolver<TParent>;\n  id?: InsurerSenderToIdResolver<TParent>;\n  createdAt?: InsurerSenderToCreatedAtResolver<TParent>;\n  updatedAt?: InsurerSenderToUpdatedAtResolver<TParent>;\n}\n\nexport interface InsurerSenderToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSenderToPassAppResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSenderToAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSenderToActiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSenderToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSenderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSenderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerSenderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerZipCodeSepomexCollectionSegmentTypeResolver<TParent = any> {\n  items?: InsurerZipCodeSepomexCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: InsurerZipCodeSepomexCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: InsurerZipCodeSepomexCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface InsurerZipCodeSepomexCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface InsurerZipCodeSepomexCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IComissionCollectionSegmentTypeResolver<TParent = any> {\n  items?: ComissionCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ComissionCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ComissionCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ComissionCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComissionCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageTopecoinsuranceCollectionSegmentTypeResolver<TParent = any> {\n  items?: CoverageTopecoinsuranceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CoverageTopecoinsuranceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CoverageTopecoinsuranceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CoverageTopecoinsuranceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageTopecoinsuranceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageTopecoinsuranceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageTopecoinsuranceTypeResolver<TParent = any> {\n  topecinsurance?: CoverageTopecoinsuranceToTopecinsuranceResolver<TParent>;\n  topecinsuranceId?: CoverageTopecoinsuranceToTopecinsuranceIdResolver<TParent>;\n  projectId?: CoverageTopecoinsuranceToProjectIdResolver<TParent>;\n  id?: CoverageTopecoinsuranceToIdResolver<TParent>;\n  createdAt?: CoverageTopecoinsuranceToCreatedAtResolver<TParent>;\n  updatedAt?: CoverageTopecoinsuranceToUpdatedAtResolver<TParent>;\n}\n\nexport interface CoverageTopecoinsuranceToTopecinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageTopecoinsuranceToTopecinsuranceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageTopecoinsuranceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageTopecoinsuranceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageTopecoinsuranceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageTopecoinsuranceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageSuminsuredCollectionSegmentTypeResolver<TParent = any> {\n  items?: CoverageSuminsuredCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CoverageSuminsuredCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CoverageSuminsuredCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CoverageSuminsuredCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageSuminsuredCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageSuminsuredCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageSuminsuredTypeResolver<TParent = any> {\n  sumInsured?: CoverageSuminsuredToSumInsuredResolver<TParent>;\n  sumId?: CoverageSuminsuredToSumIdResolver<TParent>;\n  default?: CoverageSuminsuredToDefaultResolver<TParent>;\n  projectId?: CoverageSuminsuredToProjectIdResolver<TParent>;\n  id?: CoverageSuminsuredToIdResolver<TParent>;\n  createdAt?: CoverageSuminsuredToCreatedAtResolver<TParent>;\n  updatedAt?: CoverageSuminsuredToUpdatedAtResolver<TParent>;\n}\n\nexport interface CoverageSuminsuredToSumInsuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageSuminsuredToSumIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageSuminsuredToDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageSuminsuredToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageSuminsuredToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageSuminsuredToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageSuminsuredToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoveragePackageCollectionSegmentTypeResolver<TParent = any> {\n  items?: CoveragePackageCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CoveragePackageCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CoveragePackageCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CoveragePackageCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoveragePackageCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageCollectionSegmentTypeResolver<TParent = any> {\n  items?: CoverageCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CoverageCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CoverageCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CoverageCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Isaam_CoverageTypeResolver<TParent = any> {\n  name?: saam_CoverageToNameResolver<TParent>;\n  default?: saam_CoverageToDefaultResolver<TParent>;\n  ownerId?: saam_CoverageToOwnerIdResolver<TParent>;\n  packageId?: saam_CoverageToPackageIdResolver<TParent>;\n  projectAgentProviderId?: saam_CoverageToProjectAgentProviderIdResolver<TParent>;\n  priority?: saam_CoverageToPriorityResolver<TParent>;\n  typeCoverage?: saam_CoverageToTypeCoverageResolver<TParent>;\n  coveragePackage?: saam_CoverageToCoveragePackageResolver<TParent>;\n  projectAgentProvider?: saam_CoverageToProjectAgentProviderResolver<TParent>;\n  id?: saam_CoverageToIdResolver<TParent>;\n  createdAt?: saam_CoverageToCreatedAtResolver<TParent>;\n  updatedAt?: saam_CoverageToUpdatedAtResolver<TParent>;\n}\n\nexport interface saam_CoverageToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToPackageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToProjectAgentProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToPriorityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToTypeCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToCoveragePackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface saam_CoverageToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageInPolicyCollectionSegmentTypeResolver<TParent = any> {\n  items?: CoverageInPolicyCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CoverageInPolicyCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CoverageInPolicyCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CoverageInPolicyCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageInPolicyCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageDeductibleCollectionSegmentTypeResolver<TParent = any> {\n  items?: CoverageDeductibleCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CoverageDeductibleCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CoverageDeductibleCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CoverageDeductibleCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDeductibleCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDeductibleCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageDeductibleTypeResolver<TParent = any> {\n  deductible?: CoverageDeductibleToDeductibleResolver<TParent>;\n  deductibleId?: CoverageDeductibleToDeductibleIdResolver<TParent>;\n  default?: CoverageDeductibleToDefaultResolver<TParent>;\n  projectId?: CoverageDeductibleToProjectIdResolver<TParent>;\n  id?: CoverageDeductibleToIdResolver<TParent>;\n  createdAt?: CoverageDeductibleToCreatedAtResolver<TParent>;\n  updatedAt?: CoverageDeductibleToUpdatedAtResolver<TParent>;\n}\n\nexport interface CoverageDeductibleToDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDeductibleToDeductibleIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDeductibleToDefaultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDeductibleToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDeductibleToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDeductibleToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageDeductibleToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageCoinsuranceCollectionSegmentTypeResolver<TParent = any> {\n  items?: CoverageCoinsuranceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: CoverageCoinsuranceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: CoverageCoinsuranceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface CoverageCoinsuranceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageCoinsuranceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageCoinsuranceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageCoinsuranceTypeResolver<TParent = any> {\n  coinsurance?: CoverageCoinsuranceToCoinsuranceResolver<TParent>;\n  coinsuranceId?: CoverageCoinsuranceToCoinsuranceIdResolver<TParent>;\n  projectId?: CoverageCoinsuranceToProjectIdResolver<TParent>;\n  id?: CoverageCoinsuranceToIdResolver<TParent>;\n  createdAt?: CoverageCoinsuranceToCreatedAtResolver<TParent>;\n  updatedAt?: CoverageCoinsuranceToUpdatedAtResolver<TParent>;\n}\n\nexport interface CoverageCoinsuranceToCoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageCoinsuranceToCoinsuranceIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageCoinsuranceToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageCoinsuranceToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageCoinsuranceToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CoverageCoinsuranceToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResponsableInvolvedCollectionSegmentTypeResolver<TParent = any> {\n  items?: ResponsableInvolvedCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ResponsableInvolvedCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ResponsableInvolvedCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ResponsableInvolvedCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResponsableInvolvedTypeResolver<TParent = any> {\n  projectId?: ResponsableInvolvedToProjectIdResolver<TParent>;\n  responsableId?: ResponsableInvolvedToResponsableIdResolver<TParent>;\n  ownerId?: ResponsableInvolvedToOwnerIdResolver<TParent>;\n  area?: ResponsableInvolvedToAreaResolver<TParent>;\n  name?: ResponsableInvolvedToNameResolver<TParent>;\n  contractorId?: ResponsableInvolvedToContractorIdResolver<TParent>;\n  contractor?: ResponsableInvolvedToContractorResolver<TParent>;\n  id?: ResponsableInvolvedToIdResolver<TParent>;\n  createdAt?: ResponsableInvolvedToCreatedAtResolver<TParent>;\n  updatedAt?: ResponsableInvolvedToUpdatedAtResolver<TParent>;\n}\n\nexport interface ResponsableInvolvedToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedToResponsableIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedToOwnerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedToAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedToContractorIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ResponsableInvolvedToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectAgentProviderEmailReminderCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProjectAgentProviderEmailReminderCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProjectAgentProviderEmailReminderCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProjectAgentProviderEmailReminderCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProjectAgentProviderEmailReminderCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderEmailReminderCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectAgentProviderCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProjectAgentProviderCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProjectAgentProviderCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProjectAgentProviderCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProjectAgentProviderCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentProviderContactCollectionSegmentTypeResolver<TParent = any> {\n  items?: AgentProviderContactCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: AgentProviderContactCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: AgentProviderContactCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface AgentProviderContactCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderContactCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentProviderCollectionSegmentTypeResolver<TParent = any> {\n  items?: AgentProviderCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: AgentProviderCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: AgentProviderCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface AgentProviderCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentProviderCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentKeyCollectionSegmentTypeResolver<TParent = any> {\n  items?: AgentKeyCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: AgentKeyCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: AgentKeyCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface AgentKeyCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AgentKeyCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IReferrerCollectionSegmentTypeResolver<TParent = any> {\n  items?: ReferrerCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ReferrerCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ReferrerCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ReferrerCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IReferrerBranchCollectionSegmentTypeResolver<TParent = any> {\n  items?: ReferrerBranchCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ReferrerBranchCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ReferrerBranchCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ReferrerBranchCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerBranchCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IReferrerAccountStateCollectionSegmentTypeResolver<TParent = any> {\n  items?: ReferrerAccountStateCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ReferrerAccountStateCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ReferrerAccountStateCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ReferrerAccountStateCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ReferrerAccountStateCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorCollectionSegmentTypeResolver<TParent = any> {\n  items?: ContractorCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ContractorCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ContractorCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ContractorCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorCelulaCollectionSegmentTypeResolver<TParent = any> {\n  items?: ContractorCelulaCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ContractorCelulaCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ContractorCelulaCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ContractorCelulaCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorCelulaCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorGroupCollectionSegmentTypeResolver<TParent = any> {\n  items?: ContractorGroupCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ContractorGroupCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ContractorGroupCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ContractorGroupCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorGroupingLevelCollectionSegmentTypeResolver<TParent = any> {\n  items?: ContractorGroupingLevelCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ContractorGroupingLevelCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ContractorGroupingLevelCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ContractorGroupingLevelCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorGroupingLevelCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorClassificationCollectionSegmentTypeResolver<TParent = any> {\n  items?: ContractorClassificationCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ContractorClassificationCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ContractorClassificationCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ContractorClassificationCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorClassificationCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorClassificationCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorProcessDocumentCollectionSegmentTypeResolver<TParent = any> {\n  items?: ContractorProcessDocumentCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ContractorProcessDocumentCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ContractorProcessDocumentCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ContractorProcessDocumentCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ContractorProcessDocumentCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProcessDocumentCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProcessDocumentCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProcessDocumentCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProcessDocumentCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProcessDocumentCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProcessDocumentCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProcessDocumentCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBranchCollectionSegmentTypeResolver<TParent = any> {\n  items?: BranchCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: BranchCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: BranchCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface BranchCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BranchCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISubBranchCollectionSegmentTypeResolver<TParent = any> {\n  items?: SubBranchCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: SubBranchCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: SubBranchCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface SubBranchCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SubBranchCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectAgentProviderBranchCollectionSegmentTypeResolver<TParent = any> {\n  items?: ProjectAgentProviderBranchCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: ProjectAgentProviderBranchCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: ProjectAgentProviderBranchCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface ProjectAgentProviderBranchCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectAgentProviderBranchCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeviceCollectionSegmentTypeResolver<TParent = any> {\n  items?: DeviceCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: DeviceCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: DeviceCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface DeviceCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DeviceCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INotificationCollectionSegmentTypeResolver<TParent = any> {\n  items?: NotificationCollectionSegmentToItemsResolver<TParent>;\n  pageInfo?: NotificationCollectionSegmentToPageInfoResolver<TParent>;\n  totalCount?: NotificationCollectionSegmentToTotalCountResolver<TParent>;\n}\n\nexport interface NotificationCollectionSegmentToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationCollectionSegmentToPageInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface NotificationCollectionSegmentToTotalCountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICodeTypeResolver<TParent = any> {\n  projectId?: CodeToProjectIdResolver<TParent>;\n  uniqueCode?: CodeToUniqueCodeResolver<TParent>;\n  expiration?: CodeToExpirationResolver<TParent>;\n  orderId?: CodeToOrderIdResolver<TParent>;\n  brandId?: CodeToBrandIdResolver<TParent>;\n  brand?: CodeToBrandResolver<TParent>;\n  batch?: CodeToBatchResolver<TParent>;\n  dots?: CodeToDotsResolver<TParent>;\n  providerId?: CodeToProviderIdResolver<TParent>;\n  provider?: CodeToProviderResolver<TParent>;\n  state?: CodeToStateResolver<TParent>;\n  id?: CodeToIdResolver<TParent>;\n  createdAt?: CodeToCreatedAtResolver<TParent>;\n  updatedAt?: CodeToUpdatedAtResolver<TParent>;\n}\n\nexport interface CodeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToUniqueCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToExpirationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToOrderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToBrandIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToBatchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToDotsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CodeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBrandTypeResolver<TParent = any> {\n  projectId?: BrandToProjectIdResolver<TParent>;\n  name?: BrandToNameResolver<TParent>;\n  image?: BrandToImageResolver<TParent>;\n  codes?: BrandToCodesResolver<TParent>;\n  id?: BrandToIdResolver<TParent>;\n  createdAt?: BrandToCreatedAtResolver<TParent>;\n  updatedAt?: BrandToUpdatedAtResolver<TParent>;\n}\n\nexport interface BrandToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BrandToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BrandToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BrandToCodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BrandToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BrandToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BrandToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProviderTypeResolver<TParent = any> {\n  projectId?: ProviderToProjectIdResolver<TParent>;\n  name?: ProviderToNameResolver<TParent>;\n  id?: ProviderToIdResolver<TParent>;\n  createdAt?: ProviderToCreatedAtResolver<TParent>;\n  updatedAt?: ProviderToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProviderToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProviderToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProviderToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProviderToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProviderToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDotMovementTypeResolver<TParent = any> {\n  codeId?: DotMovementToCodeIdResolver<TParent>;\n  code?: DotMovementToCodeResolver<TParent>;\n  memberId?: DotMovementToMemberIdResolver<TParent>;\n  dots?: DotMovementToDotsResolver<TParent>;\n  name?: DotMovementToNameResolver<TParent>;\n  email?: DotMovementToEmailResolver<TParent>;\n  phone?: DotMovementToPhoneResolver<TParent>;\n  status?: DotMovementToStatusResolver<TParent>;\n  movementType?: DotMovementToMovementTypeResolver<TParent>;\n  prizeCategoryId?: DotMovementToPrizeCategoryIdResolver<TParent>;\n  prizeCategory?: DotMovementToPrizeCategoryResolver<TParent>;\n  providerId?: DotMovementToProviderIdResolver<TParent>;\n  provider?: DotMovementToProviderResolver<TParent>;\n  prizeCodeId?: DotMovementToPrizeCodeIdResolver<TParent>;\n  prizeCode?: DotMovementToPrizeCodeResolver<TParent>;\n  image?: DotMovementToImageResolver<TParent>;\n  id?: DotMovementToIdResolver<TParent>;\n  createdAt?: DotMovementToCreatedAtResolver<TParent>;\n  updatedAt?: DotMovementToUpdatedAtResolver<TParent>;\n}\n\nexport interface DotMovementToCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToDotsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToPhoneResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToMovementTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToPrizeCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToPrizeCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToProviderIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToPrizeCodeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToPrizeCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface DotMovementToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPrizeCategoryTypeResolver<TParent = any> {\n  projectId?: PrizeCategoryToProjectIdResolver<TParent>;\n  name?: PrizeCategoryToNameResolver<TParent>;\n  image?: PrizeCategoryToImageResolver<TParent>;\n  dots?: PrizeCategoryToDotsResolver<TParent>;\n  id?: PrizeCategoryToIdResolver<TParent>;\n  createdAt?: PrizeCategoryToCreatedAtResolver<TParent>;\n  updatedAt?: PrizeCategoryToUpdatedAtResolver<TParent>;\n}\n\nexport interface PrizeCategoryToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCategoryToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCategoryToImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCategoryToDotsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCategoryToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCategoryToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCategoryToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPrizeCodeTypeResolver<TParent = any> {\n  projectId?: PrizeCodeToProjectIdResolver<TParent>;\n  title?: PrizeCodeToTitleResolver<TParent>;\n  description?: PrizeCodeToDescriptionResolver<TParent>;\n  status?: PrizeCodeToStatusResolver<TParent>;\n  prizeCategoryId?: PrizeCodeToPrizeCategoryIdResolver<TParent>;\n  dots?: PrizeCodeToDotsResolver<TParent>;\n  code?: PrizeCodeToCodeResolver<TParent>;\n  prizeCategory?: PrizeCodeToPrizeCategoryResolver<TParent>;\n  value?: PrizeCodeToValueResolver<TParent>;\n  id?: PrizeCodeToIdResolver<TParent>;\n  createdAt?: PrizeCodeToCreatedAtResolver<TParent>;\n  updatedAt?: PrizeCodeToUpdatedAtResolver<TParent>;\n}\n\nexport interface PrizeCodeToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToTitleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToPrizeCategoryIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToDotsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToPrizeCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PrizeCodeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMutationTypeResolver<TParent = any> {\n  sendQuizToEmail?: MutationToSendQuizToEmailResolver<TParent>;\n  translateCountries?: MutationToTranslateCountriesResolver<TParent>;\n  updateWithIdProfile?: MutationToUpdateWithIdProfileResolver<TParent>;\n  createNiche?: MutationToCreateNicheResolver<TParent>;\n  updateNiche?: MutationToUpdateNicheResolver<TParent>;\n  deleteNiche?: MutationToDeleteNicheResolver<TParent>;\n  createNicheService?: MutationToCreateNicheServiceResolver<TParent>;\n  createBulkTutor?: MutationToCreateBulkTutorResolver<TParent>;\n  updateNicheService?: MutationToUpdateNicheServiceResolver<TParent>;\n  deleteNicheService?: MutationToDeleteNicheServiceResolver<TParent>;\n  updateBillingData?: MutationToUpdateBillingDataResolver<TParent>;\n  updateCompanyData?: MutationToUpdateCompanyDataResolver<TParent>;\n  createBulkTeacher?: MutationToCreateBulkTeacherResolver<TParent>;\n  updateHealthInsurance?: MutationToUpdateHealthInsuranceResolver<TParent>;\n  createAttendanceExcel?: MutationToCreateAttendanceExcelResolver<TParent>;\n  createBulkUser?: MutationToCreateBulkUserResolver<TParent>;\n  createAttendance?: MutationToCreateAttendanceResolver<TParent>;\n  createCheisiUsersExcel?: MutationToCreateCheisiUsersExcelResolver<TParent>;\n  newContactForm?: MutationToNewContactFormResolver<TParent>;\n  newExternalLogin?: MutationToNewExternalLoginResolver<TParent>;\n  deleteUser?: MutationToDeleteUserResolver<TParent>;\n  testBulk?: MutationToTestBulkResolver<TParent>;\n  updatePositionColumns?: MutationToUpdatePositionColumnsResolver<TParent>;\n  updatePositionBlockColumns?: MutationToUpdatePositionBlockColumnsResolver<TParent>;\n  loginWithProvider?: MutationToLoginWithProviderResolver<TParent>;\n  createProjectSocialNetwork?: MutationToCreateProjectSocialNetworkResolver<TParent>;\n  updateProjectSocialNetwork?: MutationToUpdateProjectSocialNetworkResolver<TParent>;\n  deleteProjectSocialNetwork?: MutationToDeleteProjectSocialNetworkResolver<TParent>;\n  createRecommendedProject?: MutationToCreateRecommendedProjectResolver<TParent>;\n  updateRecommendedProject?: MutationToUpdateRecommendedProjectResolver<TParent>;\n  deleteRecommendedProject?: MutationToDeleteRecommendedProjectResolver<TParent>;\n  setProjectToProduction?: MutationToSetProjectToProductionResolver<TParent>;\n  createProjectTemplate?: MutationToCreateProjectTemplateResolver<TParent>;\n  updateProjectTemplate?: MutationToUpdateProjectTemplateResolver<TParent>;\n  deleteProjectTemplate?: MutationToDeleteProjectTemplateResolver<TParent>;\n  createMember?: MutationToCreateMemberResolver<TParent>;\n  loginMember?: MutationToLoginMemberResolver<TParent>;\n  createCompany?: MutationToCreateCompanyResolver<TParent>;\n  createProject?: MutationToCreateProjectResolver<TParent>;\n  generateSlug?: MutationToGenerateSlugResolver<TParent>;\n  createNewRoles?: MutationToCreateNewRolesResolver<TParent>;\n  createUser?: MutationToCreateUserResolver<TParent>;\n  createOrFindUser?: MutationToCreateOrFindUserResolver<TParent>;\n  createOrdinaryUser?: MutationToCreateOrdinaryUserResolver<TParent>;\n  createUserWithoutMail?: MutationToCreateUserWithoutMailResolver<TParent>;\n  updateProfile?: MutationToUpdateProfileResolver<TParent>;\n  updatePassword?: MutationToUpdatePasswordResolver<TParent>;\n  activeMember?: MutationToActiveMemberResolver<TParent>;\n  createProjectRole?: MutationToCreateProjectRoleResolver<TParent>;\n  removeAccent?: MutationToRemoveAccentResolver<TParent>;\n  uploadPhotoProfile?: MutationToUploadPhotoProfileResolver<TParent>;\n  deleteProject?: MutationToDeleteProjectResolver<TParent>;\n  updateCompany?: MutationToUpdateCompanyResolver<TParent>;\n  restorePassword?: MutationToRestorePasswordResolver<TParent>;\n  recoverPassword?: MutationToRecoverPasswordResolver<TParent>;\n  verifyToken?: MutationToVerifyTokenResolver<TParent>;\n  createGroup?: MutationToCreateGroupResolver<TParent>;\n  addGroupToMember?: MutationToAddGroupToMemberResolver<TParent>;\n  addGroupToTaxonomy?: MutationToAddGroupToTaxonomyResolver<TParent>;\n  addTaxonomyToMember?: MutationToAddTaxonomyToMemberResolver<TParent>;\n  deleteGroup?: MutationToDeleteGroupResolver<TParent>;\n  deleteGroupTaxonomy?: MutationToDeleteGroupTaxonomyResolver<TParent>;\n  deleteMemberGroup?: MutationToDeleteMemberGroupResolver<TParent>;\n  deleteMemberTaxonomy?: MutationToDeleteMemberTaxonomyResolver<TParent>;\n  deleteMember?: MutationToDeleteMemberResolver<TParent>;\n  deleteProjectRole?: MutationToDeleteProjectRoleResolver<TParent>;\n  createUpdatePermission?: MutationToCreateUpdatePermissionResolver<TParent>;\n  updateProject?: MutationToUpdateProjectResolver<TParent>;\n  updateProjectRole?: MutationToUpdateProjectRoleResolver<TParent>;\n  updateGroup?: MutationToUpdateGroupResolver<TParent>;\n  addMemberAsAdmin?: MutationToAddMemberAsAdminResolver<TParent>;\n  createMemberStream?: MutationToCreateMemberStreamResolver<TParent>;\n  deleteMemberFromMemberProjects?: MutationToDeleteMemberFromMemberProjectsResolver<TParent>;\n  addMemberToCompany?: MutationToAddMemberToCompanyResolver<TParent>;\n  createPageManager?: MutationToCreatePageManagerResolver<TParent>;\n  createViewManager?: MutationToCreateViewManagerResolver<TParent>;\n  createViewColumn?: MutationToCreateViewColumnResolver<TParent>;\n  createViewBlockColumn?: MutationToCreateViewBlockColumnResolver<TParent>;\n  updatePageManager?: MutationToUpdatePageManagerResolver<TParent>;\n  updateViewManager?: MutationToUpdateViewManagerResolver<TParent>;\n  updateViewColumn?: MutationToUpdateViewColumnResolver<TParent>;\n  updateViewBlockColumn?: MutationToUpdateViewBlockColumnResolver<TParent>;\n  deletePageManager?: MutationToDeletePageManagerResolver<TParent>;\n  deleteViewManager?: MutationToDeleteViewManagerResolver<TParent>;\n  deleteViewColumn?: MutationToDeleteViewColumnResolver<TParent>;\n  linkTransactionToSell?: MutationToLinkTransactionToSellResolver<TParent>;\n  updateSell?: MutationToUpdateSellResolver<TParent>;\n  deleteViewBlockColumn?: MutationToDeleteViewBlockColumnResolver<TParent>;\n  createMultipleMemberRelation?: MutationToCreateMultipleMemberRelationResolver<TParent>;\n  createMemberRelation?: MutationToCreateMemberRelationResolver<TParent>;\n  updateMemberRelation?: MutationToUpdateMemberRelationResolver<TParent>;\n  deleteMemberRelation?: MutationToDeleteMemberRelationResolver<TParent>;\n  updateProductSell?: MutationToUpdateProductSellResolver<TParent>;\n  createTax?: MutationToCreateTaxResolver<TParent>;\n  deleteTax?: MutationToDeleteTaxResolver<TParent>;\n  importProductsFromExcel?: MutationToImportProductsFromExcelResolver<TParent>;\n  createRoute?: MutationToCreateRouteResolver<TParent>;\n  deleteRoute?: MutationToDeleteRouteResolver<TParent>;\n  createProductSell?: MutationToCreateProductSellResolver<TParent>;\n  deleteProductSell?: MutationToDeleteProductSellResolver<TParent>;\n  createPurchaseQuote?: MutationToCreatePurchaseQuoteResolver<TParent>;\n  deletePurchaseQuote?: MutationToDeletePurchaseQuoteResolver<TParent>;\n  createStockAlert?: MutationToCreateStockAlertResolver<TParent>;\n  deleteStockAlert?: MutationToDeleteStockAlertResolver<TParent>;\n  updateStockAlert?: MutationToUpdateStockAlertResolver<TParent>;\n  createLegalTerm?: MutationToCreateLegalTermResolver<TParent>;\n  createInsuranceForm?: MutationToCreateInsuranceFormResolver<TParent>;\n  updateInsuranceForm?: MutationToUpdateInsuranceFormResolver<TParent>;\n  updateLegalTerm?: MutationToUpdateLegalTermResolver<TParent>;\n  deleteLegalTerm?: MutationToDeleteLegalTermResolver<TParent>;\n  createArticle?: MutationToCreateArticleResolver<TParent>;\n  updateStatusArticle?: MutationToUpdateStatusArticleResolver<TParent>;\n  createTaxonomy?: MutationToCreateTaxonomyResolver<TParent>;\n  blog_generateSlug?: MutationToBlog_generateSlugResolver<TParent>;\n  updateArticle?: MutationToUpdateArticleResolver<TParent>;\n  updateTaxonomy?: MutationToUpdateTaxonomyResolver<TParent>;\n  deleteArticle?: MutationToDeleteArticleResolver<TParent>;\n  deleteTaxonomy?: MutationToDeleteTaxonomyResolver<TParent>;\n  newSurvey?: MutationToNewSurveyResolver<TParent>;\n  updateSurvey?: MutationToUpdateSurveyResolver<TParent>;\n  deleteSurvey?: MutationToDeleteSurveyResolver<TParent>;\n  newQuestion?: MutationToNewQuestionResolver<TParent>;\n  deleteQuestion?: MutationToDeleteQuestionResolver<TParent>;\n  updateQuestion?: MutationToUpdateQuestionResolver<TParent>;\n  newOption?: MutationToNewOptionResolver<TParent>;\n  deleteOption?: MutationToDeleteOptionResolver<TParent>;\n  updateOption?: MutationToUpdateOptionResolver<TParent>;\n  answerQuestion?: MutationToAnswerQuestionResolver<TParent>;\n  createProduct?: MutationToCreateProductResolver<TParent>;\n  updateProduct?: MutationToUpdateProductResolver<TParent>;\n  deleteProduct?: MutationToDeleteProductResolver<TParent>;\n  createAddress?: MutationToCreateAddressResolver<TParent>;\n  updateAddress?: MutationToUpdateAddressResolver<TParent>;\n  deleteAddress?: MutationToDeleteAddressResolver<TParent>;\n  createUpdateShop?: MutationToCreateUpdateShopResolver<TParent>;\n  createDisease?: MutationToCreateDiseaseResolver<TParent>;\n  updateDisease?: MutationToUpdateDiseaseResolver<TParent>;\n  deleteDisease?: MutationToDeleteDiseaseResolver<TParent>;\n  createTopicDisease?: MutationToCreateTopicDiseaseResolver<TParent>;\n  updateTopicDisease?: MutationToUpdateTopicDiseaseResolver<TParent>;\n  deleteTopicDisease?: MutationToDeleteTopicDiseaseResolver<TParent>;\n  createFAQ?: MutationToCreateFAQResolver<TParent>;\n  updateFAQ?: MutationToUpdateFAQResolver<TParent>;\n  deleteFAQ?: MutationToDeleteFAQResolver<TParent>;\n  runJobShop?: MutationToRunJobShopResolver<TParent>;\n  createCourse?: MutationToCreateCourseResolver<TParent>;\n  createBeginCourse?: MutationToCreateBeginCourseResolver<TParent>;\n  createCourseForm?: MutationToCreateCourseFormResolver<TParent>;\n  updateCourse?: MutationToUpdateCourseResolver<TParent>;\n  updateBeginCourse?: MutationToUpdateBeginCourseResolver<TParent>;\n  updateCourseForm?: MutationToUpdateCourseFormResolver<TParent>;\n  deleteCourse?: MutationToDeleteCourseResolver<TParent>;\n  deleteBeginCourse?: MutationToDeleteBeginCourseResolver<TParent>;\n  deleteCourseForm?: MutationToDeleteCourseFormResolver<TParent>;\n  fixProduct?: MutationToFixProductResolver<TParent>;\n  deleteCourseSchedule?: MutationToDeleteCourseScheduleResolver<TParent>;\n  updateCourseSchedule?: MutationToUpdateCourseScheduleResolver<TParent>;\n  createBranchOffice?: MutationToCreateBranchOfficeResolver<TParent>;\n  createManager?: MutationToCreateManagerResolver<TParent>;\n  createProductPurchase?: MutationToCreateProductPurchaseResolver<TParent>;\n  createPurchase?: MutationToCreatePurchaseResolver<TParent>;\n  createStore?: MutationToCreateStoreResolver<TParent>;\n  newStoreTransfer?: MutationToNewStoreTransferResolver<TParent>;\n  createProvider?: MutationToCreateProviderResolver<TParent>;\n  updateBranchOffice?: MutationToUpdateBranchOfficeResolver<TParent>;\n  updateManager?: MutationToUpdateManagerResolver<TParent>;\n  updatePurchase?: MutationToUpdatePurchaseResolver<TParent>;\n  updateStore?: MutationToUpdateStoreResolver<TParent>;\n  deleteStore?: MutationToDeleteStoreResolver<TParent>;\n  deleteManager?: MutationToDeleteManagerResolver<TParent>;\n  updateProvider?: MutationToUpdateProviderResolver<TParent>;\n  deleteProvider?: MutationToDeleteProviderResolver<TParent>;\n  deletePurchase?: MutationToDeletePurchaseResolver<TParent>;\n  deleteProductPurchase?: MutationToDeleteProductPurchaseResolver<TParent>;\n  deleteBranchOffice?: MutationToDeleteBranchOfficeResolver<TParent>;\n  associationServiceToProject?: MutationToAssociationServiceToProjectResolver<TParent>;\n  createArrayFunction?: MutationToCreateArrayFunctionResolver<TParent>;\n  deleteArrayFunction?: MutationToDeleteArrayFunctionResolver<TParent>;\n  updateServiceProject?: MutationToUpdateServiceProjectResolver<TParent>;\n  deleteServiceProject?: MutationToDeleteServiceProjectResolver<TParent>;\n  cancelEvent?: MutationToCancelEventResolver<TParent>;\n  createEventType?: MutationToCreateEventTypeResolver<TParent>;\n  createSubEventType?: MutationToCreateSubEventTypeResolver<TParent>;\n  deleteSubEventType?: MutationToDeleteSubEventTypeResolver<TParent>;\n  updateSubEventType?: MutationToUpdateSubEventTypeResolver<TParent>;\n  addSubTypeToEventType?: MutationToAddSubTypeToEventTypeResolver<TParent>;\n  deleteEventType?: MutationToDeleteEventTypeResolver<TParent>;\n  updateEventType?: MutationToUpdateEventTypeResolver<TParent>;\n  createEvent?: MutationToCreateEventResolver<TParent>;\n  createEventMember?: MutationToCreateEventMemberResolver<TParent>;\n  updateEvent?: MutationToUpdateEventResolver<TParent>;\n  deleteEvent?: MutationToDeleteEventResolver<TParent>;\n  createEventSession?: MutationToCreateEventSessionResolver<TParent>;\n  updateEventSession?: MutationToUpdateEventSessionResolver<TParent>;\n  deleteEventSession?: MutationToDeleteEventSessionResolver<TParent>;\n  sendRecordatory?: MutationToSendRecordatoryResolver<TParent>;\n  createSchedule?: MutationToCreateScheduleResolver<TParent>;\n  associationMemberToConsult?: MutationToAssociationMemberToConsultResolver<TParent>;\n  cancellationMemberToConsult?: MutationToCancellationMemberToConsultResolver<TParent>;\n  changeStatusEvent?: MutationToChangeStatusEventResolver<TParent>;\n  deleteSchedule?: MutationToDeleteScheduleResolver<TParent>;\n  deleteTurn?: MutationToDeleteTurnResolver<TParent>;\n  createResourceQuote?: MutationToCreateResourceQuoteResolver<TParent>;\n  updateResourceQuote?: MutationToUpdateResourceQuoteResolver<TParent>;\n  deleteResourceQuote?: MutationToDeleteResourceQuoteResolver<TParent>;\n  createResourceQuoteDetail?: MutationToCreateResourceQuoteDetailResolver<TParent>;\n  updateResourceQuoteDetail?: MutationToUpdateResourceQuoteDetailResolver<TParent>;\n  deleteResourceQuoteDetail?: MutationToDeleteResourceQuoteDetailResolver<TParent>;\n  createProposal?: MutationToCreateProposalResolver<TParent>;\n  updateProposal?: MutationToUpdateProposalResolver<TParent>;\n  deleteProposal?: MutationToDeleteProposalResolver<TParent>;\n  createCollaborator?: MutationToCreateCollaboratorResolver<TParent>;\n  updateCollaborator?: MutationToUpdateCollaboratorResolver<TParent>;\n  deleteCollaborator?: MutationToDeleteCollaboratorResolver<TParent>;\n  createCollaboratorHours?: MutationToCreateCollaboratorHoursResolver<TParent>;\n  updateCollaboratorHours?: MutationToUpdateCollaboratorHoursResolver<TParent>;\n  deleteCollaboratorHours?: MutationToDeleteCollaboratorHoursResolver<TParent>;\n  createHiring?: MutationToCreateHiringResolver<TParent>;\n  updateHiring?: MutationToUpdateHiringResolver<TParent>;\n  deleteHiring?: MutationToDeleteHiringResolver<TParent>;\n  createHiringService?: MutationToCreateHiringServiceResolver<TParent>;\n  updateHiringService?: MutationToUpdateHiringServiceResolver<TParent>;\n  deleteHiringService?: MutationToDeleteHiringServiceResolver<TParent>;\n  createHiringType?: MutationToCreateHiringTypeResolver<TParent>;\n  updateHiringType?: MutationToUpdateHiringTypeResolver<TParent>;\n  deleteHiringType?: MutationToDeleteHiringTypeResolver<TParent>;\n  createShift?: MutationToCreateShiftResolver<TParent>;\n  updateShift?: MutationToUpdateShiftResolver<TParent>;\n  deleteShift?: MutationToDeleteShiftResolver<TParent>;\n  createBusinessType?: MutationToCreateBusinessTypeResolver<TParent>;\n  updateBusinessType?: MutationToUpdateBusinessTypeResolver<TParent>;\n  deleteBusinessType?: MutationToDeleteBusinessTypeResolver<TParent>;\n  createBusinessRule?: MutationToCreateBusinessRuleResolver<TParent>;\n  updateBusinessRule?: MutationToUpdateBusinessRuleResolver<TParent>;\n  deleteBusinessRule?: MutationToDeleteBusinessRuleResolver<TParent>;\n  deleteCouponFromTemplate?: MutationToDeleteCouponFromTemplateResolver<TParent>;\n  addCouponsToTemplate?: MutationToAddCouponsToTemplateResolver<TParent>;\n  createUpdateConfigurationTemplate?: MutationToCreateUpdateConfigurationTemplateResolver<TParent>;\n  sendTemplate?: MutationToSendTemplateResolver<TParent>;\n  putFirebaseDevice?: MutationToPutFirebaseDeviceResolver<TParent>;\n  createCoupon?: MutationToCreateCouponResolver<TParent>;\n  updateCoupon?: MutationToUpdateCouponResolver<TParent>;\n  deleteCoupon?: MutationToDeleteCouponResolver<TParent>;\n  createTemplate?: MutationToCreateTemplateResolver<TParent>;\n  updateTemplate?: MutationToUpdateTemplateResolver<TParent>;\n  deleteTemplate?: MutationToDeleteTemplateResolver<TParent>;\n  createErrorPage?: MutationToCreateErrorPageResolver<TParent>;\n  updateErrorPage?: MutationToUpdateErrorPageResolver<TParent>;\n  deleteErrorPage?: MutationToDeleteErrorPageResolver<TParent>;\n  createErrorPageValidation?: MutationToCreateErrorPageValidationResolver<TParent>;\n  updateErrorPageValidation?: MutationToUpdateErrorPageValidationResolver<TParent>;\n  deleteErrorValidationPage?: MutationToDeleteErrorValidationPageResolver<TParent>;\n  createBusiness?: MutationToCreateBusinessResolver<TParent>;\n  updateBusiness?: MutationToUpdateBusinessResolver<TParent>;\n  deleteBusiness?: MutationToDeleteBusinessResolver<TParent>;\n  associateBusinessRules?: MutationToAssociateBusinessRulesResolver<TParent>;\n  associateProjectPlanSubscription?: MutationToAssociateProjectPlanSubscriptionResolver<TParent>;\n  createProjectPlan?: MutationToCreateProjectPlanResolver<TParent>;\n  updateProjectPlan?: MutationToUpdateProjectPlanResolver<TParent>;\n  deleteProjectPlan?: MutationToDeleteProjectPlanResolver<TParent>;\n  deleteProjectPlanSubscription?: MutationToDeleteProjectPlanSubscriptionResolver<TParent>;\n  putConfig?: MutationToPutConfigResolver<TParent>;\n  deleteConfig?: MutationToDeleteConfigResolver<TParent>;\n  updateOrderPages?: MutationToUpdateOrderPagesResolver<TParent>;\n  updateBatchWewbsiteComponent?: MutationToUpdateBatchWewbsiteComponentResolver<TParent>;\n  createComponent?: MutationToCreateComponentResolver<TParent>;\n  createWebsiteComponent?: MutationToCreateWebsiteComponentResolver<TParent>;\n  createWebsitePage?: MutationToCreateWebsitePageResolver<TParent>;\n  createWebsiteSeo?: MutationToCreateWebsiteSeoResolver<TParent>;\n  updateComponent?: MutationToUpdateComponentResolver<TParent>;\n  updateWebsiteComponent?: MutationToUpdateWebsiteComponentResolver<TParent>;\n  updateWebsitePage?: MutationToUpdateWebsitePageResolver<TParent>;\n  updateWebsiteSeo?: MutationToUpdateWebsiteSeoResolver<TParent>;\n  deleteComponent?: MutationToDeleteComponentResolver<TParent>;\n  deleteWebsiteComponent?: MutationToDeleteWebsiteComponentResolver<TParent>;\n  deleteWebsitePage?: MutationToDeleteWebsitePageResolver<TParent>;\n  deleteWebsiteSeo?: MutationToDeleteWebsiteSeoResolver<TParent>;\n  deleteBusinessRuleProjectPlans?: MutationToDeleteBusinessRuleProjectPlansResolver<TParent>;\n  createDocumentCategory?: MutationToCreateDocumentCategoryResolver<TParent>;\n  updateDocumentCategory?: MutationToUpdateDocumentCategoryResolver<TParent>;\n  deleteDocumentCategory?: MutationToDeleteDocumentCategoryResolver<TParent>;\n  createDocumentCategoryDetail?: MutationToCreateDocumentCategoryDetailResolver<TParent>;\n  updateDocumentCategoryDetail?: MutationToUpdateDocumentCategoryDetailResolver<TParent>;\n  deleteDocumentCategoryDetail?: MutationToDeleteDocumentCategoryDetailResolver<TParent>;\n  createDocument?: MutationToCreateDocumentResolver<TParent>;\n  updateDocument?: MutationToUpdateDocumentResolver<TParent>;\n  deleteDocument?: MutationToDeleteDocumentResolver<TParent>;\n  createDocumentTemplate?: MutationToCreateDocumentTemplateResolver<TParent>;\n  updateDocumentTemplate?: MutationToUpdateDocumentTemplateResolver<TParent>;\n  deleteDocumentTemplate?: MutationToDeleteDocumentTemplateResolver<TParent>;\n  createTemplatePage?: MutationToCreateTemplatePageResolver<TParent>;\n  updateTemplatePage?: MutationToUpdateTemplatePageResolver<TParent>;\n  deleteTemplatePage?: MutationToDeleteTemplatePageResolver<TParent>;\n  createDocumentTag?: MutationToCreateDocumentTagResolver<TParent>;\n  updateDocumentTag?: MutationToUpdateDocumentTagResolver<TParent>;\n  deleteDocumentTag?: MutationToDeleteDocumentTagResolver<TParent>;\n  createDocumentScan?: MutationToCreateDocumentScanResolver<TParent>;\n  updateDocumentScan?: MutationToUpdateDocumentScanResolver<TParent>;\n  deleteDocumentScan?: MutationToDeleteDocumentScanResolver<TParent>;\n  createDocumentRead?: MutationToCreateDocumentReadResolver<TParent>;\n  updateDocumentRead?: MutationToUpdateDocumentReadResolver<TParent>;\n  deleteDocumentRead?: MutationToDeleteDocumentReadResolver<TParent>;\n  readTextFromImage?: MutationToReadTextFromImageResolver<TParent>;\n  createVideoCall?: MutationToCreateVideoCallResolver<TParent>;\n  updateVideoCall?: MutationToUpdateVideoCallResolver<TParent>;\n  deleteVideoCall?: MutationToDeleteVideoCallResolver<TParent>;\n  createAccessToken?: MutationToCreateAccessTokenResolver<TParent>;\n  createVideoRoom?: MutationToCreateVideoRoomResolver<TParent>;\n  sendNotification?: MutationToSendNotificationResolver<TParent>;\n  sendEmailDownload?: MutationToSendEmailDownloadResolver<TParent>;\n  sendEmailNotification?: MutationToSendEmailNotificationResolver<TParent>;\n  muteParticipant?: MutationToMuteParticipantResolver<TParent>;\n  removeParticipantRoom?: MutationToRemoveParticipantRoomResolver<TParent>;\n  updateParticipantRoom?: MutationToUpdateParticipantRoomResolver<TParent>;\n  startRecordRoom2?: MutationToStartRecordRoom2Resolver<TParent>;\n  endRecordRoom?: MutationToEndRecordRoomResolver<TParent>;\n  createUpdateContactEmail?: MutationToCreateUpdateContactEmailResolver<TParent>;\n  sendEmail?: MutationToSendEmailResolver<TParent>;\n  deleteContactEmail?: MutationToDeleteContactEmailResolver<TParent>;\n  sendMailBot?: MutationToSendMailBotResolver<TParent>;\n  sendQuiz?: MutationToSendQuizResolver<TParent>;\n  mainSection?: MutationToMainSectionResolver<TParent>;\n  hyperVincule?: MutationToHyperVinculeResolver<TParent>;\n  sendQuizGratitude?: MutationToSendQuizGratitudeResolver<TParent>;\n  createServiceArea?: MutationToCreateServiceAreaResolver<TParent>;\n  updateServiceArea?: MutationToUpdateServiceAreaResolver<TParent>;\n  deleteServiceArea?: MutationToDeleteServiceAreaResolver<TParent>;\n  createArea?: MutationToCreateAreaResolver<TParent>;\n  updateArea?: MutationToUpdateAreaResolver<TParent>;\n  deleteArea?: MutationToDeleteAreaResolver<TParent>;\n  updateBatchServiceMember?: MutationToUpdateBatchServiceMemberResolver<TParent>;\n  createServiceMember?: MutationToCreateServiceMemberResolver<TParent>;\n  updateServiceMember?: MutationToUpdateServiceMemberResolver<TParent>;\n  deleteServiceMember?: MutationToDeleteServiceMemberResolver<TParent>;\n  createServiceQuiz?: MutationToCreateServiceQuizResolver<TParent>;\n  updateServiceQuiz?: MutationToUpdateServiceQuizResolver<TParent>;\n  deleteServiceQuiz?: MutationToDeleteServiceQuizResolver<TParent>;\n  createQuiz?: MutationToCreateQuizResolver<TParent>;\n  updateQuiz?: MutationToUpdateQuizResolver<TParent>;\n  deleteQuiz?: MutationToDeleteQuizResolver<TParent>;\n  createQuizSection?: MutationToCreateQuizSectionResolver<TParent>;\n  updateQuizSection?: MutationToUpdateQuizSectionResolver<TParent>;\n  deleteQuizSection?: MutationToDeleteQuizSectionResolver<TParent>;\n  duplicateQuizQuestion?: MutationToDuplicateQuizQuestionResolver<TParent>;\n  createQuizQuestion?: MutationToCreateQuizQuestionResolver<TParent>;\n  updateQuizQuestion?: MutationToUpdateQuizQuestionResolver<TParent>;\n  deleteQuizQuestion?: MutationToDeleteQuizQuestionResolver<TParent>;\n  createQuizQuestionNested?: MutationToCreateQuizQuestionNestedResolver<TParent>;\n  updateQuizQuestionNested?: MutationToUpdateQuizQuestionNestedResolver<TParent>;\n  deleteQuizQuestionNested?: MutationToDeleteQuizQuestionNestedResolver<TParent>;\n  updateBatchQuizQuestion?: MutationToUpdateBatchQuizQuestionResolver<TParent>;\n  createQuizQuestionAnswer?: MutationToCreateQuizQuestionAnswerResolver<TParent>;\n  updateQuizQuestionAnswer?: MutationToUpdateQuizQuestionAnswerResolver<TParent>;\n  deleteQuizQuestionAnswer?: MutationToDeleteQuizQuestionAnswerResolver<TParent>;\n  updateBatchQuizQuestionAnswer?: MutationToUpdateBatchQuizQuestionAnswerResolver<TParent>;\n  createQuizAnswer?: MutationToCreateQuizAnswerResolver<TParent>;\n  updateQuizAnswer?: MutationToUpdateQuizAnswerResolver<TParent>;\n  deleteQuizAnswer?: MutationToDeleteQuizAnswerResolver<TParent>;\n  createQuizMember?: MutationToCreateQuizMemberResolver<TParent>;\n  updateQuizMember?: MutationToUpdateQuizMemberResolver<TParent>;\n  deleteQuizMember?: MutationToDeleteQuizMemberResolver<TParent>;\n  createQuizQuestionMember?: MutationToCreateQuizQuestionMemberResolver<TParent>;\n  updateQuizQuestionMember?: MutationToUpdateQuizQuestionMemberResolver<TParent>;\n  deleteQuizQuestionMember?: MutationToDeleteQuizQuestionMemberResolver<TParent>;\n  updateBatchQuizQuestionMember?: MutationToUpdateBatchQuizQuestionMemberResolver<TParent>;\n  createQuizMemberAnswer?: MutationToCreateQuizMemberAnswerResolver<TParent>;\n  updateQuizMemberAnswer?: MutationToUpdateQuizMemberAnswerResolver<TParent>;\n  deleteQuizMemberAnswer?: MutationToDeleteQuizMemberAnswerResolver<TParent>;\n  updateBatchQuizMemberAnswer?: MutationToUpdateBatchQuizMemberAnswerResolver<TParent>;\n  createQuizMemberDescription?: MutationToCreateQuizMemberDescriptionResolver<TParent>;\n  updateQuizMemberDescription?: MutationToUpdateQuizMemberDescriptionResolver<TParent>;\n  deleteQuizMemberDescription?: MutationToDeleteQuizMemberDescriptionResolver<TParent>;\n  updateBatchQuizMemberDescription?: MutationToUpdateBatchQuizMemberDescriptionResolver<TParent>;\n  createKey?: MutationToCreateKeyResolver<TParent>;\n  createQuotationAarco?: MutationToCreateQuotationAarcoResolver<TParent>;\n  loginAarco?: MutationToLoginAarcoResolver<TParent>;\n  policyAarco?: MutationToPolicyAarcoResolver<TParent>;\n  quotationDownloadPDFAarco?: MutationToQuotationDownloadPDFAarcoResolver<TParent>;\n  quotationEmitAarco?: MutationToQuotationEmitAarcoResolver<TParent>;\n  quotationSendPDFAarco?: MutationToQuotationSendPDFAarcoResolver<TParent>;\n  attachPaymentMethodToCustomer?: MutationToAttachPaymentMethodToCustomerResolver<TParent>;\n  createSetupIntentStripe?: MutationToCreateSetupIntentStripeResolver<TParent>;\n  setDefaultPaymentMethodOnCustomer?: MutationToSetDefaultPaymentMethodOnCustomerResolver<TParent>;\n  updatePriceStripe?: MutationToUpdatePriceStripeResolver<TParent>;\n  newPaymentsAnyType?: MutationToNewPaymentsAnyTypeResolver<TParent>;\n  createProductStripe?: MutationToCreateProductStripeResolver<TParent>;\n  createPlan?: MutationToCreatePlanResolver<TParent>;\n  createStripePrice?: MutationToCreateStripePriceResolver<TParent>;\n  createMethodPayment?: MutationToCreateMethodPaymentResolver<TParent>;\n  updateMethodPayment?: MutationToUpdateMethodPaymentResolver<TParent>;\n  deleteMethodPayment?: MutationToDeleteMethodPaymentResolver<TParent>;\n  createPaymentStripe?: MutationToCreatePaymentStripeResolver<TParent>;\n  createPaymentStripeToAccount?: MutationToCreatePaymentStripeToAccountResolver<TParent>;\n  createSuscriptionStripe?: MutationToCreateSuscriptionStripeResolver<TParent>;\n  createSuscriptionExternalStripe?: MutationToCreateSuscriptionExternalStripeResolver<TParent>;\n  deleteSuscriptionExternalStripe?: MutationToDeleteSuscriptionExternalStripeResolver<TParent>;\n  createAccountStripe?: MutationToCreateAccountStripeResolver<TParent>;\n  deletePayment?: MutationToDeletePaymentResolver<TParent>;\n  updatePayment?: MutationToUpdatePaymentResolver<TParent>;\n  createInvoice?: MutationToCreateInvoiceResolver<TParent>;\n  updateStatusInvoice?: MutationToUpdateStatusInvoiceResolver<TParent>;\n  createPaymentMethod?: MutationToCreatePaymentMethodResolver<TParent>;\n  deletePaymentMethod?: MutationToDeletePaymentMethodResolver<TParent>;\n  createBatchInsurerCoverages?: MutationToCreateBatchInsurerCoveragesResolver<TParent>;\n  createQuote?: MutationToCreateQuoteResolver<TParent>;\n  createNewOffices?: MutationToCreateNewOfficesResolver<TParent>;\n  createNewProfiles?: MutationToCreateNewProfilesResolver<TParent>;\n  createInsurer?: MutationToCreateInsurerResolver<TParent>;\n  createOffice?: MutationToCreateOfficeResolver<TParent>;\n  createRegistration?: MutationToCreateRegistrationResolver<TParent>;\n  createQuatorProfile?: MutationToCreateQuatorProfileResolver<TParent>;\n  deleteInsurer?: MutationToDeleteInsurerResolver<TParent>;\n  deleteOffice?: MutationToDeleteOfficeResolver<TParent>;\n  deleteQuoterProfile?: MutationToDeleteQuoterProfileResolver<TParent>;\n  updateInsurer?: MutationToUpdateInsurerResolver<TParent>;\n  updateOffice?: MutationToUpdateOfficeResolver<TParent>;\n  updateQuoterProfile?: MutationToUpdateQuoterProfileResolver<TParent>;\n  createCatalog?: MutationToCreateCatalogResolver<TParent>;\n  populateCredentials?: MutationToPopulateCredentialsResolver<TParent>;\n  populateServices?: MutationToPopulateServicesResolver<TParent>;\n  registrarPersona?: MutationToRegistrarPersonaResolver<TParent>;\n  runServiceQuote?: MutationToRunServiceQuoteResolver<TParent>;\n  emissionCar?: MutationToEmissionCarResolver<TParent>;\n  printEmission?: MutationToPrintEmissionResolver<TParent>;\n  createQuoteCoverage?: MutationToCreateQuoteCoverageResolver<TParent>;\n  updateQuoteCoverage?: MutationToUpdateQuoteCoverageResolver<TParent>;\n  deleteQuoteCoverage?: MutationToDeleteQuoteCoverageResolver<TParent>;\n  associationWithQuoterProfile?: MutationToAssociationWithQuoterProfileResolver<TParent>;\n  updateQuote?: MutationToUpdateQuoteResolver<TParent>;\n  createInsurerCredential?: MutationToCreateInsurerCredentialResolver<TParent>;\n  updateInsurerCredential?: MutationToUpdateInsurerCredentialResolver<TParent>;\n  associationRelationCar?: MutationToAssociationRelationCarResolver<TParent>;\n  createCoverageProject?: MutationToCreateCoverageProjectResolver<TParent>;\n  updateCoverageProject?: MutationToUpdateCoverageProjectResolver<TParent>;\n  updateBatchCoverageProject?: MutationToUpdateBatchCoverageProjectResolver<TParent>;\n  createApiService?: MutationToCreateApiServiceResolver<TParent>;\n  updateApiService?: MutationToUpdateApiServiceResolver<TParent>;\n  createDynamicCustomMeta?: MutationToCreateDynamicCustomMetaResolver<TParent>;\n  updateDynamicCustomMeta?: MutationToUpdateDynamicCustomMetaResolver<TParent>;\n  deleteDynamicCustomMeta?: MutationToDeleteDynamicCustomMetaResolver<TParent>;\n  updateBatchDynamicCustomMeta?: MutationToUpdateBatchDynamicCustomMetaResolver<TParent>;\n  createDynamicCustomValue?: MutationToCreateDynamicCustomValueResolver<TParent>;\n  updateDynamicCustomValue?: MutationToUpdateDynamicCustomValueResolver<TParent>;\n  deleteDynamicCustomValue?: MutationToDeleteDynamicCustomValueResolver<TParent>;\n  updateBatchDynamicCustomValue?: MutationToUpdateBatchDynamicCustomValueResolver<TParent>;\n  createDynamicPage?: MutationToCreateDynamicPageResolver<TParent>;\n  updateDynamicPage?: MutationToUpdateDynamicPageResolver<TParent>;\n  deleteDynamicPage?: MutationToDeleteDynamicPageResolver<TParent>;\n  createDynamicBlock?: MutationToCreateDynamicBlockResolver<TParent>;\n  updateDynamicBlock?: MutationToUpdateDynamicBlockResolver<TParent>;\n  deleteDynamicBlock?: MutationToDeleteDynamicBlockResolver<TParent>;\n  createDynamicSection?: MutationToCreateDynamicSectionResolver<TParent>;\n  updateDynamicSection?: MutationToUpdateDynamicSectionResolver<TParent>;\n  deleteDynamicSection?: MutationToDeleteDynamicSectionResolver<TParent>;\n  createDynamicSectionBlock?: MutationToCreateDynamicSectionBlockResolver<TParent>;\n  updateDynamicSectionBlock?: MutationToUpdateDynamicSectionBlockResolver<TParent>;\n  deleteDynamicSectionBlock?: MutationToDeleteDynamicSectionBlockResolver<TParent>;\n  createDynamicTab?: MutationToCreateDynamicTabResolver<TParent>;\n  updateDynamicTabBlock?: MutationToUpdateDynamicTabBlockResolver<TParent>;\n  deleteDynamicTab?: MutationToDeleteDynamicTabResolver<TParent>;\n  createCharge?: MutationToCreateChargeResolver<TParent>;\n  createClinicHistory?: MutationToCreateClinicHistoryResolver<TParent>;\n  createClinicHistoryMedicalBackgroundDetail?: MutationToCreateClinicHistoryMedicalBackgroundDetailResolver<TParent>;\n  createEventDetail?: MutationToCreateEventDetailResolver<TParent>;\n  createFisicExam?: MutationToCreateFisicExamResolver<TParent>;\n  createFormat?: MutationToCreateFormatResolver<TParent>;\n  createMedicalBackgroundDetail?: MutationToCreateMedicalBackgroundDetailResolver<TParent>;\n  createMedicalBackground?: MutationToCreateMedicalBackgroundResolver<TParent>;\n  createMedicalConfig?: MutationToCreateMedicalConfigResolver<TParent>;\n  createMedicalService?: MutationToCreateMedicalServiceResolver<TParent>;\n  createMedicine?: MutationToCreateMedicineResolver<TParent>;\n  createVaccine?: MutationToCreateVaccineResolver<TParent>;\n  createVitalSigns?: MutationToCreateVitalSignsResolver<TParent>;\n  createMedicRecipe?: MutationToCreateMedicRecipeResolver<TParent>;\n  createRecipeConfig?: MutationToCreateRecipeConfigResolver<TParent>;\n  createRegistSesion?: MutationToCreateRegistSesionResolver<TParent>;\n  createPacientNote?: MutationToCreatePacientNoteResolver<TParent>;\n  createTherapy?: MutationToCreateTherapyResolver<TParent>;\n  createDiagnostic?: MutationToCreateDiagnosticResolver<TParent>;\n  createConsultNote?: MutationToCreateConsultNoteResolver<TParent>;\n  createMedicalBackgroundSet?: MutationToCreateMedicalBackgroundSetResolver<TParent>;\n  createMedicalBackgroundTemplate?: MutationToCreateMedicalBackgroundTemplateResolver<TParent>;\n  createVitalSignsTemplate?: MutationToCreateVitalSignsTemplateResolver<TParent>;\n  createPacientMedicalBackground?: MutationToCreatePacientMedicalBackgroundResolver<TParent>;\n  createPatientVitalSignsResponse?: MutationToCreatePatientVitalSignsResponseResolver<TParent>;\n  updateCharge?: MutationToUpdateChargeResolver<TParent>;\n  updateClinicHistory?: MutationToUpdateClinicHistoryResolver<TParent>;\n  updateClinicHistoryMedicalBackgroundDetail?: MutationToUpdateClinicHistoryMedicalBackgroundDetailResolver<TParent>;\n  updateEventDetail?: MutationToUpdateEventDetailResolver<TParent>;\n  updateFisicExam?: MutationToUpdateFisicExamResolver<TParent>;\n  updateFormat?: MutationToUpdateFormatResolver<TParent>;\n  updateMedicalBackgroundDetail?: MutationToUpdateMedicalBackgroundDetailResolver<TParent>;\n  updateMedicalBackground?: MutationToUpdateMedicalBackgroundResolver<TParent>;\n  updateMedicalConfig?: MutationToUpdateMedicalConfigResolver<TParent>;\n  updateMedicalService?: MutationToUpdateMedicalServiceResolver<TParent>;\n  updateMedicine?: MutationToUpdateMedicineResolver<TParent>;\n  updateVaccine?: MutationToUpdateVaccineResolver<TParent>;\n  updateVitalSigns?: MutationToUpdateVitalSignsResolver<TParent>;\n  updateMedicRecipe?: MutationToUpdateMedicRecipeResolver<TParent>;\n  updateRecipeConfig?: MutationToUpdateRecipeConfigResolver<TParent>;\n  updateRegistSesion?: MutationToUpdateRegistSesionResolver<TParent>;\n  updatePacientNote?: MutationToUpdatePacientNoteResolver<TParent>;\n  updateTherapy?: MutationToUpdateTherapyResolver<TParent>;\n  updateDiagnostic?: MutationToUpdateDiagnosticResolver<TParent>;\n  updateConsultNote?: MutationToUpdateConsultNoteResolver<TParent>;\n  updatePacientMedicalBackground?: MutationToUpdatePacientMedicalBackgroundResolver<TParent>;\n  updateBillingRequest?: MutationToUpdateBillingRequestResolver<TParent>;\n  updateSortFormat?: MutationToUpdateSortFormatResolver<TParent>;\n  updatePatientVitalSignsResponse?: MutationToUpdatePatientVitalSignsResponseResolver<TParent>;\n  deleteCharge?: MutationToDeleteChargeResolver<TParent>;\n  deleteClinicHistory?: MutationToDeleteClinicHistoryResolver<TParent>;\n  deleteClinicHistoryMedicalBackgrounDetail?: MutationToDeleteClinicHistoryMedicalBackgrounDetailResolver<TParent>;\n  deleteConsult?: MutationToDeleteConsultResolver<TParent>;\n  deleteFisicExam?: MutationToDeleteFisicExamResolver<TParent>;\n  deleteMedicalBackgroundDetail?: MutationToDeleteMedicalBackgroundDetailResolver<TParent>;\n  deleteMedicalBackground?: MutationToDeleteMedicalBackgroundResolver<TParent>;\n  deleteMedicalConfig?: MutationToDeleteMedicalConfigResolver<TParent>;\n  deleteMedicalService?: MutationToDeleteMedicalServiceResolver<TParent>;\n  deleteMedicine?: MutationToDeleteMedicineResolver<TParent>;\n  deleteVaccine?: MutationToDeleteVaccineResolver<TParent>;\n  deleteVitalSign?: MutationToDeleteVitalSignResolver<TParent>;\n  deleteMedicRecipe?: MutationToDeleteMedicRecipeResolver<TParent>;\n  deleteRecipeConfig?: MutationToDeleteRecipeConfigResolver<TParent>;\n  deleteRegistSesion?: MutationToDeleteRegistSesionResolver<TParent>;\n  deleteTherapy?: MutationToDeleteTherapyResolver<TParent>;\n  deleteDiagnostic?: MutationToDeleteDiagnosticResolver<TParent>;\n  deleteConsultNote?: MutationToDeleteConsultNoteResolver<TParent>;\n  deletePacientNote?: MutationToDeletePacientNoteResolver<TParent>;\n  deletePacientMedicalBackground?: MutationToDeletePacientMedicalBackgroundResolver<TParent>;\n  deleteBillingRequest?: MutationToDeleteBillingRequestResolver<TParent>;\n  deleteFormat?: MutationToDeleteFormatResolver<TParent>;\n  printWithImageFromUrl?: MutationToPrintWithImageFromUrlResolver<TParent>;\n  bulkWorkSpace?: MutationToBulkWorkSpaceResolver<TParent>;\n  orderingMemberBoard?: MutationToOrderingMemberBoardResolver<TParent>;\n  createSpace?: MutationToCreateSpaceResolver<TParent>;\n  updateSpace?: MutationToUpdateSpaceResolver<TParent>;\n  deleteSpace?: MutationToDeleteSpaceResolver<TParent>;\n  updateBatchMemberSpace?: MutationToUpdateBatchMemberSpaceResolver<TParent>;\n  createMemberSpace?: MutationToCreateMemberSpaceResolver<TParent>;\n  updateMemberSpace?: MutationToUpdateMemberSpaceResolver<TParent>;\n  deleteMemberSpace?: MutationToDeleteMemberSpaceResolver<TParent>;\n  createBoardStatus?: MutationToCreateBoardStatusResolver<TParent>;\n  updateBoardStatus?: MutationToUpdateBoardStatusResolver<TParent>;\n  deleteBoardStatus?: MutationToDeleteBoardStatusResolver<TParent>;\n  updateBatchMemberBoard?: MutationToUpdateBatchMemberBoardResolver<TParent>;\n  createBoard?: MutationToCreateBoardResolver<TParent>;\n  updateBoard?: MutationToUpdateBoardResolver<TParent>;\n  deleteBoard?: MutationToDeleteBoardResolver<TParent>;\n  createBoardList?: MutationToCreateBoardListResolver<TParent>;\n  updateBoardList?: MutationToUpdateBoardListResolver<TParent>;\n  updateBatchBoardList?: MutationToUpdateBatchBoardListResolver<TParent>;\n  deleteBoardList?: MutationToDeleteBoardListResolver<TParent>;\n  createBoardGroupColumn?: MutationToCreateBoardGroupColumnResolver<TParent>;\n  updateBoardGroupColumn?: MutationToUpdateBoardGroupColumnResolver<TParent>;\n  updateBatchBoardGroupColumn?: MutationToUpdateBatchBoardGroupColumnResolver<TParent>;\n  deleteBoardGroupColumn?: MutationToDeleteBoardGroupColumnResolver<TParent>;\n  createBoardColumnType?: MutationToCreateBoardColumnTypeResolver<TParent>;\n  updateBoardColumnType?: MutationToUpdateBoardColumnTypeResolver<TParent>;\n  deleteBoardColumnType?: MutationToDeleteBoardColumnTypeResolver<TParent>;\n  createBoardColumnValue?: MutationToCreateBoardColumnValueResolver<TParent>;\n  updateBoardColumnValue?: MutationToUpdateBoardColumnValueResolver<TParent>;\n  deleteBoardColumnValue?: MutationToDeleteBoardColumnValueResolver<TParent>;\n  createCardColumnValue?: MutationToCreateCardColumnValueResolver<TParent>;\n  updateCardColumnValue?: MutationToUpdateCardColumnValueResolver<TParent>;\n  deleteCardColumnValue?: MutationToDeleteCardColumnValueResolver<TParent>;\n  createBoardMemberReference?: MutationToCreateBoardMemberReferenceResolver<TParent>;\n  updateBoardMemberReference?: MutationToUpdateBoardMemberReferenceResolver<TParent>;\n  deleteBoardMemberReference?: MutationToDeleteBoardMemberReferenceResolver<TParent>;\n  createBoardRowForResourceQuote?: MutationToCreateBoardRowForResourceQuoteResolver<TParent>;\n  createBoardRow?: MutationToCreateBoardRowResolver<TParent>;\n  updateBoardRow?: MutationToUpdateBoardRowResolver<TParent>;\n  updateBatchBoardRow?: MutationToUpdateBatchBoardRowResolver<TParent>;\n  deleteBoardRow?: MutationToDeleteBoardRowResolver<TParent>;\n  createCard?: MutationToCreateCardResolver<TParent>;\n  updateCard?: MutationToUpdateCardResolver<TParent>;\n  deleteCard?: MutationToDeleteCardResolver<TParent>;\n  createCardChecklist?: MutationToCreateCardChecklistResolver<TParent>;\n  updateCardChecklist?: MutationToUpdateCardChecklistResolver<TParent>;\n  deleteCardChecklist?: MutationToDeleteCardChecklistResolver<TParent>;\n  updateBatchCardCheckComponent?: MutationToUpdateBatchCardCheckComponentResolver<TParent>;\n  createCardCheckComponent?: MutationToCreateCardCheckComponentResolver<TParent>;\n  updateCardCheckComponent?: MutationToUpdateCardCheckComponentResolver<TParent>;\n  deleteCardCheckComponent?: MutationToDeleteCardCheckComponentResolver<TParent>;\n  createCardReply?: MutationToCreateCardReplyResolver<TParent>;\n  updateCardReply?: MutationToUpdateCardReplyResolver<TParent>;\n  deleteCardReply?: MutationToDeleteCardReplyResolver<TParent>;\n  createNestedFiles?: MutationToCreateNestedFilesResolver<TParent>;\n  updateNestedFiles?: MutationToUpdateNestedFilesResolver<TParent>;\n  deleteNestedFiles?: MutationToDeleteNestedFilesResolver<TParent>;\n  createMemberCard?: MutationToCreateMemberCardResolver<TParent>;\n  updateMemberCard?: MutationToUpdateMemberCardResolver<TParent>;\n  deleteMemberCard?: MutationToDeleteMemberCardResolver<TParent>;\n  createMemberBoard?: MutationToCreateMemberBoardResolver<TParent>;\n  updateMemberBoard?: MutationToUpdateMemberBoardResolver<TParent>;\n  deleteMemberBoard?: MutationToDeleteMemberBoardResolver<TParent>;\n  deleteMeasure?: MutationToDeleteMeasureResolver<TParent>;\n  updateMeasure?: MutationToUpdateMeasureResolver<TParent>;\n  deleteMaterialCategory?: MutationToDeleteMaterialCategoryResolver<TParent>;\n  createMeasureValue?: MutationToCreateMeasureValueResolver<TParent>;\n  updateMeasureValue?: MutationToUpdateMeasureValueResolver<TParent>;\n  deleteMeasureValue?: MutationToDeleteMeasureValueResolver<TParent>;\n  deleteMeasureUnityTwo?: MutationToDeleteMeasureUnityTwoResolver<TParent>;\n  updateModule?: MutationToUpdateModuleResolver<TParent>;\n  createMaterialQuotation?: MutationToCreateMaterialQuotationResolver<TParent>;\n  updateMaterialQuotation?: MutationToUpdateMaterialQuotationResolver<TParent>;\n  deleteMaterialQuotation?: MutationToDeleteMaterialQuotationResolver<TParent>;\n  createMaterialModule?: MutationToCreateMaterialModuleResolver<TParent>;\n  updateMaterialModule?: MutationToUpdateMaterialModuleResolver<TParent>;\n  deleteMaterialModule?: MutationToDeleteMaterialModuleResolver<TParent>;\n  createUserCustomer?: MutationToCreateUserCustomerResolver<TParent>;\n  createMeasureUnity?: MutationToCreateMeasureUnityResolver<TParent>;\n  updateMeasureUnity?: MutationToUpdateMeasureUnityResolver<TParent>;\n  deleteMeasureUnity?: MutationToDeleteMeasureUnityResolver<TParent>;\n  createAttribute?: MutationToCreateAttributeResolver<TParent>;\n  createAttributeValue?: MutationToCreateAttributeValueResolver<TParent>;\n  createBuildingSite?: MutationToCreateBuildingSiteResolver<TParent>;\n  createMadreQuotation?: MutationToCreateMadreQuotationResolver<TParent>;\n  createMaterialCategory?: MutationToCreateMaterialCategoryResolver<TParent>;\n  createMaterialCombination?: MutationToCreateMaterialCombinationResolver<TParent>;\n  createMaterial?: MutationToCreateMaterialResolver<TParent>;\n  createMaterialStockMeasure?: MutationToCreateMaterialStockMeasureResolver<TParent>;\n  createMaterialStock?: MutationToCreateMaterialStockResolver<TParent>;\n  createMaterialVariableQuotation?: MutationToCreateMaterialVariableQuotationResolver<TParent>;\n  createMeasure?: MutationToCreateMeasureResolver<TParent>;\n  createMeasureUnityTwo?: MutationToCreateMeasureUnityTwoResolver<TParent>;\n  createModuleCategory?: MutationToCreateModuleCategoryResolver<TParent>;\n  createModule?: MutationToCreateModuleResolver<TParent>;\n  createQuotation?: MutationToCreateQuotationResolver<TParent>;\n  createQuotationModule?: MutationToCreateQuotationModuleResolver<TParent>;\n  createVariable?: MutationToCreateVariableResolver<TParent>;\n  deleteAttribute?: MutationToDeleteAttributeResolver<TParent>;\n  deleteAttributeValue?: MutationToDeleteAttributeValueResolver<TParent>;\n  deleteBuildingSiteAddress?: MutationToDeleteBuildingSiteAddressResolver<TParent>;\n  deleteMaterialCombination?: MutationToDeleteMaterialCombinationResolver<TParent>;\n  deleteMaterial?: MutationToDeleteMaterialResolver<TParent>;\n  deleteMaterialStock?: MutationToDeleteMaterialStockResolver<TParent>;\n  deleteMaterialStockMeasure?: MutationToDeleteMaterialStockMeasureResolver<TParent>;\n  deleteMaterialVariableQuotation?: MutationToDeleteMaterialVariableQuotationResolver<TParent>;\n  deleteModuleCategory?: MutationToDeleteModuleCategoryResolver<TParent>;\n  deleteModule?: MutationToDeleteModuleResolver<TParent>;\n  deleteQuotationModule?: MutationToDeleteQuotationModuleResolver<TParent>;\n  deleteQuotation?: MutationToDeleteQuotationResolver<TParent>;\n  deleteVariable?: MutationToDeleteVariableResolver<TParent>;\n  updateAttribute?: MutationToUpdateAttributeResolver<TParent>;\n  updateAttributeValue?: MutationToUpdateAttributeValueResolver<TParent>;\n  updateBuildingSiteAddress?: MutationToUpdateBuildingSiteAddressResolver<TParent>;\n  updateMaterialCategory?: MutationToUpdateMaterialCategoryResolver<TParent>;\n  updateMaterialCombination?: MutationToUpdateMaterialCombinationResolver<TParent>;\n  updateMaterial?: MutationToUpdateMaterialResolver<TParent>;\n  updateMaterialStockMeasure?: MutationToUpdateMaterialStockMeasureResolver<TParent>;\n  updateMaterialStock?: MutationToUpdateMaterialStockResolver<TParent>;\n  updateMadreQuotation?: MutationToUpdateMadreQuotationResolver<TParent>;\n  deleteMadreQuotation?: MutationToDeleteMadreQuotationResolver<TParent>;\n  updateMaterialVariableQuotation?: MutationToUpdateMaterialVariableQuotationResolver<TParent>;\n  updateMeasureUnityTwo?: MutationToUpdateMeasureUnityTwoResolver<TParent>;\n  updateCategoryModule?: MutationToUpdateCategoryModuleResolver<TParent>;\n  updateQuotationModule?: MutationToUpdateQuotationModuleResolver<TParent>;\n  updateQuotation?: MutationToUpdateQuotationResolver<TParent>;\n  updateVariable?: MutationToUpdateVariableResolver<TParent>;\n  updateAnalysis?: MutationToUpdateAnalysisResolver<TParent>;\n  createClient?: MutationToCreateClientResolver<TParent>;\n  updateClient?: MutationToUpdateClientResolver<TParent>;\n  createConsult?: MutationToCreateConsultResolver<TParent>;\n  updateConsult?: MutationToUpdateConsultResolver<TParent>;\n  calculator_deleteConsult?: MutationToCalculator_deleteConsultResolver<TParent>;\n  createCompared?: MutationToCreateComparedResolver<TParent>;\n  updateCompared?: MutationToUpdateComparedResolver<TParent>;\n  deleteCompared?: MutationToDeleteComparedResolver<TParent>;\n  createCarMercado?: MutationToCreateCarMercadoResolver<TParent>;\n  createCarMercadoMassive?: MutationToCreateCarMercadoMassiveResolver<TParent>;\n  deleteCarMercado?: MutationToDeleteCarMercadoResolver<TParent>;\n  uploadFile?: MutationToUploadFileResolver<TParent>;\n  zipFolderContent?: MutationToZipFolderContentResolver<TParent>;\n  createFolder?: MutationToCreateFolderResolver<TParent>;\n  updateFolder?: MutationToUpdateFolderResolver<TParent>;\n  deleteFolder?: MutationToDeleteFolderResolver<TParent>;\n  createFile?: MutationToCreateFileResolver<TParent>;\n  updateFile?: MutationToUpdateFileResolver<TParent>;\n  deleteFile?: MutationToDeleteFileResolver<TParent>;\n  shareFile?: MutationToShareFileResolver<TParent>;\n  shareFolder?: MutationToShareFolderResolver<TParent>;\n  stopSharingFolder?: MutationToStopSharingFolderResolver<TParent>;\n  stopSharingFile?: MutationToStopSharingFileResolver<TParent>;\n  uploadFilePrivate?: MutationToUploadFilePrivateResolver<TParent>;\n  addChatMember?: MutationToAddChatMemberResolver<TParent>;\n  addChatMemberWs?: MutationToAddChatMemberWsResolver<TParent>;\n  conversationId?: MutationToConversationIdResolver<TParent>;\n  deleteReply?: MutationToDeleteReplyResolver<TParent>;\n  createWallet?: MutationToCreateWalletResolver<TParent>;\n  updateWallet?: MutationToUpdateWalletResolver<TParent>;\n  deleteWallet?: MutationToDeleteWalletResolver<TParent>;\n  createWalletTransaction?: MutationToCreateWalletTransactionResolver<TParent>;\n  createMultipleWalletTransaction?: MutationToCreateMultipleWalletTransactionResolver<TParent>;\n  createWalletTransactionStatus?: MutationToCreateWalletTransactionStatusResolver<TParent>;\n  createWalletTransactionMemberRelation?: MutationToCreateWalletTransactionMemberRelationResolver<TParent>;\n  createMemberWallet?: MutationToCreateMemberWalletResolver<TParent>;\n  updateMemberWallet?: MutationToUpdateMemberWalletResolver<TParent>;\n  deleteMemberWallet?: MutationToDeleteMemberWalletResolver<TParent>;\n  createProjectWalletKey?: MutationToCreateProjectWalletKeyResolver<TParent>;\n  updateProjectWalletKey?: MutationToUpdateProjectWalletKeyResolver<TParent>;\n  deleteProjectWalletKey?: MutationToDeleteProjectWalletKeyResolver<TParent>;\n  createCertificateMovement?: MutationToCreateCertificateMovementResolver<TParent>;\n  deleteCertificate?: MutationToDeleteCertificateResolver<TParent>;\n  updateInsurerModule?: MutationToUpdateInsurerModuleResolver<TParent>;\n  createInsurerModule?: MutationToCreateInsurerModuleResolver<TParent>;\n  createPolicyModule?: MutationToCreatePolicyModuleResolver<TParent>;\n  updatePolicyModule?: MutationToUpdatePolicyModuleResolver<TParent>;\n  deletePolicyModule?: MutationToDeletePolicyModuleResolver<TParent>;\n  createInsurerFee?: MutationToCreateInsurerFeeResolver<TParent>;\n  deleteInsurerFee?: MutationToDeleteInsurerFeeResolver<TParent>;\n  updateInsurerFee?: MutationToUpdateInsurerFeeResolver<TParent>;\n  createPolicy?: MutationToCreatePolicyResolver<TParent>;\n  cancelCertificate?: MutationToCancelCertificateResolver<TParent>;\n  createBeneficiary?: MutationToCreateBeneficiaryResolver<TParent>;\n  createCertificate?: MutationToCreateCertificateResolver<TParent>;\n  createCertificateFile?: MutationToCreateCertificateFileResolver<TParent>;\n  createContact?: MutationToCreateContactResolver<TParent>;\n  createContractorBranchOffice?: MutationToCreateContractorBranchOfficeResolver<TParent>;\n  createContractorContact?: MutationToCreateContractorContactResolver<TParent>;\n  createContractor?: MutationToCreateContractorResolver<TParent>;\n  createContractorPolicy?: MutationToCreateContractorPolicyResolver<TParent>;\n  createCountryRequest?: MutationToCreateCountryRequestResolver<TParent>;\n  createFee?: MutationToCreateFeeResolver<TParent>;\n  createInsurerCompany?: MutationToCreateInsurerCompanyResolver<TParent>;\n  createIssuedReport?: MutationToCreateIssuedReportResolver<TParent>;\n  createMerchandiseDetail?: MutationToCreateMerchandiseDetailResolver<TParent>;\n  createMerchandise?: MutationToCreateMerchandiseResolver<TParent>;\n  createMoney?: MutationToCreateMoneyResolver<TParent>;\n  createMoneyPolicy?: MutationToCreateMoneyPolicyResolver<TParent>;\n  itus_createOffice?: MutationToItus_createOfficeResolver<TParent>;\n  deleteBeneficiary?: MutationToDeleteBeneficiaryResolver<TParent>;\n  deleteContact?: MutationToDeleteContactResolver<TParent>;\n  deleteContractor?: MutationToDeleteContractorResolver<TParent>;\n  deleteContractorOffice?: MutationToDeleteContractorOfficeResolver<TParent>;\n  deleteContractorPolicy?: MutationToDeleteContractorPolicyResolver<TParent>;\n  deleteInsurerModule?: MutationToDeleteInsurerModuleResolver<TParent>;\n  deleteFee?: MutationToDeleteFeeResolver<TParent>;\n  deleteMerchandise?: MutationToDeleteMerchandiseResolver<TParent>;\n  deleteInsurerCompany?: MutationToDeleteInsurerCompanyResolver<TParent>;\n  deleteMoney?: MutationToDeleteMoneyResolver<TParent>;\n  deletePolicy?: MutationToDeletePolicyResolver<TParent>;\n  updateBeneficiary?: MutationToUpdateBeneficiaryResolver<TParent>;\n  updateCertificate?: MutationToUpdateCertificateResolver<TParent>;\n  updateContact?: MutationToUpdateContactResolver<TParent>;\n  updateContractor?: MutationToUpdateContractorResolver<TParent>;\n  updateFee?: MutationToUpdateFeeResolver<TParent>;\n  updateInsurerCompany?: MutationToUpdateInsurerCompanyResolver<TParent>;\n  updateMerchandise?: MutationToUpdateMerchandiseResolver<TParent>;\n  updateMoney?: MutationToUpdateMoneyResolver<TParent>;\n  updatePolicy?: MutationToUpdatePolicyResolver<TParent>;\n  createAttendanceStudent?: MutationToCreateAttendanceStudentResolver<TParent>;\n  createClassroom?: MutationToCreateClassroomResolver<TParent>;\n  createDayService?: MutationToCreateDayServiceResolver<TParent>;\n  createGrade?: MutationToCreateGradeResolver<TParent>;\n  createLevel?: MutationToCreateLevelResolver<TParent>;\n  createSchool?: MutationToCreateSchoolResolver<TParent>;\n  createStudent?: MutationToCreateStudentResolver<TParent>;\n  createBulkStudent?: MutationToCreateBulkStudentResolver<TParent>;\n  updateAttendanceStudents?: MutationToUpdateAttendanceStudentsResolver<TParent>;\n  updateClassroom?: MutationToUpdateClassroomResolver<TParent>;\n  updateDayService?: MutationToUpdateDayServiceResolver<TParent>;\n  updateGrade?: MutationToUpdateGradeResolver<TParent>;\n  updateLevel?: MutationToUpdateLevelResolver<TParent>;\n  updateSchool?: MutationToUpdateSchoolResolver<TParent>;\n  updateStudent?: MutationToUpdateStudentResolver<TParent>;\n  deleteAttendanceStudent?: MutationToDeleteAttendanceStudentResolver<TParent>;\n  deleteClassroom?: MutationToDeleteClassroomResolver<TParent>;\n  deleteDayService?: MutationToDeleteDayServiceResolver<TParent>;\n  deleteGrade?: MutationToDeleteGradeResolver<TParent>;\n  deleteLevel?: MutationToDeleteLevelResolver<TParent>;\n  deleteSchool?: MutationToDeleteSchoolResolver<TParent>;\n  deleteStudent?: MutationToDeleteStudentResolver<TParent>;\n  deleteStudentTutor?: MutationToDeleteStudentTutorResolver<TParent>;\n  createBeneficiarie?: MutationToCreateBeneficiarieResolver<TParent>;\n  updateBeneficiarie?: MutationToUpdateBeneficiarieResolver<TParent>;\n  deleteBeneficiarie?: MutationToDeleteBeneficiarieResolver<TParent>;\n  createFormAccidentDisease?: MutationToCreateFormAccidentDiseaseResolver<TParent>;\n  updateFormAccidentDisease?: MutationToUpdateFormAccidentDiseaseResolver<TParent>;\n  deleteFormAccidentDisease?: MutationToDeleteFormAccidentDiseaseResolver<TParent>;\n  createFormAutomobileDamage?: MutationToCreateFormAutomobileDamageResolver<TParent>;\n  updateFormAutomobileDamage?: MutationToUpdateFormAutomobileDamageResolver<TParent>;\n  deleteFormAutomobileDamage?: MutationToDeleteFormAutomobileDamageResolver<TParent>;\n  createFormCarCatalog?: MutationToCreateFormCarCatalogResolver<TParent>;\n  updateFormCarCatalog?: MutationToUpdateFormCarCatalogResolver<TParent>;\n  deleteFormCarCatalog?: MutationToDeleteFormCarCatalogResolver<TParent>;\n  createFormDamage?: MutationToCreateFormDamageResolver<TParent>;\n  updateFormDamage?: MutationToUpdateFormDamageResolver<TParent>;\n  deleteFormDamage?: MutationToDeleteFormDamageResolver<TParent>;\n  createFormLife?: MutationToCreateFormLifeResolver<TParent>;\n  updateFormLife?: MutationToUpdateFormLifeResolver<TParent>;\n  deleteFormLife?: MutationToDeleteFormLifeResolver<TParent>;\n  createInvolvedReferrer?: MutationToCreateInvolvedReferrerResolver<TParent>;\n  updateInvolvedReferrer?: MutationToUpdateInvolvedReferrerResolver<TParent>;\n  deleteInvolvedReferrer?: MutationToDeleteInvolvedReferrerResolver<TParent>;\n  createOldPolice?: MutationToCreateOldPoliceResolver<TParent>;\n  updateOldPolice?: MutationToUpdateOldPoliceResolver<TParent>;\n  deleteOldPolice?: MutationToDeleteOldPoliceResolver<TParent>;\n  createPersonalInformation?: MutationToCreatePersonalInformationResolver<TParent>;\n  updatePersonalInformation?: MutationToUpdatePersonalInformationResolver<TParent>;\n  deletePersonalInformation?: MutationToDeletePersonalInformationResolver<TParent>;\n  createPolice?: MutationToCreatePoliceResolver<TParent>;\n  updatePolice?: MutationToUpdatePoliceResolver<TParent>;\n  deletePolice?: MutationToDeletePoliceResolver<TParent>;\n  createPoliceAssign?: MutationToCreatePoliceAssignResolver<TParent>;\n  updatePoliceAssign?: MutationToUpdatePoliceAssignResolver<TParent>;\n  deletePoliceAssign?: MutationToDeletePoliceAssignResolver<TParent>;\n  createPolicePendient?: MutationToCreatePolicePendientResolver<TParent>;\n  updatePolicePendient?: MutationToUpdatePolicePendientResolver<TParent>;\n  deletePolicePendient?: MutationToDeletePolicePendientResolver<TParent>;\n  createPoliceQuote?: MutationToCreatePoliceQuoteResolver<TParent>;\n  updatePoliceQuote?: MutationToUpdatePoliceQuoteResolver<TParent>;\n  deletePoliceQuote?: MutationToDeletePoliceQuoteResolver<TParent>;\n  updatePoliceQuotePrima?: MutationToUpdatePoliceQuotePrimaResolver<TParent>;\n  deletePoliceQuotePrima?: MutationToDeletePoliceQuotePrimaResolver<TParent>;\n  createRelationShip?: MutationToCreateRelationShipResolver<TParent>;\n  updateRelationShip?: MutationToUpdateRelationShipResolver<TParent>;\n  deleteRelationShip?: MutationToDeleteRelationShipResolver<TParent>;\n  createSucursal?: MutationToCreateSucursalResolver<TParent>;\n  updateSucursal?: MutationToUpdateSucursalResolver<TParent>;\n  deleteSucursal?: MutationToDeleteSucursalResolver<TParent>;\n  createAgentKey?: MutationToCreateAgentKeyResolver<TParent>;\n  updateAgentKey?: MutationToUpdateAgentKeyResolver<TParent>;\n  deleteAgentKey?: MutationToDeleteAgentKeyResolver<TParent>;\n  createAgentProviderContact?: MutationToCreateAgentProviderContactResolver<TParent>;\n  updateAgentProviderContact?: MutationToUpdateAgentProviderContactResolver<TParent>;\n  deleteAgentProviderContact?: MutationToDeleteAgentProviderContactResolver<TParent>;\n  createAgentProvider?: MutationToCreateAgentProviderResolver<TParent>;\n  updateAgentProvider?: MutationToUpdateAgentProviderResolver<TParent>;\n  deleteAgentProvider?: MutationToDeleteAgentProviderResolver<TParent>;\n  createBranch?: MutationToCreateBranchResolver<TParent>;\n  updateBranch?: MutationToUpdateBranchResolver<TParent>;\n  deleteBranch?: MutationToDeleteBranchResolver<TParent>;\n  createComission?: MutationToCreateComissionResolver<TParent>;\n  updateComission?: MutationToUpdateComissionResolver<TParent>;\n  deleteComission?: MutationToDeleteComissionResolver<TParent>;\n  createContractorCelula?: MutationToCreateContractorCelulaResolver<TParent>;\n  updateContractorCelula?: MutationToUpdateContractorCelulaResolver<TParent>;\n  deleteContractorCelula?: MutationToDeleteContractorCelulaResolver<TParent>;\n  createContractorClassification?: MutationToCreateContractorClassificationResolver<TParent>;\n  updateContractorClassification?: MutationToUpdateContractorClassificationResolver<TParent>;\n  deleteContractorClassification?: MutationToDeleteContractorClassificationResolver<TParent>;\n  createContractorGroupingLevel?: MutationToCreateContractorGroupingLevelResolver<TParent>;\n  updateContractorGroupingLevel?: MutationToUpdateContractorGroupingLevelResolver<TParent>;\n  deleteContractorGroupingLevel?: MutationToDeleteContractorGroupingLevelResolver<TParent>;\n  saam_createContractor?: MutationToSaam_createContractorResolver<TParent>;\n  saam_updateContractor?: MutationToSaam_updateContractorResolver<TParent>;\n  saam_deleteContractor?: MutationToSaam_deleteContractorResolver<TParent>;\n  createContractorProcessDocument?: MutationToCreateContractorProcessDocumentResolver<TParent>;\n  updateContractorProcessDocument?: MutationToUpdateContractorProcessDocumentResolver<TParent>;\n  deleteContractorProcessDocument?: MutationToDeleteContractorProcessDocumentResolver<TParent>;\n  createCoverageCoinsurance?: MutationToCreateCoverageCoinsuranceResolver<TParent>;\n  updateCoverageCoinsurance?: MutationToUpdateCoverageCoinsuranceResolver<TParent>;\n  deleteCoverageCoinsurance?: MutationToDeleteCoverageCoinsuranceResolver<TParent>;\n  createCoverageDeductible?: MutationToCreateCoverageDeductibleResolver<TParent>;\n  updateCoverageDeductible?: MutationToUpdateCoverageDeductibleResolver<TParent>;\n  deleteCoverageDeductible?: MutationToDeleteCoverageDeductibleResolver<TParent>;\n  createCoverageInPolicy?: MutationToCreateCoverageInPolicyResolver<TParent>;\n  updateCoverageInPolicy?: MutationToUpdateCoverageInPolicyResolver<TParent>;\n  deleteCoverageInPolicy?: MutationToDeleteCoverageInPolicyResolver<TParent>;\n  createCoverage?: MutationToCreateCoverageResolver<TParent>;\n  updateCoverage?: MutationToUpdateCoverageResolver<TParent>;\n  deleteCoverage?: MutationToDeleteCoverageResolver<TParent>;\n  createCoveragePackage?: MutationToCreateCoveragePackageResolver<TParent>;\n  updateCoveragePackage?: MutationToUpdateCoveragePackageResolver<TParent>;\n  deleteCoveragePackage?: MutationToDeleteCoveragePackageResolver<TParent>;\n  createCoverageSuminsured?: MutationToCreateCoverageSuminsuredResolver<TParent>;\n  updateCoverageSuminsured?: MutationToUpdateCoverageSuminsuredResolver<TParent>;\n  deleteCoverageSuminsured?: MutationToDeleteCoverageSuminsuredResolver<TParent>;\n  createCoverageTopecoinsurance?: MutationToCreateCoverageTopecoinsuranceResolver<TParent>;\n  updateCoverageTopecoinsurance?: MutationToUpdateCoverageTopecoinsuranceResolver<TParent>;\n  deleteCoverageTopecoinsurance?: MutationToDeleteCoverageTopecoinsuranceResolver<TParent>;\n  createProcessDocument?: MutationToCreateProcessDocumentResolver<TParent>;\n  updateProcessDocument?: MutationToUpdateProcessDocumentResolver<TParent>;\n  deleteProcessDocument?: MutationToDeleteProcessDocumentResolver<TParent>;\n  createProjectAgentProviderBranch?: MutationToCreateProjectAgentProviderBranchResolver<TParent>;\n  updateProjectAgentProviderBranch?: MutationToUpdateProjectAgentProviderBranchResolver<TParent>;\n  deleteProjectAgentProviderBranch?: MutationToDeleteProjectAgentProviderBranchResolver<TParent>;\n  createProjectAgentProvider?: MutationToCreateProjectAgentProviderResolver<TParent>;\n  updateProjectAgentProvider?: MutationToUpdateProjectAgentProviderResolver<TParent>;\n  deleteProjectAgentProvider?: MutationToDeleteProjectAgentProviderResolver<TParent>;\n  createReferrerAccountState?: MutationToCreateReferrerAccountStateResolver<TParent>;\n  updateReferrerAccountState?: MutationToUpdateReferrerAccountStateResolver<TParent>;\n  deleteReferrerAccountState?: MutationToDeleteReferrerAccountStateResolver<TParent>;\n  createReferrerBranch?: MutationToCreateReferrerBranchResolver<TParent>;\n  updateReferrerBranch?: MutationToUpdateReferrerBranchResolver<TParent>;\n  deleteReferrerBranch?: MutationToDeleteReferrerBranchResolver<TParent>;\n  createReferrer?: MutationToCreateReferrerResolver<TParent>;\n  updateReferrer?: MutationToUpdateReferrerResolver<TParent>;\n  deleteReferrer?: MutationToDeleteReferrerResolver<TParent>;\n  createResponsableInvolved?: MutationToCreateResponsableInvolvedResolver<TParent>;\n  updateResponsableInvolved?: MutationToUpdateResponsableInvolvedResolver<TParent>;\n  deleteResponsableInvolved?: MutationToDeleteResponsableInvolvedResolver<TParent>;\n  createSubBranch?: MutationToCreateSubBranchResolver<TParent>;\n  updateSubBranch?: MutationToUpdateSubBranchResolver<TParent>;\n  deleteSubBranch?: MutationToDeleteSubBranchResolver<TParent>;\n  createProjectAgentProviderEmailReminder?: MutationToCreateProjectAgentProviderEmailReminderResolver<TParent>;\n  updateProjectAgentProviderEmailReminder?: MutationToUpdateProjectAgentProviderEmailReminderResolver<TParent>;\n  deleteProjectAgentProviderEmailReminder?: MutationToDeleteProjectAgentProviderEmailReminderResolver<TParent>;\n  createEndorsement?: MutationToCreateEndorsementResolver<TParent>;\n  updateEndorsement?: MutationToUpdateEndorsementResolver<TParent>;\n  deleteEndorsement?: MutationToDeleteEndorsementResolver<TParent>;\n  createEndorsementCert?: MutationToCreateEndorsementCertResolver<TParent>;\n  updateEndorsementCert?: MutationToUpdateEndorsementCertResolver<TParent>;\n  deleteEndorsementCert?: MutationToDeleteEndorsementCertResolver<TParent>;\n  createSinister?: MutationToCreateSinisterResolver<TParent>;\n  updateSinister?: MutationToUpdateSinisterResolver<TParent>;\n  deleteSinister?: MutationToDeleteSinisterResolver<TParent>;\n  createSinisterAiling?: MutationToCreateSinisterAilingResolver<TParent>;\n  updateSinisterAiling?: MutationToUpdateSinisterAilingResolver<TParent>;\n  deleteSinisterAiling?: MutationToDeleteSinisterAilingResolver<TParent>;\n  createSinisterCar?: MutationToCreateSinisterCarResolver<TParent>;\n  updateSinisterCar?: MutationToUpdateSinisterCarResolver<TParent>;\n  deleteSinisterCar?: MutationToDeleteSinisterCarResolver<TParent>;\n  createSinisterCarContact?: MutationToCreateSinisterCarContactResolver<TParent>;\n  updateSinisterCarContact?: MutationToUpdateSinisterCarContactResolver<TParent>;\n  deleteSinisterCarContact?: MutationToDeleteSinisterCarContactResolver<TParent>;\n  createSinisterDamage?: MutationToCreateSinisterDamageResolver<TParent>;\n  updateSinisterDamage?: MutationToUpdateSinisterDamageResolver<TParent>;\n  deleteSinisterDamage?: MutationToDeleteSinisterDamageResolver<TParent>;\n  createSinisterDamageContact?: MutationToCreateSinisterDamageContactResolver<TParent>;\n  updateSinisterDamageContact?: MutationToUpdateSinisterDamageContactResolver<TParent>;\n  deleteSinisterDamageContact?: MutationToDeleteSinisterDamageContactResolver<TParent>;\n  createSinisterLife?: MutationToCreateSinisterLifeResolver<TParent>;\n  updateSinisterLife?: MutationToUpdateSinisterLifeResolver<TParent>;\n  deleteSinisterLife?: MutationToDeleteSinisterLifeResolver<TParent>;\n  createSinisterLifeContact?: MutationToCreateSinisterLifeContactResolver<TParent>;\n  updateSinisterLifeContact?: MutationToUpdateSinisterLifeContactResolver<TParent>;\n  deleteSinisterLifeContact?: MutationToDeleteSinisterLifeContactResolver<TParent>;\n  createSinisterHospital?: MutationToCreateSinisterHospitalResolver<TParent>;\n  updateSinisterHospital?: MutationToUpdateSinisterHospitalResolver<TParent>;\n  deleteSinisterHospital?: MutationToDeleteSinisterHospitalResolver<TParent>;\n  createSinisterFactura?: MutationToCreateSinisterFacturaResolver<TParent>;\n  updateSinisterFactura?: MutationToUpdateSinisterFacturaResolver<TParent>;\n  deleteSinisterFactura?: MutationToDeleteSinisterFacturaResolver<TParent>;\n  createPoliceReceipt?: MutationToCreatePoliceReceiptResolver<TParent>;\n  updatePoliceReceipt?: MutationToUpdatePoliceReceiptResolver<TParent>;\n  deletePoliceReceipt?: MutationToDeletePoliceReceiptResolver<TParent>;\n  createPoliceReceiptAccount?: MutationToCreatePoliceReceiptAccountResolver<TParent>;\n  updatePoliceReceiptAccount?: MutationToUpdatePoliceReceiptAccountResolver<TParent>;\n  deletePoliceReceiptAccount?: MutationToDeletePoliceReceiptAccountResolver<TParent>;\n  createPoliceReceiptAccountState?: MutationToCreatePoliceReceiptAccountStateResolver<TParent>;\n  updatePoliceReceiptAccountState?: MutationToUpdatePoliceReceiptAccountStateResolver<TParent>;\n  deletePoliceReceiptAccountState?: MutationToDeletePoliceReceiptAccountStateResolver<TParent>;\n  createPoliceReceiptFolio?: MutationToCreatePoliceReceiptFolioResolver<TParent>;\n  updatePoliceReceiptFolio?: MutationToUpdatePoliceReceiptFolioResolver<TParent>;\n  deletePoliceReceiptFolio?: MutationToDeletePoliceReceiptFolioResolver<TParent>;\n  createPoliceReceiptPayment?: MutationToCreatePoliceReceiptPaymentResolver<TParent>;\n  updatePoliceReceiptPayment?: MutationToUpdatePoliceReceiptPaymentResolver<TParent>;\n  deletePoliceReceiptPayment?: MutationToDeletePoliceReceiptPaymentResolver<TParent>;\n  createPoliceFile?: MutationToCreatePoliceFileResolver<TParent>;\n  updatePoliceFile?: MutationToUpdatePoliceFileResolver<TParent>;\n  deletePoliceFile?: MutationToDeletePoliceFileResolver<TParent>;\n  createInsurerComment?: MutationToCreateInsurerCommentResolver<TParent>;\n  updateInsurerComment?: MutationToUpdateInsurerCommentResolver<TParent>;\n  deleteInsurerComment?: MutationToDeleteInsurerCommentResolver<TParent>;\n  createInsurerFileReading?: MutationToCreateInsurerFileReadingResolver<TParent>;\n  updateInsurerFileReading?: MutationToUpdateInsurerFileReadingResolver<TParent>;\n  deleteInsurerFileReading?: MutationToDeleteInsurerFileReadingResolver<TParent>;\n  createInsurerFileReadingTag?: MutationToCreateInsurerFileReadingTagResolver<TParent>;\n  updateInsurerFileReadingTag?: MutationToUpdateInsurerFileReadingTagResolver<TParent>;\n  deleteInsurerFileReadingTag?: MutationToDeleteInsurerFileReadingTagResolver<TParent>;\n  updateInsurerBailType?: MutationToUpdateInsurerBailTypeResolver<TParent>;\n  deleteInsurerBailType?: MutationToDeleteInsurerBailTypeResolver<TParent>;\n  createInsurerInvolved?: MutationToCreateInsurerInvolvedResolver<TParent>;\n  updateInsurerInvolved?: MutationToUpdateInsurerInvolvedResolver<TParent>;\n  deleteInsurerInvolved?: MutationToDeleteInsurerInvolvedResolver<TParent>;\n  createInsurerLog?: MutationToCreateInsurerLogResolver<TParent>;\n  updateInsurerLog?: MutationToUpdateInsurerLogResolver<TParent>;\n  deleteInsurerLog?: MutationToDeleteInsurerLogResolver<TParent>;\n  createInsurerLogEmail?: MutationToCreateInsurerLogEmailResolver<TParent>;\n  updateInsurerLogEmail?: MutationToUpdateInsurerLogEmailResolver<TParent>;\n  deleteInsurerLogEmail?: MutationToDeleteInsurerLogEmailResolver<TParent>;\n  createInsurerOrgInfo?: MutationToCreateInsurerOrgInfoResolver<TParent>;\n  updateInsurerOrgInfo?: MutationToUpdateInsurerOrgInfoResolver<TParent>;\n  deleteInsurerOrgInfo?: MutationToDeleteInsurerOrgInfoResolver<TParent>;\n  createInsurerTicket?: MutationToCreateInsurerTicketResolver<TParent>;\n  updateInsurerTicket?: MutationToUpdateInsurerTicketResolver<TParent>;\n  deleteInsurerTicket?: MutationToDeleteInsurerTicketResolver<TParent>;\n  createInsurerSchedule?: MutationToCreateInsurerScheduleResolver<TParent>;\n  updateInsurerSchedule?: MutationToUpdateInsurerScheduleResolver<TParent>;\n  deleteInsurerSchedule?: MutationToDeleteInsurerScheduleResolver<TParent>;\n  createInsurerScheduleParticipant?: MutationToCreateInsurerScheduleParticipantResolver<TParent>;\n  updateInsurerScheduleParticipant?: MutationToUpdateInsurerScheduleParticipantResolver<TParent>;\n  deleteInsurerScheduleParticipant?: MutationToDeleteInsurerScheduleParticipantResolver<TParent>;\n  createInsurerNotification?: MutationToCreateInsurerNotificationResolver<TParent>;\n  updateInsurerNotification?: MutationToUpdateInsurerNotificationResolver<TParent>;\n  deleteInsurerNotification?: MutationToDeleteInsurerNotificationResolver<TParent>;\n  createInsurerReminder?: MutationToCreateInsurerReminderResolver<TParent>;\n  updateInsurerReminder?: MutationToUpdateInsurerReminderResolver<TParent>;\n  deleteInsurerReminder?: MutationToDeleteInsurerReminderResolver<TParent>;\n  createInsurerReminderProjectAgentProvider?: MutationToCreateInsurerReminderProjectAgentProviderResolver<TParent>;\n  updateInsurerReminderProjectAgentProvider?: MutationToUpdateInsurerReminderProjectAgentProviderResolver<TParent>;\n  deleteInsurerReminderProjectAgentProvider?: MutationToDeleteInsurerReminderProjectAgentProviderResolver<TParent>;\n  createInsurerReminderRecord?: MutationToCreateInsurerReminderRecordResolver<TParent>;\n  updateInsurerReminderRecord?: MutationToUpdateInsurerReminderRecordResolver<TParent>;\n  deleteInsurerReminderRecord?: MutationToDeleteInsurerReminderRecordResolver<TParent>;\n  createInsurerReminderSubBranch?: MutationToCreateInsurerReminderSubBranchResolver<TParent>;\n  updateInsurerReminderSubBranch?: MutationToUpdateInsurerReminderSubBranchResolver<TParent>;\n  deleteInsurerReminderSubBranch?: MutationToDeleteInsurerReminderSubBranchResolver<TParent>;\n  createInsurerBailType?: MutationToCreateInsurerBailTypeResolver<TParent>;\n  createInsurerBirthDateTemplate?: MutationToCreateInsurerBirthDateTemplateResolver<TParent>;\n  updateInsurerBirthDateTemplate?: MutationToUpdateInsurerBirthDateTemplateResolver<TParent>;\n  deleteInsurerBirthDateTemplate?: MutationToDeleteInsurerBirthDateTemplateResolver<TParent>;\n  createInsurerDirectory?: MutationToCreateInsurerDirectoryResolver<TParent>;\n  updateInsurerDirectory?: MutationToUpdateInsurerDirectoryResolver<TParent>;\n  deleteInsurerDirectory?: MutationToDeleteInsurerDirectoryResolver<TParent>;\n  createInsurerExpense?: MutationToCreateInsurerExpenseResolver<TParent>;\n  updateInsurerExpense?: MutationToUpdateInsurerExpenseResolver<TParent>;\n  deleteInsurerExpense?: MutationToDeleteInsurerExpenseResolver<TParent>;\n  createInsurerIbisForm?: MutationToCreateInsurerIbisFormResolver<TParent>;\n  updateInsurerIbisForm?: MutationToUpdateInsurerIbisFormResolver<TParent>;\n  deleteInsurerIbisForm?: MutationToDeleteInsurerIbisFormResolver<TParent>;\n  createInsurerIbisProvider?: MutationToCreateInsurerIbisProviderResolver<TParent>;\n  updateInsurerIbisProvider?: MutationToUpdateInsurerIbisProviderResolver<TParent>;\n  deleteInsurerIbisProvider?: MutationToDeleteInsurerIbisProviderResolver<TParent>;\n  createInsurerSender?: MutationToCreateInsurerSenderResolver<TParent>;\n  updateInsurerSender?: MutationToUpdateInsurerSenderResolver<TParent>;\n  deleteInsurerSender?: MutationToDeleteInsurerSenderResolver<TParent>;\n  createInsurerZipCodeSepomex?: MutationToCreateInsurerZipCodeSepomexResolver<TParent>;\n  updateInsurerZipCodeSepomex?: MutationToUpdateInsurerZipCodeSepomexResolver<TParent>;\n  deleteInsurerZipCodeSepomex?: MutationToDeleteInsurerZipCodeSepomexResolver<TParent>;\n  createAgentProviderBono?: MutationToCreateAgentProviderBonoResolver<TParent>;\n  updateAgentProviderBono?: MutationToUpdateAgentProviderBonoResolver<TParent>;\n  deleteAgentProviderBono?: MutationToDeleteAgentProviderBonoResolver<TParent>;\n  saam_sendNotification?: MutationToSaam_sendNotificationResolver<TParent>;\n  createMultipleNotification?: MutationToCreateMultipleNotificationResolver<TParent>;\n  createMultipleMemberNotification?: MutationToCreateMultipleMemberNotificationResolver<TParent>;\n  createMemberNotification?: MutationToCreateMemberNotificationResolver<TParent>;\n  createNotification?: MutationToCreateNotificationResolver<TParent>;\n  updateMultipleNotification?: MutationToUpdateMultipleNotificationResolver<TParent>;\n  updateNotification?: MutationToUpdateNotificationResolver<TParent>;\n  deleteNotification?: MutationToDeleteNotificationResolver<TParent>;\n  createDevice?: MutationToCreateDeviceResolver<TParent>;\n  updateDevice?: MutationToUpdateDeviceResolver<TParent>;\n  deleteDevice?: MutationToDeleteDeviceResolver<TParent>;\n  addDots?: MutationToAddDotsResolver<TParent>;\n  setCodeAsUnavailable?: MutationToSetCodeAsUnavailableResolver<TParent>;\n  createAdminCode?: MutationToCreateAdminCodeResolver<TParent>;\n  scanCode?: MutationToScanCodeResolver<TParent>;\n  sendMessage?: MutationToSendMessageResolver<TParent>;\n  lookForCode?: MutationToLookForCodeResolver<TParent>;\n  createCode?: MutationToCreateCodeResolver<TParent>;\n  exchange_createProvider?: MutationToExchange_createProviderResolver<TParent>;\n  createPrizeCategory?: MutationToCreatePrizeCategoryResolver<TParent>;\n  createPrizeCode?: MutationToCreatePrizeCodeResolver<TParent>;\n  deleteCode?: MutationToDeleteCodeResolver<TParent>;\n  deletePrizeCode?: MutationToDeletePrizeCodeResolver<TParent>;\n  exchange_deleteProvider?: MutationToExchange_deleteProviderResolver<TParent>;\n  exchangeDots?: MutationToExchangeDotsResolver<TParent>;\n  createAdverseEvent?: MutationToCreateAdverseEventResolver<TParent>;\n  execCreateCodes?: MutationToExecCreateCodesResolver<TParent>;\n  setGlobalCode?: MutationToSetGlobalCodeResolver<TParent>;\n  deleteAdverseEvent?: MutationToDeleteAdverseEventResolver<TParent>;\n  createBrand?: MutationToCreateBrandResolver<TParent>;\n}\n\nexport interface MutationToSendQuizToEmailArgs {\n  input: ISendQuizToEmailInput;\n}\nexport interface MutationToSendQuizToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendQuizToEmailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToTranslateCountriesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateWithIdProfileArgs {\n  input: IUpdateProfileWithIdInput;\n}\nexport interface MutationToUpdateWithIdProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateWithIdProfileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateNicheArgs {\n  input: INicheInput;\n}\nexport interface MutationToCreateNicheResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateNicheArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateNicheArgs {\n  id: IUUID;\n  input: INicheInput;\n}\nexport interface MutationToUpdateNicheResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateNicheArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteNicheArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteNicheResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteNicheArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateNicheServiceArgs {\n  input: INicheServiceInput;\n}\nexport interface MutationToCreateNicheServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateNicheServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBulkTutorArgs {\n  input: ICreateBulkTutorInput;\n}\nexport interface MutationToCreateBulkTutorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBulkTutorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateNicheServiceArgs {\n  id: IUUID;\n  input: INicheServiceInput;\n}\nexport interface MutationToUpdateNicheServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateNicheServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteNicheServiceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteNicheServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteNicheServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBillingDataArgs {\n  input: IUpdateBillingDataInput;\n}\nexport interface MutationToUpdateBillingDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBillingDataArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCompanyDataArgs {\n  input: IUpdateCompanyDataInput;\n}\nexport interface MutationToUpdateCompanyDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCompanyDataArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBulkTeacherArgs {\n  input: ICreateBulkTeacherInput;\n}\nexport interface MutationToCreateBulkTeacherResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBulkTeacherArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateHealthInsuranceArgs {\n  input: IUpdateHealthInsuranceInput;\n}\nexport interface MutationToUpdateHealthInsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateHealthInsuranceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAttendanceExcelArgs {\n  input: ICreateAttendanceExcelInput;\n}\nexport interface MutationToCreateAttendanceExcelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAttendanceExcelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBulkUserArgs {\n  input: ICreateBulkUserInput;\n}\nexport interface MutationToCreateBulkUserResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBulkUserArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAttendanceArgs {\n  input: ICreateAttendanceInput;\n}\nexport interface MutationToCreateAttendanceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAttendanceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCheisiUsersExcelArgs {\n  input: ICreateCheisiUsersExcelInput;\n}\nexport interface MutationToCreateCheisiUsersExcelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCheisiUsersExcelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToNewContactFormArgs {\n  input: INewContactFormInput;\n}\nexport interface MutationToNewContactFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToNewContactFormArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToNewExternalLoginArgs {\n  input: INewExternalLoginInput;\n}\nexport interface MutationToNewExternalLoginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToNewExternalLoginArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteUserArgs {\n  input: IDeleteUserInput;\n}\nexport interface MutationToDeleteUserResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteUserArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToTestBulkArgs {\n  input: ITestBulkInput;\n}\nexport interface MutationToTestBulkResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToTestBulkArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePositionColumnsArgs {\n  input: IUpdatePositionColumnsInput;\n}\nexport interface MutationToUpdatePositionColumnsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePositionColumnsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePositionBlockColumnsArgs {\n  input: IUpdatePositionBlockColumnsInput;\n}\nexport interface MutationToUpdatePositionBlockColumnsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePositionBlockColumnsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToLoginWithProviderArgs {\n  input: ILoginWithProviderInput;\n}\nexport interface MutationToLoginWithProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToLoginWithProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProjectSocialNetworkArgs {\n  input: ICreateProjectSocialNetworkInput;\n}\nexport interface MutationToCreateProjectSocialNetworkResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProjectSocialNetworkArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProjectSocialNetworkArgs {\n  input: IUpdateProjectSocialNetworkInput;\n}\nexport interface MutationToUpdateProjectSocialNetworkResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProjectSocialNetworkArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectSocialNetworkArgs {\n  input: IDeleteProjectSocialNetworkInput;\n}\nexport interface MutationToDeleteProjectSocialNetworkResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectSocialNetworkArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateRecommendedProjectArgs {\n  input: ICreateRecommendedProjectInput;\n}\nexport interface MutationToCreateRecommendedProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateRecommendedProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateRecommendedProjectArgs {\n  input: IUpdateRecommendedProjectInput;\n}\nexport interface MutationToUpdateRecommendedProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateRecommendedProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteRecommendedProjectArgs {\n  input: IDeleteRecommendedProjectInput;\n}\nexport interface MutationToDeleteRecommendedProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteRecommendedProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSetProjectToProductionArgs {\n  input: ISetProjectToProductionInput;\n}\nexport interface MutationToSetProjectToProductionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSetProjectToProductionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProjectTemplateArgs {\n  input: ICreateProjectTemplateInput;\n}\nexport interface MutationToCreateProjectTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProjectTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProjectTemplateArgs {\n  input: IUpdateProjectTemplateInput;\n}\nexport interface MutationToUpdateProjectTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProjectTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectTemplateArgs {\n  input: IDeleteProjectTemplateInput;\n}\nexport interface MutationToDeleteProjectTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMemberArgs {\n  input: ICreateMemberInput;\n}\nexport interface MutationToCreateMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToLoginMemberArgs {\n  input: ILoginMemberInput;\n}\nexport interface MutationToLoginMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToLoginMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCompanyArgs {\n  input: ICreateCompanyInput;\n}\nexport interface MutationToCreateCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCompanyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProjectArgs {\n  input: ICreateProjectInput;\n}\nexport interface MutationToCreateProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToGenerateSlugArgs {\n  phrase: string;\n}\nexport interface MutationToGenerateSlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToGenerateSlugArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateNewRolesArgs {\n  projectId: IUUID;\n}\nexport interface MutationToCreateNewRolesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateNewRolesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateUserArgs {\n  input: ICreateUserInput;\n}\nexport interface MutationToCreateUserResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateUserArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateOrFindUserArgs {\n  input: ICreateOrFindUserInput;\n}\nexport interface MutationToCreateOrFindUserResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateOrFindUserArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateOrdinaryUserArgs {\n  input: ICreateOrdinaryUserInput;\n}\nexport interface MutationToCreateOrdinaryUserResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateOrdinaryUserArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateUserWithoutMailArgs {\n  input: ICreateUserWithoutMailInput;\n}\nexport interface MutationToCreateUserWithoutMailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateUserWithoutMailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProfileArgs {\n  input: IUpdateProfileInput;\n}\nexport interface MutationToUpdateProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProfileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePasswordArgs {\n  input: IUpdatePasswordInput;\n}\nexport interface MutationToUpdatePasswordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePasswordArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToActiveMemberArgs {\n  input: IActiveMemberInput;\n}\nexport interface MutationToActiveMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToActiveMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProjectRoleArgs {\n  input: ICreateProjectRoleInput;\n}\nexport interface MutationToCreateProjectRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProjectRoleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToRemoveAccentArgs {\n  txt: string;\n}\nexport interface MutationToRemoveAccentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToRemoveAccentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUploadPhotoProfileArgs {\n  input: IUploadPhotoProfileInput;\n}\nexport interface MutationToUploadPhotoProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUploadPhotoProfileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectArgs {\n  input: IDeleteProjectInput;\n}\nexport interface MutationToDeleteProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCompanyArgs {\n  input: IUpdateCompanyInput;\n}\nexport interface MutationToUpdateCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCompanyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToRestorePasswordArgs {\n  input: IRestorePasswordInput;\n}\nexport interface MutationToRestorePasswordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToRestorePasswordArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToRecoverPasswordArgs {\n  input: IRecoverPasswordInput;\n}\nexport interface MutationToRecoverPasswordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToRecoverPasswordArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToVerifyTokenArgs {\n  input: IVerifyTokenInput;\n}\nexport interface MutationToVerifyTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToVerifyTokenArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateGroupArgs {\n  input: ICreateGroupInput;\n}\nexport interface MutationToCreateGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateGroupArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddGroupToMemberArgs {\n  input: IAddGroupToMemberInput;\n}\nexport interface MutationToAddGroupToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddGroupToMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddGroupToTaxonomyArgs {\n  input: IAddGroupToTaxonomyInput;\n}\nexport interface MutationToAddGroupToTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddGroupToTaxonomyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddTaxonomyToMemberArgs {\n  input: IAddTaxonomyToMemberInput;\n}\nexport interface MutationToAddTaxonomyToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddTaxonomyToMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteGroupArgs {\n  input: IDeleteGroupInput;\n}\nexport interface MutationToDeleteGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteGroupArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteGroupTaxonomyArgs {\n  input: IDeleteGroupTaxonomyInput;\n}\nexport interface MutationToDeleteGroupTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteGroupTaxonomyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMemberGroupArgs {\n  input: IDeleteMemberGroupMutationInput;\n}\nexport interface MutationToDeleteMemberGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMemberGroupArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMemberTaxonomyArgs {\n  input: IDeleteMemberTaxonomyInput;\n}\nexport interface MutationToDeleteMemberTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMemberTaxonomyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMemberArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectRoleArgs {\n  input: IDeleteProjectRoleInput;\n}\nexport interface MutationToDeleteProjectRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectRoleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateUpdatePermissionArgs {\n  input: ICreateUpdatePermissionInput;\n}\nexport interface MutationToCreateUpdatePermissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateUpdatePermissionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProjectArgs {\n  input: IUpdateProjectInput;\n}\nexport interface MutationToUpdateProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProjectRoleArgs {\n  input: IUpdateProjectRoleInput;\n}\nexport interface MutationToUpdateProjectRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProjectRoleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateGroupArgs {\n  input: IUpdateGroupInput;\n}\nexport interface MutationToUpdateGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateGroupArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddMemberAsAdminArgs {\n  input: IAddMemberAsAdminInput;\n}\nexport interface MutationToAddMemberAsAdminResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddMemberAsAdminArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMemberStreamArgs {\n  input: ICreateMemberStreamInput;\n}\nexport interface MutationToCreateMemberStreamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMemberStreamArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMemberFromMemberProjectsArgs {\n  input: IDeleteMemberFromMemberProjectsInput;\n}\nexport interface MutationToDeleteMemberFromMemberProjectsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMemberFromMemberProjectsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddMemberToCompanyArgs {\n  input: IAddMemberToCompanyInput;\n}\nexport interface MutationToAddMemberToCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddMemberToCompanyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePageManagerArgs {\n  input: ICreatePageManagerInput;\n}\nexport interface MutationToCreatePageManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePageManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateViewManagerArgs {\n  input: ICreateViewManagerInput;\n}\nexport interface MutationToCreateViewManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateViewManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateViewColumnArgs {\n  input: ICreateViewColumnInput;\n}\nexport interface MutationToCreateViewColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateViewColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateViewBlockColumnArgs {\n  input: ICreateViewBlockColumnInput;\n}\nexport interface MutationToCreateViewBlockColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateViewBlockColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePageManagerArgs {\n  input: IUpdatePageManagerInput;\n}\nexport interface MutationToUpdatePageManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePageManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateViewManagerArgs {\n  input: IUpdateViewManagerInput;\n}\nexport interface MutationToUpdateViewManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateViewManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateViewColumnArgs {\n  input: IUpdateViewColumnInput;\n}\nexport interface MutationToUpdateViewColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateViewColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateViewBlockColumnArgs {\n  input: IUpdateViewBlockColumnInput;\n}\nexport interface MutationToUpdateViewBlockColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateViewBlockColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePageManagerArgs {\n  input: IDeletePageManagerInput;\n}\nexport interface MutationToDeletePageManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePageManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteViewManagerArgs {\n  input: IDeleteViewManagerInput;\n}\nexport interface MutationToDeleteViewManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteViewManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteViewColumnArgs {\n  input: IDeleteViewColumnInput;\n}\nexport interface MutationToDeleteViewColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteViewColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToLinkTransactionToSellArgs {\n  input: ILinkTransactionToSellInput;\n}\nexport interface MutationToLinkTransactionToSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToLinkTransactionToSellArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSellArgs {\n  id: IUUID;\n  input: IUpdateSellInput;\n}\nexport interface MutationToUpdateSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSellArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteViewBlockColumnArgs {\n  input: IDeleteViewBlockColumnInput;\n}\nexport interface MutationToDeleteViewBlockColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteViewBlockColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMultipleMemberRelationArgs {\n  input: IMultipleMemberRelationInput;\n}\nexport interface MutationToCreateMultipleMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMultipleMemberRelationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMemberRelationArgs {\n  input: IMemberRelationInput;\n}\nexport interface MutationToCreateMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMemberRelationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMemberRelationArgs {\n  id: IUUID;\n  input: IMemberRelationInput;\n}\nexport interface MutationToUpdateMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMemberRelationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMemberRelationArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMemberRelationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProductSellArgs {\n  input: IUpdateProductSellInput;\n}\nexport interface MutationToUpdateProductSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProductSellArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateTaxArgs {\n  input: ICreateTaxInput;\n}\nexport interface MutationToCreateTaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateTaxArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteTaxArgs {\n  input: IDeleteTaxInput;\n}\nexport interface MutationToDeleteTaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteTaxArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToImportProductsFromExcelArgs {\n  input: IImportProductsFromExcelInput;\n}\nexport interface MutationToImportProductsFromExcelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToImportProductsFromExcelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateRouteArgs {\n  input: ICreateRouteInput;\n}\nexport interface MutationToCreateRouteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateRouteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteRouteArgs {\n  input: IDeleteRouteInput;\n}\nexport interface MutationToDeleteRouteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteRouteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProductSellArgs {\n  input: ICreateProductSellInput;\n}\nexport interface MutationToCreateProductSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProductSellArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProductSellArgs {\n  input: IDeleteProductSellInput;\n}\nexport interface MutationToDeleteProductSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProductSellArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePurchaseQuoteArgs {\n  input: ICreatePurchaseQuoteInput;\n}\nexport interface MutationToCreatePurchaseQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePurchaseQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePurchaseQuoteArgs {\n  input: IDeletePurchaseQuoteInput;\n}\nexport interface MutationToDeletePurchaseQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePurchaseQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateStockAlertArgs {\n  input: ICreateStockAlertInput;\n}\nexport interface MutationToCreateStockAlertResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateStockAlertArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteStockAlertArgs {\n  input: IDeleteStockAlertInput;\n}\nexport interface MutationToDeleteStockAlertResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteStockAlertArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateStockAlertArgs {\n  input: IUpdateStockAlertInput;\n}\nexport interface MutationToUpdateStockAlertResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateStockAlertArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateLegalTermArgs {\n  input: ICreateLegalTermInput;\n}\nexport interface MutationToCreateLegalTermResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateLegalTermArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsuranceFormArgs {\n  input: ICreateInsuranceFormInput;\n}\nexport interface MutationToCreateInsuranceFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsuranceFormArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsuranceFormArgs {\n  input: IUpdateInsuranceFormInput;\n}\nexport interface MutationToUpdateInsuranceFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsuranceFormArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateLegalTermArgs {\n  input: IUpdateLegalTermInput;\n}\nexport interface MutationToUpdateLegalTermResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateLegalTermArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteLegalTermArgs {\n  input: IDeleteLegalTermInput;\n}\nexport interface MutationToDeleteLegalTermResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteLegalTermArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateArticleArgs {\n  input: ICreateArticleInput;\n}\nexport interface MutationToCreateArticleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateArticleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateStatusArticleArgs {\n  input: IUpdateStatusArticleInput;\n}\nexport interface MutationToUpdateStatusArticleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateStatusArticleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateTaxonomyArgs {\n  input: ICreateTaxonomyInput;\n}\nexport interface MutationToCreateTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateTaxonomyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToBlog_generateSlugArgs {\n  phrase: string;\n}\nexport interface MutationToBlog_generateSlugResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToBlog_generateSlugArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateArticleArgs {\n  input: IUpdateArticleInput;\n}\nexport interface MutationToUpdateArticleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateArticleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateTaxonomyArgs {\n  input: IUpdateTaxonomyInput;\n}\nexport interface MutationToUpdateTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateTaxonomyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteArticleArgs {\n  input: IDeleteArticleInput;\n}\nexport interface MutationToDeleteArticleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteArticleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteTaxonomyArgs {\n  input: IDeleteTaxonomyInput;\n}\nexport interface MutationToDeleteTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteTaxonomyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToNewSurveyArgs {\n  input: INewSurveyInput;\n}\nexport interface MutationToNewSurveyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToNewSurveyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSurveyArgs {\n  input: IUpdateSurveyInput;\n}\nexport interface MutationToUpdateSurveyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSurveyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSurveyArgs {\n  input: IDeleteSurveyInput;\n}\nexport interface MutationToDeleteSurveyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSurveyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToNewQuestionArgs {\n  input: INewQuestionInput;\n}\nexport interface MutationToNewQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToNewQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuestionArgs {\n  input: IDeleteQuestionInput;\n}\nexport interface MutationToDeleteQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuestionArgs {\n  input: IUpdateQuestionInput;\n}\nexport interface MutationToUpdateQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToNewOptionArgs {\n  input: INewOptionInput;\n}\nexport interface MutationToNewOptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToNewOptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteOptionArgs {\n  input: IDeleteOptionInput;\n}\nexport interface MutationToDeleteOptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteOptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateOptionArgs {\n  input: IUpdateOptionInput;\n}\nexport interface MutationToUpdateOptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateOptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAnswerQuestionArgs {\n  input: IAnswerQuestionInput;\n}\nexport interface MutationToAnswerQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAnswerQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProductArgs {\n  input: ICreateProductInput;\n}\nexport interface MutationToCreateProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProductArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProductArgs {\n  input: IUpdateProductInput;\n}\nexport interface MutationToUpdateProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProductArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProductArgs {\n  input: IDeleteProductInput;\n}\nexport interface MutationToDeleteProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProductArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAddressArgs {\n  input: ICreateAddressInput;\n}\nexport interface MutationToCreateAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAddressArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAddressArgs {\n  input: IUpdateAddressInput;\n}\nexport interface MutationToUpdateAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAddressArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAddressArgs {\n  input: IDeleteAddressInput;\n}\nexport interface MutationToDeleteAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAddressArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateUpdateShopArgs {\n  input: ICreateUpdateShopInput;\n}\nexport interface MutationToCreateUpdateShopResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateUpdateShopArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDiseaseArgs {\n  input: ICreateDiseaseInput;\n}\nexport interface MutationToCreateDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDiseaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDiseaseArgs {\n  input: IUpdateDiseaseInput;\n}\nexport interface MutationToUpdateDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDiseaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDiseaseArgs {\n  input: IDeleteDiseaseInput;\n}\nexport interface MutationToDeleteDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDiseaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateTopicDiseaseArgs {\n  input: ICreateTopicDiseaseInput;\n}\nexport interface MutationToCreateTopicDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateTopicDiseaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateTopicDiseaseArgs {\n  input: IUpdateTopicDiseaseInput;\n}\nexport interface MutationToUpdateTopicDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateTopicDiseaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteTopicDiseaseArgs {\n  input: IDeleteTopicDiseaseInput;\n}\nexport interface MutationToDeleteTopicDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteTopicDiseaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFAQArgs {\n  input: ICreateFAQInput;\n}\nexport interface MutationToCreateFAQResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFAQArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFAQArgs {\n  input: IUpdateFAQInput;\n}\nexport interface MutationToUpdateFAQResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFAQArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFAQArgs {\n  input: IDeleteFAQInput;\n}\nexport interface MutationToDeleteFAQResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFAQArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToRunJobShopArgs {\n  input: IRunJobShopInput;\n}\nexport interface MutationToRunJobShopResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToRunJobShopArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCourseArgs {\n  input: ICreateCourseInput;\n}\nexport interface MutationToCreateCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCourseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBeginCourseArgs {\n  input: ICreateBeginCourseInput;\n}\nexport interface MutationToCreateBeginCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBeginCourseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCourseFormArgs {\n  input: ICreateCourseFormInput;\n}\nexport interface MutationToCreateCourseFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCourseFormArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCourseArgs {\n  input: IUpdateCourseInput;\n}\nexport interface MutationToUpdateCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCourseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBeginCourseArgs {\n  input: IUpdateBeginCourseInput;\n}\nexport interface MutationToUpdateBeginCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBeginCourseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCourseFormArgs {\n  input: IUpdateCourseFormInput;\n}\nexport interface MutationToUpdateCourseFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCourseFormArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCourseArgs {\n  input: IDeleteCourseInput;\n}\nexport interface MutationToDeleteCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCourseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBeginCourseArgs {\n  input: IDeleteBeginCourseInput;\n}\nexport interface MutationToDeleteBeginCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBeginCourseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCourseFormArgs {\n  input: IDeleteCourseFormInput;\n}\nexport interface MutationToDeleteCourseFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCourseFormArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToFixProductArgs {\n  input: IFixProductInput;\n}\nexport interface MutationToFixProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToFixProductArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCourseScheduleArgs {\n  input: IDeleteCourseScheduleInput;\n}\nexport interface MutationToDeleteCourseScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCourseScheduleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCourseScheduleArgs {\n  input: IUpdateCourseScheduleInput;\n}\nexport interface MutationToUpdateCourseScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCourseScheduleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBranchOfficeArgs {\n  input: ICreateBranchOfficeInput;\n}\nexport interface MutationToCreateBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBranchOfficeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateManagerArgs {\n  input: ICreateManagerInput;\n}\nexport interface MutationToCreateManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProductPurchaseArgs {\n  input: ICreateProductPurchaseInput;\n}\nexport interface MutationToCreateProductPurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProductPurchaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePurchaseArgs {\n  input: ICreatePurchaseInput;\n}\nexport interface MutationToCreatePurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePurchaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateStoreArgs {\n  input: ICreateStoreInput;\n}\nexport interface MutationToCreateStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateStoreArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToNewStoreTransferArgs {\n  input: INewStoreTransferInput;\n}\nexport interface MutationToNewStoreTransferResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToNewStoreTransferArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProviderArgs {\n  input: ICreateProviderInput;\n}\nexport interface MutationToCreateProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBranchOfficeArgs {\n  input: IUpdateBranchOfficeInput;\n}\nexport interface MutationToUpdateBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBranchOfficeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateManagerArgs {\n  input: IUpdateManagerInput;\n}\nexport interface MutationToUpdateManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePurchaseArgs {\n  input: IUpdatePurchaseInput;\n}\nexport interface MutationToUpdatePurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePurchaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateStoreArgs {\n  input: IUpdateStoreInput;\n}\nexport interface MutationToUpdateStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateStoreArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteStoreArgs {\n  input: IDeleteStoreInput;\n}\nexport interface MutationToDeleteStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteStoreArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteManagerArgs {\n  input: IDeleteManagerInput;\n}\nexport interface MutationToDeleteManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteManagerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProviderArgs {\n  input: IUpdateProviderInput;\n}\nexport interface MutationToUpdateProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProviderArgs {\n  input: IDeleteProviderInput;\n}\nexport interface MutationToDeleteProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePurchaseArgs {\n  input: IDeletePurchaseInput;\n}\nexport interface MutationToDeletePurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePurchaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProductPurchaseArgs {\n  input: IDeleteProductPurchaseInput;\n}\nexport interface MutationToDeleteProductPurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProductPurchaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBranchOfficeArgs {\n  input: IDeleteBranchOfficeInput;\n}\nexport interface MutationToDeleteBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBranchOfficeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAssociationServiceToProjectArgs {\n  input: IAssociationServiceToProjectInput;\n}\nexport interface MutationToAssociationServiceToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAssociationServiceToProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateArrayFunctionArgs {\n  input: ICreateArrayFunctionInput;\n}\nexport interface MutationToCreateArrayFunctionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateArrayFunctionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteArrayFunctionArgs {\n  input: IDeleteArrayFunctionInput;\n}\nexport interface MutationToDeleteArrayFunctionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteArrayFunctionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateServiceProjectArgs {\n  input: IUpdateServiceProjectInput;\n}\nexport interface MutationToUpdateServiceProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateServiceProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteServiceProjectArgs {\n  input: IDeleteServiceProjectInput;\n}\nexport interface MutationToDeleteServiceProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteServiceProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCancelEventArgs {\n  input: ICancelEventInput;\n}\nexport interface MutationToCancelEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCancelEventArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateEventTypeArgs {\n  input: ICreateEventTypeInput;\n}\nexport interface MutationToCreateEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateEventTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSubEventTypeArgs {\n  input: ICreateSubEventTypeInput;\n}\nexport interface MutationToCreateSubEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSubEventTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSubEventTypeArgs {\n  input: IDeleteSubEventTypeInput;\n}\nexport interface MutationToDeleteSubEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSubEventTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSubEventTypeArgs {\n  input: IUpdateSubEventTypeInput;\n}\nexport interface MutationToUpdateSubEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSubEventTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddSubTypeToEventTypeArgs {\n  input: IAddSubTypeToEventTypeInput;\n}\nexport interface MutationToAddSubTypeToEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddSubTypeToEventTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteEventTypeArgs {\n  eventTypeId: IUUID;\n}\nexport interface MutationToDeleteEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteEventTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateEventTypeArgs {\n  input: IUpdateEventTypeInput;\n}\nexport interface MutationToUpdateEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateEventTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateEventArgs {\n  input: ICreateEventInput;\n}\nexport interface MutationToCreateEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateEventArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateEventMemberArgs {\n  input: ICreateEventMemberInput;\n}\nexport interface MutationToCreateEventMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateEventMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateEventArgs {\n  input: IUpdateEventInput;\n}\nexport interface MutationToUpdateEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateEventArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteEventArgs {\n  input: IDeleteEventInput;\n}\nexport interface MutationToDeleteEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteEventArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateEventSessionArgs {\n  input: ICreateEventSessionInput;\n}\nexport interface MutationToCreateEventSessionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateEventSessionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateEventSessionArgs {\n  input: IUpdateEventSessionInput;\n}\nexport interface MutationToUpdateEventSessionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateEventSessionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteEventSessionArgs {\n  input: IDeleteEventSessionInput;\n}\nexport interface MutationToDeleteEventSessionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteEventSessionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendRecordatoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateScheduleArgs {\n  input: ICreateScheduleInput;\n}\nexport interface MutationToCreateScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateScheduleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAssociationMemberToConsultArgs {\n  input: IAssociationMemberToConsultInput;\n}\nexport interface MutationToAssociationMemberToConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAssociationMemberToConsultArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCancellationMemberToConsultArgs {\n  input: ICancellationMemberToConsultInput;\n}\nexport interface MutationToCancellationMemberToConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCancellationMemberToConsultArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToChangeStatusEventArgs {\n  input: IChangeStatusEventInput;\n}\nexport interface MutationToChangeStatusEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToChangeStatusEventArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteScheduleArgs {\n  input: IDeleteScheduleInput;\n}\nexport interface MutationToDeleteScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteScheduleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteTurnArgs {\n  input: IDeleteTurnInput;\n}\nexport interface MutationToDeleteTurnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteTurnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateResourceQuoteArgs {\n  input: IResourceQuoteInput;\n}\nexport interface MutationToCreateResourceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateResourceQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateResourceQuoteArgs {\n  id: IUUID;\n  input: IResourceQuoteInput;\n}\nexport interface MutationToUpdateResourceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateResourceQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteResourceQuoteArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteResourceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteResourceQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateResourceQuoteDetailArgs {\n  input: IResourceQuoteDetailInput;\n}\nexport interface MutationToCreateResourceQuoteDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateResourceQuoteDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateResourceQuoteDetailArgs {\n  id: IUUID;\n  input: IResourceQuoteDetailInput;\n}\nexport interface MutationToUpdateResourceQuoteDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateResourceQuoteDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteResourceQuoteDetailArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteResourceQuoteDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteResourceQuoteDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProposalArgs {\n  input: IProposalInput;\n}\nexport interface MutationToCreateProposalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProposalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProposalArgs {\n  id: IUUID;\n  input: IProposalInput;\n}\nexport interface MutationToUpdateProposalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProposalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProposalArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteProposalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProposalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCollaboratorArgs {\n  input: ICollaboratorInput;\n}\nexport interface MutationToCreateCollaboratorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCollaboratorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCollaboratorArgs {\n  id: IUUID;\n  input: ICollaboratorInput;\n}\nexport interface MutationToUpdateCollaboratorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCollaboratorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCollaboratorArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCollaboratorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCollaboratorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCollaboratorHoursArgs {\n  input: ICollaboratorHoursInput;\n}\nexport interface MutationToCreateCollaboratorHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCollaboratorHoursArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCollaboratorHoursArgs {\n  id: IUUID;\n  input: ICollaboratorHoursInput;\n}\nexport interface MutationToUpdateCollaboratorHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCollaboratorHoursArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCollaboratorHoursArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCollaboratorHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCollaboratorHoursArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateHiringArgs {\n  input: IHiringInput;\n}\nexport interface MutationToCreateHiringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateHiringArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateHiringArgs {\n  id: IUUID;\n  input: IHiringInput;\n}\nexport interface MutationToUpdateHiringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateHiringArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteHiringArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteHiringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteHiringArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateHiringServiceArgs {\n  input: IHiringServiceInput;\n}\nexport interface MutationToCreateHiringServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateHiringServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateHiringServiceArgs {\n  id: IUUID;\n  input: IHiringServiceInput;\n}\nexport interface MutationToUpdateHiringServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateHiringServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteHiringServiceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteHiringServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteHiringServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateHiringTypeArgs {\n  input: IHiringTypeInput;\n}\nexport interface MutationToCreateHiringTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateHiringTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateHiringTypeArgs {\n  id: IUUID;\n  input: IHiringTypeInput;\n}\nexport interface MutationToUpdateHiringTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateHiringTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteHiringTypeArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteHiringTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteHiringTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateShiftArgs {\n  input: IShiftInput;\n}\nexport interface MutationToCreateShiftResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateShiftArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateShiftArgs {\n  id: IUUID;\n  input: IShiftInput;\n}\nexport interface MutationToUpdateShiftResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateShiftArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteShiftArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteShiftResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteShiftArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBusinessTypeArgs {\n  input: ICreateBusinessTypeInput;\n}\nexport interface MutationToCreateBusinessTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBusinessTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBusinessTypeArgs {\n  input: IUpdateBusinessTypeInput;\n}\nexport interface MutationToUpdateBusinessTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBusinessTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBusinessTypeArgs {\n  input: IDeleteBusinessTypeInput;\n}\nexport interface MutationToDeleteBusinessTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBusinessTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBusinessRuleArgs {\n  input: ICreateBusinessRuleInput;\n}\nexport interface MutationToCreateBusinessRuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBusinessRuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBusinessRuleArgs {\n  input: IUpdateBusinessRuleInput;\n}\nexport interface MutationToUpdateBusinessRuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBusinessRuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBusinessRuleArgs {\n  input: IDeleteBusinessRuleInput;\n}\nexport interface MutationToDeleteBusinessRuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBusinessRuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCouponFromTemplateArgs {\n  input: IDeleteCouponFromTemplateInput;\n}\nexport interface MutationToDeleteCouponFromTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCouponFromTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddCouponsToTemplateArgs {\n  input: IAddCouponsToTemplateInput;\n}\nexport interface MutationToAddCouponsToTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddCouponsToTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateUpdateConfigurationTemplateArgs {\n  input: ICreateUpdateConfigurationTemplateInput;\n}\nexport interface MutationToCreateUpdateConfigurationTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateUpdateConfigurationTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendTemplateArgs {\n  input: ISendTemplateInput;\n}\nexport interface MutationToSendTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToPutFirebaseDeviceArgs {\n  input: IPutFirebaseDeviceInput;\n}\nexport interface MutationToPutFirebaseDeviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToPutFirebaseDeviceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCouponArgs {\n  input: ICreateCouponInput;\n}\nexport interface MutationToCreateCouponResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCouponArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCouponArgs {\n  input: IUpdateCouponInput;\n}\nexport interface MutationToUpdateCouponResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCouponArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCouponArgs {\n  input: IDeleteCouponInput;\n}\nexport interface MutationToDeleteCouponResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCouponArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateTemplateArgs {\n  input: ICreateTemplateInput;\n}\nexport interface MutationToCreateTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateTemplateArgs {\n  input: IUpdateTemplateInput;\n}\nexport interface MutationToUpdateTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteTemplateArgs {\n  input: IDeleteTemplateInput;\n}\nexport interface MutationToDeleteTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateErrorPageArgs {\n  input: ICreateErrorPageInput;\n}\nexport interface MutationToCreateErrorPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateErrorPageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateErrorPageArgs {\n  input: IUpdateErrorPageInput;\n}\nexport interface MutationToUpdateErrorPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateErrorPageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteErrorPageArgs {\n  input: IDeleteErrorPageInput;\n}\nexport interface MutationToDeleteErrorPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteErrorPageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateErrorPageValidationArgs {\n  input: ICreateErrorPageValidationInput;\n}\nexport interface MutationToCreateErrorPageValidationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateErrorPageValidationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateErrorPageValidationArgs {\n  input: IUpdateErrorPageValidationInput;\n}\nexport interface MutationToUpdateErrorPageValidationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateErrorPageValidationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteErrorValidationPageArgs {\n  input: IDeleteErrorPageValidationInput;\n}\nexport interface MutationToDeleteErrorValidationPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteErrorValidationPageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBusinessArgs {\n  input: ICreateBusinessInput;\n}\nexport interface MutationToCreateBusinessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBusinessArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBusinessArgs {\n  input: IUpdateBusinessInput;\n}\nexport interface MutationToUpdateBusinessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBusinessArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBusinessArgs {\n  input: IDeleteBusinessInput;\n}\nexport interface MutationToDeleteBusinessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBusinessArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAssociateBusinessRulesArgs {\n  input: IAssociateBusinessRulesInput;\n}\nexport interface MutationToAssociateBusinessRulesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAssociateBusinessRulesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAssociateProjectPlanSubscriptionArgs {\n  input: IAssociateProjectPlanSubscriptionInput;\n}\nexport interface MutationToAssociateProjectPlanSubscriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAssociateProjectPlanSubscriptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProjectPlanArgs {\n  input: ICreateProjectPlanInput;\n}\nexport interface MutationToCreateProjectPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProjectPlanArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProjectPlanArgs {\n  input: IUpdateProjectPlanInput;\n}\nexport interface MutationToUpdateProjectPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProjectPlanArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectPlanArgs {\n  input: IDeleteProjectPlanInput;\n}\nexport interface MutationToDeleteProjectPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectPlanArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectPlanSubscriptionArgs {\n  input: IDeleteProjectPlanSubscriptionInput;\n}\nexport interface MutationToDeleteProjectPlanSubscriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectPlanSubscriptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToPutConfigArgs {\n  input: IPutConfigInput;\n}\nexport interface MutationToPutConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToPutConfigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteConfigArgs {\n  input: IDeleteConfigInput;\n}\nexport interface MutationToDeleteConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteConfigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateOrderPagesArgs {\n  input: IUpdateOrderPageInput;\n}\nexport interface MutationToUpdateOrderPagesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateOrderPagesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchWewbsiteComponentArgs {\n  input: IUpdateBatchWewbsiteComponentInput;\n}\nexport interface MutationToUpdateBatchWewbsiteComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchWewbsiteComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateComponentArgs {\n  input: ICreateComponentInput;\n}\nexport interface MutationToCreateComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateWebsiteComponentArgs {\n  input: ICreateWebsiteComponentInput;\n}\nexport interface MutationToCreateWebsiteComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateWebsiteComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateWebsitePageArgs {\n  input: ICreateWebsitePageInput;\n}\nexport interface MutationToCreateWebsitePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateWebsitePageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateWebsiteSeoArgs {\n  input: ICreateWebsiteSeoInput;\n}\nexport interface MutationToCreateWebsiteSeoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateWebsiteSeoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateComponentArgs {\n  input: IUpdateComponentInput;\n}\nexport interface MutationToUpdateComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateWebsiteComponentArgs {\n  input: IUpdateWebsiteComponentInput;\n}\nexport interface MutationToUpdateWebsiteComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateWebsiteComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateWebsitePageArgs {\n  input: IUpdateWebsitePageInput;\n}\nexport interface MutationToUpdateWebsitePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateWebsitePageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateWebsiteSeoArgs {\n  input: IUpdateWebsiteSeoInput;\n}\nexport interface MutationToUpdateWebsiteSeoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateWebsiteSeoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteComponentArgs {\n  input: IDeleteComponentInput;\n}\nexport interface MutationToDeleteComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteWebsiteComponentArgs {\n  input: IDeleteWebsiteComponentInput;\n}\nexport interface MutationToDeleteWebsiteComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteWebsiteComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteWebsitePageArgs {\n  input: IDeleteWebsitePageInput;\n}\nexport interface MutationToDeleteWebsitePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteWebsitePageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteWebsiteSeoArgs {\n  input: IDeleteWebsiteSeoInput;\n}\nexport interface MutationToDeleteWebsiteSeoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteWebsiteSeoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBusinessRuleProjectPlansArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBusinessRuleProjectPlansResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBusinessRuleProjectPlansArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDocumentCategoryArgs {\n  input: IDocumentCategoryInput;\n}\nexport interface MutationToCreateDocumentCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDocumentCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDocumentCategoryArgs {\n  id: IUUID;\n  input: IDocumentCategoryInput;\n}\nexport interface MutationToUpdateDocumentCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDocumentCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDocumentCategoryArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDocumentCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDocumentCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDocumentCategoryDetailArgs {\n  input: IDocumentCategoryDetailInput;\n}\nexport interface MutationToCreateDocumentCategoryDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDocumentCategoryDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDocumentCategoryDetailArgs {\n  id: IUUID;\n  input: IDocumentCategoryDetailInput;\n}\nexport interface MutationToUpdateDocumentCategoryDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDocumentCategoryDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDocumentCategoryDetailArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDocumentCategoryDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDocumentCategoryDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDocumentArgs {\n  input: IDocumentInput;\n}\nexport interface MutationToCreateDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDocumentArgs {\n  id: IUUID;\n  input: IDocumentInput;\n}\nexport interface MutationToUpdateDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDocumentArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDocumentTemplateArgs {\n  input: IDocumentTemplateInput;\n}\nexport interface MutationToCreateDocumentTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDocumentTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDocumentTemplateArgs {\n  id: IUUID;\n  input: IDocumentTemplateInput;\n}\nexport interface MutationToUpdateDocumentTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDocumentTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDocumentTemplateArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDocumentTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDocumentTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateTemplatePageArgs {\n  input: ITemplatePageInput;\n}\nexport interface MutationToCreateTemplatePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateTemplatePageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateTemplatePageArgs {\n  id: IUUID;\n  input: ITemplatePageInput;\n}\nexport interface MutationToUpdateTemplatePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateTemplatePageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteTemplatePageArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteTemplatePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteTemplatePageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDocumentTagArgs {\n  input: IDocumentTagInput;\n}\nexport interface MutationToCreateDocumentTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDocumentTagArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDocumentTagArgs {\n  id: IUUID;\n  input: IDocumentTagInput;\n}\nexport interface MutationToUpdateDocumentTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDocumentTagArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDocumentTagArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDocumentTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDocumentTagArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDocumentScanArgs {\n  input: IDocumentScanInput;\n}\nexport interface MutationToCreateDocumentScanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDocumentScanArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDocumentScanArgs {\n  id: IUUID;\n  input: IDocumentScanInput;\n}\nexport interface MutationToUpdateDocumentScanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDocumentScanArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDocumentScanArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDocumentScanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDocumentScanArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDocumentReadArgs {\n  input: IDocumentReadInput;\n}\nexport interface MutationToCreateDocumentReadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDocumentReadArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDocumentReadArgs {\n  id: IUUID;\n  input: IDocumentReadInput;\n}\nexport interface MutationToUpdateDocumentReadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDocumentReadArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDocumentReadArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDocumentReadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDocumentReadArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToReadTextFromImageArgs {\n  input: ICreateTemplateInput;\n}\nexport interface MutationToReadTextFromImageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToReadTextFromImageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateVideoCallArgs {\n  input: ICreateVideoCallInput;\n}\nexport interface MutationToCreateVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateVideoCallArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateVideoCallArgs {\n  input: IUpdateVideoCallInput;\n}\nexport interface MutationToUpdateVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateVideoCallArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteVideoCallArgs {\n  input: IDeleteVideoCallInput;\n}\nexport interface MutationToDeleteVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteVideoCallArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAccessTokenArgs {\n  input: ICreateAccessTokenInput;\n}\nexport interface MutationToCreateAccessTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAccessTokenArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateVideoRoomArgs {\n  input: ICreateVideoRoomInput;\n}\nexport interface MutationToCreateVideoRoomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateVideoRoomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendNotificationArgs {\n  input: ISendNotificationUsersInput;\n}\nexport interface MutationToSendNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendEmailDownloadArgs {\n  input: ISendEmailDownloadInput;\n}\nexport interface MutationToSendEmailDownloadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendEmailDownloadArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendEmailNotificationArgs {\n  input: ISendEmailNotificationInput;\n}\nexport interface MutationToSendEmailNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendEmailNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToMuteParticipantArgs {\n  input: IMuteParticipantInput;\n}\nexport interface MutationToMuteParticipantResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToMuteParticipantArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToRemoveParticipantRoomArgs {\n  input: IRemoveParticipantRoomInput;\n}\nexport interface MutationToRemoveParticipantRoomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToRemoveParticipantRoomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateParticipantRoomArgs {\n  input: IUpdateParticipantRoomInput;\n}\nexport interface MutationToUpdateParticipantRoomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateParticipantRoomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToStartRecordRoom2Args {\n  input: IStartRecordRoomInput;\n}\nexport interface MutationToStartRecordRoom2Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToStartRecordRoom2Args, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToEndRecordRoomArgs {\n  input: IEndRecordRoomInput;\n}\nexport interface MutationToEndRecordRoomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToEndRecordRoomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateUpdateContactEmailArgs {\n  input: ICreateUpdateContactEmailInput;\n}\nexport interface MutationToCreateUpdateContactEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateUpdateContactEmailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendEmailArgs {\n  input: ISendEmailInput;\n}\nexport interface MutationToSendEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendEmailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteContactEmailArgs {\n  input: IDeleteContactEmailInput;\n}\nexport interface MutationToDeleteContactEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteContactEmailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendMailBotArgs {\n  input: ISendMailBotInput;\n}\nexport interface MutationToSendMailBotResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendMailBotArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendQuizArgs {\n  input: ISendQuizInput;\n}\nexport interface MutationToSendQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendQuizArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToMainSectionArgs {\n  content: string;\n  banner: string;\n}\nexport interface MutationToMainSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToMainSectionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToHyperVinculeArgs {\n  href: string;\n  name: string;\n}\nexport interface MutationToHyperVinculeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToHyperVinculeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendQuizGratitudeArgs {\n  input: ISendQuizGratitudeInput;\n}\nexport interface MutationToSendQuizGratitudeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendQuizGratitudeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateServiceAreaArgs {\n  input: IServiceAreaInput;\n}\nexport interface MutationToCreateServiceAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateServiceAreaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateServiceAreaArgs {\n  id: IUUID;\n  input: IServiceAreaInput;\n}\nexport interface MutationToUpdateServiceAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateServiceAreaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteServiceAreaArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteServiceAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteServiceAreaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAreaArgs {\n  input: IAreaInput;\n}\nexport interface MutationToCreateAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAreaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAreaArgs {\n  id: IUUID;\n  input: IAreaInput;\n}\nexport interface MutationToUpdateAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAreaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAreaArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAreaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchServiceMemberArgs {\n  input: IUpdateBatchServiceMemberInput;\n}\nexport interface MutationToUpdateBatchServiceMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchServiceMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateServiceMemberArgs {\n  input: IServiceMemberInput;\n}\nexport interface MutationToCreateServiceMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateServiceMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateServiceMemberArgs {\n  id: IUUID;\n  input: IServiceMemberInput;\n}\nexport interface MutationToUpdateServiceMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateServiceMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteServiceMemberArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteServiceMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteServiceMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateServiceQuizArgs {\n  input: IServiceQuizInput;\n}\nexport interface MutationToCreateServiceQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateServiceQuizArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateServiceQuizArgs {\n  id: IUUID;\n  input: IServiceQuizInput;\n}\nexport interface MutationToUpdateServiceQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateServiceQuizArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteServiceQuizArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteServiceQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteServiceQuizArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizArgs {\n  input: IQuizInput;\n}\nexport interface MutationToCreateQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizArgs {\n  id: IUUID;\n  input: IQuizInput;\n}\nexport interface MutationToUpdateQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizSectionArgs {\n  input: IQuizSectionInput;\n}\nexport interface MutationToCreateQuizSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizSectionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizSectionArgs {\n  id: IUUID;\n  input: IQuizSectionInput;\n}\nexport interface MutationToUpdateQuizSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizSectionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizSectionArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizSectionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDuplicateQuizQuestionArgs {\n  id: IUUID;\n}\nexport interface MutationToDuplicateQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDuplicateQuizQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizQuestionArgs {\n  input: IQuizQuestionInput;\n}\nexport interface MutationToCreateQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizQuestionArgs {\n  id: IUUID;\n  input: IQuizQuestionInput;\n}\nexport interface MutationToUpdateQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizQuestionArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizQuestionNestedArgs {\n  input: IQuizQuestionNestedInput;\n}\nexport interface MutationToCreateQuizQuestionNestedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizQuestionNestedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizQuestionNestedArgs {\n  id: IUUID;\n  input: IQuizQuestionNestedInput;\n}\nexport interface MutationToUpdateQuizQuestionNestedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizQuestionNestedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizQuestionNestedArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizQuestionNestedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizQuestionNestedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchQuizQuestionArgs {\n  input: IUpdateBatchQuizQuestionInput;\n}\nexport interface MutationToUpdateBatchQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchQuizQuestionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizQuestionAnswerArgs {\n  input: IQuizQuestionAnswerInput;\n}\nexport interface MutationToCreateQuizQuestionAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizQuestionAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizQuestionAnswerArgs {\n  id: IUUID;\n  input: IQuizQuestionAnswerInput;\n}\nexport interface MutationToUpdateQuizQuestionAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizQuestionAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizQuestionAnswerArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizQuestionAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizQuestionAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchQuizQuestionAnswerArgs {\n  input: IUpdateBatchQuizQuestionAnswerInput;\n}\nexport interface MutationToUpdateBatchQuizQuestionAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchQuizQuestionAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizAnswerArgs {\n  input: IQuizAnswerInput;\n}\nexport interface MutationToCreateQuizAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizAnswerArgs {\n  id: IUUID;\n  input: IQuizAnswerInput;\n}\nexport interface MutationToUpdateQuizAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizAnswerArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizMemberArgs {\n  input: IQuizMemberInput;\n}\nexport interface MutationToCreateQuizMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizMemberArgs {\n  id: IUUID;\n  input: IQuizMemberInput;\n}\nexport interface MutationToUpdateQuizMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizMemberArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizQuestionMemberArgs {\n  input: IQuizQuestionMemberInput;\n}\nexport interface MutationToCreateQuizQuestionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizQuestionMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizQuestionMemberArgs {\n  id: IUUID;\n  input: IQuizQuestionMemberInput;\n}\nexport interface MutationToUpdateQuizQuestionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizQuestionMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizQuestionMemberArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizQuestionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizQuestionMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchQuizQuestionMemberArgs {\n  input: IUpdateBatchQuizQuestionMemberInput;\n}\nexport interface MutationToUpdateBatchQuizQuestionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchQuizQuestionMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizMemberAnswerArgs {\n  input: IQuizMemberAnswerInput;\n}\nexport interface MutationToCreateQuizMemberAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizMemberAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizMemberAnswerArgs {\n  id: IUUID;\n  input: IQuizMemberAnswerInput;\n}\nexport interface MutationToUpdateQuizMemberAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizMemberAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizMemberAnswerArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizMemberAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizMemberAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchQuizMemberAnswerArgs {\n  input: IUpdateBatchQuizMemberAnswerInput;\n}\nexport interface MutationToUpdateBatchQuizMemberAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchQuizMemberAnswerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuizMemberDescriptionArgs {\n  input: IQuizMemberDescriptionInput;\n}\nexport interface MutationToCreateQuizMemberDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuizMemberDescriptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuizMemberDescriptionArgs {\n  id: IUUID;\n  input: IQuizMemberDescriptionInput;\n}\nexport interface MutationToUpdateQuizMemberDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuizMemberDescriptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuizMemberDescriptionArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteQuizMemberDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuizMemberDescriptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchQuizMemberDescriptionArgs {\n  input: IUpdateBatchQuizMemberDescriptionInput;\n}\nexport interface MutationToUpdateBatchQuizMemberDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchQuizMemberDescriptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateKeyArgs {\n  input: IKeyInput;\n}\nexport interface MutationToCreateKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateKeyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuotationAarcoArgs {\n  input: IQuotationInput;\n}\nexport interface MutationToCreateQuotationAarcoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuotationAarcoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToLoginAarcoArgs {\n  input: ILoginInput;\n}\nexport interface MutationToLoginAarcoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToLoginAarcoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToPolicyAarcoArgs {\n  input: IPolicyInput;\n}\nexport interface MutationToPolicyAarcoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToPolicyAarcoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToQuotationDownloadPDFAarcoArgs {\n  input: IQuotationDownloadPDFInput;\n}\nexport interface MutationToQuotationDownloadPDFAarcoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToQuotationDownloadPDFAarcoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToQuotationEmitAarcoArgs {\n  input: IQuotationEmitInput;\n}\nexport interface MutationToQuotationEmitAarcoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToQuotationEmitAarcoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToQuotationSendPDFAarcoArgs {\n  input: ISendQuotationInput;\n}\nexport interface MutationToQuotationSendPDFAarcoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToQuotationSendPDFAarcoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAttachPaymentMethodToCustomerArgs {\n  input: IAttachPaymentMethodToCustomerInput;\n}\nexport interface MutationToAttachPaymentMethodToCustomerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAttachPaymentMethodToCustomerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSetupIntentStripeArgs {\n  input: ISetupIntentStripeInput;\n}\nexport interface MutationToCreateSetupIntentStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSetupIntentStripeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSetDefaultPaymentMethodOnCustomerArgs {\n  input: ISetDefaultPaymentMethodOnCustomerInput;\n}\nexport interface MutationToSetDefaultPaymentMethodOnCustomerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSetDefaultPaymentMethodOnCustomerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePriceStripeArgs {\n  input: IUpdatePriceStripeInput;\n}\nexport interface MutationToUpdatePriceStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePriceStripeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToNewPaymentsAnyTypeArgs {\n  input: INewPaymentsAnyTypeInput;\n}\nexport interface MutationToNewPaymentsAnyTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToNewPaymentsAnyTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProductStripeArgs {\n  input: ICreateProductStripeInput;\n}\nexport interface MutationToCreateProductStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProductStripeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePlanArgs {\n  input: IPlanInput;\n}\nexport interface MutationToCreatePlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePlanArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateStripePriceArgs {\n  input: ICreateStripePriceInput;\n}\nexport interface MutationToCreateStripePriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateStripePriceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMethodPaymentArgs {\n  input: ICreateMethodPaymentInput;\n}\nexport interface MutationToCreateMethodPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMethodPaymentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMethodPaymentArgs {\n  input: IUpdateMethodPaymentInput;\n}\nexport interface MutationToUpdateMethodPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMethodPaymentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMethodPaymentArgs {\n  input: IDeleteMethodPaymentInput;\n}\nexport interface MutationToDeleteMethodPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMethodPaymentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePaymentStripeArgs {\n  input: ICreatePaymentStripeInput;\n}\nexport interface MutationToCreatePaymentStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePaymentStripeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePaymentStripeToAccountArgs {\n  input: ICreatePaymentStripeToAccountInput;\n}\nexport interface MutationToCreatePaymentStripeToAccountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePaymentStripeToAccountArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSuscriptionStripeArgs {\n  input: ICreateSuscriptionStripeInput;\n}\nexport interface MutationToCreateSuscriptionStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSuscriptionStripeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSuscriptionExternalStripeArgs {\n  input: ICreateSuscriptionExternalStripeInput;\n}\nexport interface MutationToCreateSuscriptionExternalStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSuscriptionExternalStripeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSuscriptionExternalStripeArgs {\n  input: IDeleteSuscriptionExternalStripeInput;\n}\nexport interface MutationToDeleteSuscriptionExternalStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSuscriptionExternalStripeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAccountStripeArgs {\n  input: ICreateStripeAccountInput;\n}\nexport interface MutationToCreateAccountStripeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAccountStripeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePaymentArgs {\n  input: IDeletePaymentInput;\n}\nexport interface MutationToDeletePaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePaymentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePaymentArgs {\n  input: IUpdatePaymentInput;\n}\nexport interface MutationToUpdatePaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePaymentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInvoiceArgs {\n  input: ICreateInvoiceInput;\n}\nexport interface MutationToCreateInvoiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInvoiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateStatusInvoiceArgs {\n  input: IUpdateStatusInvoiceInput;\n}\nexport interface MutationToUpdateStatusInvoiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateStatusInvoiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePaymentMethodArgs {\n  input: ICreatePaymentMethodInput;\n}\nexport interface MutationToCreatePaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePaymentMethodArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePaymentMethodArgs {\n  input: IDeletePaymentMethodInput;\n}\nexport interface MutationToDeletePaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePaymentMethodArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBatchInsurerCoveragesArgs {\n  input: ICreateBatchInsurerCoveragesInput;\n}\nexport interface MutationToCreateBatchInsurerCoveragesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBatchInsurerCoveragesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuoteArgs {\n  input: ICreateQuoteInput;\n}\nexport interface MutationToCreateQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateNewOfficesArgs {\n  projectId: IUUID;\n}\nexport interface MutationToCreateNewOfficesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateNewOfficesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateNewProfilesArgs {\n  projectId: IUUID;\n}\nexport interface MutationToCreateNewProfilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateNewProfilesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerArgs {\n  input: ICreateInsurerInput;\n}\nexport interface MutationToCreateInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateOfficeArgs {\n  input: ICreateOfficeInput;\n}\nexport interface MutationToCreateOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateOfficeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateRegistrationArgs {\n  input: ICreateRegistrationInput;\n}\nexport interface MutationToCreateRegistrationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateRegistrationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuatorProfileArgs {\n  input: ICreateQuatorProfileInput;\n}\nexport interface MutationToCreateQuatorProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuatorProfileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerArgs {\n  input: IDeleteInsurerInput;\n}\nexport interface MutationToDeleteInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteOfficeArgs {\n  input: IDeleteOfficeInput;\n}\nexport interface MutationToDeleteOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteOfficeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuoterProfileArgs {\n  input: IDeleteQuoterProfileInput;\n}\nexport interface MutationToDeleteQuoterProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuoterProfileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerArgs {\n  input: IUpdateInsurerInput;\n}\nexport interface MutationToUpdateInsurerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateOfficeArgs {\n  input: IUpdateOfficeInput;\n}\nexport interface MutationToUpdateOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateOfficeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuoterProfileArgs {\n  input: IUpdateQuoterProfileInput;\n}\nexport interface MutationToUpdateQuoterProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuoterProfileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCatalogArgs {\n  input: ICreateCatalogInput;\n}\nexport interface MutationToCreateCatalogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCatalogArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToPopulateCredentialsArgs {\n  input: IPopulateCredentialsInput;\n}\nexport interface MutationToPopulateCredentialsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToPopulateCredentialsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToPopulateServicesArgs {\n  input: IPopulateServicesInput;\n}\nexport interface MutationToPopulateServicesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToPopulateServicesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToRegistrarPersonaArgs {\n  rfc: string;\n  homoclave: string;\n  nombre: string;\n  segNombre: string;\n  appellidoPaterno: string;\n  appMaterno: string;\n  sexo: number;\n  edoCivil: number;\n  calle: string;\n  numExt: string;\n  numInt: string;\n  colonia: string;\n  cp: string;\n  pob: string;\n  correo: string;\n}\nexport interface MutationToRegistrarPersonaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToRegistrarPersonaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToRunServiceQuoteArgs {\n  input: IQuoterRequestInput;\n}\nexport interface MutationToRunServiceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToRunServiceQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToEmissionCarArgs {\n  input: IEmitionRequestInput;\n}\nexport interface MutationToEmissionCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToEmissionCarArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToPrintEmissionArgs {\n  input: IPrintEmitionRequestInput;\n}\nexport interface MutationToPrintEmissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToPrintEmissionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuoteCoverageArgs {\n  input: ICreateQuoteCoverageInput;\n}\nexport interface MutationToCreateQuoteCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuoteCoverageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuoteCoverageArgs {\n  input: IUpdateQuoteCoverageInput;\n}\nexport interface MutationToUpdateQuoteCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuoteCoverageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuoteCoverageArgs {\n  input: IDeleteQuoteCoverageInput;\n}\nexport interface MutationToDeleteQuoteCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuoteCoverageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAssociationWithQuoterProfileArgs {\n  input: IAssociationWithQuoterProfileInput;\n}\nexport interface MutationToAssociationWithQuoterProfileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAssociationWithQuoterProfileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuoteArgs {\n  input: IUpdateQuoteInput;\n}\nexport interface MutationToUpdateQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerCredentialArgs {\n  input: ICreateInsurerCredentialInput;\n}\nexport interface MutationToCreateInsurerCredentialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerCredentialArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerCredentialArgs {\n  input: IUpdateInsurerCredentialInput;\n}\nexport interface MutationToUpdateInsurerCredentialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerCredentialArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAssociationRelationCarArgs {\n  input: IAssociationRelationCarInput;\n}\nexport interface MutationToAssociationRelationCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAssociationRelationCarArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCoverageProjectArgs {\n  input: ICreateCoverageProjectInput;\n}\nexport interface MutationToCreateCoverageProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCoverageProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCoverageProjectArgs {\n  id: IUUID;\n  input: IUpdateCoverageProjectInput;\n}\nexport interface MutationToUpdateCoverageProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCoverageProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchCoverageProjectArgs {\n  input: IUpdateBatchCoverageProjectInput;\n}\nexport interface MutationToUpdateBatchCoverageProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchCoverageProjectArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateApiServiceArgs {\n  input: ICreateApiServiceInput;\n}\nexport interface MutationToCreateApiServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateApiServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateApiServiceArgs {\n  input: IUpdateApiServiceInput;\n}\nexport interface MutationToUpdateApiServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateApiServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDynamicCustomMetaArgs {\n  input: IDynamicCustomMetaInput;\n}\nexport interface MutationToCreateDynamicCustomMetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDynamicCustomMetaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDynamicCustomMetaArgs {\n  id: IUUID;\n  input: IDynamicCustomMetaInput;\n}\nexport interface MutationToUpdateDynamicCustomMetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDynamicCustomMetaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDynamicCustomMetaArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDynamicCustomMetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDynamicCustomMetaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchDynamicCustomMetaArgs {\n  input: IUpdateBatchDynamicCustomMetaInput;\n}\nexport interface MutationToUpdateBatchDynamicCustomMetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchDynamicCustomMetaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDynamicCustomValueArgs {\n  input: IDynamicCustomValueInput;\n}\nexport interface MutationToCreateDynamicCustomValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDynamicCustomValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDynamicCustomValueArgs {\n  id: IUUID;\n  input: IDynamicCustomValueInput;\n}\nexport interface MutationToUpdateDynamicCustomValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDynamicCustomValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDynamicCustomValueArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDynamicCustomValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDynamicCustomValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchDynamicCustomValueArgs {\n  input: IUpdateBatchDynamicCustomValueInput;\n}\nexport interface MutationToUpdateBatchDynamicCustomValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchDynamicCustomValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDynamicPageArgs {\n  input: IDynamicPageInput;\n}\nexport interface MutationToCreateDynamicPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDynamicPageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDynamicPageArgs {\n  id: IUUID;\n  input: IDynamicPageInput;\n}\nexport interface MutationToUpdateDynamicPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDynamicPageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDynamicPageArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDynamicPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDynamicPageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDynamicBlockArgs {\n  input: IDynamicBlockInput;\n}\nexport interface MutationToCreateDynamicBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDynamicBlockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDynamicBlockArgs {\n  id: IUUID;\n  input: IDynamicBlockInput;\n}\nexport interface MutationToUpdateDynamicBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDynamicBlockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDynamicBlockArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDynamicBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDynamicBlockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDynamicSectionArgs {\n  input: IDynamicSectionInput;\n}\nexport interface MutationToCreateDynamicSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDynamicSectionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDynamicSectionArgs {\n  id: IUUID;\n  input: IDynamicSectionInput;\n}\nexport interface MutationToUpdateDynamicSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDynamicSectionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDynamicSectionArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDynamicSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDynamicSectionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDynamicSectionBlockArgs {\n  input: IDynamicSectionBlockInput;\n}\nexport interface MutationToCreateDynamicSectionBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDynamicSectionBlockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDynamicSectionBlockArgs {\n  id: IUUID;\n  input: IDynamicSectionBlockInput;\n}\nexport interface MutationToUpdateDynamicSectionBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDynamicSectionBlockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDynamicSectionBlockArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDynamicSectionBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDynamicSectionBlockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDynamicTabArgs {\n  input: IDynamicTabInput;\n}\nexport interface MutationToCreateDynamicTabResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDynamicTabArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDynamicTabBlockArgs {\n  id: IUUID;\n  input: IDynamicTabInput;\n}\nexport interface MutationToUpdateDynamicTabBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDynamicTabBlockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDynamicTabArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDynamicTabResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDynamicTabArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateChargeArgs {\n  input: ICreateChargeInput;\n}\nexport interface MutationToCreateChargeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateChargeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateClinicHistoryArgs {\n  input: ICreateClinicHistoryInput;\n}\nexport interface MutationToCreateClinicHistoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateClinicHistoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateClinicHistoryMedicalBackgroundDetailArgs {\n  input: ICreateClinicHistoryMedicalBackgroundDetailInput;\n}\nexport interface MutationToCreateClinicHistoryMedicalBackgroundDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateClinicHistoryMedicalBackgroundDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateEventDetailArgs {\n  input: ICreateEventDetailInput;\n}\nexport interface MutationToCreateEventDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateEventDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFisicExamArgs {\n  input: ICreateFisicExamInput;\n}\nexport interface MutationToCreateFisicExamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFisicExamArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFormatArgs {\n  input: ICreateFormatInput;\n}\nexport interface MutationToCreateFormatResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFormatArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMedicalBackgroundDetailArgs {\n  input: ICreateMedicalBackgroundDetailInput;\n}\nexport interface MutationToCreateMedicalBackgroundDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMedicalBackgroundDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMedicalBackgroundArgs {\n  input: ICreateMedicalBackgroundInput;\n}\nexport interface MutationToCreateMedicalBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMedicalBackgroundArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMedicalConfigArgs {\n  input: ICreateMedicalConfigInput;\n}\nexport interface MutationToCreateMedicalConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMedicalConfigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMedicalServiceArgs {\n  input: ICreateMedicalServiceInput;\n}\nexport interface MutationToCreateMedicalServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMedicalServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMedicineArgs {\n  input: ICreateMedicineInput;\n}\nexport interface MutationToCreateMedicineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMedicineArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateVaccineArgs {\n  input: ICreateVaccineInput;\n}\nexport interface MutationToCreateVaccineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateVaccineArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateVitalSignsArgs {\n  input: ICreateVitalSignsInput;\n}\nexport interface MutationToCreateVitalSignsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateVitalSignsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMedicRecipeArgs {\n  input: ICreateMedicRecipeInput;\n}\nexport interface MutationToCreateMedicRecipeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMedicRecipeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateRecipeConfigArgs {\n  input: ICreateRecipeConfigInput;\n}\nexport interface MutationToCreateRecipeConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateRecipeConfigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateRegistSesionArgs {\n  input: ICreateRegistSesionInput;\n}\nexport interface MutationToCreateRegistSesionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateRegistSesionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePacientNoteArgs {\n  input: ICreatePacientNoteInput;\n}\nexport interface MutationToCreatePacientNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePacientNoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateTherapyArgs {\n  input: ICreateTherapyInput;\n}\nexport interface MutationToCreateTherapyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateTherapyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDiagnosticArgs {\n  input: ICreateDiagnosticInput;\n}\nexport interface MutationToCreateDiagnosticResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDiagnosticArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateConsultNoteArgs {\n  input: ICreateConsultNoteInput;\n}\nexport interface MutationToCreateConsultNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateConsultNoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMedicalBackgroundSetArgs {\n  input: ICreateMedicalBackgroundSetInput;\n}\nexport interface MutationToCreateMedicalBackgroundSetResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMedicalBackgroundSetArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMedicalBackgroundTemplateArgs {\n  projectId: IUUID;\n  formatId: IUUID;\n}\nexport interface MutationToCreateMedicalBackgroundTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMedicalBackgroundTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateVitalSignsTemplateArgs {\n  input: ICreateVitalSignsTemplateInput;\n}\nexport interface MutationToCreateVitalSignsTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateVitalSignsTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePacientMedicalBackgroundArgs {\n  input: ICreatePacientMedicalBackgroundInput;\n}\nexport interface MutationToCreatePacientMedicalBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePacientMedicalBackgroundArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePatientVitalSignsResponseArgs {\n  input: ICreatePatientVitalSignsResponseInput;\n}\nexport interface MutationToCreatePatientVitalSignsResponseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePatientVitalSignsResponseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateChargeArgs {\n  input: IUpdateChargeInput;\n}\nexport interface MutationToUpdateChargeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateChargeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateClinicHistoryArgs {\n  input: IUpdateClinicHistoryInput;\n}\nexport interface MutationToUpdateClinicHistoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateClinicHistoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateClinicHistoryMedicalBackgroundDetailArgs {\n  input: IUpdateClinicHistoryMedicalBackgroundDetailInput;\n}\nexport interface MutationToUpdateClinicHistoryMedicalBackgroundDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateClinicHistoryMedicalBackgroundDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateEventDetailArgs {\n  input: IUpdateEventDetailInput;\n}\nexport interface MutationToUpdateEventDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateEventDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFisicExamArgs {\n  input: IUpdateFisicExamInput;\n}\nexport interface MutationToUpdateFisicExamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFisicExamArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFormatArgs {\n  input: IUpdateFormatInput;\n}\nexport interface MutationToUpdateFormatResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFormatArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMedicalBackgroundDetailArgs {\n  input: IUpdateMedicalBackgroundDetailInput;\n}\nexport interface MutationToUpdateMedicalBackgroundDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMedicalBackgroundDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMedicalBackgroundArgs {\n  input: IUpdateMedicalBackgroundInput;\n}\nexport interface MutationToUpdateMedicalBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMedicalBackgroundArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMedicalConfigArgs {\n  input: IUpdateMedicalConfigInput;\n}\nexport interface MutationToUpdateMedicalConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMedicalConfigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMedicalServiceArgs {\n  input: IUpdateMedicalServiceInput;\n}\nexport interface MutationToUpdateMedicalServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMedicalServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMedicineArgs {\n  input: IUpdateMedicineInput;\n}\nexport interface MutationToUpdateMedicineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMedicineArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateVaccineArgs {\n  input: IUpdateVaccineInput;\n}\nexport interface MutationToUpdateVaccineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateVaccineArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateVitalSignsArgs {\n  input: IUpdateVitalSingsInput;\n}\nexport interface MutationToUpdateVitalSignsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateVitalSignsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMedicRecipeArgs {\n  input: IUpdateMedicRecipeInput;\n}\nexport interface MutationToUpdateMedicRecipeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMedicRecipeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateRecipeConfigArgs {\n  input: IUpdateRecipeConfigInput;\n}\nexport interface MutationToUpdateRecipeConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateRecipeConfigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateRegistSesionArgs {\n  input: IUpdateRegistSesionInput;\n}\nexport interface MutationToUpdateRegistSesionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateRegistSesionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePacientNoteArgs {\n  input: IUpdatePacientNoteInput;\n}\nexport interface MutationToUpdatePacientNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePacientNoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateTherapyArgs {\n  input: IUpdateTherapyInput;\n}\nexport interface MutationToUpdateTherapyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateTherapyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDiagnosticArgs {\n  input: IUpdateDiagnosticInput;\n}\nexport interface MutationToUpdateDiagnosticResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDiagnosticArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateConsultNoteArgs {\n  input: IUpdateConsultNoteInput;\n}\nexport interface MutationToUpdateConsultNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateConsultNoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePacientMedicalBackgroundArgs {\n  input: IUpdatePacientMedicalBackgroundInput;\n}\nexport interface MutationToUpdatePacientMedicalBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePacientMedicalBackgroundArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBillingRequestArgs {\n  input: IUpdateBillingRequestInput;\n}\nexport interface MutationToUpdateBillingRequestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBillingRequestArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSortFormatArgs {\n  input: IUpdateSortFormatInput;\n}\nexport interface MutationToUpdateSortFormatResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSortFormatArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePatientVitalSignsResponseArgs {\n  input: IUpdatePatientVitalSignsResponseInput;\n}\nexport interface MutationToUpdatePatientVitalSignsResponseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePatientVitalSignsResponseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteChargeArgs {\n  input: IDeleteChargeInput;\n}\nexport interface MutationToDeleteChargeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteChargeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteClinicHistoryArgs {\n  input: IDeleteClinicHistoryInput;\n}\nexport interface MutationToDeleteClinicHistoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteClinicHistoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteClinicHistoryMedicalBackgrounDetailArgs {\n  input: IDeleteClinicHistoryMedicalBackgroundDetailInput;\n}\nexport interface MutationToDeleteClinicHistoryMedicalBackgrounDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteClinicHistoryMedicalBackgrounDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteConsultArgs {\n  input: IDeleteConsultInput;\n}\nexport interface MutationToDeleteConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteConsultArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFisicExamArgs {\n  input: IDeleteFisicalExamInput;\n}\nexport interface MutationToDeleteFisicExamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFisicExamArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMedicalBackgroundDetailArgs {\n  input: IDeleteMedicalBackgroundDetailInput;\n}\nexport interface MutationToDeleteMedicalBackgroundDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMedicalBackgroundDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMedicalBackgroundArgs {\n  input: IDeleteMedicalBackgroundInput;\n}\nexport interface MutationToDeleteMedicalBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMedicalBackgroundArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMedicalConfigArgs {\n  input: IDeleteMedicalConfigInput;\n}\nexport interface MutationToDeleteMedicalConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMedicalConfigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMedicalServiceArgs {\n  input: IDeleteMedicalServiceinputInput;\n}\nexport interface MutationToDeleteMedicalServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMedicalServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMedicineArgs {\n  input: IDeleteMedicineinputInput;\n}\nexport interface MutationToDeleteMedicineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMedicineArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteVaccineArgs {\n  input: IDeleteVaccineinputInput;\n}\nexport interface MutationToDeleteVaccineResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteVaccineArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteVitalSignArgs {\n  input: IDeleteVitalSignInput;\n}\nexport interface MutationToDeleteVitalSignResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteVitalSignArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMedicRecipeArgs {\n  input: IDeleteMedicRecipeinputInput;\n}\nexport interface MutationToDeleteMedicRecipeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMedicRecipeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteRecipeConfigArgs {\n  input: IDeleteRecipeConfiginputInput;\n}\nexport interface MutationToDeleteRecipeConfigResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteRecipeConfigArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteRegistSesionArgs {\n  input: IDeleteRegisSesioninputInput;\n}\nexport interface MutationToDeleteRegistSesionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteRegistSesionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteTherapyArgs {\n  input: IDeleteTherapyinputInput;\n}\nexport interface MutationToDeleteTherapyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteTherapyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDiagnosticArgs {\n  input: IDeleteDiagnosticInput;\n}\nexport interface MutationToDeleteDiagnosticResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDiagnosticArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteConsultNoteArgs {\n  input: IDeleteConsultNoteInput;\n}\nexport interface MutationToDeleteConsultNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteConsultNoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePacientNoteArgs {\n  input: IDeletePacientNoteInput;\n}\nexport interface MutationToDeletePacientNoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePacientNoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePacientMedicalBackgroundArgs {\n  input: IDeletePacientMedicalBackgroundInput;\n}\nexport interface MutationToDeletePacientMedicalBackgroundResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePacientMedicalBackgroundArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBillingRequestArgs {\n  input: IDeleteBillingRequestinputInput;\n}\nexport interface MutationToDeleteBillingRequestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBillingRequestArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFormatArgs {\n  input: IDeleteFormatInput;\n}\nexport interface MutationToDeleteFormatResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFormatArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToPrintWithImageFromUrlArgs {\n  input: ICreatePdfInput;\n}\nexport interface MutationToPrintWithImageFromUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToPrintWithImageFromUrlArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToBulkWorkSpaceArgs {\n  input: IBulkWorkSpaceInput;\n}\nexport interface MutationToBulkWorkSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToBulkWorkSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToOrderingMemberBoardArgs {\n  input: IOrderingMemberBoardInput;\n}\nexport interface MutationToOrderingMemberBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToOrderingMemberBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSpaceArgs {\n  input: ISpaceInput;\n}\nexport interface MutationToCreateSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSpaceArgs {\n  id: IUUID;\n  input: ISpaceInput;\n}\nexport interface MutationToUpdateSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSpaceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchMemberSpaceArgs {\n  input: IUpdateBatchMemberSpaceInput;\n}\nexport interface MutationToUpdateBatchMemberSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchMemberSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMemberSpaceArgs {\n  input: IMemberSpaceInput;\n}\nexport interface MutationToCreateMemberSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMemberSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMemberSpaceArgs {\n  id: IUUID;\n  input: IMemberSpaceInput;\n}\nexport interface MutationToUpdateMemberSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMemberSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMemberSpaceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteMemberSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMemberSpaceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBoardStatusArgs {\n  input: IBoardStatusInput;\n}\nexport interface MutationToCreateBoardStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBoardStatusArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBoardStatusArgs {\n  id: IUUID;\n  input: IBoardStatusInput;\n}\nexport interface MutationToUpdateBoardStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBoardStatusArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBoardStatusArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBoardStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBoardStatusArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchMemberBoardArgs {\n  input: IUpdateBatchMemberBoardInput;\n}\nexport interface MutationToUpdateBatchMemberBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchMemberBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBoardArgs {\n  input: IBoardInput;\n}\nexport interface MutationToCreateBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBoardArgs {\n  id: IUUID;\n  input: IBoardInput;\n}\nexport interface MutationToUpdateBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBoardArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBoardListArgs {\n  input: IBoardListInput;\n}\nexport interface MutationToCreateBoardListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBoardListArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBoardListArgs {\n  id: IUUID;\n  input: IBoardListInput;\n}\nexport interface MutationToUpdateBoardListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBoardListArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchBoardListArgs {\n  input: IUpdateBatchBoardListInput;\n}\nexport interface MutationToUpdateBatchBoardListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchBoardListArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBoardListArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBoardListResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBoardListArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBoardGroupColumnArgs {\n  input: IBoardGroupColumnInput;\n}\nexport interface MutationToCreateBoardGroupColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBoardGroupColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBoardGroupColumnArgs {\n  id: IUUID;\n  input: IBoardGroupColumnInput;\n}\nexport interface MutationToUpdateBoardGroupColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBoardGroupColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchBoardGroupColumnArgs {\n  input: IUpdateBatchBoardGroupColumnInput;\n}\nexport interface MutationToUpdateBatchBoardGroupColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchBoardGroupColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBoardGroupColumnArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBoardGroupColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBoardGroupColumnArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBoardColumnTypeArgs {\n  input: IBoardColumnTypeInput;\n}\nexport interface MutationToCreateBoardColumnTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBoardColumnTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBoardColumnTypeArgs {\n  id: IUUID;\n  input: IBoardColumnTypeInput;\n}\nexport interface MutationToUpdateBoardColumnTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBoardColumnTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBoardColumnTypeArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBoardColumnTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBoardColumnTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBoardColumnValueArgs {\n  input: IBoardColumnValueInput;\n}\nexport interface MutationToCreateBoardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBoardColumnValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBoardColumnValueArgs {\n  id: IUUID;\n  input: IBoardColumnValueInput;\n}\nexport interface MutationToUpdateBoardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBoardColumnValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBoardColumnValueArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBoardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBoardColumnValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCardColumnValueArgs {\n  input: ICardColumnValueInput;\n}\nexport interface MutationToCreateCardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCardColumnValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCardColumnValueArgs {\n  id: IUUID;\n  input: ICardColumnValueInput;\n}\nexport interface MutationToUpdateCardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCardColumnValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCardColumnValueArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCardColumnValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBoardMemberReferenceArgs {\n  input: IBoardMemberReferenceInput;\n}\nexport interface MutationToCreateBoardMemberReferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBoardMemberReferenceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBoardMemberReferenceArgs {\n  id: IUUID;\n  input: IBoardMemberReferenceInput;\n}\nexport interface MutationToUpdateBoardMemberReferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBoardMemberReferenceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBoardMemberReferenceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBoardMemberReferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBoardMemberReferenceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBoardRowForResourceQuoteArgs {\n  input: IBoardRowForResourceQuoteInput;\n}\nexport interface MutationToCreateBoardRowForResourceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBoardRowForResourceQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBoardRowArgs {\n  input: IBoardRowInput;\n}\nexport interface MutationToCreateBoardRowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBoardRowArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBoardRowArgs {\n  id: IUUID;\n  input: IBoardRowInput;\n}\nexport interface MutationToUpdateBoardRowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBoardRowArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchBoardRowArgs {\n  input: IUpdateBatchBoardRowInput;\n}\nexport interface MutationToUpdateBatchBoardRowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchBoardRowArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBoardRowArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBoardRowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBoardRowArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCardArgs {\n  input: ICardInput;\n}\nexport interface MutationToCreateCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCardArgs {\n  id: IUUID;\n  input: ICardInput;\n}\nexport interface MutationToUpdateCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCardArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCardChecklistArgs {\n  input: ICardChecklistInput;\n}\nexport interface MutationToCreateCardChecklistResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCardChecklistArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCardChecklistArgs {\n  id: IUUID;\n  input: ICardChecklistInput;\n}\nexport interface MutationToUpdateCardChecklistResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCardChecklistArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCardChecklistArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCardChecklistResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCardChecklistArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBatchCardCheckComponentArgs {\n  input: IUpdateBatchCardCheckComponentInput;\n}\nexport interface MutationToUpdateBatchCardCheckComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBatchCardCheckComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCardCheckComponentArgs {\n  input: ICardCheckComponentInput;\n}\nexport interface MutationToCreateCardCheckComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCardCheckComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCardCheckComponentArgs {\n  id: IUUID;\n  input: ICardCheckComponentInput;\n}\nexport interface MutationToUpdateCardCheckComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCardCheckComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCardCheckComponentArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCardCheckComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCardCheckComponentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCardReplyArgs {\n  input: ICardReplyInput;\n}\nexport interface MutationToCreateCardReplyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCardReplyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCardReplyArgs {\n  id: IUUID;\n  input: ICardReplyInput;\n}\nexport interface MutationToUpdateCardReplyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCardReplyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCardReplyArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCardReplyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCardReplyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateNestedFilesArgs {\n  input: INestedFilesInput;\n}\nexport interface MutationToCreateNestedFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateNestedFilesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateNestedFilesArgs {\n  id: IUUID;\n  input: INestedFilesInput;\n}\nexport interface MutationToUpdateNestedFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateNestedFilesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteNestedFilesArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteNestedFilesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteNestedFilesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMemberCardArgs {\n  input: IMemberCardInput;\n}\nexport interface MutationToCreateMemberCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMemberCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMemberCardArgs {\n  id: IUUID;\n  input: IMemberCardInput;\n}\nexport interface MutationToUpdateMemberCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMemberCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMemberCardArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteMemberCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMemberCardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMemberBoardArgs {\n  input: IMemberBoardInput;\n}\nexport interface MutationToCreateMemberBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMemberBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMemberBoardArgs {\n  id: IUUID;\n  input: IMemberBoardInput;\n}\nexport interface MutationToUpdateMemberBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMemberBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMemberBoardArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteMemberBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMemberBoardArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMeasureArgs {\n  input: IDeleteMeasureInput;\n}\nexport interface MutationToDeleteMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMeasureArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMeasureArgs {\n  input: IUpdateMeasureInput;\n}\nexport interface MutationToUpdateMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMeasureArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMaterialCategoryArgs {\n  input: IDeleteMaterialCategoryInput;\n}\nexport interface MutationToDeleteMaterialCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMaterialCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMeasureValueArgs {\n  input: ICreateMeasureValueInput;\n}\nexport interface MutationToCreateMeasureValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMeasureValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMeasureValueArgs {\n  input: IUpdateMeasureValueInput;\n}\nexport interface MutationToUpdateMeasureValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMeasureValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMeasureValueArgs {\n  input: IDeleteMeasureValueInput;\n}\nexport interface MutationToDeleteMeasureValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMeasureValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMeasureUnityTwoArgs {\n  input: IDeleteMeasureUnityTwoInput;\n}\nexport interface MutationToDeleteMeasureUnityTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMeasureUnityTwoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateModuleArgs {\n  input: IUpdateModuleInput;\n}\nexport interface MutationToUpdateModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMaterialQuotationArgs {\n  input: ICreateMaterialQuotationInput;\n}\nexport interface MutationToCreateMaterialQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMaterialQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMaterialQuotationArgs {\n  input: IUpdateMaterialQuotationInput;\n}\nexport interface MutationToUpdateMaterialQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMaterialQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMaterialQuotationArgs {\n  input: IDeleteMaterialQuotationInput;\n}\nexport interface MutationToDeleteMaterialQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMaterialQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMaterialModuleArgs {\n  input: ICreateMaterialModuleInput;\n}\nexport interface MutationToCreateMaterialModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMaterialModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMaterialModuleArgs {\n  input: IUpdateMaterialModuleInput;\n}\nexport interface MutationToUpdateMaterialModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMaterialModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMaterialModuleArgs {\n  input: IDeleteMaterialModuleInput;\n}\nexport interface MutationToDeleteMaterialModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMaterialModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateUserCustomerArgs {\n  input: ICreateUserCustomerInput;\n}\nexport interface MutationToCreateUserCustomerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateUserCustomerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMeasureUnityArgs {\n  input: ICreateMeasureUnityInput;\n}\nexport interface MutationToCreateMeasureUnityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMeasureUnityArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMeasureUnityArgs {\n  input: IUpdateMeasureUnityInput;\n}\nexport interface MutationToUpdateMeasureUnityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMeasureUnityArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMeasureUnityArgs {\n  input: IDeleteMeasureUnityInput;\n}\nexport interface MutationToDeleteMeasureUnityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMeasureUnityArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAttributeArgs {\n  input: ICreateAttributeInput;\n}\nexport interface MutationToCreateAttributeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAttributeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAttributeValueArgs {\n  input: ICreateAttributeValueInput;\n}\nexport interface MutationToCreateAttributeValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAttributeValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBuildingSiteArgs {\n  input: ICreateBuildingSiteAddressInput;\n}\nexport interface MutationToCreateBuildingSiteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBuildingSiteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMadreQuotationArgs {\n  input: ICreateMadreQuotationInput;\n}\nexport interface MutationToCreateMadreQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMadreQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMaterialCategoryArgs {\n  input: ICreateMaterialCategoryInput;\n}\nexport interface MutationToCreateMaterialCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMaterialCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMaterialCombinationArgs {\n  input: ICreateMaterialCombinationInput;\n}\nexport interface MutationToCreateMaterialCombinationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMaterialCombinationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMaterialArgs {\n  input: ICreateMaterialInput;\n}\nexport interface MutationToCreateMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMaterialArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMaterialStockMeasureArgs {\n  input: ICreateMaterialStockMeasureInput;\n}\nexport interface MutationToCreateMaterialStockMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMaterialStockMeasureArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMaterialStockArgs {\n  input: ICreateMaterialStockInput;\n}\nexport interface MutationToCreateMaterialStockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMaterialStockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMaterialVariableQuotationArgs {\n  input: ICreateMaterialVariableQuotationInput;\n}\nexport interface MutationToCreateMaterialVariableQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMaterialVariableQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMeasureArgs {\n  input: ICreateMeasureInput;\n}\nexport interface MutationToCreateMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMeasureArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMeasureUnityTwoArgs {\n  input: ICreateMeasureTwoInput;\n}\nexport interface MutationToCreateMeasureUnityTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMeasureUnityTwoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateModuleCategoryArgs {\n  input: ICreateModuleCategoryInput;\n}\nexport interface MutationToCreateModuleCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateModuleCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateModuleArgs {\n  input: ICreateModuleInput;\n}\nexport interface MutationToCreateModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuotationArgs {\n  input: ICreateQuotationInput;\n}\nexport interface MutationToCreateQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateQuotationModuleArgs {\n  input: ICreateQuotationModuleInput;\n}\nexport interface MutationToCreateQuotationModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateQuotationModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateVariableArgs {\n  input: ICreateVariableInput;\n}\nexport interface MutationToCreateVariableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateVariableArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAttributeArgs {\n  input: IDeleteAttributeInput;\n}\nexport interface MutationToDeleteAttributeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAttributeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAttributeValueArgs {\n  input: IDeleteAttributeValueInput;\n}\nexport interface MutationToDeleteAttributeValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAttributeValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBuildingSiteAddressArgs {\n  input: IDeleteBuildingSiteAddresInput;\n}\nexport interface MutationToDeleteBuildingSiteAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBuildingSiteAddressArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMaterialCombinationArgs {\n  input: IDeleteMaterialCombinationInput;\n}\nexport interface MutationToDeleteMaterialCombinationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMaterialCombinationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMaterialArgs {\n  input: IDeleteMaterialInput;\n}\nexport interface MutationToDeleteMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMaterialArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMaterialStockArgs {\n  input: IDeleteMaterialStockInput;\n}\nexport interface MutationToDeleteMaterialStockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMaterialStockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMaterialStockMeasureArgs {\n  input: IDeleteMaterialStockMeasureInput;\n}\nexport interface MutationToDeleteMaterialStockMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMaterialStockMeasureArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMaterialVariableQuotationArgs {\n  input: IDeleteMaterialVariableQuotationInput;\n}\nexport interface MutationToDeleteMaterialVariableQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMaterialVariableQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteModuleCategoryArgs {\n  input: IDeleteModuleCategoryInput;\n}\nexport interface MutationToDeleteModuleCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteModuleCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteModuleArgs {\n  input: IDeleteModuleInput;\n}\nexport interface MutationToDeleteModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuotationModuleArgs {\n  input: IDeleteQuotationModuleInput;\n}\nexport interface MutationToDeleteQuotationModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuotationModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteQuotationArgs {\n  input: IDeleteQuotationInput;\n}\nexport interface MutationToDeleteQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteVariableArgs {\n  input: IDeleteVariableInput;\n}\nexport interface MutationToDeleteVariableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteVariableArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAttributeArgs {\n  input: IUpdateAttributeInput;\n}\nexport interface MutationToUpdateAttributeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAttributeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAttributeValueArgs {\n  input: IUpdateAttributeValueInput;\n}\nexport interface MutationToUpdateAttributeValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAttributeValueArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBuildingSiteAddressArgs {\n  input: IUpdateBuildingSiteAddressInput;\n}\nexport interface MutationToUpdateBuildingSiteAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBuildingSiteAddressArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMaterialCategoryArgs {\n  input: IUpdateMaterialCategoryInput;\n}\nexport interface MutationToUpdateMaterialCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMaterialCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMaterialCombinationArgs {\n  input: IUpdateMaterialCombinationInput;\n}\nexport interface MutationToUpdateMaterialCombinationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMaterialCombinationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMaterialArgs {\n  input: IUpdateMaterialInput;\n}\nexport interface MutationToUpdateMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMaterialArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMaterialStockMeasureArgs {\n  input: IUpdateMaterialStockMeasureInput;\n}\nexport interface MutationToUpdateMaterialStockMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMaterialStockMeasureArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMaterialStockArgs {\n  input: IUpdateMaterialStockInput;\n}\nexport interface MutationToUpdateMaterialStockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMaterialStockArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMadreQuotationArgs {\n  input: IUpdateMadreQuotationInput;\n}\nexport interface MutationToUpdateMadreQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMadreQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMadreQuotationArgs {\n  input: IDeleteMadreQuotationInput;\n}\nexport interface MutationToDeleteMadreQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMadreQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMaterialVariableQuotationArgs {\n  input: IUpdateMaterialVariableQuotationInput;\n}\nexport interface MutationToUpdateMaterialVariableQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMaterialVariableQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMeasureUnityTwoArgs {\n  input: IUpdateMeasureUnityTwoInput;\n}\nexport interface MutationToUpdateMeasureUnityTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMeasureUnityTwoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCategoryModuleArgs {\n  input: IUpdateModuleCategoryInput;\n}\nexport interface MutationToUpdateCategoryModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCategoryModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuotationModuleArgs {\n  input: IUpdateQuotationModuleInput;\n}\nexport interface MutationToUpdateQuotationModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuotationModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateQuotationArgs {\n  input: IUpdateQuotationInput;\n}\nexport interface MutationToUpdateQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateQuotationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateVariableArgs {\n  input: IUpdateVariableInput;\n}\nexport interface MutationToUpdateVariableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateVariableArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAnalysisArgs {\n  input: IUpdateAnalysisInput;\n}\nexport interface MutationToUpdateAnalysisResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAnalysisArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateClientArgs {\n  input: ICreateClientInput;\n}\nexport interface MutationToCreateClientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateClientArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateClientArgs {\n  input: IUpdateClientInput;\n}\nexport interface MutationToUpdateClientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateClientArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateConsultArgs {\n  input: ICreateConsultInput;\n}\nexport interface MutationToCreateConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateConsultArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateConsultArgs {\n  input: IUpdateConsultInput;\n}\nexport interface MutationToUpdateConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateConsultArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCalculator_deleteConsultArgs {\n  input: IDeleteConsultInput;\n}\nexport interface MutationToCalculator_deleteConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCalculator_deleteConsultArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateComparedArgs {\n  input: ICreateComparedInput;\n}\nexport interface MutationToCreateComparedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateComparedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateComparedArgs {\n  input: IUpdateComparedInput;\n}\nexport interface MutationToUpdateComparedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateComparedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteComparedArgs {\n  input: IDeleteComparedInput;\n}\nexport interface MutationToDeleteComparedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteComparedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCarMercadoArgs {\n  input: ICreateCarMercadoInput;\n}\nexport interface MutationToCreateCarMercadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCarMercadoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCarMercadoMassiveArgs {\n  input: ICreateCarMercadoMassiveInput;\n}\nexport interface MutationToCreateCarMercadoMassiveResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCarMercadoMassiveArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCarMercadoArgs {\n  input: IDeleteCarMercadoInput;\n}\nexport interface MutationToDeleteCarMercadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCarMercadoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUploadFileArgs {\n  bucketName: string;\n  base64: string;\n  projectId: IUUID;\n  fileName: string;\n}\nexport interface MutationToUploadFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUploadFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToZipFolderContentArgs {\n  input: IZipFolderContentInput;\n}\nexport interface MutationToZipFolderContentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToZipFolderContentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFolderArgs {\n  input: IFolderInput;\n}\nexport interface MutationToCreateFolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFolderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFolderArgs {\n  id: IUUID;\n  input: IFolderInput;\n}\nexport interface MutationToUpdateFolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFolderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFolderArgs {\n  input: IDeleteFolderMutationInput;\n}\nexport interface MutationToDeleteFolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFolderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFileArgs {\n  input: ICreateFileInput;\n}\nexport interface MutationToCreateFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFileArgs {\n  input: IUpdateFilesInput;\n}\nexport interface MutationToUpdateFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFileArgs {\n  input: IDeleteFileMutationInput;\n}\nexport interface MutationToDeleteFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToShareFileArgs {\n  input: IShareFileInput;\n}\nexport interface MutationToShareFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToShareFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToShareFolderArgs {\n  input: IShareFolderInput;\n}\nexport interface MutationToShareFolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToShareFolderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToStopSharingFolderArgs {\n  input: IStopSharingFolderInput;\n}\nexport interface MutationToStopSharingFolderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToStopSharingFolderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToStopSharingFileArgs {\n  input: IStopSharingFileInput;\n}\nexport interface MutationToStopSharingFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToStopSharingFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUploadFilePrivateArgs {\n  input: IUploadFilePrivateInput;\n}\nexport interface MutationToUploadFilePrivateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUploadFilePrivateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddChatMemberArgs {\n  input: IAddChatMemberInput;\n}\nexport interface MutationToAddChatMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddChatMemberArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddChatMemberWsArgs {\n  input: IAddChatMemberWsInput;\n}\nexport interface MutationToAddChatMemberWsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddChatMemberWsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToConversationIdArgs {\n  input: IGetConversationIdInput;\n}\nexport interface MutationToConversationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToConversationIdArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteReplyArgs {\n  input: IDeleteReplyInput;\n}\nexport interface MutationToDeleteReplyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteReplyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateWalletArgs {\n  input: ICreateWalletInput;\n}\nexport interface MutationToCreateWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateWalletArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateWalletArgs {\n  id: IUUID;\n  input: IWalletInput;\n}\nexport interface MutationToUpdateWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateWalletArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteWalletArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteWalletArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateWalletTransactionArgs {\n  input: IWalletTransactionInput;\n}\nexport interface MutationToCreateWalletTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateWalletTransactionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMultipleWalletTransactionArgs {\n  input: IMultipleWalletTransactionInput;\n}\nexport interface MutationToCreateMultipleWalletTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMultipleWalletTransactionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateWalletTransactionStatusArgs {\n  input: IWalletTransactionStatusInput;\n}\nexport interface MutationToCreateWalletTransactionStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateWalletTransactionStatusArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateWalletTransactionMemberRelationArgs {\n  input: IWalletTransactionMemberRelationInput;\n}\nexport interface MutationToCreateWalletTransactionMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateWalletTransactionMemberRelationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMemberWalletArgs {\n  input: IMemberWalletInput;\n}\nexport interface MutationToCreateMemberWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMemberWalletArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMemberWalletArgs {\n  id: IUUID;\n  input: IMemberWalletInput;\n}\nexport interface MutationToUpdateMemberWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMemberWalletArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMemberWalletArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteMemberWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMemberWalletArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProjectWalletKeyArgs {\n  input: IProjectWalletKeyInput;\n}\nexport interface MutationToCreateProjectWalletKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProjectWalletKeyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProjectWalletKeyArgs {\n  id: IUUID;\n  input: IProjectWalletKeyInput;\n}\nexport interface MutationToUpdateProjectWalletKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProjectWalletKeyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectWalletKeyArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteProjectWalletKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectWalletKeyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCertificateMovementArgs {\n  input: ICreateCertificateMovementInput;\n}\nexport interface MutationToCreateCertificateMovementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCertificateMovementArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCertificateArgs {\n  input: IDeleteCertificateInput;\n}\nexport interface MutationToDeleteCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCertificateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerModuleArgs {\n  input: IUpdateInsurerModuleInput;\n}\nexport interface MutationToUpdateInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerModuleArgs {\n  input: ICreateInsurerModuleInput;\n}\nexport interface MutationToCreateInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePolicyModuleArgs {\n  input: ICreatePolicyModuleInput;\n}\nexport interface MutationToCreatePolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePolicyModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePolicyModuleArgs {\n  input: IUpdatePolicyModuleInput;\n}\nexport interface MutationToUpdatePolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePolicyModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePolicyModuleArgs {\n  input: IDeletePolicyModuleInput;\n}\nexport interface MutationToDeletePolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePolicyModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerFeeArgs {\n  input: ICreateInsurerFeeInput;\n}\nexport interface MutationToCreateInsurerFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerFeeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerFeeArgs {\n  input: IDeleteInsurerFeeInput;\n}\nexport interface MutationToDeleteInsurerFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerFeeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerFeeArgs {\n  input: IUpdateInsurerFeeInput;\n}\nexport interface MutationToUpdateInsurerFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerFeeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePolicyArgs {\n  input: ICreatePolicyInput;\n}\nexport interface MutationToCreatePolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePolicyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCancelCertificateArgs {\n  input: ICancelCertificateInput;\n}\nexport interface MutationToCancelCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCancelCertificateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBeneficiaryArgs {\n  input: ICreateBeneficiaryInput;\n}\nexport interface MutationToCreateBeneficiaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBeneficiaryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCertificateArgs {\n  input: ICreateCertificateInput;\n}\nexport interface MutationToCreateCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCertificateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCertificateFileArgs {\n  input: ICreateCertificateFileInput;\n}\nexport interface MutationToCreateCertificateFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCertificateFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateContactArgs {\n  input: ICreateContactInput;\n}\nexport interface MutationToCreateContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateContractorBranchOfficeArgs {\n  input: ICreateContractorBranchOfficeInput;\n}\nexport interface MutationToCreateContractorBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateContractorBranchOfficeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateContractorContactArgs {\n  input: ICreateContractorContactInput;\n}\nexport interface MutationToCreateContractorContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateContractorContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateContractorArgs {\n  input: ICreateContractorInput;\n}\nexport interface MutationToCreateContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateContractorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateContractorPolicyArgs {\n  input: ICreateContractorPolicyInput;\n}\nexport interface MutationToCreateContractorPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateContractorPolicyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCountryRequestArgs {\n  input: ICreateCountryRequestInput;\n}\nexport interface MutationToCreateCountryRequestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCountryRequestArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFeeArgs {\n  input: ICreateFeeInput;\n}\nexport interface MutationToCreateFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFeeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerCompanyArgs {\n  input: ICreateInsurerCompanyInput;\n}\nexport interface MutationToCreateInsurerCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerCompanyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateIssuedReportArgs {\n  input: ICreateIssuedReportInput;\n}\nexport interface MutationToCreateIssuedReportResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateIssuedReportArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMerchandiseDetailArgs {\n  input: ICreateMerchandiseDetailInput;\n}\nexport interface MutationToCreateMerchandiseDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMerchandiseDetailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMerchandiseArgs {\n  input: ICreateMerchandiseInput;\n}\nexport interface MutationToCreateMerchandiseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMerchandiseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMoneyArgs {\n  input: ICreateMoneyInput;\n}\nexport interface MutationToCreateMoneyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMoneyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMoneyPolicyArgs {\n  input: ICreateMoneyPolicyInput;\n}\nexport interface MutationToCreateMoneyPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMoneyPolicyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToItus_createOfficeArgs {\n  input: ICreateOfficeInput;\n}\nexport interface MutationToItus_createOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToItus_createOfficeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBeneficiaryArgs {\n  input: IDeleteBeneficiaryInput;\n}\nexport interface MutationToDeleteBeneficiaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBeneficiaryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteContactArgs {\n  input: IDeleteContactInput;\n}\nexport interface MutationToDeleteContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteContractorArgs {\n  input: IDeleteContractorInput;\n}\nexport interface MutationToDeleteContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteContractorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteContractorOfficeArgs {\n  input: IDeleteContractorOfficeInput;\n}\nexport interface MutationToDeleteContractorOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteContractorOfficeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteContractorPolicyArgs {\n  input: IDeleteContractorPolicyInput;\n}\nexport interface MutationToDeleteContractorPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteContractorPolicyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerModuleArgs {\n  input: IDeleteInsurerModuleInput;\n}\nexport interface MutationToDeleteInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerModuleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFeeArgs {\n  input: IDeleteFeeInput;\n}\nexport interface MutationToDeleteFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFeeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMerchandiseArgs {\n  input: IDeleteMerchandiseInput;\n}\nexport interface MutationToDeleteMerchandiseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMerchandiseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerCompanyArgs {\n  input: IDeleteInsurerCompanyInput;\n}\nexport interface MutationToDeleteInsurerCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerCompanyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteMoneyArgs {\n  input: IDeleteMoneyInput;\n}\nexport interface MutationToDeleteMoneyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteMoneyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePolicyArgs {\n  input: IDeletePolicyInput;\n}\nexport interface MutationToDeletePolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePolicyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBeneficiaryArgs {\n  input: IUpdateBeneficiaryInput;\n}\nexport interface MutationToUpdateBeneficiaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBeneficiaryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCertificateArgs {\n  input: IUpdateCertificateInput;\n}\nexport interface MutationToUpdateCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCertificateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateContactArgs {\n  input: IUpdateContactInput;\n}\nexport interface MutationToUpdateContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateContractorArgs {\n  input: IUpdateContractorInput;\n}\nexport interface MutationToUpdateContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateContractorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFeeArgs {\n  input: IUpdateFeeInput;\n}\nexport interface MutationToUpdateFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFeeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerCompanyArgs {\n  input: IUpdateInsurerCompanyInput;\n}\nexport interface MutationToUpdateInsurerCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerCompanyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMerchandiseArgs {\n  input: IUpdateMerchandiseInput;\n}\nexport interface MutationToUpdateMerchandiseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMerchandiseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMoneyArgs {\n  input: IUpdateMoneyInput;\n}\nexport interface MutationToUpdateMoneyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMoneyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePolicyArgs {\n  input: IUpdatePolicyInput;\n}\nexport interface MutationToUpdatePolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePolicyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAttendanceStudentArgs {\n  input: IAttendanceInput;\n}\nexport interface MutationToCreateAttendanceStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAttendanceStudentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateClassroomArgs {\n  input: IClassroomInput;\n}\nexport interface MutationToCreateClassroomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateClassroomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDayServiceArgs {\n  input: ICreateDayServiceInput;\n}\nexport interface MutationToCreateDayServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDayServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateGradeArgs {\n  input: IGradeInput;\n}\nexport interface MutationToCreateGradeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateGradeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateLevelArgs {\n  input: ILevelInput;\n}\nexport interface MutationToCreateLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateLevelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSchoolArgs {\n  input: ICreateSchoolInput;\n}\nexport interface MutationToCreateSchoolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSchoolArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateStudentArgs {\n  input: IStudentInput;\n}\nexport interface MutationToCreateStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateStudentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBulkStudentArgs {\n  input: ICreateBulkStudentInput;\n}\nexport interface MutationToCreateBulkStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBulkStudentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAttendanceStudentsArgs {\n  id: IUUID;\n  input: IUpdateAttendanceInput;\n}\nexport interface MutationToUpdateAttendanceStudentsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAttendanceStudentsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateClassroomArgs {\n  id: IUUID;\n  input: IUpdateClassroomInput;\n}\nexport interface MutationToUpdateClassroomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateClassroomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDayServiceArgs {\n  id: IUUID;\n  input: IUpdateDayServiceInput;\n}\nexport interface MutationToUpdateDayServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDayServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateGradeArgs {\n  id: IUUID;\n  input: IUpdateGradeInput;\n}\nexport interface MutationToUpdateGradeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateGradeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateLevelArgs {\n  id: IUUID;\n  input: IUpdateLevelInput;\n}\nexport interface MutationToUpdateLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateLevelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSchoolArgs {\n  id: IUUID;\n  input: IUpdateSchoolInput;\n}\nexport interface MutationToUpdateSchoolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSchoolArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateStudentArgs {\n  id: IUUID;\n  input: IUpdateStudentInput;\n}\nexport interface MutationToUpdateStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateStudentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAttendanceStudentArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteAttendanceStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAttendanceStudentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteClassroomArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteClassroomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteClassroomArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDayServiceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDayServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDayServiceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteGradeArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteGradeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteGradeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteLevelArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteLevelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSchoolArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSchoolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSchoolArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteStudentArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteStudentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteStudentTutorArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteStudentTutorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteStudentTutorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBeneficiarieArgs {\n  input: IBeneficiarieInput;\n}\nexport interface MutationToCreateBeneficiarieResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBeneficiarieArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBeneficiarieArgs {\n  id: IUUID;\n  input: IBeneficiarieInput;\n}\nexport interface MutationToUpdateBeneficiarieResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBeneficiarieArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBeneficiarieArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBeneficiarieResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBeneficiarieArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFormAccidentDiseaseArgs {\n  input: IFormAccidentDiseaseInput;\n}\nexport interface MutationToCreateFormAccidentDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFormAccidentDiseaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFormAccidentDiseaseArgs {\n  id: IUUID;\n  input: IFormAccidentDiseaseInput;\n}\nexport interface MutationToUpdateFormAccidentDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFormAccidentDiseaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFormAccidentDiseaseArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteFormAccidentDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFormAccidentDiseaseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFormAutomobileDamageArgs {\n  input: IFormAutomobileDamageInput;\n}\nexport interface MutationToCreateFormAutomobileDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFormAutomobileDamageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFormAutomobileDamageArgs {\n  id: IUUID;\n  input: IFormAutomobileDamageInput;\n}\nexport interface MutationToUpdateFormAutomobileDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFormAutomobileDamageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFormAutomobileDamageArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteFormAutomobileDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFormAutomobileDamageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFormCarCatalogArgs {\n  input: IFormCarCatalogInput;\n}\nexport interface MutationToCreateFormCarCatalogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFormCarCatalogArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFormCarCatalogArgs {\n  id: IUUID;\n  input: IFormCarCatalogInput;\n}\nexport interface MutationToUpdateFormCarCatalogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFormCarCatalogArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFormCarCatalogArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteFormCarCatalogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFormCarCatalogArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFormDamageArgs {\n  input: IFormDamageInput;\n}\nexport interface MutationToCreateFormDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFormDamageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFormDamageArgs {\n  id: IUUID;\n  input: IFormDamageInput;\n}\nexport interface MutationToUpdateFormDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFormDamageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFormDamageArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteFormDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFormDamageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateFormLifeArgs {\n  input: IFormLifeInput;\n}\nexport interface MutationToCreateFormLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateFormLifeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateFormLifeArgs {\n  id: IUUID;\n  input: IFormLifeInput;\n}\nexport interface MutationToUpdateFormLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateFormLifeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteFormLifeArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteFormLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteFormLifeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInvolvedReferrerArgs {\n  input: IInvolvedReferrerInput;\n}\nexport interface MutationToCreateInvolvedReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInvolvedReferrerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInvolvedReferrerArgs {\n  id: IUUID;\n  input: IInvolvedReferrerInput;\n}\nexport interface MutationToUpdateInvolvedReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInvolvedReferrerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInvolvedReferrerArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInvolvedReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInvolvedReferrerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateOldPoliceArgs {\n  input: IOldPoliceInput;\n}\nexport interface MutationToCreateOldPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateOldPoliceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateOldPoliceArgs {\n  id: IUUID;\n  input: IOldPoliceInput;\n}\nexport interface MutationToUpdateOldPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateOldPoliceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteOldPoliceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteOldPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteOldPoliceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePersonalInformationArgs {\n  input: IPersonalInformationInput;\n}\nexport interface MutationToCreatePersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePersonalInformationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePersonalInformationArgs {\n  id: IUUID;\n  input: IPersonalInformationInput;\n}\nexport interface MutationToUpdatePersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePersonalInformationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePersonalInformationArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePersonalInformationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePoliceArgs {\n  input: IPoliceInput;\n}\nexport interface MutationToCreatePoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePoliceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceArgs {\n  id: IUUID;\n  input: IPoliceInput;\n}\nexport interface MutationToUpdatePoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePoliceAssignArgs {\n  input: IPoliceAssignInput;\n}\nexport interface MutationToCreatePoliceAssignResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePoliceAssignArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceAssignArgs {\n  id: IUUID;\n  input: IPoliceAssignInput;\n}\nexport interface MutationToUpdatePoliceAssignResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceAssignArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceAssignArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceAssignResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceAssignArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePolicePendientArgs {\n  input: IPolicePendientInput;\n}\nexport interface MutationToCreatePolicePendientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePolicePendientArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePolicePendientArgs {\n  id: IUUID;\n  input: IPolicePendientInput;\n}\nexport interface MutationToUpdatePolicePendientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePolicePendientArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePolicePendientArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePolicePendientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePolicePendientArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePoliceQuoteArgs {\n  input: IPoliceQuoteInput;\n}\nexport interface MutationToCreatePoliceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePoliceQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceQuoteArgs {\n  id: IUUID;\n  input: IPoliceQuoteInput;\n}\nexport interface MutationToUpdatePoliceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceQuoteArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceQuotePrimaArgs {\n  id: IUUID;\n  input: IPoliceQuotePrimaInput;\n}\nexport interface MutationToUpdatePoliceQuotePrimaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceQuotePrimaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceQuotePrimaArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceQuotePrimaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceQuotePrimaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateRelationShipArgs {\n  input: IRelationShipInput;\n}\nexport interface MutationToCreateRelationShipResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateRelationShipArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateRelationShipArgs {\n  id: IUUID;\n  input: IRelationShipInput;\n}\nexport interface MutationToUpdateRelationShipResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateRelationShipArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteRelationShipArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteRelationShipResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteRelationShipArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSucursalArgs {\n  input: ISucursalInput;\n}\nexport interface MutationToCreateSucursalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSucursalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSucursalArgs {\n  id: IUUID;\n  input: ISucursalInput;\n}\nexport interface MutationToUpdateSucursalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSucursalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSucursalArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSucursalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSucursalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAgentKeyArgs {\n  input: IAgentKeyInput;\n}\nexport interface MutationToCreateAgentKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAgentKeyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAgentKeyArgs {\n  id: IUUID;\n  input: IAgentKeyInput;\n}\nexport interface MutationToUpdateAgentKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAgentKeyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAgentKeyArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteAgentKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAgentKeyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAgentProviderContactArgs {\n  input: IAgentProviderContactInput;\n}\nexport interface MutationToCreateAgentProviderContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAgentProviderContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAgentProviderContactArgs {\n  id: IUUID;\n  input: IAgentProviderContactInput;\n}\nexport interface MutationToUpdateAgentProviderContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAgentProviderContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAgentProviderContactArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteAgentProviderContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAgentProviderContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAgentProviderArgs {\n  input: IAgentProviderInput;\n}\nexport interface MutationToCreateAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAgentProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAgentProviderArgs {\n  id: IUUID;\n  input: IAgentProviderInput;\n}\nexport interface MutationToUpdateAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAgentProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAgentProviderArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAgentProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBranchArgs {\n  input: IBranchInput;\n}\nexport interface MutationToCreateBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateBranchArgs {\n  id: IUUID;\n  input: IBranchInput;\n}\nexport interface MutationToUpdateBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteBranchArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateComissionArgs {\n  input: IComissionInput;\n}\nexport interface MutationToCreateComissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateComissionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateComissionArgs {\n  id: IUUID;\n  input: IComissionInput;\n}\nexport interface MutationToUpdateComissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateComissionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteComissionArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteComissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteComissionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateContractorCelulaArgs {\n  input: IContractorCelulaInput;\n}\nexport interface MutationToCreateContractorCelulaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateContractorCelulaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateContractorCelulaArgs {\n  id: IUUID;\n  input: IContractorCelulaInput;\n}\nexport interface MutationToUpdateContractorCelulaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateContractorCelulaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteContractorCelulaArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteContractorCelulaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteContractorCelulaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateContractorClassificationArgs {\n  input: IContractorClassificationInput;\n}\nexport interface MutationToCreateContractorClassificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateContractorClassificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateContractorClassificationArgs {\n  id: IUUID;\n  input: IContractorClassificationInput;\n}\nexport interface MutationToUpdateContractorClassificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateContractorClassificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteContractorClassificationArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteContractorClassificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteContractorClassificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateContractorGroupingLevelArgs {\n  input: IContractorGroupingLevelInput;\n}\nexport interface MutationToCreateContractorGroupingLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateContractorGroupingLevelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateContractorGroupingLevelArgs {\n  id: IUUID;\n  input: IContractorGroupingLevelInput;\n}\nexport interface MutationToUpdateContractorGroupingLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateContractorGroupingLevelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteContractorGroupingLevelArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteContractorGroupingLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteContractorGroupingLevelArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSaam_createContractorArgs {\n  input: IContractorInput;\n}\nexport interface MutationToSaam_createContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSaam_createContractorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSaam_updateContractorArgs {\n  id: IUUID;\n  input: IContractorInput;\n}\nexport interface MutationToSaam_updateContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSaam_updateContractorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSaam_deleteContractorArgs {\n  id: IUUID;\n}\nexport interface MutationToSaam_deleteContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSaam_deleteContractorArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateContractorProcessDocumentArgs {\n  input: IContractorProcessDocumentInput;\n}\nexport interface MutationToCreateContractorProcessDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateContractorProcessDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateContractorProcessDocumentArgs {\n  id: IUUID;\n  input: IContractorProcessDocumentInput;\n}\nexport interface MutationToUpdateContractorProcessDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateContractorProcessDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteContractorProcessDocumentArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteContractorProcessDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteContractorProcessDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCoverageCoinsuranceArgs {\n  input: ICoverageCoinsuranceInput;\n}\nexport interface MutationToCreateCoverageCoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCoverageCoinsuranceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCoverageCoinsuranceArgs {\n  id: IUUID;\n  input: ICoverageCoinsuranceInput;\n}\nexport interface MutationToUpdateCoverageCoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCoverageCoinsuranceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCoverageCoinsuranceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCoverageCoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCoverageCoinsuranceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCoverageDeductibleArgs {\n  input: ICoverageDeductibleInput;\n}\nexport interface MutationToCreateCoverageDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCoverageDeductibleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCoverageDeductibleArgs {\n  id: IUUID;\n  input: ICoverageDeductibleInput;\n}\nexport interface MutationToUpdateCoverageDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCoverageDeductibleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCoverageDeductibleArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCoverageDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCoverageDeductibleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCoverageInPolicyArgs {\n  input: ICoverageInPolicyInput;\n}\nexport interface MutationToCreateCoverageInPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCoverageInPolicyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCoverageInPolicyArgs {\n  id: IUUID;\n  input: ICoverageInPolicyInput;\n}\nexport interface MutationToUpdateCoverageInPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCoverageInPolicyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCoverageInPolicyArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCoverageInPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCoverageInPolicyArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCoverageArgs {\n  input: ICoverageInput;\n}\nexport interface MutationToCreateCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCoverageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCoverageArgs {\n  id: IUUID;\n  input: ICoverageInput;\n}\nexport interface MutationToUpdateCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCoverageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCoverageArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCoverageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCoveragePackageArgs {\n  input: ICoveragePackageInput;\n}\nexport interface MutationToCreateCoveragePackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCoveragePackageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCoveragePackageArgs {\n  id: IUUID;\n  input: ICoveragePackageInput;\n}\nexport interface MutationToUpdateCoveragePackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCoveragePackageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCoveragePackageArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCoveragePackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCoveragePackageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCoverageSuminsuredArgs {\n  input: ICoverageSuminsuredInput;\n}\nexport interface MutationToCreateCoverageSuminsuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCoverageSuminsuredArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCoverageSuminsuredArgs {\n  id: IUUID;\n  input: ICoverageSuminsuredInput;\n}\nexport interface MutationToUpdateCoverageSuminsuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCoverageSuminsuredArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCoverageSuminsuredArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCoverageSuminsuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCoverageSuminsuredArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCoverageTopecoinsuranceArgs {\n  input: ICoverageTopecoinsuranceInput;\n}\nexport interface MutationToCreateCoverageTopecoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCoverageTopecoinsuranceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateCoverageTopecoinsuranceArgs {\n  id: IUUID;\n  input: ICoverageTopecoinsuranceInput;\n}\nexport interface MutationToUpdateCoverageTopecoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateCoverageTopecoinsuranceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCoverageTopecoinsuranceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteCoverageTopecoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCoverageTopecoinsuranceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProcessDocumentArgs {\n  input: IProcessDocumentInput;\n}\nexport interface MutationToCreateProcessDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProcessDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProcessDocumentArgs {\n  id: IUUID;\n  input: IProcessDocumentInput;\n}\nexport interface MutationToUpdateProcessDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProcessDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProcessDocumentArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteProcessDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProcessDocumentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProjectAgentProviderBranchArgs {\n  input: IProjectAgentProviderBranchInput;\n}\nexport interface MutationToCreateProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProjectAgentProviderBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProjectAgentProviderBranchArgs {\n  id: IUUID;\n  input: IProjectAgentProviderBranchInput;\n}\nexport interface MutationToUpdateProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProjectAgentProviderBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectAgentProviderBranchArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectAgentProviderBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProjectAgentProviderArgs {\n  input: IProjectAgentProviderInput;\n}\nexport interface MutationToCreateProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProjectAgentProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProjectAgentProviderArgs {\n  id: IUUID;\n  input: IProjectAgentProviderInput;\n}\nexport interface MutationToUpdateProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProjectAgentProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectAgentProviderArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectAgentProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateReferrerAccountStateArgs {\n  input: IReferrerAccountStateInput;\n}\nexport interface MutationToCreateReferrerAccountStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateReferrerAccountStateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateReferrerAccountStateArgs {\n  id: IUUID;\n  input: IReferrerAccountStateInput;\n}\nexport interface MutationToUpdateReferrerAccountStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateReferrerAccountStateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteReferrerAccountStateArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteReferrerAccountStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteReferrerAccountStateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateReferrerBranchArgs {\n  input: IReferrerBranchInput;\n}\nexport interface MutationToCreateReferrerBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateReferrerBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateReferrerBranchArgs {\n  id: IUUID;\n  input: IReferrerBranchInput;\n}\nexport interface MutationToUpdateReferrerBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateReferrerBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteReferrerBranchArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteReferrerBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteReferrerBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateReferrerArgs {\n  input: IReferrerInput;\n}\nexport interface MutationToCreateReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateReferrerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateReferrerArgs {\n  id: IUUID;\n  input: IReferrerInput;\n}\nexport interface MutationToUpdateReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateReferrerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteReferrerArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteReferrerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateResponsableInvolvedArgs {\n  input: IResponsableInvolvedInput;\n}\nexport interface MutationToCreateResponsableInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateResponsableInvolvedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateResponsableInvolvedArgs {\n  id: IUUID;\n  input: IResponsableInvolvedInput;\n}\nexport interface MutationToUpdateResponsableInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateResponsableInvolvedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteResponsableInvolvedArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteResponsableInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteResponsableInvolvedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSubBranchArgs {\n  input: ISubBranchInput;\n}\nexport interface MutationToCreateSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSubBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSubBranchArgs {\n  id: IUUID;\n  input: ISubBranchInput;\n}\nexport interface MutationToUpdateSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSubBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSubBranchArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSubBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateProjectAgentProviderEmailReminderArgs {\n  input: IProjectAgentProviderEmailReminderInput;\n}\nexport interface MutationToCreateProjectAgentProviderEmailReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateProjectAgentProviderEmailReminderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateProjectAgentProviderEmailReminderArgs {\n  id: IUUID;\n  input: IProjectAgentProviderEmailReminderInput;\n}\nexport interface MutationToUpdateProjectAgentProviderEmailReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateProjectAgentProviderEmailReminderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteProjectAgentProviderEmailReminderArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteProjectAgentProviderEmailReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteProjectAgentProviderEmailReminderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateEndorsementArgs {\n  input: IEndorsementInput;\n}\nexport interface MutationToCreateEndorsementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateEndorsementArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateEndorsementArgs {\n  id: IUUID;\n  input: IEndorsementInput;\n}\nexport interface MutationToUpdateEndorsementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateEndorsementArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteEndorsementArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteEndorsementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteEndorsementArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateEndorsementCertArgs {\n  input: IEndorsementCertInput;\n}\nexport interface MutationToCreateEndorsementCertResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateEndorsementCertArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateEndorsementCertArgs {\n  id: IUUID;\n  input: IEndorsementCertInput;\n}\nexport interface MutationToUpdateEndorsementCertResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateEndorsementCertArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteEndorsementCertArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteEndorsementCertResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteEndorsementCertArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterArgs {\n  input: ISinisterInput;\n}\nexport interface MutationToCreateSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterArgs {\n  id: IUUID;\n  input: ISinisterInput;\n}\nexport interface MutationToUpdateSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterAilingArgs {\n  input: ISinisterAilingInput;\n}\nexport interface MutationToCreateSinisterAilingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterAilingArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterAilingArgs {\n  id: IUUID;\n  input: ISinisterAilingInput;\n}\nexport interface MutationToUpdateSinisterAilingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterAilingArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterAilingArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterAilingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterAilingArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterCarArgs {\n  input: ISinisterCarInput;\n}\nexport interface MutationToCreateSinisterCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterCarArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterCarArgs {\n  id: IUUID;\n  input: ISinisterCarInput;\n}\nexport interface MutationToUpdateSinisterCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterCarArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterCarArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterCarArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterCarContactArgs {\n  input: ISinisterCarContactInput;\n}\nexport interface MutationToCreateSinisterCarContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterCarContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterCarContactArgs {\n  id: IUUID;\n  input: ISinisterCarContactInput;\n}\nexport interface MutationToUpdateSinisterCarContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterCarContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterCarContactArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterCarContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterCarContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterDamageArgs {\n  input: ISinisterDamageInput;\n}\nexport interface MutationToCreateSinisterDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterDamageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterDamageArgs {\n  id: IUUID;\n  input: ISinisterDamageInput;\n}\nexport interface MutationToUpdateSinisterDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterDamageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterDamageArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterDamageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterDamageContactArgs {\n  input: ISinisterDamageContactInput;\n}\nexport interface MutationToCreateSinisterDamageContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterDamageContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterDamageContactArgs {\n  id: IUUID;\n  input: ISinisterDamageContactInput;\n}\nexport interface MutationToUpdateSinisterDamageContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterDamageContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterDamageContactArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterDamageContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterDamageContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterLifeArgs {\n  input: ISinisterLifeInput;\n}\nexport interface MutationToCreateSinisterLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterLifeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterLifeArgs {\n  id: IUUID;\n  input: ISinisterLifeInput;\n}\nexport interface MutationToUpdateSinisterLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterLifeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterLifeArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterLifeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterLifeContactArgs {\n  input: ISinisterLifeContactInput;\n}\nexport interface MutationToCreateSinisterLifeContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterLifeContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterLifeContactArgs {\n  id: IUUID;\n  input: ISinisterLifeContactInput;\n}\nexport interface MutationToUpdateSinisterLifeContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterLifeContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterLifeContactArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterLifeContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterLifeContactArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterHospitalArgs {\n  input: ISinisterHospitalInput;\n}\nexport interface MutationToCreateSinisterHospitalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterHospitalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterHospitalArgs {\n  id: IUUID;\n  input: ISinisterHospitalInput;\n}\nexport interface MutationToUpdateSinisterHospitalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterHospitalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterHospitalArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterHospitalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterHospitalArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateSinisterFacturaArgs {\n  input: ISinisterFacturaInput;\n}\nexport interface MutationToCreateSinisterFacturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateSinisterFacturaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateSinisterFacturaArgs {\n  id: IUUID;\n  input: ISinisterFacturaInput;\n}\nexport interface MutationToUpdateSinisterFacturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateSinisterFacturaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteSinisterFacturaArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteSinisterFacturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteSinisterFacturaArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePoliceReceiptArgs {\n  input: IPoliceReceiptInput;\n}\nexport interface MutationToCreatePoliceReceiptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePoliceReceiptArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceReceiptArgs {\n  id: IUUID;\n  input: IPoliceReceiptInput;\n}\nexport interface MutationToUpdatePoliceReceiptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceReceiptArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceReceiptArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceReceiptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceReceiptArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePoliceReceiptAccountArgs {\n  input: IPoliceReceiptAccountInput;\n}\nexport interface MutationToCreatePoliceReceiptAccountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePoliceReceiptAccountArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceReceiptAccountArgs {\n  id: IUUID;\n  input: IPoliceReceiptAccountInput;\n}\nexport interface MutationToUpdatePoliceReceiptAccountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceReceiptAccountArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceReceiptAccountArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceReceiptAccountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceReceiptAccountArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePoliceReceiptAccountStateArgs {\n  input: IPoliceReceiptAccountStateInput;\n}\nexport interface MutationToCreatePoliceReceiptAccountStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePoliceReceiptAccountStateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceReceiptAccountStateArgs {\n  id: IUUID;\n  input: IPoliceReceiptAccountStateInput;\n}\nexport interface MutationToUpdatePoliceReceiptAccountStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceReceiptAccountStateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceReceiptAccountStateArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceReceiptAccountStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceReceiptAccountStateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePoliceReceiptFolioArgs {\n  input: IPoliceReceiptFolioInput;\n}\nexport interface MutationToCreatePoliceReceiptFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePoliceReceiptFolioArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceReceiptFolioArgs {\n  id: IUUID;\n  input: IPoliceReceiptFolioInput;\n}\nexport interface MutationToUpdatePoliceReceiptFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceReceiptFolioArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceReceiptFolioArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceReceiptFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceReceiptFolioArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePoliceReceiptPaymentArgs {\n  input: IPoliceReceiptPaymentInput;\n}\nexport interface MutationToCreatePoliceReceiptPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePoliceReceiptPaymentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceReceiptPaymentArgs {\n  id: IUUID;\n  input: IPoliceReceiptPaymentInput;\n}\nexport interface MutationToUpdatePoliceReceiptPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceReceiptPaymentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceReceiptPaymentArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceReceiptPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceReceiptPaymentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePoliceFileArgs {\n  input: IPoliceFileInput;\n}\nexport interface MutationToCreatePoliceFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePoliceFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdatePoliceFileArgs {\n  id: IUUID;\n  input: IPoliceFileInput;\n}\nexport interface MutationToUpdatePoliceFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdatePoliceFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePoliceFileArgs {\n  id: IUUID;\n}\nexport interface MutationToDeletePoliceFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePoliceFileArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerCommentArgs {\n  input: IInsurerCommentInput;\n}\nexport interface MutationToCreateInsurerCommentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerCommentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerCommentArgs {\n  id: IUUID;\n  input: IInsurerCommentInput;\n}\nexport interface MutationToUpdateInsurerCommentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerCommentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerCommentArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerCommentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerCommentArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerFileReadingArgs {\n  input: IInsurerFileReadingInput;\n}\nexport interface MutationToCreateInsurerFileReadingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerFileReadingArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerFileReadingArgs {\n  id: IUUID;\n  input: IInsurerFileReadingInput;\n}\nexport interface MutationToUpdateInsurerFileReadingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerFileReadingArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerFileReadingArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerFileReadingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerFileReadingArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerFileReadingTagArgs {\n  input: IInsurerFileReadingTagInput;\n}\nexport interface MutationToCreateInsurerFileReadingTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerFileReadingTagArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerFileReadingTagArgs {\n  id: IUUID;\n  input: IInsurerFileReadingTagInput;\n}\nexport interface MutationToUpdateInsurerFileReadingTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerFileReadingTagArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerFileReadingTagArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerFileReadingTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerFileReadingTagArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerBailTypeArgs {\n  id: IUUID;\n  input: IInsurerBailTypeInput;\n}\nexport interface MutationToUpdateInsurerBailTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerBailTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerBailTypeArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerBailTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerBailTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerInvolvedArgs {\n  input: IInsurerInvolvedInput;\n}\nexport interface MutationToCreateInsurerInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerInvolvedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerInvolvedArgs {\n  id: IUUID;\n  input: IInsurerInvolvedInput;\n}\nexport interface MutationToUpdateInsurerInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerInvolvedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerInvolvedArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerInvolvedArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerLogArgs {\n  input: IInsurerLogInput;\n}\nexport interface MutationToCreateInsurerLogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerLogArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerLogArgs {\n  id: IUUID;\n  input: IInsurerLogInput;\n}\nexport interface MutationToUpdateInsurerLogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerLogArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerLogArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerLogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerLogArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerLogEmailArgs {\n  input: IInsurerLogEmailInput;\n}\nexport interface MutationToCreateInsurerLogEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerLogEmailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerLogEmailArgs {\n  id: IUUID;\n  input: IInsurerLogEmailInput;\n}\nexport interface MutationToUpdateInsurerLogEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerLogEmailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerLogEmailArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerLogEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerLogEmailArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerOrgInfoArgs {\n  input: IInsurerOrgInfoInput;\n}\nexport interface MutationToCreateInsurerOrgInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerOrgInfoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerOrgInfoArgs {\n  id: IUUID;\n  input: IInsurerOrgInfoInput;\n}\nexport interface MutationToUpdateInsurerOrgInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerOrgInfoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerOrgInfoArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerOrgInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerOrgInfoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerTicketArgs {\n  input: IInsurerTicketInput;\n}\nexport interface MutationToCreateInsurerTicketResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerTicketArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerTicketArgs {\n  id: IUUID;\n  input: IInsurerTicketInput;\n}\nexport interface MutationToUpdateInsurerTicketResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerTicketArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerTicketArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerTicketResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerTicketArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerScheduleArgs {\n  input: IInsurerScheduleInput;\n}\nexport interface MutationToCreateInsurerScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerScheduleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerScheduleArgs {\n  id: IUUID;\n  input: IInsurerScheduleInput;\n}\nexport interface MutationToUpdateInsurerScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerScheduleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerScheduleArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerScheduleArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerScheduleParticipantArgs {\n  input: IInsurerScheduleParticipantInput;\n}\nexport interface MutationToCreateInsurerScheduleParticipantResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerScheduleParticipantArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerScheduleParticipantArgs {\n  id: IUUID;\n  input: IInsurerScheduleParticipantInput;\n}\nexport interface MutationToUpdateInsurerScheduleParticipantResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerScheduleParticipantArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerScheduleParticipantArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerScheduleParticipantResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerScheduleParticipantArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerNotificationArgs {\n  input: IInsurerNotificationInput;\n}\nexport interface MutationToCreateInsurerNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerNotificationArgs {\n  id: IUUID;\n  input: IInsurerNotificationInput;\n}\nexport interface MutationToUpdateInsurerNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerNotificationArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerReminderArgs {\n  input: IInsurerReminderInput;\n}\nexport interface MutationToCreateInsurerReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerReminderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerReminderArgs {\n  id: IUUID;\n  input: IInsurerReminderInput;\n}\nexport interface MutationToUpdateInsurerReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerReminderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerReminderArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerReminderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerReminderProjectAgentProviderArgs {\n  input: IInsurerReminderProjectAgentProviderInput;\n}\nexport interface MutationToCreateInsurerReminderProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerReminderProjectAgentProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerReminderProjectAgentProviderArgs {\n  id: IUUID;\n  input: IInsurerReminderProjectAgentProviderInput;\n}\nexport interface MutationToUpdateInsurerReminderProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerReminderProjectAgentProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerReminderProjectAgentProviderArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerReminderProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerReminderProjectAgentProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerReminderRecordArgs {\n  input: IInsurerReminderRecordInput;\n}\nexport interface MutationToCreateInsurerReminderRecordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerReminderRecordArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerReminderRecordArgs {\n  id: IUUID;\n  input: IInsurerReminderRecordInput;\n}\nexport interface MutationToUpdateInsurerReminderRecordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerReminderRecordArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerReminderRecordArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerReminderRecordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerReminderRecordArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerReminderSubBranchArgs {\n  input: IInsurerReminderSubBranchInput;\n}\nexport interface MutationToCreateInsurerReminderSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerReminderSubBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerReminderSubBranchArgs {\n  id: IUUID;\n  input: IInsurerReminderSubBranchInput;\n}\nexport interface MutationToUpdateInsurerReminderSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerReminderSubBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerReminderSubBranchArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerReminderSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerReminderSubBranchArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerBailTypeArgs {\n  input: IInsurerBailTypeInput;\n}\nexport interface MutationToCreateInsurerBailTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerBailTypeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerBirthDateTemplateArgs {\n  input: IInsurerBirthDateTemplateInput;\n}\nexport interface MutationToCreateInsurerBirthDateTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerBirthDateTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerBirthDateTemplateArgs {\n  id: IUUID;\n  input: IInsurerBirthDateTemplateInput;\n}\nexport interface MutationToUpdateInsurerBirthDateTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerBirthDateTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerBirthDateTemplateArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerBirthDateTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerBirthDateTemplateArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerDirectoryArgs {\n  input: IInsurerDirectoryInput;\n}\nexport interface MutationToCreateInsurerDirectoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerDirectoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerDirectoryArgs {\n  id: IUUID;\n  input: IInsurerDirectoryInput;\n}\nexport interface MutationToUpdateInsurerDirectoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerDirectoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerDirectoryArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerDirectoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerDirectoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerExpenseArgs {\n  input: IInsurerExpenseInput;\n}\nexport interface MutationToCreateInsurerExpenseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerExpenseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerExpenseArgs {\n  id: IUUID;\n  input: IInsurerExpenseInput;\n}\nexport interface MutationToUpdateInsurerExpenseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerExpenseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerExpenseArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerExpenseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerExpenseArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerIbisFormArgs {\n  input: IInsurerIbisFormInput;\n}\nexport interface MutationToCreateInsurerIbisFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerIbisFormArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerIbisFormArgs {\n  id: IUUID;\n  input: IInsurerIbisFormInput;\n}\nexport interface MutationToUpdateInsurerIbisFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerIbisFormArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerIbisFormArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerIbisFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerIbisFormArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerIbisProviderArgs {\n  input: IInsurerIbisProviderInput;\n}\nexport interface MutationToCreateInsurerIbisProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerIbisProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerIbisProviderArgs {\n  id: IUUID;\n  input: IInsurerIbisProviderInput;\n}\nexport interface MutationToUpdateInsurerIbisProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerIbisProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerIbisProviderArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerIbisProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerIbisProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerSenderArgs {\n  input: IInsurerSenderInput;\n}\nexport interface MutationToCreateInsurerSenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerSenderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerSenderArgs {\n  id: IUUID;\n  input: IInsurerSenderInput;\n}\nexport interface MutationToUpdateInsurerSenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerSenderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerSenderArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerSenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerSenderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateInsurerZipCodeSepomexArgs {\n  input: IInsurerZipCodeSepomexInput;\n}\nexport interface MutationToCreateInsurerZipCodeSepomexResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateInsurerZipCodeSepomexArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateInsurerZipCodeSepomexArgs {\n  id: IUUID;\n  input: IInsurerZipCodeSepomexInput;\n}\nexport interface MutationToUpdateInsurerZipCodeSepomexResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateInsurerZipCodeSepomexArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteInsurerZipCodeSepomexArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteInsurerZipCodeSepomexResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteInsurerZipCodeSepomexArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAgentProviderBonoArgs {\n  input: IAgentProviderBonoInput;\n}\nexport interface MutationToCreateAgentProviderBonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAgentProviderBonoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateAgentProviderBonoArgs {\n  id: IUUID;\n  input: IAgentProviderBonoInput;\n}\nexport interface MutationToUpdateAgentProviderBonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateAgentProviderBonoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAgentProviderBonoArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteAgentProviderBonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAgentProviderBonoArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSaam_sendNotificationArgs {\n  input: ISendNotificationInput;\n}\nexport interface MutationToSaam_sendNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSaam_sendNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMultipleNotificationArgs {\n  input: ICreateMultipleNotificationInput;\n}\nexport interface MutationToCreateMultipleNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMultipleNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMultipleMemberNotificationArgs {\n  input: ICreateMultipleMemberNotificationInput;\n}\nexport interface MutationToCreateMultipleMemberNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMultipleMemberNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateMemberNotificationArgs {\n  input: ICreateMemberNotificationInput;\n}\nexport interface MutationToCreateMemberNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateMemberNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateNotificationArgs {\n  input: INotificationInput;\n}\nexport interface MutationToCreateNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateMultipleNotificationArgs {\n  input: IMultipleNotificationInput;\n}\nexport interface MutationToUpdateMultipleNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateMultipleNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateNotificationArgs {\n  id: IUUID;\n  input: IUpdateNotificationInput;\n}\nexport interface MutationToUpdateNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteNotificationArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteNotificationArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateDeviceArgs {\n  input: IDeviceInput;\n}\nexport interface MutationToCreateDeviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateDeviceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToUpdateDeviceArgs {\n  id: IUUID;\n  input: IDeviceInput;\n}\nexport interface MutationToUpdateDeviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToUpdateDeviceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteDeviceArgs {\n  id: IUUID;\n}\nexport interface MutationToDeleteDeviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteDeviceArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToAddDotsArgs {\n  id: IUUID;\n}\nexport interface MutationToAddDotsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToAddDotsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSetCodeAsUnavailableArgs {\n  input: ISetCodeAsUnavailableInput;\n}\nexport interface MutationToSetCodeAsUnavailableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSetCodeAsUnavailableArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAdminCodeArgs {\n  input: ICreateAdminCodeInput;\n}\nexport interface MutationToCreateAdminCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAdminCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToScanCodeArgs {\n  input: IScanCodeInput;\n}\nexport interface MutationToScanCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToScanCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSendMessageArgs {\n  input: ISendMessageInput;\n}\nexport interface MutationToSendMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSendMessageArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToLookForCodeArgs {\n  input: ILookForCodeInput;\n}\nexport interface MutationToLookForCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToLookForCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateCodeArgs {\n  input: ICreateCodeInput;\n}\nexport interface MutationToCreateCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToExchange_createProviderArgs {\n  input: ICreateProviderInput;\n}\nexport interface MutationToExchange_createProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToExchange_createProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePrizeCategoryArgs {\n  input: ICreatePrizeCategoryInput;\n}\nexport interface MutationToCreatePrizeCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePrizeCategoryArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreatePrizeCodeArgs {\n  input: ICreatePrizeCodeInput;\n}\nexport interface MutationToCreatePrizeCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreatePrizeCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteCodeArgs {\n  input: IDeleteCodeInput;\n}\nexport interface MutationToDeleteCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeletePrizeCodeArgs {\n  input: IDeletePrizeCodeInput;\n}\nexport interface MutationToDeletePrizeCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeletePrizeCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToExchange_deleteProviderArgs {\n  input: IDeleteProviderInput;\n}\nexport interface MutationToExchange_deleteProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToExchange_deleteProviderArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToExchangeDotsArgs {\n  input: IExchangeDotsInput;\n}\nexport interface MutationToExchangeDotsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToExchangeDotsArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateAdverseEventArgs {\n  input: ICreateAdverseEventInput;\n}\nexport interface MutationToCreateAdverseEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateAdverseEventArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToExecCreateCodesArgs {\n  projectId: IUUID;\n}\nexport interface MutationToExecCreateCodesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToExecCreateCodesArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToSetGlobalCodeArgs {\n  dots: number;\n  projectId: IUUID;\n}\nexport interface MutationToSetGlobalCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToSetGlobalCodeArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToDeleteAdverseEventArgs {\n  input: IDeleteAdverseEventInput;\n}\nexport interface MutationToDeleteAdverseEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToDeleteAdverseEventArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MutationToCreateBrandArgs {\n  input: ICreateBrandInput;\n}\nexport interface MutationToCreateBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: MutationToCreateBrandArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendQuizToEmailPayloadTypeResolver<TParent = any> {\n  message?: SendQuizToEmailPayloadToMessageResolver<TParent>;\n}\n\nexport interface SendQuizToEmailPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProfileWithIdPayloadTypeResolver<TParent = any> {\n  member?: UpdateProfileWithIdPayloadToMemberResolver<TParent>;\n}\n\nexport interface UpdateProfileWithIdPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INichePayloadTypeResolver<TParent = any> {\n  niche?: NichePayloadToNicheResolver<TParent>;\n}\n\nexport interface NichePayloadToNicheResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INicheServicePayloadTypeResolver<TParent = any> {\n  nicheService?: NicheServicePayloadToNicheServiceResolver<TParent>;\n}\n\nexport interface NicheServicePayloadToNicheServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBulkTutorPayloadTypeResolver<TParent = any> {\n  message?: CreateBulkTutorPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateBulkTutorPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBillingDataPayloadTypeResolver<TParent = any> {\n  billingData?: UpdateBillingDataPayloadToBillingDataResolver<TParent>;\n}\n\nexport interface UpdateBillingDataPayloadToBillingDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateCompanyDataPayloadTypeResolver<TParent = any> {\n  enterpriseData?: UpdateCompanyDataPayloadToEnterpriseDataResolver<TParent>;\n}\n\nexport interface UpdateCompanyDataPayloadToEnterpriseDataResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBulkTeacherPayloadTypeResolver<TParent = any> {\n  message?: CreateBulkTeacherPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateBulkTeacherPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateHealthInsurancePayloadTypeResolver<TParent = any> {\n  healthInsurance?: UpdateHealthInsurancePayloadToHealthInsuranceResolver<TParent>;\n}\n\nexport interface UpdateHealthInsurancePayloadToHealthInsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateAttendanceExcelPayloadTypeResolver<TParent = any> {\n  url?: CreateAttendanceExcelPayloadToUrlResolver<TParent>;\n}\n\nexport interface CreateAttendanceExcelPayloadToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBulkUserPayloadTypeResolver<TParent = any> {\n  message?: CreateBulkUserPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateBulkUserPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateAttendancePayloadTypeResolver<TParent = any> {\n  attendance?: CreateAttendancePayloadToAttendanceResolver<TParent>;\n}\n\nexport interface CreateAttendancePayloadToAttendanceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCheisiUsersExcelPayloadTypeResolver<TParent = any> {\n  url?: CreateCheisiUsersExcelPayloadToUrlResolver<TParent>;\n}\n\nexport interface CreateCheisiUsersExcelPayloadToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INewContactFormPayloadTypeResolver<TParent = any> {\n  message?: NewContactFormPayloadToMessageResolver<TParent>;\n}\n\nexport interface NewContactFormPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INewExternalLoginPayloadTypeResolver<TParent = any> {\n  externalLogin?: NewExternalLoginPayloadToExternalLoginResolver<TParent>;\n}\n\nexport interface NewExternalLoginPayloadToExternalLoginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IExternalLoginTypeResolver<TParent = any> {\n  memberId?: ExternalLoginToMemberIdResolver<TParent>;\n  token?: ExternalLoginToTokenResolver<TParent>;\n  providerName?: ExternalLoginToProviderNameResolver<TParent>;\n  email?: ExternalLoginToEmailResolver<TParent>;\n  id?: ExternalLoginToIdResolver<TParent>;\n  createdAt?: ExternalLoginToCreatedAtResolver<TParent>;\n  updatedAt?: ExternalLoginToUpdatedAtResolver<TParent>;\n}\n\nexport interface ExternalLoginToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ExternalLoginToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ExternalLoginToProviderNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ExternalLoginToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ExternalLoginToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ExternalLoginToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ExternalLoginToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteUserPayloadTypeResolver<TParent = any> {\n  message?: DeleteUserPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteUserPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITestBulkPayloadTypeResolver<TParent = any> {\n  message?: TestBulkPayloadToMessageResolver<TParent>;\n}\n\nexport interface TestBulkPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePositionColumnsPayloadTypeResolver<TParent = any> {\n  items?: UpdatePositionColumnsPayloadToItemsResolver<TParent>;\n}\n\nexport interface UpdatePositionColumnsPayloadToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IViewColumnPageTypeResolver<TParent = any> {\n  id?: ViewColumnPageToIdResolver<TParent>;\n  position?: ViewColumnPageToPositionResolver<TParent>;\n}\n\nexport interface ViewColumnPageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewColumnPageToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePositionBlockColumnsPayloadTypeResolver<TParent = any> {\n  items?: UpdatePositionBlockColumnsPayloadToItemsResolver<TParent>;\n}\n\nexport interface UpdatePositionBlockColumnsPayloadToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IViewBlockColumnPageTypeResolver<TParent = any> {\n  id?: ViewBlockColumnPageToIdResolver<TParent>;\n  position?: ViewBlockColumnPageToPositionResolver<TParent>;\n}\n\nexport interface ViewBlockColumnPageToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ViewBlockColumnPageToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILoginWithProviderPayloadTypeResolver<TParent = any> {\n  externalLogin?: LoginWithProviderPayloadToExternalLoginResolver<TParent>;\n}\n\nexport interface LoginWithProviderPayloadToExternalLoginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProjectSocialNetworkPayloadTypeResolver<TParent = any> {\n  projectSocialNetwork?: CreateProjectSocialNetworkPayloadToProjectSocialNetworkResolver<TParent>;\n}\n\nexport interface CreateProjectSocialNetworkPayloadToProjectSocialNetworkResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProjectSocialNetworkPayloadTypeResolver<TParent = any> {\n  message?: UpdateProjectSocialNetworkPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateProjectSocialNetworkPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProjectSocialNetworkPayloadTypeResolver<TParent = any> {\n  message?: DeleteProjectSocialNetworkPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteProjectSocialNetworkPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateRecommendedProjectPayloadTypeResolver<TParent = any> {\n  recommendedProject?: CreateRecommendedProjectPayloadToRecommendedProjectResolver<TParent>;\n}\n\nexport interface CreateRecommendedProjectPayloadToRecommendedProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateRecommendedProjectPayloadTypeResolver<TParent = any> {\n  message?: UpdateRecommendedProjectPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateRecommendedProjectPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteRecommendedProjectPayloadTypeResolver<TParent = any> {\n  message?: DeleteRecommendedProjectPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteRecommendedProjectPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISetProjectToProductionPayloadTypeResolver<TParent = any> {\n  message?: SetProjectToProductionPayloadToMessageResolver<TParent>;\n}\n\nexport interface SetProjectToProductionPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProjectTemplatePayloadTypeResolver<TParent = any> {\n  projectTemplate?: CreateProjectTemplatePayloadToProjectTemplateResolver<TParent>;\n}\n\nexport interface CreateProjectTemplatePayloadToProjectTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProjectTemplatePayloadTypeResolver<TParent = any> {\n  message?: UpdateProjectTemplatePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateProjectTemplatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProjectTemplatePayloadTypeResolver<TParent = any> {\n  message?: DeleteProjectTemplatePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteProjectTemplatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMemberPayloadTypeResolver<TParent = any> {\n  accessToken?: CreateMemberPayloadToAccessTokenResolver<TParent>;\n  member?: CreateMemberPayloadToMemberResolver<TParent>;\n}\n\nexport interface CreateMemberPayloadToAccessTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CreateMemberPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILoginMemberPayloadTypeResolver<TParent = any> {\n  accessToken?: LoginMemberPayloadToAccessTokenResolver<TParent>;\n  member?: LoginMemberPayloadToMemberResolver<TParent>;\n}\n\nexport interface LoginMemberPayloadToAccessTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LoginMemberPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCompanyPayloadTypeResolver<TParent = any> {\n  company?: CreateCompanyPayloadToCompanyResolver<TParent>;\n}\n\nexport interface CreateCompanyPayloadToCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProjectPayloadTypeResolver<TParent = any> {\n  project?: CreateProjectPayloadToProjectResolver<TParent>;\n}\n\nexport interface CreateProjectPayloadToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateNewRolesPayloadTypeResolver<TParent = any> {\n  message?: CreateNewRolesPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateNewRolesPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateUserPayloadTypeResolver<TParent = any> {\n  accessToken?: CreateUserPayloadToAccessTokenResolver<TParent>;\n  member?: CreateUserPayloadToMemberResolver<TParent>;\n}\n\nexport interface CreateUserPayloadToAccessTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CreateUserPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateOrFindUserPayloadTypeResolver<TParent = any> {\n  member?: CreateOrFindUserPayloadToMemberResolver<TParent>;\n}\n\nexport interface CreateOrFindUserPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateOrdinaryUserPayloadTypeResolver<TParent = any> {\n  member?: CreateOrdinaryUserPayloadToMemberResolver<TParent>;\n}\n\nexport interface CreateOrdinaryUserPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProfilePayloadTypeResolver<TParent = any> {\n  member?: UpdateProfilePayloadToMemberResolver<TParent>;\n}\n\nexport interface UpdateProfilePayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePasswordPayloadTypeResolver<TParent = any> {\n  member?: UpdatePasswordPayloadToMemberResolver<TParent>;\n}\n\nexport interface UpdatePasswordPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IActiveMemberPayloadTypeResolver<TParent = any> {\n  member?: ActiveMemberPayloadToMemberResolver<TParent>;\n}\n\nexport interface ActiveMemberPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProjectRolePayloadTypeResolver<TParent = any> {\n  projectRole?: CreateProjectRolePayloadToProjectRoleResolver<TParent>;\n}\n\nexport interface CreateProjectRolePayloadToProjectRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUploadPhotoProfilePayloadTypeResolver<TParent = any> {\n  member?: UploadPhotoProfilePayloadToMemberResolver<TParent>;\n}\n\nexport interface UploadPhotoProfilePayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProjectPayloadTypeResolver<TParent = any> {\n  project?: DeleteProjectPayloadToProjectResolver<TParent>;\n}\n\nexport interface DeleteProjectPayloadToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateCompanyPayloadTypeResolver<TParent = any> {\n  company?: UpdateCompanyPayloadToCompanyResolver<TParent>;\n}\n\nexport interface UpdateCompanyPayloadToCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRestorePasswordPayloadTypeResolver<TParent = any> {\n  member?: RestorePasswordPayloadToMemberResolver<TParent>;\n}\n\nexport interface RestorePasswordPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRecoverPasswordPayloadTypeResolver<TParent = any> {\n  member?: RecoverPasswordPayloadToMemberResolver<TParent>;\n}\n\nexport interface RecoverPasswordPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IVerifyTokenPayloadTypeResolver<TParent = any> {\n  member?: VerifyTokenPayloadToMemberResolver<TParent>;\n}\n\nexport interface VerifyTokenPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateGroupPayloadTypeResolver<TParent = any> {\n  group?: CreateGroupPayloadToGroupResolver<TParent>;\n}\n\nexport interface CreateGroupPayloadToGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddGroupToMemberPayloadTypeResolver<TParent = any> {\n  memberGroup?: AddGroupToMemberPayloadToMemberGroupResolver<TParent>;\n}\n\nexport interface AddGroupToMemberPayloadToMemberGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberGroupTypeResolver<TParent = any> {\n  memberId?: MemberGroupToMemberIdResolver<TParent>;\n  member?: MemberGroupToMemberResolver<TParent>;\n  groupId?: MemberGroupToGroupIdResolver<TParent>;\n  group?: MemberGroupToGroupResolver<TParent>;\n}\n\nexport interface MemberGroupToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberGroupToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberGroupToGroupIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MemberGroupToGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddGroupToTaxonomyPayloadTypeResolver<TParent = any> {\n  groupTaxonomy?: AddGroupToTaxonomyPayloadToGroupTaxonomyResolver<TParent>;\n}\n\nexport interface AddGroupToTaxonomyPayloadToGroupTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddTaxonomyToMemberPayloadTypeResolver<TParent = any> {\n  memberTaxonomy?: AddTaxonomyToMemberPayloadToMemberTaxonomyResolver<TParent>;\n}\n\nexport interface AddTaxonomyToMemberPayloadToMemberTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteGroupPayloadTypeResolver<TParent = any> {\n  member?: DeleteGroupPayloadToMemberResolver<TParent>;\n}\n\nexport interface DeleteGroupPayloadToMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteGroupTaxonomyPayloadTypeResolver<TParent = any> {\n  memberTaxonomy?: DeleteGroupTaxonomyPayloadToMemberTaxonomyResolver<TParent>;\n}\n\nexport interface DeleteGroupTaxonomyPayloadToMemberTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMemberGroupMutationPayloadTypeResolver<TParent = any> {\n  memberGroup?: DeleteMemberGroupMutationPayloadToMemberGroupResolver<TParent>;\n}\n\nexport interface DeleteMemberGroupMutationPayloadToMemberGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMemberTaxonomyPayloadTypeResolver<TParent = any> {\n  memberTaxonomy?: DeleteMemberTaxonomyPayloadToMemberTaxonomyResolver<TParent>;\n}\n\nexport interface DeleteMemberTaxonomyPayloadToMemberTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProjectRolePayloadTypeResolver<TParent = any> {\n  message?: DeleteProjectRolePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteProjectRolePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateUpdatePermissionPayloadTypeResolver<TParent = any> {\n  permission?: CreateUpdatePermissionPayloadToPermissionResolver<TParent>;\n}\n\nexport interface CreateUpdatePermissionPayloadToPermissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProjectPayloadTypeResolver<TParent = any> {\n  project?: UpdateProjectPayloadToProjectResolver<TParent>;\n}\n\nexport interface UpdateProjectPayloadToProjectResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProjectRolePayloadTypeResolver<TParent = any> {\n  projectRole?: UpdateProjectRolePayloadToProjectRoleResolver<TParent>;\n}\n\nexport interface UpdateProjectRolePayloadToProjectRoleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateGroupPayloadTypeResolver<TParent = any> {\n  group?: UpdateGroupPayloadToGroupResolver<TParent>;\n}\n\nexport interface UpdateGroupPayloadToGroupResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddMemberAsAdminPayloadTypeResolver<TParent = any> {\n  message?: AddMemberAsAdminPayloadToMessageResolver<TParent>;\n}\n\nexport interface AddMemberAsAdminPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMemberStreamPayloadTypeResolver<TParent = any> {\n  memberStream?: CreateMemberStreamPayloadToMemberStreamResolver<TParent>;\n}\n\nexport interface CreateMemberStreamPayloadToMemberStreamResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMemberFromMemberProjectsPayloadTypeResolver<TParent = any> {\n  message?: DeleteMemberFromMemberProjectsPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMemberFromMemberProjectsPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddMemberToCompanyPayloadTypeResolver<TParent = any> {\n  message?: AddMemberToCompanyPayloadToMessageResolver<TParent>;\n}\n\nexport interface AddMemberToCompanyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePageManagerPayloadTypeResolver<TParent = any> {\n  pageManager?: CreatePageManagerPayloadToPageManagerResolver<TParent>;\n}\n\nexport interface CreatePageManagerPayloadToPageManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateViewManagerPayloadTypeResolver<TParent = any> {\n  viewManager?: CreateViewManagerPayloadToViewManagerResolver<TParent>;\n}\n\nexport interface CreateViewManagerPayloadToViewManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateViewColumnPayloadTypeResolver<TParent = any> {\n  viewColumn?: CreateViewColumnPayloadToViewColumnResolver<TParent>;\n}\n\nexport interface CreateViewColumnPayloadToViewColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateViewBlockColumnPayloadTypeResolver<TParent = any> {\n  viewBlockColumn?: CreateViewBlockColumnPayloadToViewBlockColumnResolver<TParent>;\n}\n\nexport interface CreateViewBlockColumnPayloadToViewBlockColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePageManagerPayloadTypeResolver<TParent = any> {\n  message?: UpdatePageManagerPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdatePageManagerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateViewManagerPayloadTypeResolver<TParent = any> {\n  message?: UpdateViewManagerPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateViewManagerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateViewColumnPayloadTypeResolver<TParent = any> {\n  message?: UpdateViewColumnPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateViewColumnPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateViewBlockColumnPayloadTypeResolver<TParent = any> {\n  message?: UpdateViewBlockColumnPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateViewBlockColumnPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePageManagerPayloadTypeResolver<TParent = any> {\n  message?: DeletePageManagerPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeletePageManagerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteViewManagerPayloadTypeResolver<TParent = any> {\n  message?: DeleteViewManagerPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteViewManagerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteViewColumnPayloadTypeResolver<TParent = any> {\n  message?: DeleteViewColumnPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteViewColumnPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILinkTransactionToSellPayloadTypeResolver<TParent = any> {\n  message?: LinkTransactionToSellPayloadToMessageResolver<TParent>;\n}\n\nexport interface LinkTransactionToSellPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateSellPayloadTypeResolver<TParent = any> {\n  sell?: UpdateSellPayloadToSellResolver<TParent>;\n}\n\nexport interface UpdateSellPayloadToSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteViewBlockColumnPayloadTypeResolver<TParent = any> {\n  message?: DeleteViewBlockColumnPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteViewBlockColumnPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMultipleMemberRelationPayloadTypeResolver<TParent = any> {\n  memberRelation?: MultipleMemberRelationPayloadToMemberRelationResolver<TParent>;\n}\n\nexport interface MultipleMemberRelationPayloadToMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberRelationPayloadTypeResolver<TParent = any> {\n  memberRelation?: MemberRelationPayloadToMemberRelationResolver<TParent>;\n}\n\nexport interface MemberRelationPayloadToMemberRelationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProductSellPayloadTypeResolver<TParent = any> {\n  message?: UpdateProductSellPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateProductSellPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateTaxPayloadTypeResolver<TParent = any> {\n  tax?: CreateTaxPayloadToTaxResolver<TParent>;\n}\n\nexport interface CreateTaxPayloadToTaxResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteTaxPayloadTypeResolver<TParent = any> {\n  message?: DeleteTaxPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteTaxPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IImportProductsFromExcelPayloadTypeResolver<TParent = any> {\n  message?: ImportProductsFromExcelPayloadToMessageResolver<TParent>;\n}\n\nexport interface ImportProductsFromExcelPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateRoutePayloadTypeResolver<TParent = any> {\n  route?: CreateRoutePayloadToRouteResolver<TParent>;\n}\n\nexport interface CreateRoutePayloadToRouteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteRoutePayloadTypeResolver<TParent = any> {\n  message?: DeleteRoutePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteRoutePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProductSellPayloadTypeResolver<TParent = any> {\n  productSell?: CreateProductSellPayloadToProductSellResolver<TParent>;\n}\n\nexport interface CreateProductSellPayloadToProductSellResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProductSellPayloadTypeResolver<TParent = any> {\n  message?: DeleteProductSellPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteProductSellPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePurchaseQuotePayloadTypeResolver<TParent = any> {\n  purchaseQuote?: CreatePurchaseQuotePayloadToPurchaseQuoteResolver<TParent>;\n}\n\nexport interface CreatePurchaseQuotePayloadToPurchaseQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePurchaseQuotePayloadTypeResolver<TParent = any> {\n  message?: DeletePurchaseQuotePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeletePurchaseQuotePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateStockAlertPayloadTypeResolver<TParent = any> {\n  stockAlert?: CreateStockAlertPayloadToStockAlertResolver<TParent>;\n}\n\nexport interface CreateStockAlertPayloadToStockAlertResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteStockAlertPayloadTypeResolver<TParent = any> {\n  message?: DeleteStockAlertPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteStockAlertPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateStockAlertPayloadTypeResolver<TParent = any> {\n  message?: UpdateStockAlertPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateStockAlertPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateLegalTermPayloadTypeResolver<TParent = any> {\n  legalTerm?: CreateLegalTermPayloadToLegalTermResolver<TParent>;\n}\n\nexport interface CreateLegalTermPayloadToLegalTermResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateInsuranceFormPayloadTypeResolver<TParent = any> {\n  insuranceForm?: CreateInsuranceFormPayloadToInsuranceFormResolver<TParent>;\n}\n\nexport interface CreateInsuranceFormPayloadToInsuranceFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateInsuranceFormPayloadTypeResolver<TParent = any> {\n  insuranceForm?: UpdateInsuranceFormPayloadToInsuranceFormResolver<TParent>;\n}\n\nexport interface UpdateInsuranceFormPayloadToInsuranceFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateLegalTermPayloadTypeResolver<TParent = any> {\n  message?: UpdateLegalTermPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateLegalTermPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteLegalTermPayloadTypeResolver<TParent = any> {\n  message?: DeleteLegalTermPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteLegalTermPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateArticlePayloadTypeResolver<TParent = any> {\n  article?: CreateArticlePayloadToArticleResolver<TParent>;\n}\n\nexport interface CreateArticlePayloadToArticleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateStatusArticlePayloadTypeResolver<TParent = any> {\n  article?: UpdateStatusArticlePayloadToArticleResolver<TParent>;\n}\n\nexport interface UpdateStatusArticlePayloadToArticleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateTaxonomyPayloadTypeResolver<TParent = any> {\n  taxonomy?: CreateTaxonomyPayloadToTaxonomyResolver<TParent>;\n}\n\nexport interface CreateTaxonomyPayloadToTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateArticlePayloadTypeResolver<TParent = any> {\n  article?: UpdateArticlePayloadToArticleResolver<TParent>;\n}\n\nexport interface UpdateArticlePayloadToArticleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateTaxonomyPayloadTypeResolver<TParent = any> {\n  taxonomy?: UpdateTaxonomyPayloadToTaxonomyResolver<TParent>;\n}\n\nexport interface UpdateTaxonomyPayloadToTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteArticlePayloadTypeResolver<TParent = any> {\n  article?: DeleteArticlePayloadToArticleResolver<TParent>;\n}\n\nexport interface DeleteArticlePayloadToArticleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteTaxonomyPayloadTypeResolver<TParent = any> {\n  taxonomy?: DeleteTaxonomyPayloadToTaxonomyResolver<TParent>;\n}\n\nexport interface DeleteTaxonomyPayloadToTaxonomyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INewSurveyPayloadTypeResolver<TParent = any> {\n  survey?: NewSurveyPayloadToSurveyResolver<TParent>;\n}\n\nexport interface NewSurveyPayloadToSurveyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateSurveyPayloadTypeResolver<TParent = any> {\n  survey?: UpdateSurveyPayloadToSurveyResolver<TParent>;\n}\n\nexport interface UpdateSurveyPayloadToSurveyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteSurveyPayloadTypeResolver<TParent = any> {\n  survey?: DeleteSurveyPayloadToSurveyResolver<TParent>;\n}\n\nexport interface DeleteSurveyPayloadToSurveyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INewQuestionPayloadTypeResolver<TParent = any> {\n  question?: NewQuestionPayloadToQuestionResolver<TParent>;\n}\n\nexport interface NewQuestionPayloadToQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteQuestionPayloadTypeResolver<TParent = any> {\n  question?: DeleteQuestionPayloadToQuestionResolver<TParent>;\n}\n\nexport interface DeleteQuestionPayloadToQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateQuestionPayloadTypeResolver<TParent = any> {\n  question?: UpdateQuestionPayloadToQuestionResolver<TParent>;\n}\n\nexport interface UpdateQuestionPayloadToQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INewOptionPayloadTypeResolver<TParent = any> {\n  option?: NewOptionPayloadToOptionResolver<TParent>;\n}\n\nexport interface NewOptionPayloadToOptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteOptionPayloadTypeResolver<TParent = any> {\n  option?: DeleteOptionPayloadToOptionResolver<TParent>;\n}\n\nexport interface DeleteOptionPayloadToOptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateOptionPayloadTypeResolver<TParent = any> {\n  option?: UpdateOptionPayloadToOptionResolver<TParent>;\n}\n\nexport interface UpdateOptionPayloadToOptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAnswerQuestionPayloadTypeResolver<TParent = any> {\n  message?: AnswerQuestionPayloadToMessageResolver<TParent>;\n}\n\nexport interface AnswerQuestionPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProductPayloadTypeResolver<TParent = any> {\n  product?: CreateProductPayloadToProductResolver<TParent>;\n}\n\nexport interface CreateProductPayloadToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProductPayloadTypeResolver<TParent = any> {\n  product?: UpdateProductPayloadToProductResolver<TParent>;\n}\n\nexport interface UpdateProductPayloadToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProductPayloadTypeResolver<TParent = any> {\n  product?: DeleteProductPayloadToProductResolver<TParent>;\n}\n\nexport interface DeleteProductPayloadToProductResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateAddressPayloadTypeResolver<TParent = any> {\n  address?: CreateAddressPayloadToAddressResolver<TParent>;\n}\n\nexport interface CreateAddressPayloadToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateAddressPayloadTypeResolver<TParent = any> {\n  address?: UpdateAddressPayloadToAddressResolver<TParent>;\n}\n\nexport interface UpdateAddressPayloadToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteAddressPayloadTypeResolver<TParent = any> {\n  address?: DeleteAddressPayloadToAddressResolver<TParent>;\n}\n\nexport interface DeleteAddressPayloadToAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateUpdateShopPayloadTypeResolver<TParent = any> {\n  shop?: CreateUpdateShopPayloadToShopResolver<TParent>;\n}\n\nexport interface CreateUpdateShopPayloadToShopResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateDiseasePayloadTypeResolver<TParent = any> {\n  disease?: CreateDiseasePayloadToDiseaseResolver<TParent>;\n}\n\nexport interface CreateDiseasePayloadToDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateDiseasePayloadTypeResolver<TParent = any> {\n  disease?: UpdateDiseasePayloadToDiseaseResolver<TParent>;\n}\n\nexport interface UpdateDiseasePayloadToDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteDiseasePayloadTypeResolver<TParent = any> {\n  message?: DeleteDiseasePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteDiseasePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateTopicDiseasePayloadTypeResolver<TParent = any> {\n  topicDisease?: CreateTopicDiseasePayloadToTopicDiseaseResolver<TParent>;\n}\n\nexport interface CreateTopicDiseasePayloadToTopicDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateTopicDiseasePayloadTypeResolver<TParent = any> {\n  topicDisease?: UpdateTopicDiseasePayloadToTopicDiseaseResolver<TParent>;\n}\n\nexport interface UpdateTopicDiseasePayloadToTopicDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteTopicDiseasePayloadTypeResolver<TParent = any> {\n  message?: DeleteTopicDiseasePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteTopicDiseasePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateFAQPayloadTypeResolver<TParent = any> {\n  faq?: CreateFAQPayloadToFaqResolver<TParent>;\n}\n\nexport interface CreateFAQPayloadToFaqResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateFAQPayloadTypeResolver<TParent = any> {\n  faq?: UpdateFAQPayloadToFaqResolver<TParent>;\n}\n\nexport interface UpdateFAQPayloadToFaqResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteFAQPayloadTypeResolver<TParent = any> {\n  message?: DeleteFAQPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteFAQPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRunJobShopPayloadTypeResolver<TParent = any> {\n  message?: RunJobShopPayloadToMessageResolver<TParent>;\n}\n\nexport interface RunJobShopPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCoursePayloadTypeResolver<TParent = any> {\n  course?: CreateCoursePayloadToCourseResolver<TParent>;\n}\n\nexport interface CreateCoursePayloadToCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBeginCoursePayloadTypeResolver<TParent = any> {\n  beginCourse?: CreateBeginCoursePayloadToBeginCourseResolver<TParent>;\n}\n\nexport interface CreateBeginCoursePayloadToBeginCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBeginCourseTypeResolver<TParent = any> {\n  courseId?: BeginCourseToCourseIdResolver<TParent>;\n  startDate?: BeginCourseToStartDateResolver<TParent>;\n  limitDate?: BeginCourseToLimitDateResolver<TParent>;\n  endDate?: BeginCourseToEndDateResolver<TParent>;\n  name?: BeginCourseToNameResolver<TParent>;\n  price?: BeginCourseToPriceResolver<TParent>;\n  course?: BeginCourseToCourseResolver<TParent>;\n  id?: BeginCourseToIdResolver<TParent>;\n  createdAt?: BeginCourseToCreatedAtResolver<TParent>;\n  updatedAt?: BeginCourseToUpdatedAtResolver<TParent>;\n}\n\nexport interface BeginCourseToCourseIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeginCourseToStartDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeginCourseToLimitDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeginCourseToEndDateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeginCourseToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeginCourseToPriceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeginCourseToCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeginCourseToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeginCourseToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface BeginCourseToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCourseFormPayloadTypeResolver<TParent = any> {\n  courseForm?: CreateCourseFormPayloadToCourseFormResolver<TParent>;\n}\n\nexport interface CreateCourseFormPayloadToCourseFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICourseFormTypeResolver<TParent = any> {\n  courseId?: CourseFormToCourseIdResolver<TParent>;\n  formId?: CourseFormToFormIdResolver<TParent>;\n  position?: CourseFormToPositionResolver<TParent>;\n  course?: CourseFormToCourseResolver<TParent>;\n  id?: CourseFormToIdResolver<TParent>;\n  createdAt?: CourseFormToCreatedAtResolver<TParent>;\n  updatedAt?: CourseFormToUpdatedAtResolver<TParent>;\n}\n\nexport interface CourseFormToCourseIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseFormToFormIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseFormToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseFormToCourseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseFormToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseFormToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CourseFormToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateCoursePayloadTypeResolver<TParent = any> {\n  message?: UpdateCoursePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateCoursePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBeginCoursePayloadTypeResolver<TParent = any> {\n  message?: UpdateBeginCoursePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateBeginCoursePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateCourseFormPayloadTypeResolver<TParent = any> {\n  message?: UpdateCourseFormPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateCourseFormPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteCoursePayloadTypeResolver<TParent = any> {\n  message?: DeleteCoursePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteCoursePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteBeginCoursePayloadTypeResolver<TParent = any> {\n  message?: DeleteBeginCoursePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteBeginCoursePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteCourseFormPayloadTypeResolver<TParent = any> {\n  message?: DeleteCourseFormPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteCourseFormPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFixProductPayloadTypeResolver<TParent = any> {\n  message?: FixProductPayloadToMessageResolver<TParent>;\n}\n\nexport interface FixProductPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteCourseSchedulePayloadTypeResolver<TParent = any> {\n  message?: DeleteCourseSchedulePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteCourseSchedulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateCourseSchedulePayloadTypeResolver<TParent = any> {\n  message?: UpdateCourseSchedulePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateCourseSchedulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBranchOfficePayloadTypeResolver<TParent = any> {\n  branchOffice?: CreateBranchOfficePayloadToBranchOfficeResolver<TParent>;\n}\n\nexport interface CreateBranchOfficePayloadToBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateManagerPayloadTypeResolver<TParent = any> {\n  manager?: CreateManagerPayloadToManagerResolver<TParent>;\n}\n\nexport interface CreateManagerPayloadToManagerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProductPurchasePayloadTypeResolver<TParent = any> {\n  message?: CreateProductPurchasePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateProductPurchasePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePurchasePayloadTypeResolver<TParent = any> {\n  purchase?: CreatePurchasePayloadToPurchaseResolver<TParent>;\n}\n\nexport interface CreatePurchasePayloadToPurchaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateStorePayloadTypeResolver<TParent = any> {\n  store?: CreateStorePayloadToStoreResolver<TParent>;\n}\n\nexport interface CreateStorePayloadToStoreResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INewStoreTransferPayloadTypeResolver<TParent = any> {\n  storeTransfer?: NewStoreTransferPayloadToStoreTransferResolver<TParent>;\n}\n\nexport interface NewStoreTransferPayloadToStoreTransferResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProviderPayloadTypeResolver<TParent = any> {\n  provider?: CreateProviderPayloadToProviderResolver<TParent>;\n}\n\nexport interface CreateProviderPayloadToProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBranchOfficePayloadTypeResolver<TParent = any> {\n  message?: UpdateBranchOfficePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateBranchOfficePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateManagerPayloadTypeResolver<TParent = any> {\n  message?: UpdateManagerPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateManagerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePurchasePayloadTypeResolver<TParent = any> {\n  message?: UpdatePurchasePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdatePurchasePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateStorePayloadTypeResolver<TParent = any> {\n  message?: UpdateStorePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateStorePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteStorePayloadTypeResolver<TParent = any> {\n  message?: DeleteStorePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteStorePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteManagerPayloadTypeResolver<TParent = any> {\n  message?: DeleteManagerPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteManagerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProviderPayloadTypeResolver<TParent = any> {\n  message?: UpdateProviderPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateProviderPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProviderPayloadTypeResolver<TParent = any> {\n  message?: DeleteProviderPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteProviderPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePurchasePayloadTypeResolver<TParent = any> {\n  message?: DeletePurchasePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeletePurchasePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProductPurchasePayloadTypeResolver<TParent = any> {\n  message?: DeleteProductPurchasePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteProductPurchasePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteBranchOfficePayloadTypeResolver<TParent = any> {\n  message?: DeleteBranchOfficePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteBranchOfficePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAssociationServiceToProjectPayloadTypeResolver<TParent = any> {\n  projectMicroservice?: AssociationServiceToProjectPayloadToProjectMicroserviceResolver<TParent>;\n}\n\nexport interface AssociationServiceToProjectPayloadToProjectMicroserviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateArrayFunctionPayloadTypeResolver<TParent = any> {\n  service?: CreateArrayFunctionPayloadToServiceResolver<TParent>;\n}\n\nexport interface CreateArrayFunctionPayloadToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteArrayFunctionPayloadTypeResolver<TParent = any> {\n  service?: DeleteArrayFunctionPayloadToServiceResolver<TParent>;\n}\n\nexport interface DeleteArrayFunctionPayloadToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateServiceProjectPayloadTypeResolver<TParent = any> {\n  message?: UpdateServiceProjectPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateServiceProjectPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteServiceProjectPayloadTypeResolver<TParent = any> {\n  message?: DeleteServiceProjectPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteServiceProjectPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICancelEventPayloadTypeResolver<TParent = any> {\n  message?: CancelEventPayloadToMessageResolver<TParent>;\n}\n\nexport interface CancelEventPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateEventTypePayloadTypeResolver<TParent = any> {\n  message?: CreateEventTypePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateEventTypePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateSubEventTypePayloadTypeResolver<TParent = any> {\n  subEventType?: CreateSubEventTypePayloadToSubEventTypeResolver<TParent>;\n}\n\nexport interface CreateSubEventTypePayloadToSubEventTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteSubEventTypePayloadTypeResolver<TParent = any> {\n  message?: DeleteSubEventTypePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteSubEventTypePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateSubEventTypePayloadTypeResolver<TParent = any> {\n  message?: UpdateSubEventTypePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateSubEventTypePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddSubTypeToEventTypePayloadTypeResolver<TParent = any> {\n  message?: AddSubTypeToEventTypePayloadToMessageResolver<TParent>;\n}\n\nexport interface AddSubTypeToEventTypePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteEventTypePayloadTypeResolver<TParent = any> {\n  message?: DeleteEventTypePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteEventTypePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateEventTypePayloadTypeResolver<TParent = any> {\n  message?: UpdateEventTypePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateEventTypePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateEventPayloadTypeResolver<TParent = any> {\n  eventCalendar?: CreateEventPayloadToEventCalendarResolver<TParent>;\n}\n\nexport interface CreateEventPayloadToEventCalendarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateEventMemberPayloadTypeResolver<TParent = any> {\n  message?: CreateEventMemberPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateEventMemberPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateEventPayloadTypeResolver<TParent = any> {\n  eventCalendar?: UpdateEventPayloadToEventCalendarResolver<TParent>;\n}\n\nexport interface UpdateEventPayloadToEventCalendarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteEventPayloadTypeResolver<TParent = any> {\n  message?: DeleteEventPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteEventPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateEventSessionPayloadTypeResolver<TParent = any> {\n  eventSession?: CreateEventSessionPayloadToEventSessionResolver<TParent>;\n}\n\nexport interface CreateEventSessionPayloadToEventSessionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateEventSessionPayloadTypeResolver<TParent = any> {\n  eventSession?: UpdateEventSessionPayloadToEventSessionResolver<TParent>;\n}\n\nexport interface UpdateEventSessionPayloadToEventSessionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteEventSessionPayloadTypeResolver<TParent = any> {\n  message?: DeleteEventSessionPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteEventSessionPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateSchedulePayloadTypeResolver<TParent = any> {\n  message?: CreateSchedulePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateSchedulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAssociationMemberToConsultPayloadTypeResolver<TParent = any> {\n  message?: AssociationMemberToConsultPayloadToMessageResolver<TParent>;\n}\n\nexport interface AssociationMemberToConsultPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICancellationMemberToConsultPayloadTypeResolver<TParent = any> {\n  message?: CancellationMemberToConsultPayloadToMessageResolver<TParent>;\n}\n\nexport interface CancellationMemberToConsultPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IChangeStatusEventPayloadTypeResolver<TParent = any> {\n  message?: ChangeStatusEventPayloadToMessageResolver<TParent>;\n}\n\nexport interface ChangeStatusEventPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteSchedulePayloadTypeResolver<TParent = any> {\n  message?: DeleteSchedulePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteSchedulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteTurnPayloadTypeResolver<TParent = any> {\n  message?: DeleteTurnPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteTurnPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResourceQuotePayloadTypeResolver<TParent = any> {\n  resourceQuote?: ResourceQuotePayloadToResourceQuoteResolver<TParent>;\n}\n\nexport interface ResourceQuotePayloadToResourceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResourceQuoteDetailPayloadTypeResolver<TParent = any> {\n  resourceQuoteDetail?: ResourceQuoteDetailPayloadToResourceQuoteDetailResolver<TParent>;\n}\n\nexport interface ResourceQuoteDetailPayloadToResourceQuoteDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProposalPayloadTypeResolver<TParent = any> {\n  proposal?: ProposalPayloadToProposalResolver<TParent>;\n}\n\nexport interface ProposalPayloadToProposalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICollaboratorPayloadTypeResolver<TParent = any> {\n  collaborator?: CollaboratorPayloadToCollaboratorResolver<TParent>;\n}\n\nexport interface CollaboratorPayloadToCollaboratorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICollaboratorHoursPayloadTypeResolver<TParent = any> {\n  collaboratorHours?: CollaboratorHoursPayloadToCollaboratorHoursResolver<TParent>;\n}\n\nexport interface CollaboratorHoursPayloadToCollaboratorHoursResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHiringPayloadTypeResolver<TParent = any> {\n  hiring?: HiringPayloadToHiringResolver<TParent>;\n}\n\nexport interface HiringPayloadToHiringResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHiringServicePayloadTypeResolver<TParent = any> {\n  hiringService?: HiringServicePayloadToHiringServiceResolver<TParent>;\n}\n\nexport interface HiringServicePayloadToHiringServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IHiringTypePayloadTypeResolver<TParent = any> {\n  hiringType?: HiringTypePayloadToHiringTypeResolver<TParent>;\n}\n\nexport interface HiringTypePayloadToHiringTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IShiftPayloadTypeResolver<TParent = any> {\n  shift?: ShiftPayloadToShiftResolver<TParent>;\n}\n\nexport interface ShiftPayloadToShiftResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBusinessTypePayloadTypeResolver<TParent = any> {\n  businessType?: CreateBusinessTypePayloadToBusinessTypeResolver<TParent>;\n}\n\nexport interface CreateBusinessTypePayloadToBusinessTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBusinessTypePayloadTypeResolver<TParent = any> {\n  message?: UpdateBusinessTypePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateBusinessTypePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteBusinessPayloadTypeResolver<TParent = any> {\n  message?: DeleteBusinessPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteBusinessPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBusinessRulePayloadTypeResolver<TParent = any> {\n  businessRule?: CreateBusinessRulePayloadToBusinessRuleResolver<TParent>;\n}\n\nexport interface CreateBusinessRulePayloadToBusinessRuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBusinessRulePayloadTypeResolver<TParent = any> {\n  message?: UpdateBusinessRulePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateBusinessRulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteBusinessRulePayloadTypeResolver<TParent = any> {\n  message?: DeleteBusinessRulePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteBusinessRulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteCouponFromTemplatePayloadTypeResolver<TParent = any> {\n  message?: DeleteCouponFromTemplatePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteCouponFromTemplatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddCouponsToTemplatePayloadTypeResolver<TParent = any> {\n  message?: AddCouponsToTemplatePayloadToMessageResolver<TParent>;\n}\n\nexport interface AddCouponsToTemplatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateUpdateConfigurationTemplatePayloadTypeResolver<TParent = any> {\n  configurationTemplate?: CreateUpdateConfigurationTemplatePayloadToConfigurationTemplateResolver<TParent>;\n}\n\nexport interface CreateUpdateConfigurationTemplatePayloadToConfigurationTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendTemplatePayloadTypeResolver<TParent = any> {\n  template?: SendTemplatePayloadToTemplateResolver<TParent>;\n}\n\nexport interface SendTemplatePayloadToTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPutFirebaseDevicePayloadTypeResolver<TParent = any> {\n  message?: PutFirebaseDevicePayloadToMessageResolver<TParent>;\n}\n\nexport interface PutFirebaseDevicePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCouponPayloadTypeResolver<TParent = any> {\n  coupon?: CreateCouponPayloadToCouponResolver<TParent>;\n}\n\nexport interface CreateCouponPayloadToCouponResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateCouponPayloadTypeResolver<TParent = any> {\n  message?: UpdateCouponPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateCouponPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteCouponPayloadTypeResolver<TParent = any> {\n  message?: DeleteCouponPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteCouponPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateTemplatePayloadTypeResolver<TParent = any> {\n  template?: CreateTemplatePayloadToTemplateResolver<TParent>;\n}\n\nexport interface CreateTemplatePayloadToTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateTemplatePayloadTypeResolver<TParent = any> {\n  message?: UpdateTemplatePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateTemplatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteTemplatePayloadTypeResolver<TParent = any> {\n  message?: DeleteTemplatePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteTemplatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateErrorPagePayloadTypeResolver<TParent = any> {\n  errorPage?: CreateErrorPagePayloadToErrorPageResolver<TParent>;\n}\n\nexport interface CreateErrorPagePayloadToErrorPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateErrorPagePayloadTypeResolver<TParent = any> {\n  message?: UpdateErrorPagePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateErrorPagePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteErrorPagePayloadTypeResolver<TParent = any> {\n  message?: DeleteErrorPagePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteErrorPagePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateErrorPageValidationPayloadTypeResolver<TParent = any> {\n  errorPageValidation?: CreateErrorPageValidationPayloadToErrorPageValidationResolver<TParent>;\n}\n\nexport interface CreateErrorPageValidationPayloadToErrorPageValidationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateErrorPageValidationPayloadTypeResolver<TParent = any> {\n  message?: UpdateErrorPageValidationPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateErrorPageValidationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteErrorPageValidationPayloadTypeResolver<TParent = any> {\n  message?: DeleteErrorPageValidationPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteErrorPageValidationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBusinessPayloadTypeResolver<TParent = any> {\n  business?: CreateBusinessPayloadToBusinessResolver<TParent>;\n}\n\nexport interface CreateBusinessPayloadToBusinessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBusinessPayloadTypeResolver<TParent = any> {\n  business?: UpdateBusinessPayloadToBusinessResolver<TParent>;\n}\n\nexport interface UpdateBusinessPayloadToBusinessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAssociateBusinessRulesPayloadTypeResolver<TParent = any> {\n  business?: AssociateBusinessRulesPayloadToBusinessResolver<TParent>;\n}\n\nexport interface AssociateBusinessRulesPayloadToBusinessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAssociateProjectPlanSubscriptionPayloadTypeResolver<TParent = any> {\n  projectPlanSubscription?: AssociateProjectPlanSubscriptionPayloadToProjectPlanSubscriptionResolver<TParent>;\n}\n\nexport interface AssociateProjectPlanSubscriptionPayloadToProjectPlanSubscriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProjectPlanPayloadTypeResolver<TParent = any> {\n  projectPlan?: CreateProjectPlanPayloadToProjectPlanResolver<TParent>;\n}\n\nexport interface CreateProjectPlanPayloadToProjectPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateProjectPlanPayloadTypeResolver<TParent = any> {\n  projectPlan?: UpdateProjectPlanPayloadToProjectPlanResolver<TParent>;\n}\n\nexport interface UpdateProjectPlanPayloadToProjectPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProjectPlanPayloadTypeResolver<TParent = any> {\n  message?: DeleteProjectPlanPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteProjectPlanPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteProjectPlanSubscriptionPayloadTypeResolver<TParent = any> {\n  message?: DeleteProjectPlanSubscriptionPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteProjectPlanSubscriptionPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPutConfigPayloadTypeResolver<TParent = any> {\n  configuration?: PutConfigPayloadToConfigurationResolver<TParent>;\n}\n\nexport interface PutConfigPayloadToConfigurationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteConfigPayloadTypeResolver<TParent = any> {\n  configuration?: DeleteConfigPayloadToConfigurationResolver<TParent>;\n}\n\nexport interface DeleteConfigPayloadToConfigurationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateOrderPagesPayloadTypeResolver<TParent = any> {\n  items?: UpdateOrderPagesPayloadToItemsResolver<TParent>;\n}\n\nexport interface UpdateOrderPagesPayloadToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPagesDtoTypeResolver<TParent = any> {\n  pageId?: PagesDtoToPageIdResolver<TParent>;\n  position?: PagesDtoToPositionResolver<TParent>;\n}\n\nexport interface PagesDtoToPageIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PagesDtoToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBatchWewbsiteComponentPayloadTypeResolver<TParent = any> {\n  items?: UpdateBatchWewbsiteComponentPayloadToItemsResolver<TParent>;\n}\n\nexport interface UpdateBatchWewbsiteComponentPayloadToItemsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IComponentDtoTypeResolver<TParent = any> {\n  webSitePageComponentId?: ComponentDtoToWebSitePageComponentIdResolver<TParent>;\n  position?: ComponentDtoToPositionResolver<TParent>;\n}\n\nexport interface ComponentDtoToWebSitePageComponentIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ComponentDtoToPositionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateComponentPayloadTypeResolver<TParent = any> {\n  message?: CreateComponentPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateComponentPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateWebsiteComponentPayloadTypeResolver<TParent = any> {\n  message?: CreateWebsiteComponentPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateWebsiteComponentPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateWebsitePagePayloadTypeResolver<TParent = any> {\n  message?: CreateWebsitePagePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateWebsitePagePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateWebsiteSeoPayloadTypeResolver<TParent = any> {\n  message?: CreateWebsiteSeoPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateWebsiteSeoPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateComponentPayloadTypeResolver<TParent = any> {\n  message?: UpdateComponentPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateComponentPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateWebsiteComponentPayloadTypeResolver<TParent = any> {\n  message?: UpdateWebsiteComponentPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateWebsiteComponentPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateWebsitePagePayloadTypeResolver<TParent = any> {\n  message?: UpdateWebsitePagePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateWebsitePagePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateWebsiteSeoPayloadTypeResolver<TParent = any> {\n  message?: UpdateWebsiteSeoPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateWebsiteSeoPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteComponentPayloadTypeResolver<TParent = any> {\n  message?: DeleteComponentPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteComponentPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteWebsiteComponentPayloadTypeResolver<TParent = any> {\n  message?: DeleteWebsiteComponentPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteWebsiteComponentPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteWebsitePagePayloadTypeResolver<TParent = any> {\n  message?: DeleteWebsitePagePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteWebsitePagePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteWebsiteSeoPayloadTypeResolver<TParent = any> {\n  message?: DeleteWebsiteSeoPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteWebsiteSeoPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentCategoryPayloadTypeResolver<TParent = any> {\n  documentCategory?: DocumentCategoryPayloadToDocumentCategoryResolver<TParent>;\n}\n\nexport interface DocumentCategoryPayloadToDocumentCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentCategoryDetailPayloadTypeResolver<TParent = any> {\n  document?: DocumentCategoryDetailPayloadToDocumentResolver<TParent>;\n}\n\nexport interface DocumentCategoryDetailPayloadToDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentPayloadTypeResolver<TParent = any> {\n  document?: DocumentPayloadToDocumentResolver<TParent>;\n}\n\nexport interface DocumentPayloadToDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentTemplatePayloadTypeResolver<TParent = any> {\n  document?: DocumentTemplatePayloadToDocumentResolver<TParent>;\n}\n\nexport interface DocumentTemplatePayloadToDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ITemplatePagePayloadTypeResolver<TParent = any> {\n  templatePage?: TemplatePagePayloadToTemplatePageResolver<TParent>;\n}\n\nexport interface TemplatePagePayloadToTemplatePageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentTagPayloadTypeResolver<TParent = any> {\n  documentTag?: DocumentTagPayloadToDocumentTagResolver<TParent>;\n}\n\nexport interface DocumentTagPayloadToDocumentTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentScanPayloadTypeResolver<TParent = any> {\n  documentScan?: DocumentScanPayloadToDocumentScanResolver<TParent>;\n}\n\nexport interface DocumentScanPayloadToDocumentScanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDocumentReadPayloadTypeResolver<TParent = any> {\n  documentRead?: DocumentReadPayloadToDocumentReadResolver<TParent>;\n}\n\nexport interface DocumentReadPayloadToDocumentReadResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateVideoCallPayloadTypeResolver<TParent = any> {\n  videoCall?: CreateVideoCallPayloadToVideoCallResolver<TParent>;\n  roomAccessToken?: CreateVideoCallPayloadToRoomAccessTokenResolver<TParent>;\n}\n\nexport interface CreateVideoCallPayloadToVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CreateVideoCallPayloadToRoomAccessTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRoomAccessTokenTypeResolver<TParent = any> {\n  createdAt?: RoomAccessTokenToCreatedAtResolver<TParent>;\n  roomName?: RoomAccessTokenToRoomNameResolver<TParent>;\n  token?: RoomAccessTokenToTokenResolver<TParent>;\n  participantIdentity?: RoomAccessTokenToParticipantIdentityResolver<TParent>;\n}\n\nexport interface RoomAccessTokenToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoomAccessTokenToRoomNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoomAccessTokenToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RoomAccessTokenToParticipantIdentityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateVideoCallPayloadTypeResolver<TParent = any> {\n  videoCall?: UpdateVideoCallPayloadToVideoCallResolver<TParent>;\n}\n\nexport interface UpdateVideoCallPayloadToVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteVideoCallPayloadTypeResolver<TParent = any> {\n  videoCall?: DeleteVideoCallPayloadToVideoCallResolver<TParent>;\n}\n\nexport interface DeleteVideoCallPayloadToVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateVideoRoomPayloadTypeResolver<TParent = any> {\n  videoCall?: CreateVideoRoomPayloadToVideoCallResolver<TParent>;\n  roomAccessToken?: CreateVideoRoomPayloadToRoomAccessTokenResolver<TParent>;\n}\n\nexport interface CreateVideoRoomPayloadToVideoCallResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CreateVideoRoomPayloadToRoomAccessTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendNotificationUsersPayloadTypeResolver<TParent = any> {\n  message?: SendNotificationUsersPayloadToMessageResolver<TParent>;\n}\n\nexport interface SendNotificationUsersPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendEmailDownloadPayloadTypeResolver<TParent = any> {\n  message?: SendEmailDownloadPayloadToMessageResolver<TParent>;\n}\n\nexport interface SendEmailDownloadPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendEmailNotificationPayloadTypeResolver<TParent = any> {\n  message?: SendEmailNotificationPayloadToMessageResolver<TParent>;\n}\n\nexport interface SendEmailNotificationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRecordingPathTypeResolver<TParent = any> {\n  url?: RecordingPathToUrlResolver<TParent>;\n  signedUrl?: RecordingPathToSignedUrlResolver<TParent>;\n  size?: RecordingPathToSizeResolver<TParent>;\n  name?: RecordingPathToNameResolver<TParent>;\n}\n\nexport interface RecordingPathToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecordingPathToSignedUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecordingPathToSizeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface RecordingPathToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateUpdateContactEmailPayloadTypeResolver<TParent = any> {\n  contactEmail?: CreateUpdateContactEmailPayloadToContactEmailResolver<TParent>;\n}\n\nexport interface CreateUpdateContactEmailPayloadToContactEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendEmailPayloadTypeResolver<TParent = any> {\n  responseEmail?: SendEmailPayloadToResponseEmailResolver<TParent>;\n}\n\nexport interface SendEmailPayloadToResponseEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResponseEmailTypeResolver<TParent = any> {\n  message?: ResponseEmailToMessageResolver<TParent>;\n}\n\nexport interface ResponseEmailToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteContactEmailPayloadTypeResolver<TParent = any> {\n  message?: DeleteContactEmailPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteContactEmailPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendMailBotPayloadTypeResolver<TParent = any> {\n  responseEmail?: SendMailBotPayloadToResponseEmailResolver<TParent>;\n}\n\nexport interface SendMailBotPayloadToResponseEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceAreaPayloadTypeResolver<TParent = any> {\n  serviceArea?: ServiceAreaPayloadToServiceAreaResolver<TParent>;\n}\n\nexport interface ServiceAreaPayloadToServiceAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAreaPayloadTypeResolver<TParent = any> {\n  area?: AreaPayloadToAreaResolver<TParent>;\n}\n\nexport interface AreaPayloadToAreaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceMemberPayloadTypeResolver<TParent = any> {\n  serviceMember?: ServiceMemberPayloadToServiceMemberResolver<TParent>;\n}\n\nexport interface ServiceMemberPayloadToServiceMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IServiceQuizPayloadTypeResolver<TParent = any> {\n  serviceQuiz?: ServiceQuizPayloadToServiceQuizResolver<TParent>;\n}\n\nexport interface ServiceQuizPayloadToServiceQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizPayloadTypeResolver<TParent = any> {\n  quiz?: QuizPayloadToQuizResolver<TParent>;\n}\n\nexport interface QuizPayloadToQuizResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizSectionPayloadTypeResolver<TParent = any> {\n  quizSection?: QuizSectionPayloadToQuizSectionResolver<TParent>;\n}\n\nexport interface QuizSectionPayloadToQuizSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionPayloadTypeResolver<TParent = any> {\n  quizQuestion?: QuizQuestionPayloadToQuizQuestionResolver<TParent>;\n}\n\nexport interface QuizQuestionPayloadToQuizQuestionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionNestedPayloadTypeResolver<TParent = any> {\n  quizQuestionNested?: QuizQuestionNestedPayloadToQuizQuestionNestedResolver<TParent>;\n}\n\nexport interface QuizQuestionNestedPayloadToQuizQuestionNestedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionAnswerPayloadTypeResolver<TParent = any> {\n  questionAnswer?: QuizQuestionAnswerPayloadToQuestionAnswerResolver<TParent>;\n}\n\nexport interface QuizQuestionAnswerPayloadToQuestionAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizAnswerPayloadTypeResolver<TParent = any> {\n  quizAnswer?: QuizAnswerPayloadToQuizAnswerResolver<TParent>;\n}\n\nexport interface QuizAnswerPayloadToQuizAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberPayloadTypeResolver<TParent = any> {\n  quizMember?: QuizMemberPayloadToQuizMemberResolver<TParent>;\n}\n\nexport interface QuizMemberPayloadToQuizMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizQuestionMemberPayloadTypeResolver<TParent = any> {\n  quizQuestionMember?: QuizQuestionMemberPayloadToQuizQuestionMemberResolver<TParent>;\n}\n\nexport interface QuizQuestionMemberPayloadToQuizQuestionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberAnswerPayloadTypeResolver<TParent = any> {\n  memberAnswer?: QuizMemberAnswerPayloadToMemberAnswerResolver<TParent>;\n}\n\nexport interface QuizMemberAnswerPayloadToMemberAnswerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuizMemberDescriptionPayloadTypeResolver<TParent = any> {\n  memberDescription?: QuizMemberDescriptionPayloadToMemberDescriptionResolver<TParent>;\n}\n\nexport interface QuizMemberDescriptionPayloadToMemberDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IKeyPayloadTypeResolver<TParent = any> {\n  key?: KeyPayloadToKeyResolver<TParent>;\n}\n\nexport interface KeyPayloadToKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IKeyTypeResolver<TParent = any> {\n  user?: KeyToUserResolver<TParent>;\n  device?: KeyToDeviceResolver<TParent>;\n  origin?: KeyToOriginResolver<TParent>;\n  idAplication?: KeyToIdAplicationResolver<TParent>;\n  projectId?: KeyToProjectIdResolver<TParent>;\n  id?: KeyToIdResolver<TParent>;\n  createdAt?: KeyToCreatedAtResolver<TParent>;\n  updatedAt?: KeyToUpdatedAtResolver<TParent>;\n}\n\nexport interface KeyToUserResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface KeyToDeviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface KeyToOriginResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface KeyToIdAplicationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface KeyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface KeyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface KeyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface KeyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuotationPayloadTypeResolver<TParent = any> {\n  idPeticionCotizacion?: QuotationPayloadToIdPeticionCotizacionResolver<TParent>;\n  error?: QuotationPayloadToErrorResolver<TParent>;\n}\n\nexport interface QuotationPayloadToIdPeticionCotizacionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationPayloadToErrorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILoginPayloadTypeResolver<TParent = any> {\n  name?: LoginPayloadToNameResolver<TParent>;\n  idCredential?: LoginPayloadToIdCredentialResolver<TParent>;\n  token?: LoginPayloadToTokenResolver<TParent>;\n  aplicaciones?: LoginPayloadToAplicacionesResolver<TParent>;\n  error?: LoginPayloadToErrorResolver<TParent>;\n}\n\nexport interface LoginPayloadToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LoginPayloadToIdCredentialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LoginPayloadToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LoginPayloadToAplicacionesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface LoginPayloadToErrorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IErrorDataTypeResolver<TParent = any> {\n  numero?: ErrorDataToNumeroResolver<TParent>;\n  descripcion?: ErrorDataToDescripcionResolver<TParent>;\n}\n\nexport interface ErrorDataToNumeroResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ErrorDataToDescripcionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicyPayloadTypeResolver<TParent = any> {\n  error?: PolicyPayloadToErrorResolver<TParent>;\n  poliza?: PolicyPayloadToPolizaResolver<TParent>;\n  condiciones?: PolicyPayloadToCondicionesResolver<TParent>;\n  siniestro?: PolicyPayloadToSiniestroResolver<TParent>;\n  polizaGR?: PolicyPayloadToPolizaGRResolver<TParent>;\n}\n\nexport interface PolicyPayloadToErrorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPayloadToPolizaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPayloadToCondicionesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPayloadToSiniestroResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface PolicyPayloadToPolizaGRResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuotationDownloadPDFPayloadTypeResolver<TParent = any> {\n  error?: QuotationDownloadPDFPayloadToErrorResolver<TParent>;\n  pdf64?: QuotationDownloadPDFPayloadToPdf64Resolver<TParent>;\n}\n\nexport interface QuotationDownloadPDFPayloadToErrorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationDownloadPDFPayloadToPdf64Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPdf64DataTypeResolver<TParent = any> {\n  amplia?: Pdf64DataToAmpliaResolver<TParent>;\n  ampliaPlus?: Pdf64DataToAmpliaPlusResolver<TParent>;\n  limitada?: Pdf64DataToLimitadaResolver<TParent>;\n}\n\nexport interface Pdf64DataToAmpliaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Pdf64DataToAmpliaPlusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Pdf64DataToLimitadaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IQuotationEmitPayloadTypeResolver<TParent = any> {\n  numeroPoliza?: QuotationEmitPayloadToNumeroPolizaResolver<TParent>;\n  error?: QuotationEmitPayloadToErrorResolver<TParent>;\n}\n\nexport interface QuotationEmitPayloadToNumeroPolizaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface QuotationEmitPayloadToErrorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendQuotationPayloadTypeResolver<TParent = any> {\n  error?: SendQuotationPayloadToErrorResolver<TParent>;\n}\n\nexport interface SendQuotationPayloadToErrorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePaymentMethodPayloadTypeResolver<TParent = any> {\n  paymentMethod?: CreatePaymentMethodPayloadToPaymentMethodResolver<TParent>;\n}\n\nexport interface CreatePaymentMethodPayloadToPaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISetupIntentStripePayloadTypeResolver<TParent = any> {\n  setupIntentClientSecret?: SetupIntentStripePayloadToSetupIntentClientSecretResolver<TParent>;\n  customerId?: SetupIntentStripePayloadToCustomerIdResolver<TParent>;\n  publicKey?: SetupIntentStripePayloadToPublicKeyResolver<TParent>;\n}\n\nexport interface SetupIntentStripePayloadToSetupIntentClientSecretResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SetupIntentStripePayloadToCustomerIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface SetupIntentStripePayloadToPublicKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISetDefaultPaymentMethodOnCustomerPayloadTypeResolver<TParent = any> {\n  message?: SetDefaultPaymentMethodOnCustomerPayloadToMessageResolver<TParent>;\n}\n\nexport interface SetDefaultPaymentMethodOnCustomerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePriceStripePayloadTypeResolver<TParent = any> {\n  message?: UpdatePriceStripePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdatePriceStripePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INewPaymentsAnyTypePayloadTypeResolver<TParent = any> {\n  message?: NewPaymentsAnyTypePayloadToMessageResolver<TParent>;\n}\n\nexport interface NewPaymentsAnyTypePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateProductStripePayloadTypeResolver<TParent = any> {\n  productId?: CreateProductStripePayloadToProductIdResolver<TParent>;\n}\n\nexport interface CreateProductStripePayloadToProductIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPlanPayloadTypeResolver<TParent = any> {\n  plan?: PlanPayloadToPlanResolver<TParent>;\n}\n\nexport interface PlanPayloadToPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateStripePricePayloadTypeResolver<TParent = any> {\n  plan?: CreateStripePricePayloadToPlanResolver<TParent>;\n}\n\nexport interface CreateStripePricePayloadToPlanResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMethodPaymentPayloadTypeResolver<TParent = any> {\n  methodPayment?: CreateMethodPaymentPayloadToMethodPaymentResolver<TParent>;\n}\n\nexport interface CreateMethodPaymentPayloadToMethodPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMethodPaymentPayloadTypeResolver<TParent = any> {\n  methodPayment?: UpdateMethodPaymentPayloadToMethodPaymentResolver<TParent>;\n}\n\nexport interface UpdateMethodPaymentPayloadToMethodPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMethodPaymentPayloadTypeResolver<TParent = any> {\n  methodPayment?: DeleteMethodPaymentPayloadToMethodPaymentResolver<TParent>;\n}\n\nexport interface DeleteMethodPaymentPayloadToMethodPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePaymentStripePayloadTypeResolver<TParent = any> {\n  transaction?: CreatePaymentStripePayloadToTransactionResolver<TParent>;\n}\n\nexport interface CreatePaymentStripePayloadToTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateSuscriptionStripePayloadTypeResolver<TParent = any> {\n  userKey?: CreateSuscriptionStripePayloadToUserKeyResolver<TParent>;\n  trans?: CreateSuscriptionStripePayloadToTransResolver<TParent>;\n}\n\nexport interface CreateSuscriptionStripePayloadToUserKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CreateSuscriptionStripePayloadToTransResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateSuscriptionExternalStripePayloadTypeResolver<TParent = any> {\n  userKey?: CreateSuscriptionExternalStripePayloadToUserKeyResolver<TParent>;\n  trans?: CreateSuscriptionExternalStripePayloadToTransResolver<TParent>;\n}\n\nexport interface CreateSuscriptionExternalStripePayloadToUserKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CreateSuscriptionExternalStripePayloadToTransResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteSuscriptionExternalStripePayloadTypeResolver<TParent = any> {\n  userKey?: DeleteSuscriptionExternalStripePayloadToUserKeyResolver<TParent>;\n}\n\nexport interface DeleteSuscriptionExternalStripePayloadToUserKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateStripeAccountPayloadTypeResolver<TParent = any> {\n  userKey?: CreateStripeAccountPayloadToUserKeyResolver<TParent>;\n  url?: CreateStripeAccountPayloadToUrlResolver<TParent>;\n}\n\nexport interface CreateStripeAccountPayloadToUserKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface CreateStripeAccountPayloadToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePaymentPayloadTypeResolver<TParent = any> {\n  transaction?: DeletePaymentPayloadToTransactionResolver<TParent>;\n}\n\nexport interface DeletePaymentPayloadToTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePaymentPayloadTypeResolver<TParent = any> {\n  transaction?: UpdatePaymentPayloadToTransactionResolver<TParent>;\n}\n\nexport interface UpdatePaymentPayloadToTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateInvoicePayloadTypeResolver<TParent = any> {\n  invoice?: CreateInvoicePayloadToInvoiceResolver<TParent>;\n}\n\nexport interface CreateInvoicePayloadToInvoiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateStatusInvoicePayloadTypeResolver<TParent = any> {\n  invoice?: UpdateStatusInvoicePayloadToInvoiceResolver<TParent>;\n}\n\nexport interface UpdateStatusInvoicePayloadToInvoiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePaymentMethodPayloadTypeResolver<TParent = any> {\n  message?: DeletePaymentMethodPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeletePaymentMethodPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBatchInsurerCoveragesPayloadTypeResolver<TParent = any> {\n  message?: CreateBatchInsurerCoveragesPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateBatchInsurerCoveragesPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateQuotePayloadTypeResolver<TParent = any> {\n  quoteId?: CreateQuotePayloadToQuoteIdResolver<TParent>;\n}\n\nexport interface CreateQuotePayloadToQuoteIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateNewOfficesPayloadTypeResolver<TParent = any> {\n  message?: CreateNewOfficesPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateNewOfficesPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateNewProfilesPayloadTypeResolver<TParent = any> {\n  message?: CreateNewProfilesPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateNewProfilesPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateInsurerPayloadTypeResolver<TParent = any> {\n  message?: CreateInsurerPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateInsurerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateOfficePayloadTypeResolver<TParent = any> {\n  message?: CreateOfficePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateOfficePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateRegistrationPayloadTypeResolver<TParent = any> {\n  message?: CreateRegistrationPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateRegistrationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateQuatorProfilePayloadTypeResolver<TParent = any> {\n  message?: CreateQuatorProfilePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateQuatorProfilePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteInsurerPayloadTypeResolver<TParent = any> {\n  message?: DeleteInsurerPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteInsurerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteOfficePayloadTypeResolver<TParent = any> {\n  message?: DeleteOfficePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteOfficePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteQuoterProfilePayloadTypeResolver<TParent = any> {\n  message?: DeleteQuoterProfilePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteQuoterProfilePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateInsurerPayloadTypeResolver<TParent = any> {\n  message?: UpdateInsurerPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateInsurerPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateOfficePayloadTypeResolver<TParent = any> {\n  message?: UpdateOfficePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateOfficePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateQuoterProfilePayloadTypeResolver<TParent = any> {\n  message?: UpdateQuoterProfilePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateQuoterProfilePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCatalogPayloadTypeResolver<TParent = any> {\n  message?: CreateCatalogPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateCatalogPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPopulateCredentialsPayloadTypeResolver<TParent = any> {\n  message?: PopulateCredentialsPayloadToMessageResolver<TParent>;\n}\n\nexport interface PopulateCredentialsPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPopulateServicesPayloadTypeResolver<TParent = any> {\n  message?: PopulateServicesPayloadToMessageResolver<TParent>;\n}\n\nexport interface PopulateServicesPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEmissionCarPayloadTypeResolver<TParent = any> {\n  message?: EmissionCarPayloadToMessageResolver<TParent>;\n}\n\nexport interface EmissionCarPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPrintEmissionPayloadTypeResolver<TParent = any> {\n  message?: PrintEmissionPayloadToMessageResolver<TParent>;\n}\n\nexport interface PrintEmissionPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateQuoteCoveragePayloadTypeResolver<TParent = any> {\n  quoteCoverage?: CreateQuoteCoveragePayloadToQuoteCoverageResolver<TParent>;\n}\n\nexport interface CreateQuoteCoveragePayloadToQuoteCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateQuoteCoveragePayloadTypeResolver<TParent = any> {\n  message?: UpdateQuoteCoveragePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateQuoteCoveragePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteQuoteCoveragePayloadTypeResolver<TParent = any> {\n  message?: DeleteQuoteCoveragePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteQuoteCoveragePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAssociationWithQuoterProfilePayloadTypeResolver<TParent = any> {\n  message?: AssociationWithQuoterProfilePayloadToMessageResolver<TParent>;\n}\n\nexport interface AssociationWithQuoterProfilePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateQuotePayloadTypeResolver<TParent = any> {\n  message?: UpdateQuotePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateQuotePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateInsurerCredentialPayloadTypeResolver<TParent = any> {\n  message?: CreateInsurerCredentialPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateInsurerCredentialPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateInsurerCredentialPayloadTypeResolver<TParent = any> {\n  message?: UpdateInsurerCredentialPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateInsurerCredentialPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAssociationRelationCarPayloadTypeResolver<TParent = any> {\n  message?: AssociationRelationCarPayloadToMessageResolver<TParent>;\n}\n\nexport interface AssociationRelationCarPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCoverageProjectPayloadTypeResolver<TParent = any> {\n  message?: CreateCoverageProjectPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateCoverageProjectPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateCoverageProjectPayloadTypeResolver<TParent = any> {\n  message?: UpdateCoverageProjectPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateCoverageProjectPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBatchCoverageProjectPayloadTypeResolver<TParent = any> {\n  message?: UpdateBatchCoverageProjectPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateBatchCoverageProjectPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateApiServicePayloadTypeResolver<TParent = any> {\n  apiService?: CreateApiServicePayloadToApiServiceResolver<TParent>;\n}\n\nexport interface CreateApiServicePayloadToApiServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateApiServicePayloadTypeResolver<TParent = any> {\n  message?: UpdateApiServicePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateApiServicePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicCustomMetaPayloadTypeResolver<TParent = any> {\n  dynamicCustomMeta?: DynamicCustomMetaPayloadToDynamicCustomMetaResolver<TParent>;\n}\n\nexport interface DynamicCustomMetaPayloadToDynamicCustomMetaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicCustomValuePayloadTypeResolver<TParent = any> {\n  dynamicCustomValue?: DynamicCustomValuePayloadToDynamicCustomValueResolver<TParent>;\n}\n\nexport interface DynamicCustomValuePayloadToDynamicCustomValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicPagePayloadTypeResolver<TParent = any> {\n  dynamicPage?: DynamicPagePayloadToDynamicPageResolver<TParent>;\n}\n\nexport interface DynamicPagePayloadToDynamicPageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicBlockPayloadTypeResolver<TParent = any> {\n  dynamicBlock?: DynamicBlockPayloadToDynamicBlockResolver<TParent>;\n}\n\nexport interface DynamicBlockPayloadToDynamicBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicSectionPayloadTypeResolver<TParent = any> {\n  dynamicSection?: DynamicSectionPayloadToDynamicSectionResolver<TParent>;\n}\n\nexport interface DynamicSectionPayloadToDynamicSectionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicSectionBlockPayloadTypeResolver<TParent = any> {\n  dynamicSectionBlock?: DynamicSectionBlockPayloadToDynamicSectionBlockResolver<TParent>;\n}\n\nexport interface DynamicSectionBlockPayloadToDynamicSectionBlockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDynamicTabPayloadTypeResolver<TParent = any> {\n  dynamicTab?: DynamicTabPayloadToDynamicTabResolver<TParent>;\n}\n\nexport interface DynamicTabPayloadToDynamicTabResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateChargePayloadTypeResolver<TParent = any> {\n  message?: CreateChargePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateChargePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateClinicHistoryPayloadTypeResolver<TParent = any> {\n  message?: CreateClinicHistoryPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateClinicHistoryPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateClinicHistoryMedicalBackgroundDetailPayloadTypeResolver<TParent = any> {\n  message?: CreateClinicHistoryMedicalBackgroundDetailPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateClinicHistoryMedicalBackgroundDetailPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateEventDetailPayloadTypeResolver<TParent = any> {\n  message?: CreateEventDetailPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateEventDetailPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateFisicExamPayloadTypeResolver<TParent = any> {\n  message?: CreateFisicExamPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateFisicExamPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateFormatPayloadTypeResolver<TParent = any> {\n  format?: CreateFormatPayloadToFormatResolver<TParent>;\n}\n\nexport interface CreateFormatPayloadToFormatResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMedicalBackgroundDetailPayloadTypeResolver<TParent = any> {\n  message?: CreateMedicalBackgroundDetailPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateMedicalBackgroundDetailPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMedicalBackgroundPayloadTypeResolver<TParent = any> {\n  message?: CreateMedicalBackgroundPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateMedicalBackgroundPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMedicalConfigPayloadTypeResolver<TParent = any> {\n  message?: CreateMedicalConfigPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateMedicalConfigPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMedicalServicePaylodTypeResolver<TParent = any> {\n  message?: CreateMedicalServicePaylodToMessageResolver<TParent>;\n}\n\nexport interface CreateMedicalServicePaylodToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMedicinePayloadTypeResolver<TParent = any> {\n  message?: CreateMedicinePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateMedicinePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateVaccinePayloadTypeResolver<TParent = any> {\n  message?: CreateVaccinePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateVaccinePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateVitalSignsPayloadTypeResolver<TParent = any> {\n  message?: CreateVitalSignsPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateVitalSignsPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMedicRecipePayloadTypeResolver<TParent = any> {\n  message?: CreateMedicRecipePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateMedicRecipePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateRecipeConfigPaylodTypeResolver<TParent = any> {\n  message?: CreateRecipeConfigPaylodToMessageResolver<TParent>;\n}\n\nexport interface CreateRecipeConfigPaylodToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateRegistSesionPayloadTypeResolver<TParent = any> {\n  message?: CreateRegistSesionPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateRegistSesionPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePacientNotePayloadTypeResolver<TParent = any> {\n  message?: CreatePacientNotePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreatePacientNotePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateDiagnosticPayloadTypeResolver<TParent = any> {\n  message?: CreateDiagnosticPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateDiagnosticPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateConsultNotePayloadTypeResolver<TParent = any> {\n  message?: CreateConsultNotePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateConsultNotePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMedicalBackgroundSetPayloadTypeResolver<TParent = any> {\n  id?: CreateMedicalBackgroundSetPayloadToIdResolver<TParent>;\n}\n\nexport interface CreateMedicalBackgroundSetPayloadToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePacientMedicalBackgroundPaylodTypeResolver<TParent = any> {\n  message?: CreatePacientMedicalBackgroundPaylodToMessageResolver<TParent>;\n}\n\nexport interface CreatePacientMedicalBackgroundPaylodToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePatientVitalSignsResponsePayloadTypeResolver<TParent = any> {\n  message?: CreatePatientVitalSignsResponsePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreatePatientVitalSignsResponsePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateChargePayloadTypeResolver<TParent = any> {\n  message?: UpdateChargePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateChargePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateClinicHistoryPayloadsTypeResolver<TParent = any> {\n  message?: UpdateClinicHistoryPayloadsToMessageResolver<TParent>;\n}\n\nexport interface UpdateClinicHistoryPayloadsToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateClinicHistoryMedicalBackgroundDetailPayloadTypeResolver<TParent = any> {\n  message?: UpdateClinicHistoryMedicalBackgroundDetailPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateClinicHistoryMedicalBackgroundDetailPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateEventDetailtPayloadTypeResolver<TParent = any> {\n  message?: UpdateEventDetailtPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateEventDetailtPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateFisicExamPayloadTypeResolver<TParent = any> {\n  message?: UpdateFisicExamPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateFisicExamPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateFormatPayloadTypeResolver<TParent = any> {\n  message?: UpdateFormatPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateFormatPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMedicalBackgroundDetailPayloadTypeResolver<TParent = any> {\n  message?: UpdateMedicalBackgroundDetailPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMedicalBackgroundDetailPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMedicalBackgroundPayloadTypeResolver<TParent = any> {\n  message?: UpdateMedicalBackgroundPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMedicalBackgroundPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMedicalConfigPayloadTypeResolver<TParent = any> {\n  message?: UpdateMedicalConfigPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMedicalConfigPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMedicalServicePayloadTypeResolver<TParent = any> {\n  message?: UpdateMedicalServicePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMedicalServicePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMedicinePayloadTypeResolver<TParent = any> {\n  message?: UpdateMedicinePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMedicinePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateVaccinePayloadTypeResolver<TParent = any> {\n  message?: UpdateVaccinePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateVaccinePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateVitalSingsPayloadsTypeResolver<TParent = any> {\n  message?: UpdateVitalSingsPayloadsToMessageResolver<TParent>;\n}\n\nexport interface UpdateVitalSingsPayloadsToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMedicRecipePayloadTypeResolver<TParent = any> {\n  message?: UpdateMedicRecipePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMedicRecipePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateRecipeConfigPayloadTypeResolver<TParent = any> {\n  message?: UpdateRecipeConfigPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateRecipeConfigPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateRegistSesionPayloadTypeResolver<TParent = any> {\n  message?: UpdateRegistSesionPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateRegistSesionPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePacientNotePayloadTypeResolver<TParent = any> {\n  message?: UpdatePacientNotePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdatePacientNotePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateTherapyPayloadTypeResolver<TParent = any> {\n  message?: UpdateTherapyPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateTherapyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateDiagnosticPayloadTypeResolver<TParent = any> {\n  message?: UpdateDiagnosticPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateDiagnosticPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateConsultNotePayloadTypeResolver<TParent = any> {\n  message?: UpdateConsultNotePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateConsultNotePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePacientMedicalBackgroundPayloadTypeResolver<TParent = any> {\n  message?: UpdatePacientMedicalBackgroundPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdatePacientMedicalBackgroundPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBillingRequestPayloadTypeResolver<TParent = any> {\n  message?: UpdateBillingRequestPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateBillingRequestPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateSortFormatPayloadTypeResolver<TParent = any> {\n  message?: UpdateSortFormatPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateSortFormatPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePatientVitalSignsResponsePayloadsTypeResolver<TParent = any> {\n  message?: UpdatePatientVitalSignsResponsePayloadsToMessageResolver<TParent>;\n}\n\nexport interface UpdatePatientVitalSignsResponsePayloadsToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteChargePayloadTypeResolver<TParent = any> {\n  message?: DeleteChargePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteChargePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteClinicHistoryPayloadTypeResolver<TParent = any> {\n  message?: DeleteClinicHistoryPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteClinicHistoryPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteClinicHistoryMedicalBackgroundDetailPayloadTypeResolver<TParent = any> {\n  message?: DeleteClinicHistoryMedicalBackgroundDetailPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteClinicHistoryMedicalBackgroundDetailPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteConsultPayloadTypeResolver<TParent = any> {\n  message?: DeleteConsultPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteConsultPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteFisicalExamPayloadTypeResolver<TParent = any> {\n  message?: DeleteFisicalExamPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteFisicalExamPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMedicalBackgroundDetailPayloadTypeResolver<TParent = any> {\n  message?: DeleteMedicalBackgroundDetailPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMedicalBackgroundDetailPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMedicalBackgroundPayloadTypeResolver<TParent = any> {\n  message?: DeleteMedicalBackgroundPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMedicalBackgroundPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMedicalConfigPayloadTypeResolver<TParent = any> {\n  message?: DeleteMedicalConfigPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMedicalConfigPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMedicalServicePayloadTypeResolver<TParent = any> {\n  message?: DeleteMedicalServicePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMedicalServicePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMedicinePayloadTypeResolver<TParent = any> {\n  message?: DeleteMedicinePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMedicinePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteVaccinePayloadTypeResolver<TParent = any> {\n  message?: DeleteVaccinePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteVaccinePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteVitalSignPayloadTypeResolver<TParent = any> {\n  message?: DeleteVitalSignPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteVitalSignPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMedicRecipePayloadTypeResolver<TParent = any> {\n  message?: DeleteMedicRecipePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMedicRecipePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteRecipeConfigPayloadTypeResolver<TParent = any> {\n  message?: DeleteRecipeConfigPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteRecipeConfigPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteRegistSesionPayloadTypeResolver<TParent = any> {\n  message?: DeleteRegistSesionPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteRegistSesionPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteTherapyPayloadTypeResolver<TParent = any> {\n  message?: DeleteTherapyPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteTherapyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteDiagnosticPayloadTypeResolver<TParent = any> {\n  message?: DeleteDiagnosticPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteDiagnosticPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteConsultNotePayloadTypeResolver<TParent = any> {\n  message?: DeleteConsultNotePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteConsultNotePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePacientNotePayloadTypeResolver<TParent = any> {\n  message?: DeletePacientNotePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeletePacientNotePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePacientMedicalBackgroundPayloadTypeResolver<TParent = any> {\n  message?: DeletePacientMedicalBackgroundPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeletePacientMedicalBackgroundPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteBillingRequestPayloadTypeResolver<TParent = any> {\n  message?: DeleteBillingRequestPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteBillingRequestPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteFormatPayloadTypeResolver<TParent = any> {\n  message?: DeleteFormatPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteFormatPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePDFPayloadTypeResolver<TParent = any> {\n  base64?: CreatePDFPayloadToBase64Resolver<TParent>;\n}\n\nexport interface CreatePDFPayloadToBase64Resolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IOrderingMemberBoardPayloadTypeResolver<TParent = any> {\n  memberBoard?: OrderingMemberBoardPayloadToMemberBoardResolver<TParent>;\n}\n\nexport interface OrderingMemberBoardPayloadToMemberBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISpacePayloadTypeResolver<TParent = any> {\n  space?: SpacePayloadToSpaceResolver<TParent>;\n}\n\nexport interface SpacePayloadToSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberSpacePayloadTypeResolver<TParent = any> {\n  memberSpace?: MemberSpacePayloadToMemberSpaceResolver<TParent>;\n}\n\nexport interface MemberSpacePayloadToMemberSpaceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardStatusPayloadTypeResolver<TParent = any> {\n  boardStatus?: BoardStatusPayloadToBoardStatusResolver<TParent>;\n}\n\nexport interface BoardStatusPayloadToBoardStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardPayloadTypeResolver<TParent = any> {\n  board?: BoardPayloadToBoardResolver<TParent>;\n}\n\nexport interface BoardPayloadToBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardListPayloadTypeResolver<TParent = any> {\n  board?: BoardListPayloadToBoardResolver<TParent>;\n}\n\nexport interface BoardListPayloadToBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardGroupColumnPayloadTypeResolver<TParent = any> {\n  boardGroupColumn?: BoardGroupColumnPayloadToBoardGroupColumnResolver<TParent>;\n}\n\nexport interface BoardGroupColumnPayloadToBoardGroupColumnResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardColumnTypePayloadTypeResolver<TParent = any> {\n  boardColumnType?: BoardColumnTypePayloadToBoardColumnTypeResolver<TParent>;\n}\n\nexport interface BoardColumnTypePayloadToBoardColumnTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardColumnValuePayloadTypeResolver<TParent = any> {\n  boardColumnValue?: BoardColumnValuePayloadToBoardColumnValueResolver<TParent>;\n}\n\nexport interface BoardColumnValuePayloadToBoardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardColumnValuePayloadTypeResolver<TParent = any> {\n  cardColumnValue?: CardColumnValuePayloadToCardColumnValueResolver<TParent>;\n}\n\nexport interface CardColumnValuePayloadToCardColumnValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardMemberReferencePayloadTypeResolver<TParent = any> {\n  boardMemberReference?: BoardMemberReferencePayloadToBoardMemberReferenceResolver<TParent>;\n}\n\nexport interface BoardMemberReferencePayloadToBoardMemberReferenceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBoardRowPayloadTypeResolver<TParent = any> {\n  boardRow?: BoardRowPayloadToBoardRowResolver<TParent>;\n}\n\nexport interface BoardRowPayloadToBoardRowResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardPayloadTypeResolver<TParent = any> {\n  card?: CardPayloadToCardResolver<TParent>;\n}\n\nexport interface CardPayloadToCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardChecklistPayloadTypeResolver<TParent = any> {\n  cardChecklist?: CardChecklistPayloadToCardChecklistResolver<TParent>;\n}\n\nexport interface CardChecklistPayloadToCardChecklistResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardCheckComponentPayloadTypeResolver<TParent = any> {\n  cardCheckComponent?: CardCheckComponentPayloadToCardCheckComponentResolver<TParent>;\n}\n\nexport interface CardCheckComponentPayloadToCardCheckComponentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICardReplyPayloadTypeResolver<TParent = any> {\n  cardReply?: CardReplyPayloadToCardReplyResolver<TParent>;\n}\n\nexport interface CardReplyPayloadToCardReplyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INestedFilesPayloadTypeResolver<TParent = any> {\n  nestedFile?: NestedFilesPayloadToNestedFileResolver<TParent>;\n}\n\nexport interface NestedFilesPayloadToNestedFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberCardPayloadTypeResolver<TParent = any> {\n  memberCard?: MemberCardPayloadToMemberCardResolver<TParent>;\n}\n\nexport interface MemberCardPayloadToMemberCardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberBoardPayloadTypeResolver<TParent = any> {\n  memberBoard?: MemberBoardPayloadToMemberBoardResolver<TParent>;\n}\n\nexport interface MemberBoardPayloadToMemberBoardResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMeasurePayloadTypeResolver<TParent = any> {\n  message?: DeleteMeasurePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMeasurePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMeasurePayloadTypeResolver<TParent = any> {\n  message?: UpdateMeasurePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMeasurePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMaterialCategoryPayloadTypeResolver<TParent = any> {\n  message?: DeleteMaterialCategoryPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMaterialCategoryPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMeasureValuePayloadTypeResolver<TParent = any> {\n  measureValue?: CreateMeasureValuePayloadToMeasureValueResolver<TParent>;\n}\n\nexport interface CreateMeasureValuePayloadToMeasureValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMeasureValuePayloadTypeResolver<TParent = any> {\n  message?: UpdateMeasureValuePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMeasureValuePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMeasureValuePayloadTypeResolver<TParent = any> {\n  message?: DeleteMeasureValuePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMeasureValuePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMeasureUnityTwoPayloadTypeResolver<TParent = any> {\n  message?: DeleteMeasureUnityTwoPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMeasureUnityTwoPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateModulePayloadTypeResolver<TParent = any> {\n  message?: UpdateModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMaterialQuotationPayloadTypeResolver<TParent = any> {\n  materialQuotation?: CreateMaterialQuotationPayloadToMaterialQuotationResolver<TParent>;\n}\n\nexport interface CreateMaterialQuotationPayloadToMaterialQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMaterialQuotationPayloadTypeResolver<TParent = any> {\n  message?: UpdateMaterialQuotationPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMaterialQuotationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMaterialQuotationPayloadTypeResolver<TParent = any> {\n  message?: DeleteMaterialQuotationPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMaterialQuotationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMaterialModulePayloadTypeResolver<TParent = any> {\n  materialModule?: CreateMaterialModulePayloadToMaterialModuleResolver<TParent>;\n}\n\nexport interface CreateMaterialModulePayloadToMaterialModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMaterialModulePayloadTypeResolver<TParent = any> {\n  message?: UpdateMaterialModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMaterialModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMaterialModulePayloadTypeResolver<TParent = any> {\n  message?: DeleteMaterialModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMaterialModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateUserCustomerPayloadTypeResolver<TParent = any> {\n  userCustomer?: CreateUserCustomerPayloadToUserCustomerResolver<TParent>;\n}\n\nexport interface CreateUserCustomerPayloadToUserCustomerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMeasureUnityPayloadTypeResolver<TParent = any> {\n  measureUnity?: CreateMeasureUnityPayloadToMeasureUnityResolver<TParent>;\n}\n\nexport interface CreateMeasureUnityPayloadToMeasureUnityResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMeasureUnityPayloadTypeResolver<TParent = any> {\n  message?: UpdateMeasureUnityPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMeasureUnityPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMeasureUnityPayloadTypeResolver<TParent = any> {\n  message?: DeleteMeasureUnityPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMeasureUnityPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateAttributePayloadTypeResolver<TParent = any> {\n  attribute?: CreateAttributePayloadToAttributeResolver<TParent>;\n}\n\nexport interface CreateAttributePayloadToAttributeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateAttributeValuePayloadTypeResolver<TParent = any> {\n  attributeValue?: CreateAttributeValuePayloadToAttributeValueResolver<TParent>;\n}\n\nexport interface CreateAttributeValuePayloadToAttributeValueResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBuildingSiteAddressPayloadTypeResolver<TParent = any> {\n  buildingSiteAddress?: CreateBuildingSiteAddressPayloadToBuildingSiteAddressResolver<TParent>;\n}\n\nexport interface CreateBuildingSiteAddressPayloadToBuildingSiteAddressResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMadreQuotationPayloadTypeResolver<TParent = any> {\n  madreQuotation?: CreateMadreQuotationPayloadToMadreQuotationResolver<TParent>;\n}\n\nexport interface CreateMadreQuotationPayloadToMadreQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMaterialCategoryPayloadTypeResolver<TParent = any> {\n  materialCategory?: CreateMaterialCategoryPayloadToMaterialCategoryResolver<TParent>;\n}\n\nexport interface CreateMaterialCategoryPayloadToMaterialCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMaterialCombinationPayloadTypeResolver<TParent = any> {\n  materialCombination?: CreateMaterialCombinationPayloadToMaterialCombinationResolver<TParent>;\n}\n\nexport interface CreateMaterialCombinationPayloadToMaterialCombinationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMaterialPayloadTypeResolver<TParent = any> {\n  material?: CreateMaterialPayloadToMaterialResolver<TParent>;\n}\n\nexport interface CreateMaterialPayloadToMaterialResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMaterialStockMeasurePayloadTypeResolver<TParent = any> {\n  materialStockMeasure?: CreateMaterialStockMeasurePayloadToMaterialStockMeasureResolver<TParent>;\n}\n\nexport interface CreateMaterialStockMeasurePayloadToMaterialStockMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMaterialStockPayloadTypeResolver<TParent = any> {\n  materialStock?: CreateMaterialStockPayloadToMaterialStockResolver<TParent>;\n}\n\nexport interface CreateMaterialStockPayloadToMaterialStockResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMaterialVariableQuotationPayloadTypeResolver<TParent = any> {\n  materialVariableQuotation?: CreateMaterialVariableQuotationPayloadToMaterialVariableQuotationResolver<TParent>;\n}\n\nexport interface CreateMaterialVariableQuotationPayloadToMaterialVariableQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMeasurePayloadTypeResolver<TParent = any> {\n  measure?: CreateMeasurePayloadToMeasureResolver<TParent>;\n}\n\nexport interface CreateMeasurePayloadToMeasureResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMeasureTwoPayloadTypeResolver<TParent = any> {\n  measureUnityTwo?: CreateMeasureTwoPayloadToMeasureUnityTwoResolver<TParent>;\n}\n\nexport interface CreateMeasureTwoPayloadToMeasureUnityTwoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateModuleCategoryPayloadTypeResolver<TParent = any> {\n  moduleCategory?: CreateModuleCategoryPayloadToModuleCategoryResolver<TParent>;\n}\n\nexport interface CreateModuleCategoryPayloadToModuleCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateModulePayloadTypeResolver<TParent = any> {\n  module?: CreateModulePayloadToModuleResolver<TParent>;\n}\n\nexport interface CreateModulePayloadToModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateQuotationPayloadTypeResolver<TParent = any> {\n  quotation?: CreateQuotationPayloadToQuotationResolver<TParent>;\n}\n\nexport interface CreateQuotationPayloadToQuotationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateQuotationModulePayloadTypeResolver<TParent = any> {\n  quotationModule?: CreateQuotationModulePayloadToQuotationModuleResolver<TParent>;\n}\n\nexport interface CreateQuotationModulePayloadToQuotationModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateVariablePayloadTypeResolver<TParent = any> {\n  variable?: CreateVariablePayloadToVariableResolver<TParent>;\n}\n\nexport interface CreateVariablePayloadToVariableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteAttributePayloadTypeResolver<TParent = any> {\n  message?: DeleteAttributePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteAttributePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteAttributeValuePayloadTypeResolver<TParent = any> {\n  message?: DeleteAttributeValuePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteAttributeValuePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteBuildingSiteAddressPayloadTypeResolver<TParent = any> {\n  message?: DeleteBuildingSiteAddressPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteBuildingSiteAddressPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMaterialCombinationPayloadTypeResolver<TParent = any> {\n  message?: DeleteMaterialCombinationPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMaterialCombinationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMaterialPayloadTypeResolver<TParent = any> {\n  message?: DeleteMaterialPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMaterialPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMaterialStockPayloadTypeResolver<TParent = any> {\n  message?: DeleteMaterialStockPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMaterialStockPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMaterialStockMeasurePayloadTypeResolver<TParent = any> {\n  message?: DeleteMaterialStockMeasurePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMaterialStockMeasurePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMaterialVariableQuotationPayloadTypeResolver<TParent = any> {\n  message?: DeleteMaterialVariableQuotationPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMaterialVariableQuotationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteModuleCategoryPayloadTypeResolver<TParent = any> {\n  message?: DeleteModuleCategoryPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteModuleCategoryPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteModulePayloadTypeResolver<TParent = any> {\n  message?: DeleteModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteQuotationModulePayloadTypeResolver<TParent = any> {\n  message?: DeleteQuotationModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteQuotationModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteQuotationPayloadTypeResolver<TParent = any> {\n  message?: DeleteQuotationPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteQuotationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteVariablePayloadTypeResolver<TParent = any> {\n  message?: DeleteVariablePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteVariablePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateAttributePayloadTypeResolver<TParent = any> {\n  message?: UpdateAttributePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateAttributePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateAttributeValuePayloadTypeResolver<TParent = any> {\n  message?: UpdateAttributeValuePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateAttributeValuePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBuildingSiteAddressPayloadTypeResolver<TParent = any> {\n  message?: UpdateBuildingSiteAddressPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateBuildingSiteAddressPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMaterialCategoryPayloadTypeResolver<TParent = any> {\n  message?: UpdateMaterialCategoryPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMaterialCategoryPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMaterialCombinationPayloadTypeResolver<TParent = any> {\n  message?: UpdateMaterialCombinationPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMaterialCombinationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMaterialPayloadTypeResolver<TParent = any> {\n  message?: UpdateMaterialPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMaterialPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMaterialStockMeasurePayloadTypeResolver<TParent = any> {\n  message?: UpdateMaterialStockMeasurePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMaterialStockMeasurePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMaterialStockPayloadTypeResolver<TParent = any> {\n  message?: UpdateMaterialStockPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMaterialStockPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMadreQuotationPayloadTypeResolver<TParent = any> {\n  message?: UpdateMadreQuotationPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMadreQuotationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMadreQuotationPayloadTypeResolver<TParent = any> {\n  message?: DeleteMadreQuotationPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMadreQuotationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMaterialVariableQuotationPayloadTypeResolver<TParent = any> {\n  message?: UpdateMaterialVariableQuotationPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMaterialVariableQuotationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMeasureUnityTwoPayloadTypeResolver<TParent = any> {\n  message?: UpdateMeasureUnityTwoPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMeasureUnityTwoPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateModuleCategoryPayloadTypeResolver<TParent = any> {\n  message?: UpdateModuleCategoryPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateModuleCategoryPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateQuotationModulePayloadTypeResolver<TParent = any> {\n  message?: UpdateQuotationModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateQuotationModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateQuotationPayloadTypeResolver<TParent = any> {\n  message?: UpdateQuotationPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateQuotationPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateVariablePayloadTypeResolver<TParent = any> {\n  message?: UpdateVariablePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateVariablePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateAnalysisPayloadTypeResolver<TParent = any> {\n  analysis?: UpdateAnalysisPayloadToAnalysisResolver<TParent>;\n}\n\nexport interface UpdateAnalysisPayloadToAnalysisResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateClientPayloadTypeResolver<TParent = any> {\n  client?: CreateClientPayloadToClientResolver<TParent>;\n}\n\nexport interface CreateClientPayloadToClientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateClientPayloadTypeResolver<TParent = any> {\n  client?: UpdateClientPayloadToClientResolver<TParent>;\n}\n\nexport interface UpdateClientPayloadToClientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateConsultPayloadTypeResolver<TParent = any> {\n  consult?: CreateConsultPayloadToConsultResolver<TParent>;\n}\n\nexport interface CreateConsultPayloadToConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateConsultPayloadTypeResolver<TParent = any> {\n  consult?: UpdateConsultPayloadToConsultResolver<TParent>;\n}\n\nexport interface UpdateConsultPayloadToConsultResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateComparedPayloadTypeResolver<TParent = any> {\n  compared?: CreateComparedPayloadToComparedResolver<TParent>;\n}\n\nexport interface CreateComparedPayloadToComparedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateComparedPayloadTypeResolver<TParent = any> {\n  compared?: UpdateComparedPayloadToComparedResolver<TParent>;\n}\n\nexport interface UpdateComparedPayloadToComparedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteComparedPayloadTypeResolver<TParent = any> {\n  message?: DeleteComparedPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteComparedPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCarMercadoPayloadTypeResolver<TParent = any> {\n  carMercado?: CreateCarMercadoPayloadToCarMercadoResolver<TParent>;\n}\n\nexport interface CreateCarMercadoPayloadToCarMercadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCarMercadoMassivePayloadTypeResolver<TParent = any> {\n  carMercado?: CreateCarMercadoMassivePayloadToCarMercadoResolver<TParent>;\n}\n\nexport interface CreateCarMercadoMassivePayloadToCarMercadoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteCarMercadoPayloadTypeResolver<TParent = any> {\n  message?: DeleteCarMercadoPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteCarMercadoPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IZipFolderContentPayloadTypeResolver<TParent = any> {\n  fileUrl?: ZipFolderContentPayloadToFileUrlResolver<TParent>;\n}\n\nexport interface ZipFolderContentPayloadToFileUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFolderPayloadTypeResolver<TParent = any> {\n  message?: FolderPayloadToMessageResolver<TParent>;\n}\n\nexport interface FolderPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteFolderPayLoadTypeResolver<TParent = any> {\n  message?: DeleteFolderPayLoadToMessageResolver<TParent>;\n}\n\nexport interface DeleteFolderPayLoadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateFilePayloadTypeResolver<TParent = any> {\n  message?: CreateFilePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateFilePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateFilesPayloadTypeResolver<TParent = any> {\n  message?: UpdateFilesPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateFilesPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteFilePayLoadTypeResolver<TParent = any> {\n  message?: DeleteFilePayLoadToMessageResolver<TParent>;\n}\n\nexport interface DeleteFilePayLoadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IShareFilePayloadTypeResolver<TParent = any> {\n  sharedFile?: ShareFilePayloadToSharedFileResolver<TParent>;\n}\n\nexport interface ShareFilePayloadToSharedFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IShareFolderPayloadTypeResolver<TParent = any> {\n  sharedFolders?: ShareFolderPayloadToSharedFoldersResolver<TParent>;\n}\n\nexport interface ShareFolderPayloadToSharedFoldersResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStopSharingFolderPayloadTypeResolver<TParent = any> {\n  message?: StopSharingFolderPayloadToMessageResolver<TParent>;\n}\n\nexport interface StopSharingFolderPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStopSharingFilePayloadTypeResolver<TParent = any> {\n  message?: StopSharingFilePayloadToMessageResolver<TParent>;\n}\n\nexport interface StopSharingFilePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUploadFilePrivatePayloadTypeResolver<TParent = any> {\n  fileId?: UploadFilePrivatePayloadToFileIdResolver<TParent>;\n  url?: UploadFilePrivatePayloadToUrlResolver<TParent>;\n  message?: UploadFilePrivatePayloadToMessageResolver<TParent>;\n  token?: UploadFilePrivatePayloadToTokenResolver<TParent>;\n  partialUrl?: UploadFilePrivatePayloadToPartialUrlResolver<TParent>;\n}\n\nexport interface UploadFilePrivatePayloadToFileIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UploadFilePrivatePayloadToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UploadFilePrivatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UploadFilePrivatePayloadToTokenResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface UploadFilePrivatePayloadToPartialUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddChatMemberPayloadTypeResolver<TParent = any> {\n  conversationReplies?: AddChatMemberPayloadToConversationRepliesResolver<TParent>;\n}\n\nexport interface AddChatMemberPayloadToConversationRepliesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAddChatMemberWsPayloadTypeResolver<TParent = any> {\n  conversationReplies?: AddChatMemberWsPayloadToConversationRepliesResolver<TParent>;\n}\n\nexport interface AddChatMemberWsPayloadToConversationRepliesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGetConversationIdPayloadTypeResolver<TParent = any> {\n  conversationId?: GetConversationIdPayloadToConversationIdResolver<TParent>;\n}\n\nexport interface GetConversationIdPayloadToConversationIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteReplyPayloadTypeResolver<TParent = any> {\n  message?: DeleteReplyPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteReplyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletPayloadTypeResolver<TParent = any> {\n  eWallet?: WalletPayloadToEWalletResolver<TParent>;\n}\n\nexport interface WalletPayloadToEWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionPayloadTypeResolver<TParent = any> {\n  walletTransaction?: WalletTransactionPayloadToWalletTransactionResolver<TParent>;\n  publicKey?: WalletTransactionPayloadToPublicKeyResolver<TParent>;\n}\n\nexport interface WalletTransactionPayloadToWalletTransactionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface WalletTransactionPayloadToPublicKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMultipleWalletTransactionPayloadTypeResolver<TParent = any> {\n  transactions?: MultipleWalletTransactionPayloadToTransactionsResolver<TParent>;\n}\n\nexport interface MultipleWalletTransactionPayloadToTransactionsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionStatusPayloadTypeResolver<TParent = any> {\n  walletTransactionStatus?: WalletTransactionStatusPayloadToWalletTransactionStatusResolver<TParent>;\n}\n\nexport interface WalletTransactionStatusPayloadToWalletTransactionStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IWalletTransactionMemberRelationPayloadTypeResolver<TParent = any> {\n  walletTransactionMember?: WalletTransactionMemberRelationPayloadToWalletTransactionMemberResolver<TParent>;\n}\n\nexport interface WalletTransactionMemberRelationPayloadToWalletTransactionMemberResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberWalletPayloadTypeResolver<TParent = any> {\n  memberWallet?: MemberWalletPayloadToMemberWalletResolver<TParent>;\n}\n\nexport interface MemberWalletPayloadToMemberWalletResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectWalletKeyPayloadTypeResolver<TParent = any> {\n  projectWalletKey?: ProjectWalletKeyPayloadToProjectWalletKeyResolver<TParent>;\n}\n\nexport interface ProjectWalletKeyPayloadToProjectWalletKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectWalletKeyTypeResolver<TParent = any> {\n  projectId?: ProjectWalletKeyToProjectIdResolver<TParent>;\n  publicKey?: ProjectWalletKeyToPublicKeyResolver<TParent>;\n  service?: ProjectWalletKeyToServiceResolver<TParent>;\n  id?: ProjectWalletKeyToIdResolver<TParent>;\n  createdAt?: ProjectWalletKeyToCreatedAtResolver<TParent>;\n  updatedAt?: ProjectWalletKeyToUpdatedAtResolver<TParent>;\n}\n\nexport interface ProjectWalletKeyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectWalletKeyToPublicKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectWalletKeyToServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectWalletKeyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectWalletKeyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ProjectWalletKeyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCertificateMovementPayloadTypeResolver<TParent = any> {\n  certificateMovement?: CreateCertificateMovementPayloadToCertificateMovementResolver<TParent>;\n}\n\nexport interface CreateCertificateMovementPayloadToCertificateMovementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteCertificatePayloadTypeResolver<TParent = any> {\n  message?: DeleteCertificatePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteCertificatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateInsurerModulePayloadTypeResolver<TParent = any> {\n  message?: UpdateInsurerModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateInsurerModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateInsurerModulePayloadTypeResolver<TParent = any> {\n  insurerModule?: CreateInsurerModulePayloadToInsurerModuleResolver<TParent>;\n}\n\nexport interface CreateInsurerModulePayloadToInsurerModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePolicyModulePayloadTypeResolver<TParent = any> {\n  policyModule?: CreatePolicyModulePayloadToPolicyModuleResolver<TParent>;\n}\n\nexport interface CreatePolicyModulePayloadToPolicyModuleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePolicyModulePayloadTypeResolver<TParent = any> {\n  message?: UpdatePolicyModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdatePolicyModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePolicyModulePayloadTypeResolver<TParent = any> {\n  message?: DeletePolicyModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeletePolicyModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateInsurerFeePayloadTypeResolver<TParent = any> {\n  insurerFee?: CreateInsurerFeePayloadToInsurerFeeResolver<TParent>;\n}\n\nexport interface CreateInsurerFeePayloadToInsurerFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteInsurerFeePayloadTypeResolver<TParent = any> {\n  message?: DeleteInsurerFeePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteInsurerFeePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateInsurerFeePayloadTypeResolver<TParent = any> {\n  message?: UpdateInsurerFeePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateInsurerFeePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePolicyPayloadTypeResolver<TParent = any> {\n  policy?: CreatePolicyPayloadToPolicyResolver<TParent>;\n}\n\nexport interface CreatePolicyPayloadToPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICancelCertificatePayloadTypeResolver<TParent = any> {\n  message?: CancelCertificatePayloadToMessageResolver<TParent>;\n}\n\nexport interface CancelCertificatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBeneficiaryPayloadTypeResolver<TParent = any> {\n  beneficiary?: CreateBeneficiaryPayloadToBeneficiaryResolver<TParent>;\n}\n\nexport interface CreateBeneficiaryPayloadToBeneficiaryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCertificatePayloadTypeResolver<TParent = any> {\n  certificate?: CreateCertificatePayloadToCertificateResolver<TParent>;\n}\n\nexport interface CreateCertificatePayloadToCertificateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCertificateFilePayloadTypeResolver<TParent = any> {\n  message?: CreateCertificateFilePayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateCertificateFilePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateContactPayloadTypeResolver<TParent = any> {\n  contact?: CreateContactPayloadToContactResolver<TParent>;\n}\n\nexport interface CreateContactPayloadToContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateContractorBranchOfficePayloadTypeResolver<TParent = any> {\n  contractorBranchOffice?: CreateContractorBranchOfficePayloadToContractorBranchOfficeResolver<TParent>;\n}\n\nexport interface CreateContractorBranchOfficePayloadToContractorBranchOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateContractorContactPayloadTypeResolver<TParent = any> {\n  contractorContact?: CreateContractorContactPayloadToContractorContactResolver<TParent>;\n}\n\nexport interface CreateContractorContactPayloadToContractorContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateContractorPayloadTypeResolver<TParent = any> {\n  contractor?: CreateContractorPayloadToContractorResolver<TParent>;\n}\n\nexport interface CreateContractorPayloadToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateContractorPolicyPayloadTypeResolver<TParent = any> {\n  contractorPolicy?: CreateContractorPolicyPayloadToContractorPolicyResolver<TParent>;\n}\n\nexport interface CreateContractorPolicyPayloadToContractorPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCountryRequestPayloadTypeResolver<TParent = any> {\n  countryRequest?: CreateCountryRequestPayloadToCountryRequestResolver<TParent>;\n}\n\nexport interface CreateCountryRequestPayloadToCountryRequestResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateFeePayloadTypeResolver<TParent = any> {\n  fee?: CreateFeePayloadToFeeResolver<TParent>;\n}\n\nexport interface CreateFeePayloadToFeeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateInsurerCompanyPayloadTypeResolver<TParent = any> {\n  insurerCompany?: CreateInsurerCompanyPayloadToInsurerCompanyResolver<TParent>;\n}\n\nexport interface CreateInsurerCompanyPayloadToInsurerCompanyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateIssuedReportPayloadTypeResolver<TParent = any> {\n  issuedReport?: CreateIssuedReportPayloadToIssuedReportResolver<TParent>;\n}\n\nexport interface CreateIssuedReportPayloadToIssuedReportResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IIssuedReportTypeResolver<TParent = any> {\n  name?: IssuedReportToNameResolver<TParent>;\n  url?: IssuedReportToUrlResolver<TParent>;\n  projectId?: IssuedReportToProjectIdResolver<TParent>;\n  id?: IssuedReportToIdResolver<TParent>;\n  createdAt?: IssuedReportToCreatedAtResolver<TParent>;\n  updatedAt?: IssuedReportToUpdatedAtResolver<TParent>;\n}\n\nexport interface IssuedReportToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IssuedReportToUrlResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IssuedReportToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IssuedReportToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IssuedReportToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IssuedReportToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMerchandiseDetailPayloadTypeResolver<TParent = any> {\n  merchandiseDetail?: CreateMerchandiseDetailPayloadToMerchandiseDetailResolver<TParent>;\n}\n\nexport interface CreateMerchandiseDetailPayloadToMerchandiseDetailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMerchandisePayloadTypeResolver<TParent = any> {\n  merchandise?: CreateMerchandisePayloadToMerchandiseResolver<TParent>;\n}\n\nexport interface CreateMerchandisePayloadToMerchandiseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMoneyPayloadTypeResolver<TParent = any> {\n  money?: CreateMoneyPayloadToMoneyResolver<TParent>;\n}\n\nexport interface CreateMoneyPayloadToMoneyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateMoneyPolicyPayloadTypeResolver<TParent = any> {\n  moneyPolicy?: CreateMoneyPolicyPayloadToMoneyPolicyResolver<TParent>;\n}\n\nexport interface CreateMoneyPolicyPayloadToMoneyPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMoneyPolicyTypeResolver<TParent = any> {\n  moneyId?: MoneyPolicyToMoneyIdResolver<TParent>;\n  policyId?: MoneyPolicyToPolicyIdResolver<TParent>;\n  money?: MoneyPolicyToMoneyResolver<TParent>;\n  policy?: MoneyPolicyToPolicyResolver<TParent>;\n  projectId?: MoneyPolicyToProjectIdResolver<TParent>;\n  id?: MoneyPolicyToIdResolver<TParent>;\n  createdAt?: MoneyPolicyToCreatedAtResolver<TParent>;\n  updatedAt?: MoneyPolicyToUpdatedAtResolver<TParent>;\n}\n\nexport interface MoneyPolicyToMoneyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyPolicyToPolicyIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyPolicyToMoneyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyPolicyToPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyPolicyToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyPolicyToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyPolicyToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface MoneyPolicyToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteBeneficiaryPayloadTypeResolver<TParent = any> {\n  message?: DeleteBeneficiaryPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteBeneficiaryPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteContactPayloadTypeResolver<TParent = any> {\n  message?: DeleteContactPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteContactPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteContractorPayloadTypeResolver<TParent = any> {\n  message?: DeleteContractorPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteContractorPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteContractorOfficePayloadTypeResolver<TParent = any> {\n  message?: DeleteContractorOfficePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteContractorOfficePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteContractorPolicyPayloadTypeResolver<TParent = any> {\n  message?: DeleteContractorPolicyPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteContractorPolicyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteInsurerModulePayloadTypeResolver<TParent = any> {\n  message?: DeleteInsurerModulePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteInsurerModulePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteFeePayloadTypeResolver<TParent = any> {\n  message?: DeleteFeePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteFeePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMerchandisePayloadTypeResolver<TParent = any> {\n  message?: DeleteMerchandisePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMerchandisePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteInsurerCompanyPayloadTypeResolver<TParent = any> {\n  message?: DeleteInsurerCompanyPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteInsurerCompanyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteMoneyPayloadTypeResolver<TParent = any> {\n  message?: DeleteMoneyPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteMoneyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePolicyPayloadTypeResolver<TParent = any> {\n  message?: DeletePolicyPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeletePolicyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateBeneficiaryPayloadTypeResolver<TParent = any> {\n  message?: UpdateBeneficiaryPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateBeneficiaryPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateCertificatePayloadTypeResolver<TParent = any> {\n  message?: UpdateCertificatePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateCertificatePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateContactPayloadTypeResolver<TParent = any> {\n  message?: UpdateContactPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateContactPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateContractorPayloadTypeResolver<TParent = any> {\n  message?: UpdateContractorPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateContractorPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateFeePayloadTypeResolver<TParent = any> {\n  message?: UpdateFeePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateFeePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateInsurerCompanyPayloadTypeResolver<TParent = any> {\n  message?: UpdateInsurerCompanyPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateInsurerCompanyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMerchandisePayloadTypeResolver<TParent = any> {\n  message?: UpdateMerchandisePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMerchandisePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateMoneyPayloadTypeResolver<TParent = any> {\n  message?: UpdateMoneyPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateMoneyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePolicyPayloadTypeResolver<TParent = any> {\n  message?: UpdatePolicyPayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdatePolicyPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAttendancePayloadTypeResolver<TParent = any> {\n  attendance?: AttendancePayloadToAttendanceResolver<TParent>;\n}\n\nexport interface AttendancePayloadToAttendanceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IClassroomPayloadTypeResolver<TParent = any> {\n  classroom?: ClassroomPayloadToClassroomResolver<TParent>;\n}\n\nexport interface ClassroomPayloadToClassroomResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDayServicePayloadTypeResolver<TParent = any> {\n  dayService?: DayServicePayloadToDayServiceResolver<TParent>;\n}\n\nexport interface DayServicePayloadToDayServiceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IGradePayloadTypeResolver<TParent = any> {\n  grade?: GradePayloadToGradeResolver<TParent>;\n}\n\nexport interface GradePayloadToGradeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILevelPayloadTypeResolver<TParent = any> {\n  level?: LevelPayloadToLevelResolver<TParent>;\n}\n\nexport interface LevelPayloadToLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISchoolPayloadTypeResolver<TParent = any> {\n  school?: SchoolPayloadToSchoolResolver<TParent>;\n}\n\nexport interface SchoolPayloadToSchoolResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStudentPayloadTypeResolver<TParent = any> {\n  student?: StudentPayloadToStudentResolver<TParent>;\n}\n\nexport interface StudentPayloadToStudentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBulkStudentPayloadTypeResolver<TParent = any> {\n  message?: CreateBulkStudentPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateBulkStudentPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBeneficiariePayloadTypeResolver<TParent = any> {\n  beneficiarie?: BeneficiariePayloadToBeneficiarieResolver<TParent>;\n}\n\nexport interface BeneficiariePayloadToBeneficiarieResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormAccidentDiseasePayloadTypeResolver<TParent = any> {\n  formAccidentDisease?: FormAccidentDiseasePayloadToFormAccidentDiseaseResolver<TParent>;\n}\n\nexport interface FormAccidentDiseasePayloadToFormAccidentDiseaseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormAutomobileDamagePayloadTypeResolver<TParent = any> {\n  formAutomobileDamage?: FormAutomobileDamagePayloadToFormAutomobileDamageResolver<TParent>;\n}\n\nexport interface FormAutomobileDamagePayloadToFormAutomobileDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormCarCatalogPayloadTypeResolver<TParent = any> {\n  formCarCatalog?: FormCarCatalogPayloadToFormCarCatalogResolver<TParent>;\n}\n\nexport interface FormCarCatalogPayloadToFormCarCatalogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormDamagePayloadTypeResolver<TParent = any> {\n  formDamage?: FormDamagePayloadToFormDamageResolver<TParent>;\n}\n\nexport interface FormDamagePayloadToFormDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IFormLifePayloadTypeResolver<TParent = any> {\n  formLife?: FormLifePayloadToFormLifeResolver<TParent>;\n}\n\nexport interface FormLifePayloadToFormLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInvolvedReferrerPayloadTypeResolver<TParent = any> {\n  involvedReferrer?: InvolvedReferrerPayloadToInvolvedReferrerResolver<TParent>;\n}\n\nexport interface InvolvedReferrerPayloadToInvolvedReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IOldPolicePayloadTypeResolver<TParent = any> {\n  oldPolice?: OldPolicePayloadToOldPoliceResolver<TParent>;\n}\n\nexport interface OldPolicePayloadToOldPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPersonalInformationPayloadTypeResolver<TParent = any> {\n  personalInformation?: PersonalInformationPayloadToPersonalInformationResolver<TParent>;\n}\n\nexport interface PersonalInformationPayloadToPersonalInformationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicePayloadTypeResolver<TParent = any> {\n  police?: PolicePayloadToPoliceResolver<TParent>;\n}\n\nexport interface PolicePayloadToPoliceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceAssignPayloadTypeResolver<TParent = any> {\n  policeAssign?: PoliceAssignPayloadToPoliceAssignResolver<TParent>;\n}\n\nexport interface PoliceAssignPayloadToPoliceAssignResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPolicePendientPayloadTypeResolver<TParent = any> {\n  policePendient?: PolicePendientPayloadToPolicePendientResolver<TParent>;\n}\n\nexport interface PolicePendientPayloadToPolicePendientResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceQuotePayloadTypeResolver<TParent = any> {\n  policeQuote?: PoliceQuotePayloadToPoliceQuoteResolver<TParent>;\n}\n\nexport interface PoliceQuotePayloadToPoliceQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceQuotePrimaPayloadTypeResolver<TParent = any> {\n  policeQuotePrima?: PoliceQuotePrimaPayloadToPoliceQuotePrimaResolver<TParent>;\n}\n\nexport interface PoliceQuotePrimaPayloadToPoliceQuotePrimaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IRelationShipPayloadTypeResolver<TParent = any> {\n  relationShip?: RelationShipPayloadToRelationShipResolver<TParent>;\n}\n\nexport interface RelationShipPayloadToRelationShipResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISucursalPayloadTypeResolver<TParent = any> {\n  sucursal?: SucursalPayloadToSucursalResolver<TParent>;\n}\n\nexport interface SucursalPayloadToSucursalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentKeyPayloadTypeResolver<TParent = any> {\n  agentKey?: AgentKeyPayloadToAgentKeyResolver<TParent>;\n}\n\nexport interface AgentKeyPayloadToAgentKeyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentProviderContactPayloadTypeResolver<TParent = any> {\n  agentProviderContact?: AgentProviderContactPayloadToAgentProviderContactResolver<TParent>;\n}\n\nexport interface AgentProviderContactPayloadToAgentProviderContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentProviderPayloadTypeResolver<TParent = any> {\n  agentProvider?: AgentProviderPayloadToAgentProviderResolver<TParent>;\n}\n\nexport interface AgentProviderPayloadToAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IBranchPayloadTypeResolver<TParent = any> {\n  branch?: BranchPayloadToBranchResolver<TParent>;\n}\n\nexport interface BranchPayloadToBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IComissionPayloadTypeResolver<TParent = any> {\n  comission?: ComissionPayloadToComissionResolver<TParent>;\n}\n\nexport interface ComissionPayloadToComissionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorCelulaPayloadTypeResolver<TParent = any> {\n  contractorCelula?: ContractorCelulaPayloadToContractorCelulaResolver<TParent>;\n}\n\nexport interface ContractorCelulaPayloadToContractorCelulaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorClassificationPayloadTypeResolver<TParent = any> {\n  contractorClassification?: ContractorClassificationPayloadToContractorClassificationResolver<TParent>;\n}\n\nexport interface ContractorClassificationPayloadToContractorClassificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorGroupingLevelPayloadTypeResolver<TParent = any> {\n  contractorGroupingLevel?: ContractorGroupingLevelPayloadToContractorGroupingLevelResolver<TParent>;\n}\n\nexport interface ContractorGroupingLevelPayloadToContractorGroupingLevelResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorPayloadTypeResolver<TParent = any> {\n  contractor?: ContractorPayloadToContractorResolver<TParent>;\n}\n\nexport interface ContractorPayloadToContractorResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IContractorProcessDocumentPayloadTypeResolver<TParent = any> {\n  contractorProcessDocument?: ContractorProcessDocumentPayloadToContractorProcessDocumentResolver<TParent>;\n}\n\nexport interface ContractorProcessDocumentPayloadToContractorProcessDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageCoinsurancePayloadTypeResolver<TParent = any> {\n  coverageCoinsurance?: CoverageCoinsurancePayloadToCoverageCoinsuranceResolver<TParent>;\n}\n\nexport interface CoverageCoinsurancePayloadToCoverageCoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageDeductiblePayloadTypeResolver<TParent = any> {\n  coverageDeductible?: CoverageDeductiblePayloadToCoverageDeductibleResolver<TParent>;\n}\n\nexport interface CoverageDeductiblePayloadToCoverageDeductibleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageInPolicyPayloadTypeResolver<TParent = any> {\n  coverageInPolicy?: CoverageInPolicyPayloadToCoverageInPolicyResolver<TParent>;\n}\n\nexport interface CoverageInPolicyPayloadToCoverageInPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoveragePayloadTypeResolver<TParent = any> {\n  coverage?: CoveragePayloadToCoverageResolver<TParent>;\n}\n\nexport interface CoveragePayloadToCoverageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoveragePackagePayloadTypeResolver<TParent = any> {\n  coveragePackage?: CoveragePackagePayloadToCoveragePackageResolver<TParent>;\n}\n\nexport interface CoveragePackagePayloadToCoveragePackageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageSuminsuredPayloadTypeResolver<TParent = any> {\n  coverageSuminsured?: CoverageSuminsuredPayloadToCoverageSuminsuredResolver<TParent>;\n}\n\nexport interface CoverageSuminsuredPayloadToCoverageSuminsuredResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICoverageTopecoinsurancePayloadTypeResolver<TParent = any> {\n  coverageTopecoinsurance?: CoverageTopecoinsurancePayloadToCoverageTopecoinsuranceResolver<TParent>;\n}\n\nexport interface CoverageTopecoinsurancePayloadToCoverageTopecoinsuranceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProcessDocumentPayloadTypeResolver<TParent = any> {\n  processDocument?: ProcessDocumentPayloadToProcessDocumentResolver<TParent>;\n}\n\nexport interface ProcessDocumentPayloadToProcessDocumentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectAgentProviderBranchPayloadTypeResolver<TParent = any> {\n  projectAgentProviderBranch?: ProjectAgentProviderBranchPayloadToProjectAgentProviderBranchResolver<TParent>;\n}\n\nexport interface ProjectAgentProviderBranchPayloadToProjectAgentProviderBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectAgentProviderPayloadTypeResolver<TParent = any> {\n  projectAgentProvider?: ProjectAgentProviderPayloadToProjectAgentProviderResolver<TParent>;\n}\n\nexport interface ProjectAgentProviderPayloadToProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IReferrerAccountStatePayloadTypeResolver<TParent = any> {\n  referrerAccountState?: ReferrerAccountStatePayloadToReferrerAccountStateResolver<TParent>;\n}\n\nexport interface ReferrerAccountStatePayloadToReferrerAccountStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IReferrerBranchPayloadTypeResolver<TParent = any> {\n  referrerBranch?: ReferrerBranchPayloadToReferrerBranchResolver<TParent>;\n}\n\nexport interface ReferrerBranchPayloadToReferrerBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IReferrerPayloadTypeResolver<TParent = any> {\n  referrer?: ReferrerPayloadToReferrerResolver<TParent>;\n}\n\nexport interface ReferrerPayloadToReferrerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IResponsableInvolvedPayloadTypeResolver<TParent = any> {\n  responsableInvolved?: ResponsableInvolvedPayloadToResponsableInvolvedResolver<TParent>;\n}\n\nexport interface ResponsableInvolvedPayloadToResponsableInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISubBranchPayloadTypeResolver<TParent = any> {\n  subbranch?: SubBranchPayloadToSubbranchResolver<TParent>;\n}\n\nexport interface SubBranchPayloadToSubbranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IProjectAgentProviderEmailReminderPayloadTypeResolver<TParent = any> {\n  projectAgentProviderEmailReminder?: ProjectAgentProviderEmailReminderPayloadToProjectAgentProviderEmailReminderResolver<TParent>;\n}\n\nexport interface ProjectAgentProviderEmailReminderPayloadToProjectAgentProviderEmailReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEndorsementPayloadTypeResolver<TParent = any> {\n  endorsement?: EndorsementPayloadToEndorsementResolver<TParent>;\n}\n\nexport interface EndorsementPayloadToEndorsementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IEndorsementCertPayloadTypeResolver<TParent = any> {\n  endorsementCert?: EndorsementCertPayloadToEndorsementCertResolver<TParent>;\n}\n\nexport interface EndorsementCertPayloadToEndorsementCertResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterPayloadTypeResolver<TParent = any> {\n  sinister?: SinisterPayloadToSinisterResolver<TParent>;\n}\n\nexport interface SinisterPayloadToSinisterResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterAilingPayloadTypeResolver<TParent = any> {\n  sinisterAiling?: SinisterAilingPayloadToSinisterAilingResolver<TParent>;\n}\n\nexport interface SinisterAilingPayloadToSinisterAilingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterCarPayloadTypeResolver<TParent = any> {\n  sinisterCar?: SinisterCarPayloadToSinisterCarResolver<TParent>;\n}\n\nexport interface SinisterCarPayloadToSinisterCarResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterCarContactPayloadTypeResolver<TParent = any> {\n  sinisterCarContact?: SinisterCarContactPayloadToSinisterCarContactResolver<TParent>;\n}\n\nexport interface SinisterCarContactPayloadToSinisterCarContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterDamagePayloadTypeResolver<TParent = any> {\n  sinisterDamage?: SinisterDamagePayloadToSinisterDamageResolver<TParent>;\n}\n\nexport interface SinisterDamagePayloadToSinisterDamageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterDamageContactPayloadTypeResolver<TParent = any> {\n  sinisterDamageContact?: SinisterDamageContactPayloadToSinisterDamageContactResolver<TParent>;\n}\n\nexport interface SinisterDamageContactPayloadToSinisterDamageContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterLifePayloadTypeResolver<TParent = any> {\n  sinisterLife?: SinisterLifePayloadToSinisterLifeResolver<TParent>;\n}\n\nexport interface SinisterLifePayloadToSinisterLifeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterLifeContactPayloadTypeResolver<TParent = any> {\n  sinisterLifeContact?: SinisterLifeContactPayloadToSinisterLifeContactResolver<TParent>;\n}\n\nexport interface SinisterLifeContactPayloadToSinisterLifeContactResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterHospitalPayloadTypeResolver<TParent = any> {\n  sinisterHospital?: SinisterHospitalPayloadToSinisterHospitalResolver<TParent>;\n}\n\nexport interface SinisterHospitalPayloadToSinisterHospitalResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISinisterFacturaPayloadTypeResolver<TParent = any> {\n  sinisterFactura?: SinisterFacturaPayloadToSinisterFacturaResolver<TParent>;\n}\n\nexport interface SinisterFacturaPayloadToSinisterFacturaResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptPayloadTypeResolver<TParent = any> {\n  policeReceipt?: PoliceReceiptPayloadToPoliceReceiptResolver<TParent>;\n}\n\nexport interface PoliceReceiptPayloadToPoliceReceiptResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptAccountPayloadTypeResolver<TParent = any> {\n  policeReceiptAccount?: PoliceReceiptAccountPayloadToPoliceReceiptAccountResolver<TParent>;\n}\n\nexport interface PoliceReceiptAccountPayloadToPoliceReceiptAccountResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptAccountStatePayloadTypeResolver<TParent = any> {\n  policeReceiptAccountState?: PoliceReceiptAccountStatePayloadToPoliceReceiptAccountStateResolver<TParent>;\n}\n\nexport interface PoliceReceiptAccountStatePayloadToPoliceReceiptAccountStateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptFolioPayloadTypeResolver<TParent = any> {\n  policeReceiptFolio?: PoliceReceiptFolioPayloadToPoliceReceiptFolioResolver<TParent>;\n}\n\nexport interface PoliceReceiptFolioPayloadToPoliceReceiptFolioResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceReceiptPaymentPayloadTypeResolver<TParent = any> {\n  policeReceiptPayment?: PoliceReceiptPaymentPayloadToPoliceReceiptPaymentResolver<TParent>;\n}\n\nexport interface PoliceReceiptPaymentPayloadToPoliceReceiptPaymentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IPoliceFilePayloadTypeResolver<TParent = any> {\n  policeFile?: PoliceFilePayloadToPoliceFileResolver<TParent>;\n}\n\nexport interface PoliceFilePayloadToPoliceFileResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerCommentPayloadTypeResolver<TParent = any> {\n  insurerComment?: InsurerCommentPayloadToInsurerCommentResolver<TParent>;\n}\n\nexport interface InsurerCommentPayloadToInsurerCommentResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerFileReadingPayloadTypeResolver<TParent = any> {\n  insurerFileReading?: InsurerFileReadingPayloadToInsurerFileReadingResolver<TParent>;\n}\n\nexport interface InsurerFileReadingPayloadToInsurerFileReadingResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerFileReadingTagPayloadTypeResolver<TParent = any> {\n  insurerFileReadingTag?: InsurerFileReadingTagPayloadToInsurerFileReadingTagResolver<TParent>;\n}\n\nexport interface InsurerFileReadingTagPayloadToInsurerFileReadingTagResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerBailTypePayloadTypeResolver<TParent = any> {\n  insurerBailType?: InsurerBailTypePayloadToInsurerBailTypeResolver<TParent>;\n}\n\nexport interface InsurerBailTypePayloadToInsurerBailTypeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerInvolvedPayloadTypeResolver<TParent = any> {\n  insurerInvolved?: InsurerInvolvedPayloadToInsurerInvolvedResolver<TParent>;\n}\n\nexport interface InsurerInvolvedPayloadToInsurerInvolvedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerLogPayloadTypeResolver<TParent = any> {\n  insurerLog?: InsurerLogPayloadToInsurerLogResolver<TParent>;\n}\n\nexport interface InsurerLogPayloadToInsurerLogResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerLogEmailPayloadTypeResolver<TParent = any> {\n  insurerLogEmail?: InsurerLogEmailPayloadToInsurerLogEmailResolver<TParent>;\n}\n\nexport interface InsurerLogEmailPayloadToInsurerLogEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerOrgInfoPayloadTypeResolver<TParent = any> {\n  insurerOrgInfo?: InsurerOrgInfoPayloadToInsurerOrgInfoResolver<TParent>;\n}\n\nexport interface InsurerOrgInfoPayloadToInsurerOrgInfoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerTicketPayloadTypeResolver<TParent = any> {\n  insurerTicket?: InsurerTicketPayloadToInsurerTicketResolver<TParent>;\n}\n\nexport interface InsurerTicketPayloadToInsurerTicketResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerSchedulePayloadTypeResolver<TParent = any> {\n  insurerSchedule?: InsurerSchedulePayloadToInsurerScheduleResolver<TParent>;\n}\n\nexport interface InsurerSchedulePayloadToInsurerScheduleResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerScheduleParticipantPayloadTypeResolver<TParent = any> {\n  insurerScheduleParticipant?: InsurerScheduleParticipantPayloadToInsurerScheduleParticipantResolver<TParent>;\n}\n\nexport interface InsurerScheduleParticipantPayloadToInsurerScheduleParticipantResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerNotificationPayloadTypeResolver<TParent = any> {\n  insurerNotification?: InsurerNotificationPayloadToInsurerNotificationResolver<TParent>;\n}\n\nexport interface InsurerNotificationPayloadToInsurerNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderPayloadTypeResolver<TParent = any> {\n  insurerReminder?: InsurerReminderPayloadToInsurerReminderResolver<TParent>;\n}\n\nexport interface InsurerReminderPayloadToInsurerReminderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderProjectAgentProviderPayloadTypeResolver<TParent = any> {\n  insurerReminderProjectAgentProvider?: InsurerReminderProjectAgentProviderPayloadToInsurerReminderProjectAgentProviderResolver<TParent>;\n}\n\nexport interface InsurerReminderProjectAgentProviderPayloadToInsurerReminderProjectAgentProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderRecordPayloadTypeResolver<TParent = any> {\n  insurerReminderRecord?: InsurerReminderRecordPayloadToInsurerReminderRecordResolver<TParent>;\n}\n\nexport interface InsurerReminderRecordPayloadToInsurerReminderRecordResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerReminderSubBranchPayloadTypeResolver<TParent = any> {\n  insurerReminderSubBranch?: InsurerReminderSubBranchPayloadToInsurerReminderSubBranchResolver<TParent>;\n}\n\nexport interface InsurerReminderSubBranchPayloadToInsurerReminderSubBranchResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerBirthDateTemplatePayloadTypeResolver<TParent = any> {\n  insurerBirthDateTemplate?: InsurerBirthDateTemplatePayloadToInsurerBirthDateTemplateResolver<TParent>;\n}\n\nexport interface InsurerBirthDateTemplatePayloadToInsurerBirthDateTemplateResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerDirectoryPayloadTypeResolver<TParent = any> {\n  insurerDirectory?: InsurerDirectoryPayloadToInsurerDirectoryResolver<TParent>;\n}\n\nexport interface InsurerDirectoryPayloadToInsurerDirectoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerExpensePayloadTypeResolver<TParent = any> {\n  insurerExpense?: InsurerExpensePayloadToInsurerExpenseResolver<TParent>;\n}\n\nexport interface InsurerExpensePayloadToInsurerExpenseResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerIbisFormPayloadTypeResolver<TParent = any> {\n  insurerIbisForm?: InsurerIbisFormPayloadToInsurerIbisFormResolver<TParent>;\n}\n\nexport interface InsurerIbisFormPayloadToInsurerIbisFormResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerIbisProviderPayloadTypeResolver<TParent = any> {\n  insurerIbisProvider?: InsurerIbisProviderPayloadToInsurerIbisProviderResolver<TParent>;\n}\n\nexport interface InsurerIbisProviderPayloadToInsurerIbisProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerSenderPayloadTypeResolver<TParent = any> {\n  insurerSender?: InsurerSenderPayloadToInsurerSenderResolver<TParent>;\n}\n\nexport interface InsurerSenderPayloadToInsurerSenderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IInsurerZipCodeSepomexPayloadTypeResolver<TParent = any> {\n  insurerZipCodeSepomex?: InsurerZipCodeSepomexPayloadToInsurerZipCodeSepomexResolver<TParent>;\n}\n\nexport interface InsurerZipCodeSepomexPayloadToInsurerZipCodeSepomexResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAgentProviderBonoPayloadTypeResolver<TParent = any> {\n  agentProviderBono?: AgentProviderBonoPayloadToAgentProviderBonoResolver<TParent>;\n}\n\nexport interface AgentProviderBonoPayloadToAgentProviderBonoResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendNotificationPayloadTypeResolver<TParent = any> {\n  sended?: SendNotificationPayloadToSendedResolver<TParent>;\n}\n\nexport interface SendNotificationPayloadToSendedResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMultipleNotificationPayloadTypeResolver<TParent = any> {\n  notifications?: MultipleNotificationPayloadToNotificationsResolver<TParent>;\n}\n\nexport interface MultipleNotificationPayloadToNotificationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMultipleMemberNotificationPayloadTypeResolver<TParent = any> {\n  notifications?: MultipleMemberNotificationPayloadToNotificationsResolver<TParent>;\n}\n\nexport interface MultipleMemberNotificationPayloadToNotificationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IMemberNotificationPayloadTypeResolver<TParent = any> {\n  notifications?: MemberNotificationPayloadToNotificationsResolver<TParent>;\n}\n\nexport interface MemberNotificationPayloadToNotificationsResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface INotificationPayloadTypeResolver<TParent = any> {\n  notification?: NotificationPayloadToNotificationResolver<TParent>;\n}\n\nexport interface NotificationPayloadToNotificationResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDevicePayloadTypeResolver<TParent = any> {\n  device?: DevicePayloadToDeviceResolver<TParent>;\n}\n\nexport interface DevicePayloadToDeviceResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISetCodeAsUnavailablePayloadTypeResolver<TParent = any> {\n  success?: SetCodeAsUnavailablePayloadToSuccessResolver<TParent>;\n}\n\nexport interface SetCodeAsUnavailablePayloadToSuccessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateAdminCodePayloadTypeResolver<TParent = any> {\n  adminCode?: CreateAdminCodePayloadToAdminCodeResolver<TParent>;\n}\n\nexport interface CreateAdminCodePayloadToAdminCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAdminCodeTypeResolver<TParent = any> {\n  code?: AdminCodeToCodeResolver<TParent>;\n  isAvailable?: AdminCodeToIsAvailableResolver<TParent>;\n  id?: AdminCodeToIdResolver<TParent>;\n  createdAt?: AdminCodeToCreatedAtResolver<TParent>;\n  updatedAt?: AdminCodeToUpdatedAtResolver<TParent>;\n}\n\nexport interface AdminCodeToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdminCodeToIsAvailableResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdminCodeToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdminCodeToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdminCodeToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IScanCodePayloadTypeResolver<TParent = any> {\n  code?: ScanCodePayloadToCodeResolver<TParent>;\n}\n\nexport interface ScanCodePayloadToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISendMessagePayloadTypeResolver<TParent = any> {\n  code?: SendMessagePayloadToCodeResolver<TParent>;\n}\n\nexport interface SendMessagePayloadToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ILookForCodePayloadTypeResolver<TParent = any> {\n  success?: LookForCodePayloadToSuccessResolver<TParent>;\n}\n\nexport interface LookForCodePayloadToSuccessResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateCodePayloadTypeResolver<TParent = any> {\n  code?: CreateCodePayloadToCodeResolver<TParent>;\n}\n\nexport interface CreateCodePayloadToCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePrizeCategoryPayloadTypeResolver<TParent = any> {\n  prizeCategory?: CreatePrizeCategoryPayloadToPrizeCategoryResolver<TParent>;\n}\n\nexport interface CreatePrizeCategoryPayloadToPrizeCategoryResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreatePrizeCodePayloadTypeResolver<TParent = any> {\n  prizeCode?: CreatePrizeCodePayloadToPrizeCodeResolver<TParent>;\n}\n\nexport interface CreatePrizeCodePayloadToPrizeCodeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteCodePayloadTypeResolver<TParent = any> {\n  message?: DeleteCodePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteCodePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeletePrizeCodePayloadTypeResolver<TParent = any> {\n  message?: DeletePrizeCodePayloadToMessageResolver<TParent>;\n}\n\nexport interface DeletePrizeCodePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IExchangeDotsPayloadTypeResolver<TParent = any> {\n  dotMovement?: ExchangeDotsPayloadToDotMovementResolver<TParent>;\n}\n\nexport interface ExchangeDotsPayloadToDotMovementResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateAdverseEventPayloadTypeResolver<TParent = any> {\n  adverseEvent?: CreateAdverseEventPayloadToAdverseEventResolver<TParent>;\n}\n\nexport interface CreateAdverseEventPayloadToAdverseEventResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAdverseEventTypeResolver<TParent = any> {\n  projectId?: AdverseEventToProjectIdResolver<TParent>;\n  memberId?: AdverseEventToMemberIdResolver<TParent>;\n  name?: AdverseEventToNameResolver<TParent>;\n  email?: AdverseEventToEmailResolver<TParent>;\n  problem?: AdverseEventToProblemResolver<TParent>;\n  description?: AdverseEventToDescriptionResolver<TParent>;\n  problemStatus?: AdverseEventToProblemStatusResolver<TParent>;\n  id?: AdverseEventToIdResolver<TParent>;\n  createdAt?: AdverseEventToCreatedAtResolver<TParent>;\n  updatedAt?: AdverseEventToUpdatedAtResolver<TParent>;\n}\n\nexport interface AdverseEventToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdverseEventToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdverseEventToNameResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdverseEventToEmailResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdverseEventToProblemResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdverseEventToDescriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdverseEventToProblemStatusResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdverseEventToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdverseEventToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AdverseEventToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IDeleteAdverseEventPayloadTypeResolver<TParent = any> {\n  message?: DeleteAdverseEventPayloadToMessageResolver<TParent>;\n}\n\nexport interface DeleteAdverseEventPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateBrandPayloadTypeResolver<TParent = any> {\n  brand?: CreateBrandPayloadToBrandResolver<TParent>;\n}\n\nexport interface CreateBrandPayloadToBrandResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ISubscriptionTypeResolver<TParent = any> {\n  conversationPublished?: SubscriptionToConversationPublishedResolver<TParent>;\n}\n\nexport interface SubscriptionToConversationPublishedArgs {\n  conversationId: string;\n}\nexport interface SubscriptionToConversationPublishedResolver<TParent = any, TResult = any> {\n  resolve?: (parent: TParent, args: SubscriptionToConversationPublishedArgs, context: any, info: GraphQLResolveInfo) => TResult;\n  subscribe: (parent: TParent, args: SubscriptionToConversationPublishedArgs, context: any, info: GraphQLResolveInfo) => AsyncIterator<TResult>;\n}\n\nexport interface Iexchange_CreateProviderPayloadTypeResolver<TParent = any> {\n  provider?: exchange_CreateProviderPayloadToProviderResolver<TParent>;\n}\n\nexport interface exchange_CreateProviderPayloadToProviderResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePurchaseQuoteMutationTypeResolver<TParent = any> {\n  updatePurchaseQuote?: UpdatePurchaseQuoteMutationToUpdatePurchaseQuoteResolver<TParent>;\n}\n\nexport interface UpdatePurchaseQuoteMutationToUpdatePurchaseQuoteArgs {\n  input: IUpdatePurchaseQuoteInput;\n}\nexport interface UpdatePurchaseQuoteMutationToUpdatePurchaseQuoteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: UpdatePurchaseQuoteMutationToUpdatePurchaseQuoteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdatePurchaseQuotePayloadTypeResolver<TParent = any> {\n  message?: UpdatePurchaseQuotePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdatePurchaseQuotePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateRouteMutationTypeResolver<TParent = any> {\n  updateRoute?: UpdateRouteMutationToUpdateRouteResolver<TParent>;\n}\n\nexport interface UpdateRouteMutationToUpdateRouteArgs {\n  input: IUpdateRouteInput;\n}\nexport interface UpdateRouteMutationToUpdateRouteResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: UpdateRouteMutationToUpdateRouteArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IUpdateRoutePayloadTypeResolver<TParent = any> {\n  message?: UpdateRoutePayloadToMessageResolver<TParent>;\n}\n\nexport interface UpdateRoutePayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Idocsreader_CreateTemplatePayloadTypeResolver<TParent = any> {\n  scans?: docsreader_CreateTemplatePayloadToScansResolver<TParent>;\n}\n\nexport interface docsreader_CreateTemplatePayloadToScansResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateDettachedStripeSuscriptionMutationTypeResolver<TParent = any> {\n  createDettachedStripeSuscription?: CreateDettachedStripeSuscriptionMutationToCreateDettachedStripeSuscriptionResolver<TParent>;\n}\n\nexport interface CreateDettachedStripeSuscriptionMutationToCreateDettachedStripeSuscriptionArgs {\n  input: ICreateDettachedStripeSuscriptionInput;\n}\nexport interface CreateDettachedStripeSuscriptionMutationToCreateDettachedStripeSuscriptionResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: CreateDettachedStripeSuscriptionMutationToCreateDettachedStripeSuscriptionArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateDettachedStripeSuscriptionPayloadTypeResolver<TParent = any> {\n  message?: CreateDettachedStripeSuscriptionPayloadToMessageResolver<TParent>;\n}\n\nexport interface CreateDettachedStripeSuscriptionPayloadToMessageResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateStripeCustomerMutationTypeResolver<TParent = any> {\n  createStripeCustomer?: CreateStripeCustomerMutationToCreateStripeCustomerResolver<TParent>;\n}\n\nexport interface CreateStripeCustomerMutationToCreateStripeCustomerArgs {\n  input: ICreateStripeCustomerInput;\n}\nexport interface CreateStripeCustomerMutationToCreateStripeCustomerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: CreateStripeCustomerMutationToCreateStripeCustomerArgs, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface ICreateStripeCustomerPayloadTypeResolver<TParent = any> {\n  customer?: CreateStripeCustomerPayloadToCustomerResolver<TParent>;\n}\n\nexport interface CreateStripeCustomerPayloadToCustomerResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IStripeCustomerTypeResolver<TParent = any> {\n  memberId?: StripeCustomerToMemberIdResolver<TParent>;\n  projectId?: StripeCustomerToProjectIdResolver<TParent>;\n  stripeId?: StripeCustomerToStripeIdResolver<TParent>;\n  paymentMethodId?: StripeCustomerToPaymentMethodIdResolver<TParent>;\n  paymentMethod?: StripeCustomerToPaymentMethodResolver<TParent>;\n  id?: StripeCustomerToIdResolver<TParent>;\n  createdAt?: StripeCustomerToCreatedAtResolver<TParent>;\n  updatedAt?: StripeCustomerToUpdatedAtResolver<TParent>;\n}\n\nexport interface StripeCustomerToMemberIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StripeCustomerToProjectIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StripeCustomerToStripeIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StripeCustomerToPaymentMethodIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StripeCustomerToPaymentMethodResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StripeCustomerToIdResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StripeCustomerToCreatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface StripeCustomerToUpdatedAtResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface IAuthorizeDirectiveTypeResolver<TParent = any> {\n  policy?: AuthorizeDirectiveToPolicyResolver<TParent>;\n  roles?: AuthorizeDirectiveToRolesResolver<TParent>;\n  apply?: AuthorizeDirectiveToApplyResolver<TParent>;\n}\n\nexport interface AuthorizeDirectiveToPolicyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AuthorizeDirectiveToRolesResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface AuthorizeDirectiveToApplyResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n\nexport interface Iitus_CreateOfficePayloadTypeResolver<TParent = any> {\n  office?: itus_CreateOfficePayloadToOfficeResolver<TParent>;\n}\n\nexport interface itus_CreateOfficePayloadToOfficeResolver<TParent = any, TResult = any> {\n  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;\n}\n"],"names":["IPeriodInvoice","IBillingForm","IPaymentTerm","ITypeInsurance","IPerson","IUseCDFI","Iauth_PaymentMethod","IEnumMemberRelationStatus","ISellStatus","IGender","IMaritalStatus","ISocialNetworkType","ISortEnumType","IEnumTransactionStatus","IEnumTransactionService","IEnumTransactionType","IInvoiceStatus","IProductStatus","IArticleStatus","ITypeContent","IArticleLanguage","IQuestionType","IShopType","IStoreType","IProductType","ICostingType","IProductModality","IProviderType","IEnumDiscount","IEnumResourceQuoteStatus","IEnumQuizStatus","IQuiz_QuestionType","IEnumTagPosition","IEnumOnlineQuizStatus","IEnumCivilState","IEnumBenefits","IEnumHiringType","IFrequencyPayment","IServicePayment","IBackgroundTypesOptions","IEnumInsideType","IProgress","IPriority","IEnumSpaceAccess","IEnumVisibility","IFunctionType","IServiceEmail","ITemplateService","ITypeForm","ICourseLevel","ICourseModality","ICourseType","IBeginType","IPurchaseQuoteStatus","IEventMode","IEventVisibility","IEventStatus","ITemplateType","IRoleType","ICouponRuleType","IRuleAppliesOn","ITypeVideo","IEnumRecordStatus","IEnumNameCatalog","IEnumFormsPayment","ITransactionType","ITransactionStatus","IQuoteGender","IQuoteStatus","IServiceEnvironment","IInsurerPackageStatus","IEnumQuoteStatus","IMetaType","IServiceOption","ICertificateType","IInsurerType","IMerchandiseStatus","ITransportMode","ICoverageType","IPolicyType","IPaymentResponsable","IIssueStatus","ICertificateStatusFrom","ICertificateMovementType","Iitus_PaymentTerm","IInvoicingMethod","IInvoicingPeriod","IContractorType","IPolicyStatus","IContactType","IEnumStudenteVerify","IEnumAttendanceStatus","IEnumFCurrency","IEnumBonoType","ITypeAgentProvider","IEnumPolicePaymentType","IEnumPoliceStatus","IEnumPoliceDocumentType","IEnumPoliceAdministrationType","IEnumPoliceRenew","IEnumPoliceRenewalStatus","IEnumPoliceReceipts","IEnumPayScheme","IEnumPoliceConcept","IEnumPoliceEmisionStatus","IEnumPoliceBussinessLine","IEnumPolicyType","IEnumConductChoise","Isaam_EnumGender","IEnumContractorType","IEnumContractorGroupType","IEnumSinisterRelation","IEnumSinisterKind","IEnumSinisterReason","IEnumSinisterType","IEnumSinisterPaymentType","IEnumSinisterStatus","IEnumTypeSinisterGeneral","IEnumSinisterCarType","IEnumSinisterCarSubType","IEnumSinisterCarSubSubType","IEnumSinisterLifeReason","IEnumSAType","IEnumEntorsementType","IEnumPoliceReceiptStatus","IEnumPoliceReceiptType","IEnumBank","IEnumReferrerClosed","IEnumPoliceReceiptPaymentMethod","IEnumAutoType","IEnumChargeType","IEnumProcedent","IEnumFormDamageType","IEnumConstructionType","IEnumContractorGroupingType","IEnumReferrerPaymentType","IEnumReferrerFrequency","IEnumReferrerAccountState","IEnumPoliceQuoteStatus","IEnumInsurerReminderType","IEnumInsurerReminderInstanceType","IEnumInsurerCommentModel","IEnumEmaiModel","IEnumEmailFrequency","IEnumEmailRamo","IEnumEmailType","IEnumEmailChargeType","IEnumEmailDateType","IEnumPoliceReceiptFolioPaymentMethod","IEnumInsurerLogEvent","IEnumInsurerTicketPriority","IEnumInsurerTicketConcept","IEnumNotificationType","IEnumMonth","IEnumResponsableArea","Iexchange_Status","IMovementType","IPrizeCodeStatus","IHttpStatusCode","IEnumGender","IEnumInsurerSubBranch","IEnumIdProduct","IEnumMethodPayment","IEnumTypePerson","IEnumInterval","IEnumInsurer","IPdfType","IStatus","IProblemStatus","IApplyPolicy"],"mappings":";;;;AA47BkBA,gCAKjB;AALD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,sBAAc,KAAdA,sBAAc,GAK/B,EAAA,CAAA,CAAA,CAAA;AASiBC,8BAGjB;AAHD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAHiBA,oBAAY,KAAZA,oBAAY,GAG7B,EAAA,CAAA,CAAA,CAAA;AASiBC,8BAKjB;AALD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,YAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EALiBA,oBAAY,KAAZA,oBAAY,GAK7B,EAAA,CAAA,CAAA,CAAA;AA6ViBC,gCAQjB;AARD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,cAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,cAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,cAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,cAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EARiBA,sBAAc,KAAdA,sBAAc,GAQ/B,EAAA,CAAA,CAAA,CAAA;AAyCiBC,yBAGjB;AAHD,CAAA,UAAkB,OAAO,EAAA;AACvB,IAAA,OAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,OAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAHiBA,eAAO,KAAPA,eAAO,GAGxB,EAAA,CAAA,CAAA,CAAA;AASiBC,0BAOjB;AAPD,CAAA,UAAkB,QAAQ,EAAA;AACxB,IAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,QAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,QAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,QAAA,CAAA,8BAAA,CAAA,GAAA,8BAA6D,CAAA;AAC7D,IAAA,QAAA,CAAA,+CAAA,CAAA,GAAA,+CAA+F,CAAA;AACjG,CAAC,EAPiBA,gBAAQ,KAARA,gBAAQ,GAOzB,EAAA,CAAA,CAAA,CAAA;AASiBC,qCAMjB;AAND,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,mBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EANiBA,2BAAmB,KAAnBA,2BAAmB,GAMpC,EAAA,CAAA,CAAA,CAAA;AAuDiBC,2CAKjB;AALD,CAAA,UAAkB,yBAAyB,EAAA;AACzC,IAAA,yBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,yBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,yBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,yBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EALiBA,iCAAyB,KAAzBA,iCAAyB,GAK1C,EAAA,CAAA,CAAA,CAAA;AAoCiBC,6BAIjB;AAJD,CAAA,UAAkB,WAAW,EAAA;AAC3B,IAAA,WAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,WAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAJiBA,mBAAW,KAAXA,mBAAW,GAI5B,EAAA,CAAA,CAAA,CAAA;AA2DiBC,yBAIjB;AAJD,CAAA,UAAkB,OAAO,EAAA;AACvB,IAAA,OAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,OAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,OAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJiBA,eAAO,KAAPA,eAAO,GAIxB,EAAA,CAAA,CAAA,CAAA;AASiBC,gCAOjB;AAPD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAPiBA,sBAAc,KAAdA,sBAAc,GAO/B,EAAA,CAAA,CAAA,CAAA;AAmCiBC,oCAIjB;AAJD,CAAA,UAAkB,kBAAkB,EAAA;AAClC,IAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,kBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAJiBA,0BAAkB,KAAlBA,0BAAkB,GAInC,EAAA,CAAA,CAAA,CAAA;AAyDiBC,+BAGjB;AAHD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAHiBA,qBAAa,KAAbA,qBAAa,GAG9B,EAAA,CAAA,CAAA,CAAA;AAkoBiBC,wCAKjB;AALD,CAAA,UAAkB,sBAAsB,EAAA;AACtC,IAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,sBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,sBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,sBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EALiBA,8BAAsB,KAAtBA,8BAAsB,GAKvC,EAAA,CAAA,CAAA,CAAA;AA2BiBC,yCAGjB;AAHD,CAAA,UAAkB,uBAAuB,EAAA;AACvC,IAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAHiBA,+BAAuB,KAAvBA,+BAAuB,GAGxC,EAAA,CAAA,CAAA,CAAA;AAEiBC,sCAIjB;AAJD,CAAA,UAAkB,oBAAoB,EAAA;AACpC,IAAA,oBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJiBA,4BAAoB,KAApBA,4BAAoB,GAIrC,EAAA,CAAA,CAAA,CAAA;AAsFiBC,gCAIjB;AAJD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAJiBA,sBAAc,KAAdA,sBAAc,GAI/B,EAAA,CAAA,CAAA,CAAA;AA+EiBC,gCAKjB;AALD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,cAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,cAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EALiBA,sBAAc,KAAdA,sBAAc,GAK/B,EAAA,CAAA,CAAA,CAAA;AA4DiBC,gCAIjB;AAJD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,cAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EAJiBA,sBAAc,KAAdA,sBAAc,GAI/B,EAAA,CAAA,CAAA,CAAA;AAEiBC,8BAOjB;AAPD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,YAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,YAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACjC,CAAC,EAPiBA,oBAAY,KAAZA,oBAAY,GAO7B,EAAA,CAAA,CAAA,CAAA;AAEiBC,kCAQjB;AARD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACX,CAAC,EARiBA,wBAAgB,KAAhBA,wBAAgB,GAQjC,EAAA,CAAA,CAAA,CAAA;AA8BiBC,+BAIjB;AAJD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAJiBA,qBAAa,KAAbA,qBAAa,GAI9B,EAAA,CAAA,CAAA,CAAA;AAgDiBC,2BAIjB;AAJD,CAAA,UAAkB,SAAS,EAAA;AACzB,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAJiBA,iBAAS,KAATA,iBAAS,GAI1B,EAAA,CAAA,CAAA,CAAA;AA+CiBC,4BAGjB;AAHD,CAAA,UAAkB,UAAU,EAAA;AAC1B,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAHiBA,kBAAU,KAAVA,kBAAU,GAG3B,EAAA,CAAA,CAAA,CAAA;AAciBC,8BAGjB;AAHD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,YAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAHiBA,oBAAY,KAAZA,oBAAY,GAG7B,EAAA,CAAA,CAAA,CAAA;AAEiBC,8BAOjB;AAPD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAPiBA,oBAAY,KAAZA,oBAAY,GAO7B,EAAA,CAAA,CAAA,CAAA;AAEiBC,kCAOjB;AAPD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,gBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,gBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAPiBA,wBAAgB,KAAhBA,wBAAgB,GAOjC,EAAA,CAAA,CAAA,CAAA;AA6FiBC,+BAGjB;AAHD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAHiBA,qBAAa,KAAbA,qBAAa,GAG9B,EAAA,CAAA,CAAA,CAAA;AAwIiBC,+BAGjB;AAHD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHiBA,qBAAa,KAAbA,qBAAa,GAG9B,EAAA,CAAA,CAAA,CAAA;AAEiBC,0CAMjB;AAND,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EANiBA,gCAAwB,KAAxBA,gCAAwB,GAMzC,EAAA,CAAA,CAAA,CAAA;AAmJiBC,iCAIjB;AAJD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAJiBA,uBAAe,KAAfA,uBAAe,GAIhC,EAAA,CAAA,CAAA,CAAA;AAoCiBC,oCAIjB;AAJD,CAAA,UAAkB,kBAAkB,EAAA;AAClC,IAAA,kBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,kBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAJiBA,0BAAkB,KAAlBA,0BAAkB,GAInC,EAAA,CAAA,CAAA,CAAA;AAEiBC,kCAOjB;AAPD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAPiBA,wBAAgB,KAAhBA,wBAAgB,GAOjC,EAAA,CAAA,CAAA,CAAA;AAiCiBC,uCAGjB;AAHD,CAAA,UAAkB,qBAAqB,EAAA;AACrC,IAAA,qBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,qBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAHiBA,6BAAqB,KAArBA,6BAAqB,GAGtC,EAAA,CAAA,CAAA,CAAA;AA2CiBC,iCAOjB;AAPD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAPiBA,uBAAe,KAAfA,uBAAe,GAOhC,EAAA,CAAA,CAAA,CAAA;AAEiBC,+BAGjB;AAHD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,aAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAHiBA,qBAAa,KAAbA,qBAAa,GAG9B,EAAA,CAAA,CAAA,CAAA;AAEiBC,iCAMjB;AAND,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EANiBA,uBAAe,KAAfA,uBAAe,GAMhC,EAAA,CAAA,CAAA,CAAA;AA6GiBC,mCAMjB;AAND,CAAA,UAAkB,iBAAiB,EAAA;AACjC,IAAA,iBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,iBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,iBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EANiBA,yBAAiB,KAAjBA,yBAAiB,GAMlC,EAAA,CAAA,CAAA,CAAA;AAwCiBC,iCAMjB;AAND,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EANiBA,uBAAe,KAAfA,uBAAe,GAMhC,EAAA,CAAA,CAAA,CAAA;AA4FiBC,yCAKjB;AALD,CAAA,UAAkB,uBAAuB,EAAA;AACvC,IAAA,uBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,uBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,uBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,uBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EALiBA,+BAAuB,KAAvBA,+BAAuB,GAKxC,EAAA,CAAA,CAAA,CAAA;AAqUiBC,iCASjB;AATD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EATiBA,uBAAe,KAAfA,uBAAe,GAShC,EAAA,CAAA,CAAA,CAAA;AA+DiBC,2BAMjB;AAND,CAAA,UAAkB,SAAS,EAAA;AACzB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EANiBA,iBAAS,KAATA,iBAAS,GAM1B,EAAA,CAAA,CAAA,CAAA;AAEiBC,2BAKjB;AALD,CAAA,UAAkB,SAAS,EAAA;AACzB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EALiBA,iBAAS,KAATA,iBAAS,GAK1B,EAAA,CAAA,CAAA,CAAA;AAgCiBC,kCAGjB;AAHD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAHiBA,wBAAgB,KAAhBA,wBAAgB,GAGjC,EAAA,CAAA,CAAA,CAAA;AAEiBC,iCAIjB;AAJD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJiBA,uBAAe,KAAfA,uBAAe,GAIhC,EAAA,CAAA,CAAA,CAAA;AAqKiBC,+BAKjB;AALD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,aAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,aAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,qBAAa,KAAbA,qBAAa,GAK9B,EAAA,CAAA,CAAA,CAAA;AAmiBiBC,+BAEjB;AAFD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAFiBA,qBAAa,KAAbA,qBAAa,GAE9B,EAAA,CAAA,CAAA,CAAA;AAEiBC,kCAEjB;AAFD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAFiBA,wBAAgB,KAAhBA,wBAAgB,GAEjC,EAAA,CAAA,CAAA,CAAA;AAuLiBC,2BAMjB;AAND,CAAA,UAAkB,SAAS,EAAA;AACzB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACvC,CAAC,EANiBA,iBAAS,KAATA,iBAAS,GAM1B,EAAA,CAAA,CAAA,CAAA;AAk6BiBC,8BAGjB;AAHD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHiBA,oBAAY,KAAZA,oBAAY,GAG7B,EAAA,CAAA,CAAA,CAAA;AAEiBC,iCAGjB;AAHD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAHiBA,uBAAe,KAAfA,uBAAe,GAGhC,EAAA,CAAA,CAAA,CAAA;AAEiBC,6BAGjB;AAHD,CAAA,UAAkB,WAAW,EAAA;AAC3B,IAAA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,WAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAHiBA,mBAAW,KAAXA,mBAAW,GAG5B,EAAA,CAAA,CAAA,CAAA;AAEiBC,4BAGjB;AAHD,CAAA,UAAkB,UAAU,EAAA;AAC1B,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHiBA,kBAAU,KAAVA,kBAAU,GAG3B,EAAA,CAAA,CAAA,CAAA;AA+vBiBC,sCAIjB;AAJD,CAAA,UAAkB,oBAAoB,EAAA;AACpC,IAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAJiBA,4BAAoB,KAApBA,4BAAoB,GAIrC,EAAA,CAAA,CAAA,CAAA;AAmbiBC,4BAGjB;AAHD,CAAA,UAAkB,UAAU,EAAA;AAC1B,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAHiBA,kBAAU,KAAVA,kBAAU,GAG3B,EAAA,CAAA,CAAA,CAAA;AA0BiBC,kCAGjB;AAHD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAHiBA,wBAAgB,KAAhBA,wBAAgB,GAGjC,EAAA,CAAA,CAAA,CAAA;AAYiBC,8BAGjB;AAHD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAHiBA,oBAAY,KAAZA,oBAAY,GAG7B,EAAA,CAAA,CAAA,CAAA;AA8tBiBC,+BAOjB;AAPD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,aAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,aAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACzC,CAAC,EAPiBA,qBAAa,KAAbA,qBAAa,GAO9B,EAAA,CAAA,CAAA,CAAA;AAsUiBC,2BAIjB;AAJD,CAAA,UAAkB,SAAS,EAAA;AACzB,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAJiBA,iBAAS,KAATA,iBAAS,GAI1B,EAAA,CAAA,CAAA,CAAA;AASiBC,iCAGjB;AAHD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHiBA,uBAAe,KAAfA,uBAAe,GAGhC,EAAA,CAAA,CAAA,CAAA;AASiBC,gCAIjB;AAJD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EAJiBA,sBAAc,KAAdA,sBAAc,GAI/B,EAAA,CAAA,CAAA,CAAA;AAifiBC,4BAGjB;AAHD,CAAA,UAAkB,UAAU,EAAA;AAC1B,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAHiBA,kBAAU,KAAVA,kBAAU,GAG3B,EAAA,CAAA,CAAA,CAAA;AA2BiBC,mCAGjB;AAHD,CAAA,UAAkB,iBAAiB,EAAA;AACjC,IAAA,iBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,iBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHiBA,yBAAiB,KAAjBA,yBAAiB,GAGlC,EAAA,CAAA,CAAA,CAAA;AA+uBiBC,kCAUjB;AAVD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,gBAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,gBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,gBAAA,CAAA,iCAAA,CAAA,GAAA,iCAAmE,CAAA;AACrE,CAAC,EAViBA,wBAAgB,KAAhBA,wBAAgB,GAUjC,EAAA,CAAA,CAAA,CAAA;AAmBiBC,mCAKjB;AALD,CAAA,UAAkB,iBAAiB,EAAA;AACjC,IAAA,iBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,iBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,yBAAiB,KAAjBA,yBAAiB,GAKlC,EAAA,CAAA,CAAA,CAAA;AA8GiBC,kCAIjB;AAJD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,gBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAJiBA,wBAAgB,KAAhBA,wBAAgB,GAIjC,EAAA,CAAA,CAAA,CAAA;AASiBC,oCAKjB;AALD,CAAA,UAAkB,kBAAkB,EAAA;AAClC,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EALiBA,0BAAkB,KAAlBA,0BAAkB,GAKnC,EAAA,CAAA,CAAA,CAAA;AA+oCiBC,8BAIjB;AAJD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJiBA,oBAAY,KAAZA,oBAAY,GAI7B,EAAA,CAAA,CAAA,CAAA;AASiBC,8BAOjB;AAPD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAPiBA,oBAAY,KAAZA,oBAAY,GAO7B,EAAA,CAAA,CAAA,CAAA;AA2EiBC,qCAIjB;AAJD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJiBA,2BAAmB,KAAnBA,2BAAmB,GAIpC,EAAA,CAAA,CAAA,CAAA;AAyFiBC,uCAIjB;AAJD,CAAA,UAAkB,qBAAqB,EAAA;AACrC,IAAA,qBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,qBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,qBAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACX,CAAC,EAJiBA,6BAAqB,KAArBA,6BAAqB,GAItC,EAAA,CAAA,CAAA,CAAA;AAsTiBC,kCAIjB;AAJD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,gBAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC/C,CAAC,EAJiBA,wBAAgB,KAAhBA,wBAAgB,GAIjC,EAAA,CAAA,CAAA,CAAA;AAkpCiBC,2BAKjB;AALD,CAAA,UAAkB,SAAS,EAAA;AACzB,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,iBAAS,KAATA,iBAAS,GAK1B,EAAA,CAAA,CAAA,CAAA;AA4eiBC,gCAGjB;AAHD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAHiBA,sBAAc,KAAdA,sBAAc,GAG/B,EAAA,CAAA,CAAA,CAAA;AAmnFiBC,kCAGjB;AAHD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,gBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACrC,CAAC,EAHiBA,wBAAgB,KAAhBA,wBAAgB,GAGjC,EAAA,CAAA,CAAA,CAAA;AASiBC,8BAIjB;AAJD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,YAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAJiBA,oBAAY,KAAZA,oBAAY,GAI7B,EAAA,CAAA,CAAA,CAAA;AAmHiBC,oCAKjB;AALD,CAAA,UAAkB,kBAAkB,EAAA;AAClC,IAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,kBAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,0BAAkB,KAAlBA,0BAAkB,GAKnC,EAAA,CAAA,CAAA,CAAA;AA8BiBC,gCAKjB;AALD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,cAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,cAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EALiBA,sBAAc,KAAdA,sBAAc,GAK/B,EAAA,CAAA,CAAA,CAAA;AASiBC,+BAKjB;AALD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,wBAAA,CAAA,GAAA,wBAAiD,CAAA;AACjD,IAAA,aAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,aAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,aAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC7C,CAAC,EALiBA,qBAAa,KAAbA,qBAAa,GAK9B,EAAA,CAAA,CAAA,CAAA;AAmEiBC,6BAGjB;AAHD,CAAA,UAAkB,WAAW,EAAA;AAC3B,IAAA,WAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,WAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAHiBA,mBAAW,KAAXA,mBAAW,GAG5B,EAAA,CAAA,CAAA,CAAA;AASiBC,qCAGjB;AAHD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAHiBA,2BAAmB,KAAnBA,2BAAmB,GAGpC,EAAA,CAAA,CAAA,CAAA;AAwNiBC,8BAKjB;AALD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,YAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,YAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,oBAAY,KAAZA,oBAAY,GAK7B,EAAA,CAAA,CAAA,CAAA;AA4BiBC,wCAGjB;AAHD,CAAA,UAAkB,sBAAsB,EAAA;AACtC,IAAA,sBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAHiBA,8BAAsB,KAAtBA,8BAAsB,GAGvC,EAAA,CAAA,CAAA,CAAA;AAiDiBC,0CAGjB;AAHD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHiBA,gCAAwB,KAAxBA,gCAAwB,GAGzC,EAAA,CAAA,CAAA,CAAA;AAghBiBC,mCAGjB;AAHD,CAAA,UAAkB,iBAAiB,EAAA;AACjC,IAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAHiBA,yBAAiB,KAAjBA,yBAAiB,GAGlC,EAAA,CAAA,CAAA,CAAA;AASiBC,kCAGjB;AAHD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAHiBA,wBAAgB,KAAhBA,wBAAgB,GAGjC,EAAA,CAAA,CAAA,CAAA;AASiBC,kCAKjB;AALD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,wBAAgB,KAAhBA,wBAAgB,GAKjC,EAAA,CAAA,CAAA,CAAA;AA8EiBC,iCAGjB;AAHD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAHiBA,uBAAe,KAAfA,uBAAe,GAGhC,EAAA,CAAA,CAAA,CAAA;AASiBC,+BAGjB;AAHD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,aAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAHiBA,qBAAa,KAAbA,qBAAa,GAG9B,EAAA,CAAA,CAAA,CAAA;AAiMiBC,8BAKjB;AALD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,YAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACzC,CAAC,EALiBA,oBAAY,KAAZA,oBAAY,GAK7B,EAAA,CAAA,CAAA,CAAA;AAuUiBC,qCAIjB;AAJD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,mBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACjC,CAAC,EAJiBA,2BAAmB,KAAnBA,2BAAmB,GAIpC,EAAA,CAAA,CAAA,CAAA;AA4BiBC,uCAMjB;AAND,CAAA,UAAkB,qBAAqB,EAAA;AACrC,IAAA,qBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,qBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,qBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,qBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,qBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EANiBA,6BAAqB,KAArBA,6BAAqB,GAMtC,EAAA,CAAA,CAAA,CAAA;AAwRiBC,gCAKjB;AALD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,cAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,cAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EALiBA,sBAAc,KAAdA,sBAAc,GAK/B,EAAA,CAAA,CAAA,CAAA;AASiBC,+BAKjB;AALD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,aAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,aAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,qBAAa,KAAbA,qBAAa,GAK9B,EAAA,CAAA,CAAA,CAAA;AA0DiBC,oCAGjB;AAHD,CAAA,UAAkB,kBAAkB,EAAA;AAClC,IAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,kBAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACzC,CAAC,EAHiBA,0BAAkB,KAAlBA,0BAAkB,GAGnC,EAAA,CAAA,CAAA,CAAA;AA8PiBC,wCAUjB;AAVD,CAAA,UAAkB,sBAAsB,EAAA;AACtC,IAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,sBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,sBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,sBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,sBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,sBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAViBA,8BAAsB,KAAtBA,8BAAsB,GAUvC,EAAA,CAAA,CAAA,CAAA;AASiBC,mCAkBjB;AAlBD,CAAA,UAAkB,iBAAiB,EAAA;AACjC,IAAA,iBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,iBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,iBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,iBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,iBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,iBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,iBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,iBAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;AACnD,IAAA,iBAAA,CAAA,2BAAA,CAAA,GAAA,2BAAuD,CAAA;AACvD,IAAA,iBAAA,CAAA,iCAAA,CAAA,GAAA,iCAAmE,CAAA;AACnE,IAAA,iBAAA,CAAA,uCAAA,CAAA,GAAA,uCAA+E,CAAA;AAC/E,IAAA,iBAAA,CAAA,4BAAA,CAAA,GAAA,4BAAyD,CAAA;AACzD,IAAA,iBAAA,CAAA,4BAAA,CAAA,GAAA,4BAAyD,CAAA;AAC3D,CAAC,EAlBiBA,yBAAiB,KAAjBA,yBAAiB,GAkBlC,EAAA,CAAA,CAAA,CAAA;AASiBC,yCAYjB;AAZD,CAAA,UAAkB,uBAAuB,EAAA;AACvC,IAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,uBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,uBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,uBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,uBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,uBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,uBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,uBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,uBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,uBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,uBAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AACjD,CAAC,EAZiBA,+BAAuB,KAAvBA,+BAAuB,GAYxC,EAAA,CAAA,CAAA,CAAA;AASiBC,+CAIjB;AAJD,CAAA,UAAkB,6BAA6B,EAAA;AAC7C,IAAA,6BAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,6BAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,6BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAJiBA,qCAA6B,KAA7BA,qCAA6B,GAI9C,EAAA,CAAA,CAAA,CAAA;AASiBC,kCAGjB;AAHD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,gBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAHiBA,wBAAgB,KAAhBA,wBAAgB,GAGjC,EAAA,CAAA,CAAA,CAAA;AASiBC,0CAKjB;AALD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,gCAAA,CAAA,GAAA,gCAAiE,CAAA;AACjE,IAAA,wBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,wBAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,wBAAA,CAAA,sCAAA,CAAA,GAAA,sCAA6E,CAAA;AAC/E,CAAC,EALiBA,gCAAwB,KAAxBA,gCAAwB,GAKzC,EAAA,CAAA,CAAA,CAAA;AASiBC,qCAIjB;AAJD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAJiBA,2BAAmB,KAAnBA,2BAAmB,GAIpC,EAAA,CAAA,CAAA,CAAA;AASiBC,gCAGjB;AAHD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,cAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACjC,CAAC,EAHiBA,sBAAc,KAAdA,sBAAc,GAG/B,EAAA,CAAA,CAAA,CAAA;AASiBC,oCAOjB;AAPD,CAAA,UAAkB,kBAAkB,EAAA;AAClC,IAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,kBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,kBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAPiBA,0BAAkB,KAAlBA,0BAAkB,GAOnC,EAAA,CAAA,CAAA,CAAA;AASiBC,0CAMjB;AAND,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,wBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,wBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,wBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EANiBA,gCAAwB,KAAxBA,gCAAwB,GAMzC,EAAA,CAAA,CAAA,CAAA;AASiBC,0CAIjB;AAJD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJiBA,gCAAwB,KAAxBA,gCAAwB,GAIzC,EAAA,CAAA,CAAA,CAAA;AASiBC,iCAGjB;AAHD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAHiBA,uBAAe,KAAfA,uBAAe,GAGhC,EAAA,CAAA,CAAA,CAAA;AASiBC,oCAOjB;AAPD,CAAA,UAAkB,kBAAkB,EAAA;AAClC,IAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,kBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EAPiBA,0BAAkB,KAAlBA,0BAAkB,GAOnC,EAAA,CAAA,CAAA,CAAA;AAuEiBC,kCAIjB;AAJD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,gBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJiBA,wBAAgB,KAAhBA,wBAAgB,GAIjC,EAAA,CAAA,CAAA,CAAA;AASiBC,qCAGjB;AAHD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAHiBA,2BAAmB,KAAnBA,2BAAmB,GAGpC,EAAA,CAAA,CAAA,CAAA;AAuCiBC,0CAIjB;AAJD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAJiBA,gCAAwB,KAAxBA,gCAAwB,GAIzC,EAAA,CAAA,CAAA,CAAA;AA+FiBC,uCAKjB;AALD,CAAA,UAAkB,qBAAqB,EAAA;AACrC,IAAA,qBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,qBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,qBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,qBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,6BAAqB,KAArBA,6BAAqB,GAKtC,EAAA,CAAA,CAAA,CAAA;AASiBC,mCAejB;AAfD,CAAA,UAAkB,iBAAiB,EAAA;AACjC,IAAA,iBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,iBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,iBAAA,CAAA,wCAAA,CAAA,GAAA,wCAAiF,CAAA;AACjF,IAAA,iBAAA,CAAA,wBAAA,CAAA,GAAA,wBAAiD,CAAA;AACjD,IAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,iBAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;AACnD,IAAA,iBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,iBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,iBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,iBAAA,CAAA,mCAAA,CAAA,GAAA,mCAAuE,CAAA;AACzE,CAAC,EAfiBA,yBAAiB,KAAjBA,yBAAiB,GAelC,EAAA,CAAA,CAAA,CAAA;AASiBC,qCAIjB;AAJD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAJiBA,2BAAmB,KAAnBA,2BAAmB,GAIpC,EAAA,CAAA,CAAA,CAAA;AASiBC,mCAGjB;AAHD,CAAA,UAAkB,iBAAiB,EAAA;AACjC,IAAA,iBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,iBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EAHiBA,yBAAiB,KAAjBA,yBAAiB,GAGlC,EAAA,CAAA,CAAA,CAAA;AASiBC,0CAGjB;AAHD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHiBA,gCAAwB,KAAxBA,gCAAwB,GAGzC,EAAA,CAAA,CAAA,CAAA;AA6CiBC,qCASjB;AATD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,mBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACjC,CAAC,EATiBA,2BAAmB,KAAnBA,2BAAmB,GASpC,EAAA,CAAA,CAAA,CAAA;AASiBC,0CAKjB;AALD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,wBAAA,CAAA,GAAA,wBAAiD,CAAA;AACjD,IAAA,wBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,wBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EALiBA,gCAAwB,KAAxBA,gCAAwB,GAKzC,EAAA,CAAA,CAAA,CAAA;AAqCiBC,sCAoBjB;AApBD,CAAA,UAAkB,oBAAoB,EAAA;AACpC,IAAA,oBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,oBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,oBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,oBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,oBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,oBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,oBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,oBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,oBAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AAC/C,IAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,oBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,oBAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,oBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,oBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,oBAAA,CAAA,6BAAA,CAAA,GAAA,6BAA2D,CAAA;AAC3D,IAAA,oBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EApBiBA,4BAAoB,KAApBA,4BAAoB,GAoBrC,EAAA,CAAA,CAAA,CAAA;AASiBC,yCAkBjB;AAlBD,CAAA,UAAkB,uBAAuB,EAAA;AACvC,IAAA,uBAAA,CAAA,8CAAA,CAAA,GAAA,8CAA6F,CAAA;AAC7F,IAAA,uBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,uBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,uBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,uBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,uBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,uBAAA,CAAA,mCAAA,CAAA,GAAA,mCAAuE,CAAA;AACvE,IAAA,uBAAA,CAAA,mCAAA,CAAA,GAAA,mCAAuE,CAAA;AACvE,IAAA,uBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,uBAAA,CAAA,oCAAA,CAAA,GAAA,oCAAyE,CAAA;AACzE,IAAA,uBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,uBAAA,CAAA,kDAAA,CAAA,GAAA,kDAAqG,CAAA;AACrG,IAAA,uBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,uBAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,uBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,uBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACrC,CAAC,EAlBiBA,+BAAuB,KAAvBA,+BAAuB,GAkBxC,EAAA,CAAA,CAAA,CAAA;AASiBC,4CAGjB;AAHD,CAAA,UAAkB,0BAA0B,EAAA;AAC1C,IAAA,0BAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,0BAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAHiBA,kCAA0B,KAA1BA,kCAA0B,GAG3C,EAAA,CAAA,CAAA,CAAA;AAyIiBC,yCAMjB;AAND,CAAA,UAAkB,uBAAuB,EAAA;AACvC,IAAA,uBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,uBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,uBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,uBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,uBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EANiBA,+BAAuB,KAAvBA,+BAAuB,GAMxC,EAAA,CAAA,CAAA,CAAA;AAiGiBC,6BAIjB;AAJD,CAAA,UAAkB,WAAW,EAAA;AAC3B,IAAA,WAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJiBA,mBAAW,KAAXA,mBAAW,GAI5B,EAAA,CAAA,CAAA,CAAA;AA6IiBC,sCAIjB;AAJD,CAAA,UAAkB,oBAAoB,EAAA;AACpC,IAAA,oBAAA,CAAA,GAAA,CAAA,GAAA,GAAO,CAAA;AACP,IAAA,oBAAA,CAAA,GAAA,CAAA,GAAA,GAAO,CAAA;AACP,IAAA,oBAAA,CAAA,GAAA,CAAA,GAAA,GAAO,CAAA;AACT,CAAC,EAJiBA,4BAAoB,KAApBA,4BAAoB,GAIrC,EAAA,CAAA,CAAA,CAAA;AAoKiBC,0CAYjB;AAZD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,wBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,wBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,wBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,wBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAZiBA,gCAAwB,KAAxBA,gCAAwB,GAYzC,EAAA,CAAA,CAAA,CAAA;AASiBC,wCAMjB;AAND,CAAA,UAAkB,sBAAsB,EAAA;AACtC,IAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,sBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,sBAAA,CAAA,2BAAA,CAAA,GAAA,2BAAuD,CAAA;AACvD,IAAA,sBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EANiBA,8BAAsB,KAAtBA,8BAAsB,GAMvC,EAAA,CAAA,CAAA,CAAA;AASiBC,2BAgHjB;AAhHD,CAAA,UAAkB,SAAS,EAAA;AACzB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;AACnD,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,+BAAA,CAAA,GAAA,+BAA+D,CAAA;AAC/D,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,SAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,qCAAA,CAAA,GAAA,qCAA2E,CAAA;AAC3E,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAhHiBA,iBAAS,KAATA,iBAAS,GAgH1B,EAAA,CAAA,CAAA,CAAA;AASiBC,qCAIjB;AAJD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAJiBA,2BAAmB,KAAnBA,2BAAmB,GAIpC,EAAA,CAAA,CAAA,CAAA;AAmEiBC,iDAYjB;AAZD,CAAA,UAAkB,+BAA+B,EAAA;AAC/C,IAAA,+BAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,+BAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,+BAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,+BAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,+BAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,+BAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,+BAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,+BAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,+BAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,+BAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,+BAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAZiBA,uCAA+B,KAA/BA,uCAA+B,GAYhD,EAAA,CAAA,CAAA,CAAA;AAkDiBC,+BAUjB;AAVD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,aAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,aAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,aAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,aAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AAC3C,CAAC,EAViBA,qBAAa,KAAbA,qBAAa,GAU9B,EAAA,CAAA,CAAA,CAAA;AASiBC,iCAKjB;AALD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,GAAA,CAAA,GAAA,GAAO,CAAA;AACP,IAAA,eAAA,CAAA,GAAA,CAAA,GAAA,GAAO,CAAA;AACP,IAAA,eAAA,CAAA,GAAA,CAAA,GAAA,GAAO,CAAA;AACP,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,uBAAe,KAAfA,uBAAe,GAKhC,EAAA,CAAA,CAAA,CAAA;AASiBC,gCAMjB;AAND,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,cAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,cAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EANiBA,sBAAc,KAAdA,sBAAc,GAM/B,EAAA,CAAA,CAAA,CAAA;AAkDiBC,qCA0DjB;AA1DD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,mBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,mBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,yFAAA,CAAA,GAAA,yFAAmL,CAAA;AACnL,IAAA,mBAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,mBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,mBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AAC/C,IAAA,mBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,mBAAA,CAAA,0BAAA,CAAA,GAAA,0BAAqD,CAAA;AACrD,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,wBAAA,CAAA,GAAA,wBAAiD,CAAA;AACjD,IAAA,mBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,mBAAA,CAAA,8BAAA,CAAA,GAAA,8BAA6D,CAAA;AAC7D,IAAA,mBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,mBAAA,CAAA,kCAAA,CAAA,GAAA,kCAAqE,CAAA;AACrE,IAAA,mBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,mBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,mBAAA,CAAA,gCAAA,CAAA,GAAA,gCAAiE,CAAA;AACjE,IAAA,mBAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,mBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,mBAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,mBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EA1DiBA,2BAAmB,KAAnBA,2BAAmB,GA0DpC,EAAA,CAAA,CAAA,CAAA;AASiBC,uCAKjB;AALD,CAAA,UAAkB,qBAAqB,EAAA;AACrC,IAAA,qBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,qBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,qBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,qBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALiBA,6BAAqB,KAArBA,6BAAqB,GAKtC,EAAA,CAAA,CAAA,CAAA;AAsCiBC,6CAIjB;AAJD,CAAA,UAAkB,2BAA2B,EAAA;AAC3C,IAAA,2BAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,2BAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,2BAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EAJiBA,mCAA2B,KAA3BA,mCAA2B,GAI5C,EAAA,CAAA,CAAA,CAAA;AAqDiBC,0CAKjB;AALD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,wBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,wBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EALiBA,gCAAwB,KAAxBA,gCAAwB,GAKzC,EAAA,CAAA,CAAA,CAAA;AASiBC,wCAIjB;AAJD,CAAA,UAAkB,sBAAsB,EAAA;AACtC,IAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJiBA,8BAAsB,KAAtBA,8BAAsB,GAIvC,EAAA,CAAA,CAAA,CAAA;AAmCiBC,2CAIjB;AAJD,CAAA,UAAkB,yBAAyB,EAAA;AACzC,IAAA,yBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,yBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,yBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAJiBA,iCAAyB,KAAzBA,iCAAyB,GAI1C,EAAA,CAAA,CAAA,CAAA;AA0HiBC,wCAKjB;AALD,CAAA,UAAkB,sBAAsB,EAAA;AACtC,IAAA,sBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,sBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EALiBA,8BAAsB,KAAtBA,8BAAsB,GAKvC,EAAA,CAAA,CAAA,CAAA;AA0NiBC,0CAIjB;AAJD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,wBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAJiBA,gCAAwB,KAAxBA,gCAAwB,GAIzC,EAAA,CAAA,CAAA,CAAA;AASiBC,kDAMjB;AAND,CAAA,UAAkB,gCAAgC,EAAA;AAChD,IAAA,gCAAA,CAAA,kCAAA,CAAA,GAAA,kCAAqE,CAAA;AACrE,IAAA,gCAAA,CAAA,0CAAA,CAAA,GAAA,0CAAqF,CAAA;AACrF,IAAA,gCAAA,CAAA,wCAAA,CAAA,GAAA,wCAAiF,CAAA;AACjF,IAAA,gCAAA,CAAA,mCAAA,CAAA,GAAA,mCAAuE,CAAA;AACvE,IAAA,gCAAA,CAAA,0BAAA,CAAA,GAAA,0BAAqD,CAAA;AACvD,CAAC,EANiBA,wCAAgC,KAAhCA,wCAAgC,GAMjD,EAAA,CAAA,CAAA,CAAA;AA8BiBC,0CA8BjB;AA9BD,CAAA,UAAkB,wBAAwB,EAAA;AACxC,IAAA,wBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,wBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,wBAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,wBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,wBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,wBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,wBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,wBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,wBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,wBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,wBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,wBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,wBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,wBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,wBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,wBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,wBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,wBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EA9BiBA,gCAAwB,KAAxBA,gCAAwB,GA8BzC,EAAA,CAAA,CAAA,CAAA;AAwDiBC,gCAejB;AAfD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,cAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,cAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,cAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,cAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,cAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,cAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,cAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AAC/C,IAAA,cAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,cAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,cAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,cAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACzC,CAAC,EAfiBA,sBAAc,KAAdA,sBAAc,GAe/B,EAAA,CAAA,CAAA,CAAA;AASiBC,qCAWjB;AAXD,CAAA,UAAkB,mBAAmB,EAAA;AACnC,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,mBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,mBAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;AACnD,IAAA,mBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC7C,CAAC,EAXiBA,2BAAmB,KAAnBA,2BAAmB,GAWpC,EAAA,CAAA,CAAA,CAAA;AASiBC,gCAKjB;AALD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,cAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AAC/C,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EALiBA,sBAAc,KAAdA,sBAAc,GAK/B,EAAA,CAAA,CAAA,CAAA;AASiBC,gCAKjB;AALD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,cAAA,CAAA,2BAAA,CAAA,GAAA,2BAAuD,CAAA;AACvD,IAAA,cAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,cAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EALiBA,sBAAc,KAAdA,sBAAc,GAK/B,EAAA,CAAA,CAAA,CAAA;AASiBC,sCAKjB;AALD,CAAA,UAAkB,oBAAoB,EAAA;AACpC,IAAA,oBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,oBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,oBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,oBAAA,CAAA,wBAAA,CAAA,GAAA,wBAAiD,CAAA;AACnD,CAAC,EALiBA,4BAAoB,KAApBA,4BAAoB,GAKrC,EAAA,CAAA,CAAA,CAAA;AASiBC,oCAGjB;AAHD,CAAA,UAAkB,kBAAkB,EAAA;AAClC,IAAA,kBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAHiBA,0BAAkB,KAAlBA,0BAAkB,GAGnC,EAAA,CAAA,CAAA,CAAA;AA6rFiBC,sDAUjB;AAVD,CAAA,UAAkB,oCAAoC,EAAA;AACpD,IAAA,oCAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,oCAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,oCAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,oCAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,oCAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,oCAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,oCAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,oCAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,oCAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAViBA,4CAAoC,KAApCA,4CAAoC,GAUrD,EAAA,CAAA,CAAA,CAAA;AA6KiBC,sCAKjB;AALD,CAAA,UAAkB,oBAAoB,EAAA;AACpC,IAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EALiBA,4BAAoB,KAApBA,4BAAoB,GAKrC,EAAA,CAAA,CAAA,CAAA;AA6CiBC,4CAIjB;AAJD,CAAA,UAAkB,0BAA0B,EAAA;AAC1C,IAAA,0BAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,0BAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,0BAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAJiBA,kCAA0B,KAA1BA,kCAA0B,GAI3C,EAAA,CAAA,CAAA,CAAA;AASiBC,2CAcjB;AAdD,CAAA,UAAkB,yBAAyB,EAAA;AACzC,IAAA,yBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,yBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,yBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,yBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,yBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,yBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,yBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,yBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,yBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,yBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,yBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,yBAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AAC/C,IAAA,yBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACvC,CAAC,EAdiBA,iCAAyB,KAAzBA,iCAAyB,GAc1C,EAAA,CAAA,CAAA,CAAA;AA0kBiBC,uCAGjB;AAHD,CAAA,UAAkB,qBAAqB,EAAA;AACrC,IAAA,qBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,qBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAHiBA,6BAAqB,KAArBA,6BAAqB,GAGtC,EAAA,CAAA,CAAA,CAAA;AA8RiBC,4BAajB;AAbD,CAAA,UAAkB,UAAU,EAAA;AAC1B,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,UAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAbiBA,kBAAU,KAAVA,kBAAU,GAa3B,EAAA,CAAA,CAAA,CAAA;AAohBiBC,sCAMjB;AAND,CAAA,UAAkB,oBAAoB,EAAA;AACpC,IAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,oBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,oBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,oBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EANiBA,4BAAoB,KAApBA,4BAAoB,GAMrC,EAAA,CAAA,CAAA,CAAA;AAkgBiBC,kCAGjB;AAHD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAHiBA,wBAAgB,KAAhBA,wBAAgB,GAGjC,EAAA,CAAA,CAAA,CAAA;AASiBC,+BAGjB;AAHD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHiBA,qBAAa,KAAbA,qBAAa,GAG9B,EAAA,CAAA,CAAA,CAAA;AAsCiBC,kCAGjB;AAHD,CAAA,UAAkB,gBAAgB,EAAA;AAChC,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAHiBA,wBAAgB,KAAhBA,wBAAgB,GAGjC,EAAA,CAAA,CAAA,CAAA;AA2qJiBC,iCA8DjB;AA9DD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,eAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,+BAAA,CAAA,GAAA,+BAA+D,CAAA;AAC/D,IAAA,eAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,eAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,eAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,eAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,eAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,eAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,eAAA,CAAA,+BAAA,CAAA,GAAA,+BAA+D,CAAA;AAC/D,IAAA,eAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,eAAA,CAAA,0BAAA,CAAA,GAAA,0BAAqD,CAAA;AACrD,IAAA,eAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,eAAA,CAAA,wBAAA,CAAA,GAAA,wBAAiD,CAAA;AACjD,IAAA,eAAA,CAAA,iCAAA,CAAA,GAAA,iCAAmE,CAAA;AACnE,IAAA,eAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,eAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,eAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,eAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AAC/C,IAAA,eAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;AACvC,IAAA,eAAA,CAAA,iCAAA,CAAA,GAAA,iCAAmE,CAAA;AACnE,IAAA,eAAA,CAAA,+BAAA,CAAA,GAAA,+BAA+D,CAAA;AAC/D,IAAA,eAAA,CAAA,uBAAA,CAAA,GAAA,uBAA+C,CAAA;AAC/C,IAAA,eAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC3C,IAAA,eAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,eAAA,CAAA,4BAAA,CAAA,GAAA,4BAAyD,CAAA;AACzD,IAAA,eAAA,CAAA,yBAAA,CAAA,GAAA,yBAAmD,CAAA;AACnD,IAAA,eAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,eAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,eAAA,CAAA,iCAAA,CAAA,GAAA,iCAAmE,CAAA;AACrE,CAAC,EA9DiBA,uBAAe,KAAfA,uBAAe,GA8DhC,EAAA,CAAA,CAAA,CAAA;AA4XiBC,6BAGjB;AAHD,CAAA,UAAkB,WAAW,EAAA;AAC3B,IAAA,WAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,WAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHiBA,mBAAW,KAAXA,mBAAW,GAG5B,EAAA,CAAA,CAAA,CAAA;AAEiBC,uCAWjB;AAXD,CAAA,UAAkB,qBAAqB,EAAA;AACrC,IAAA,qBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,qBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,qBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,qBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,qBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,qBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,qBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,qBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,qBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,qBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EAXiBA,6BAAqB,KAArBA,6BAAqB,GAWtC,EAAA,CAAA,CAAA,CAAA;AAEiBC,gCAIjB;AAJD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,cAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,cAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAJiBA,sBAAc,KAAdA,sBAAc,GAI/B,EAAA,CAAA,CAAA,CAAA;AAEiBC,oCAGjB;AAHD,CAAA,UAAkB,kBAAkB,EAAA;AAClC,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAHiBA,0BAAkB,KAAlBA,0BAAkB,GAGnC,EAAA,CAAA,CAAA,CAAA;AAEiBC,iCAGjB;AAHD,CAAA,UAAkB,eAAe,EAAA;AAC/B,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAHiBA,uBAAe,KAAfA,uBAAe,GAGhC,EAAA,CAAA,CAAA,CAAA;AAyGiBC,+BAKjB;AALD,CAAA,UAAkB,aAAa,EAAA;AAC7B,IAAA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EALiBA,qBAAa,KAAbA,qBAAa,GAK9B,EAAA,CAAA,CAAA,CAAA;AAwjBiBC,8BASjB;AATD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,YAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,YAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,YAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EATiBA,oBAAY,KAAZA,oBAAY,GAS7B,EAAA,CAAA,CAAA,CAAA;AAw9BiBC,0BAKjB;AALD,CAAA,UAAkB,QAAQ,EAAA;AACxB,IAAA,QAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,QAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,QAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,QAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EALiBA,gBAAQ,KAARA,gBAAQ,GAKzB,EAAA,CAAA,CAAA,CAAA;AA0yDiBC,yBAIjB;AAJD,CAAA,UAAkB,OAAO,EAAA;AACvB,IAAA,OAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,OAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,OAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAJiBA,eAAO,KAAPA,eAAO,GAIxB,EAAA,CAAA,CAAA,CAAA;AA6tEiBC,gCAIjB;AAJD,CAAA,UAAkB,cAAc,EAAA;AAC9B,IAAA,cAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAJiBA,sBAAc,KAAdA,sBAAc,GAI/B,EAAA,CAAA,CAAA,CAAA;AAwBiBC,8BAGjB;AAHD,CAAA,UAAkB,YAAY,EAAA;AAC5B,IAAA,YAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACnC,CAAC,EAHiBA,oBAAY,KAAZA,oBAAY,GAG7B,EAAA,CAAA,CAAA;;"}