{"version":3,"file":"index.js","sources":["../../../../node_modules/prosemirror-keymap/dist/index.js"],"sourcesContent":["import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`â€”a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), isChar = name.length == 1 && name != \" \", baseName;\n        let direct = map[modifiers(name, event, !isChar)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        if (isChar && (event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            // Try falling back to the keyCode when there's a modifier\n            // active or the character produced isn't ASCII, and our table\n            // produces a different name from the the keyCode. See #668,\n            // #1060\n            let fromCode = map[modifiers(baseName, event, true)];\n            if (fromCode && fromCode(view.state, view.dispatch, view))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            // Otherwise, if shift is active, also try the binding with the\n            // Shift- prefix enabled. See #997\n            let withShift = map[modifiers(name, event, true)];\n            if (withShift && withShift(view.state, view.dispatch, view))\n                return true;\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n"],"names":["Plugin","keyName","base"],"mappings":"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"}