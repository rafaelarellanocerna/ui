{"version":3,"file":"test.js","sources":["../../../src/pages/test.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\r\nimport { AtomButton, AtomTableQuery, AtomWrapper } from '@atoms';\r\nimport { css } from '@emotion/react';\r\nimport { IQueryFilter } from '@types';\r\n\r\nexport const LISTUSERS = gql`\r\n  query listUsers(\r\n    $filter: MemberFilterInput\r\n    $order: [MemberSortInput!]\r\n    $skip: Int\r\n    $take: Int\r\n  ) {\r\n    listUsers(filter: $filter, order: $order, skip: $skip, take: $take) {\r\n      pageInfo {\r\n        hasNextPage\r\n        hasPreviousPage\r\n      }\r\n      totalCount\r\n      items {\r\n        id\r\n        username\r\n        memberCompanies {\r\n          id\r\n          companyId\r\n          company {\r\n            id\r\n            name\r\n          }\r\n        }\r\n        memberRoles {\r\n          id\r\n          memberId\r\n          roleId\r\n          role {\r\n            id\r\n            name\r\n            codeName\r\n          }\r\n        }\r\n        memberProjects {\r\n          id\r\n          projectId\r\n        }\r\n        profile {\r\n          id\r\n          firstName\r\n          lastName\r\n        }\r\n        email\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst test = () => {\r\n  return (\r\n    <AtomTableQuery\r\n      QUERY={LISTUSERS}\r\n      data={(data: IQueryFilter<'listUsers'>) => data?.listUsers?.items}\r\n      customCSS={css`\r\n        width: 90%;\r\n      `}\r\n      searchBar={\r\n        <AtomWrapper>\r\n          <AtomButton>asd</AtomButton>\r\n        </AtomWrapper>\r\n      }\r\n      columns={[\r\n        {\r\n          key: 'sucursal',\r\n          title: <>SUCCURSAL</>,\r\n          view: () => <>0000</>,\r\n        },\r\n        {\r\n          key: 'almacen',\r\n          title: <>ALMACEN</>,\r\n          view: () => <>Lorem ipsum</>,\r\n        },\r\n        {\r\n          key: 'folio',\r\n          title: <>FOLIO</>,\r\n          view: () => <>Lorem ipsum</>,\r\n        },\r\n        {\r\n          key: 'fecha',\r\n          title: <>FECHA</>,\r\n          view: () => <>dd.mm.aaaa</>,\r\n        },\r\n        {\r\n          key: 'referencia',\r\n          title: <>REFERENCIA</>,\r\n          view: () => <>Lorem ipsum</>,\r\n        },\r\n        {\r\n          key: 'fac',\r\n          title: <>FAC</>,\r\n          view: () => <>Lorem</>,\r\n        },\r\n        {\r\n          key: 'cliente',\r\n          title: <>CLIENTE</>,\r\n          view: () => <>Lorem</>,\r\n        },\r\n        {\r\n          key: 'vendedor',\r\n          title: <>VENDEDOR</>,\r\n          view: () => <>Lorem</>,\r\n        },\r\n        {\r\n          key: 'comentarios',\r\n          title: <>COMENTARIOS</>,\r\n          view: () => <>Lorem</>,\r\n        },\r\n        {\r\n          key: 'descuento',\r\n          title: <>DESCUENTO</>,\r\n          view: () => <>$ 0.00</>,\r\n        },\r\n        {\r\n          key: 'subtotal',\r\n          title: <>SUBTOTAL</>,\r\n          view: () => <>$ 0.00</>,\r\n        },\r\n        {\r\n          key: 'impuestos',\r\n          title: <>IMPUESTOS</>,\r\n          view: () => <>$ 0.00</>,\r\n        },\r\n        {\r\n          key: 'retencion',\r\n          title: <>RETENCION</>,\r\n          view: () => <>$ 0.00</>,\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default test;\r\n"],"names":["gql","__makeTemplateObject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKa,SAAS,GAAGA,SAAG,CAAA,gBAAA,KAAA,gBAAA,GAAAC,0BAAA,CAAA,CAAA,m3BAAA,CAAA,EAAA,CAAA,m3BAiD3B,KAAC;;;;;"}