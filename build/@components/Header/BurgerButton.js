'use strict';

var tslib = require('tslib');
var jsxRuntime = require('@emotion/react/jsx-runtime');
var react = require('@emotion/react');
require('../../@atoms/AtomText/style.js');
require('../../@atoms/AtomWrapper/style.js');
var index = require('../../@atoms/AtomButton/index.js');
require('../../@atoms/AtomCarruosell/index.js');
require('../../@atoms/AtomCartShop/index.js');
require('next/image');
require('../../@atoms/AtomImage/style.js');
var index$1 = require('../../@atoms/AtomIcon/index.js');
require('../../@atoms/AtomContainer/style.js');
require('react');
require('../../@atoms/AtomLink/index.js');
require('../../@atoms/AtomDropdownSidebar/admin/style.js');
require('../../@atoms/AtomDropdownSidebar/default/style.js');
require('../../@atoms/AtomDropdownSidebar/links/style.js');
require('next/router');
require('lodash');
require('../../@atoms/AtomInput/style.js');
require('uuid');
require('react-redux');
require('../../@atoms/AtomSeparator/style.js');
require('../../@utils/uploadImage.js');
require('graphql-request');
require('../../src/config/index.js');
require('framer-motion');
require('../../@atoms/AtomImageEditor/pintura/pintura.js');
require('../../@atoms/AtomImageEditor/react-pintura/PinturaEditor.js');
require('../../@atoms/AtomImageEditor/react-pintura/PinturaEditorModal.js');
require('../../@atoms/AtomImageEditor/react-pintura/PinturaEditorOverlay.js');
require('../../@atoms/AtomImageEditor/styled.js');
require('../../@atoms/AtomInput/inputWithPagination.js');
require('../../@atoms/AtomLoader/style.js');
require('../../@atoms/AtomMaps/style.js');
require('../../@atoms/AtomNotification/styles.js');
require('../../@atoms/AtomProgressBar/component/style/index.js');
require('next/head');
require('../../@atoms/AtomTable/style.js');
require('../../@atoms/AtomTableQuery/css/button.js');
require('../../@atoms/AtomTableQuery/css/inputs.js');
require('../../@atoms/AtomTableQuery/styled.js');
require('../../@atoms/AtomTableQuery/apollo/query/Products.js');
require('../../@atoms/AtomTextEditor/index.js');
require('../../@atoms/AtomTextEditorHermer/index.js');
require('../../@molecules/MoleculePlayer/style.js');
require('../../@hooks/usePermissions/index.js');
require('../../@hooks/useUploadFile/index.js');
require('../Alert/Context.js');
require('../Button/downloadFile.js');
require('../Chat/style.js');
require('./style.js');
require('../../@types/schemas.js');

var BurgerBUtton = function (props) {
    var iconProps = props.iconProps, buttonProps = props.buttonProps;
    return (jsxRuntime.jsx(index, tslib.__assign({ backgroundColor: "transparent", customCSS: react.css(templateObject_1 || (templateObject_1 = tslib.__makeTemplateObject(["\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 10;\n        @media only screen and (max-width: 1200px) {\n          display: flex;\n        }\n        svg {\n          width: 30px;\n          height: 30px;\n        }\n        ", "\n      "], ["\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 10;\n        @media only screen and (max-width: 1200px) {\n          display: flex;\n        }\n        svg {\n          width: 30px;\n          height: 30px;\n        }\n        ", "\n      "])), buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.customCSS) }, buttonProps, { children: jsxRuntime.jsx(index$1, tslib.__assign({ color: "#1d1d1d", icon: "https://storage.googleapis.com/cdn-bucket-ixulabs-platform/BMB-001/Icons/menu.svg" }, iconProps)) })));
};
var templateObject_1;

module.exports = BurgerBUtton;
//# sourceMappingURL=BurgerButton.js.map
